TODO: Implement fcntl64
EASY: Make it so failed validation kills the child process

TODO: Clean up the duplicate code around validating file descriptors

TODO: make stat64 and statfs64 work

TODO: netcat send mode test

TODO: implement select

TODO: make it so instead of returning -1, no-op'd system calls correctly set
errno. This is done by returning -ERROR at system call exit. Glibc will handle
everything else appropriately from this point.

EASY: Change the write_buffer function to use the strategy I used in the print
buffer function

BUG: If there are multi-character literals in strings presented by strace then
write buffer will probably not copy what you want (i.e. '\n' etc.)
Added system call id to posix-omni-parser
    Patch to add the stuff with accept that isn't supported

BUG: If we redirect output it causes writes to become mis-ordered

BUG: Poll implementation only works with one data structure.

BUG: Poll parsing fails for some calls to poll due to posix-omni-parser

BUG: Posix omni parser doesn't return stuff in comments at end of line (poll,
select)

Don't Forget:
recvfrom
sendto
fcntl

look at setsockopt and getsockopt
getsockopt -> notify when this is called, error out

Select vs. Poll
Select used a bitmask rather than an array of structures to track file
descriptors. Select is more commonly implemented but the nature of a bitmask
means that there are a limited number of file descriptors that can be tracked.
It has one advantage over poll: Early versions of poll didn't allow you to set a
structure's file descriptor to -1 to have it ignored meaning that if you no
longer care about a file descriptor you would have to rebuild the array.
Presumably it will be easier to un-track a file descriptor with select.

Send-like calls -> always assume they succeeded and return the expected number
of bytes from the trace.

Write-like system calls:
write
sendmsg
sendmmsg
sendto
send

Read-like system calls:
read
recvmsg
recvmmsg
receivefrom
recv
