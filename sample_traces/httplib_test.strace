27308 execve("/usr/bin/python", ["python"], ["USER=preston", "LOGNAME=preston", "HOME=/home/preston", "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/local/musl/bin", "MAIL=/var/mail/preston", "SHELL=/usr/bin/zsh", "SSH_CLIENT=172.16.48.1 50291 22", "SSH_CONNECTION=172.16.48.1 50291 172.16.48.140 22", "SSH_TTY=/dev/pts/3", "TERM=xterm-256color", "XDG_SESSION_COOKIE=497f848f94f4485badd97209c59c1e68-1493240619.451806-568757177", "XDG_SESSION_ID=252", "XDG_RUNTIME_DIR=/run/user/1000", "LANG=en_US.UTF-8", "SHLVL=1", "PWD=/home/preston/NYU/CrashSimulator", "OLDPWD=/home/preston/NYU/CrashSimulator/sample_traces", "ZSH=/home/preston/.oh-my-zsh", "PAGER=less", "LESS=-R", "LC_CTYPE=en_US.UTF-8", "LSCOLORS=Gxfxcxdxbxegedabagacad", "LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:", "_=/usr/bin/strace"]) = 0
27308 brk(0)                            = 0x840a000
27308 uname({sysname="Linux", nodename="dev.local", release="3.19.0-49-generic", version="#55-Ubuntu SMP Fri Jan 22 02:09:44 UTC 2016", machine="i686", domainname="(none)"}) = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fda000
27308 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
27308 open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1072777, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=200, st_size=101810, st_atime=2017/04/26-21:18:06, st_mtime=2017/04/26-21:18:06, st_ctime=2017/04/26-21:18:06}) = 0
27308 mmap2(NULL, 101810, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7fc1000
27308 close(3)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libpthread.so.0", O_RDONLY|O_CLOEXEC) = 3
27308 read(3, "\177ELF\1\1\1\3\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\220O\0\0004\0\0\0\24\21\2\0\0\0\0\0004\0 \0\7\0(\0(\0%\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0X\204\1\0X\204\1\0\5\0\0\0\0\20\0\0\1\0\0\0\200\215\1\0\200\235\1\0\200\235\1\0\370\3\0\0L%\0\0\6\0\0\0\0\20\0\0\2\0\0\0\230\216\1\0\230\236\1\0\230\236\1\0\30\1\0\0\30\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0P\345td`-\1\0`-\1\0`-\1\0\34\t\0\0\34\t\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\200\215\1\0\200\235\1\0\200\235\1\0\200\2\0\0\200\2\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0M\5\223vK\35\332Hm\214\322\315\311\346\272\341\r\300\326\306\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0\4\2\0\0Z\0\0\0@\0\0\0\v\0\0\0\31!\2\221\1\n\20\"@H \331\3\0I4\200\0\0@\0 \200\200\221Q`\300@\22\213\0020D\0\0\20\1\0\n\0\1\r\0\204\n\360\1X\260\r\240\200\10 $\204\20B\242)m\10G\234V\20\0\224 \204$H\0X(\1\222\34\301B\240\220\22\10\f \2\30dA\245c\4@\n\32\3\0\0)\t(\314D\204\210\314\22\10\241\0\4\0\10\0\300Q\0\2009\4C\300\2248@\20\31\20\0\265\0 \0\200`\0\20 \0\vA\22!-\0P\10\211\22G", 512) = 512
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1052007, st_mode=S_IFREG|0755, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=272, st_size=137044, st_atime=2017/04/26-19:25:17, st_mtime=2015/03/26-07:01:24, st_ctime=2015/09/26-01:26:32}) = 0
27308 mmap2(NULL, 115404, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7fa4000
27308 mmap2(0xb7fbd000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x18000) = 0xb7fbd000
27308 mmap2(0xb7fbf000, 4812, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7fbf000
27308 close(3)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
27308 read(3, "\177ELF\1\1\1\3\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\220\210\1\0004\0\0\0\300\211\33\0\0\0\0\0004\0 \0\n\0(\0E\0D\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\245\241\26\0\245\241\26\0\245\241\26\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2303\33\0\2303\33\0\5\0\0\0\0\20\0\0\1\0\0\0\\?\33\0\\O\33\0\\O\33\0\2700\0\0\200_\0\0\6\0\0\0\0\20\0\0\2\0\0\0\244]\33\0\244m\33\0\244m\33\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0\7\0\0\0\\?\33\0\\O\33\0\\O\33\0\10\0\0\0L\0\0\0\4\0\0\0\4\0\0\0P\345td\270\241\26\0\270\241\26\0\270\241\26\0\244`\0\0\244`\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\\?\33\0\\O\33\0\\O\33\0\244 \0\0\244 \0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0%\335B\217\264\303P\301m\376\342\4\221\361\240d\204\242\277\243\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0E\200\0`\300\200\0\f\212\f\0\0010\0\10@2\10\256\4\210H6l\240\0268\0&\204\200\216\4\10B$", 512) = 512
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1051883, st_mode=S_IFREG|0755, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=3536, st_size=1807496, st_atime=2017/04/26-19:25:17, st_mtime=2015/03/26-07:01:21, st_ctime=2015/09/26-01:26:32}) = 0
27308 mmap2(NULL, 1814236, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7de9000
27308 mmap2(0xb7f9d000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1b3000) = 0xb7f9d000
27308 mmap2(0xb7fa2000, 7900, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7fa2000
27308 close(3)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libdl.so.2", O_RDONLY|O_CLOEXEC) = 3
27308 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\220\n\0\0004\0\0\0h1\0\0\0\0\0\0004\0 \0\7\0(\0\35\0\34\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0@$\0\0@$\0\0\5\0\0\0\0\20\0\0\1\0\0\0\260.\0\0\260>\0\0\260>\0\0\240\1\0\0\320\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\304.\0\0\304>\0\0\304>\0\0\10\1\0\0\10\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0P\345td\254\31\0\0\254\31\0\0\254\31\0\0\324\0\0\0\324\0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\260.\0\0\260>\0\0\260>\0\0P\1\0\0P\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0?\357\26lo\307y\212\\u\270\302\33\326\361{\345\251S\254\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0\26\0\0\0\32\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\32\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\33\0\0\0\0\0\0\0\34\0\0\0\35\0\0\0\0\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\"\0\0\0#\0\0\0\0\0\0\0\0\0\0\0$\0\0\0&\0\0\0'\0\0\0\0\0\0\0)\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30`\242\222\6\257\304M\17\325=l\366\327=l\366\352\26\251\30\371\31sB", 512) = 512
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1051898, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=13808, st_atime=2017/04/26-19:25:17, st_mtime=2015/03/26-07:01:21, st_ctime=2015/09/26-01:26:32}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7de8000
27308 mmap2(NULL, 16512, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7de3000
27308 mmap2(0xb7de6000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0xb7de6000
27308 close(3)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libutil.so.1", O_RDONLY|O_CLOEXEC) = 3
27308 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0P\n\0\0004\0\0\0\240!\0\0\0\0\0\0004\0 \0\7\0(\0\35\0\34\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0L\32\0\0L\32\0\0\5\0\0\0\0\20\0\0\1\0\0\0\324\36\0\0\324.\0\0\324.\0\0\264\1\0\0\270\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\340\36\0\0\340.\0\0\340.\0\0\10\1\0\0\10\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0P\345td\240\23\0\0\240\23\0\0\240\23\0\0L\0\0\0L\0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\324\36\0\0\324.\0\0\324.\0\0,\1\0\0,\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\375\361\200\37Y\334\236.\336\257X\340By}\201Xe\301\365\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0\r\0\0\0#\0\0\0\2\0\0\0\6\0\0\0\0\240\344\300\204\200\20@\0\0\0\0\0\0\0\0#\0\0\0\0\0\0\0\0\0\0\0$\0\0\0&\0\0\0'\0\0\0(\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0)\0\0\0\217\365\310\207^+\337\v\365\361\253\272\325=l\366\237<\300|\365\243\343p\277\370\337\17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\354\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0001\1\0\0\0\0\0\0\0\0\0\0\22\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0 \0\0\0", 512) = 512
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1052040, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=9768, st_atime=2017/04/26-19:25:17, st_mtime=2015/03/26-07:01:21, st_ctime=2015/09/26-01:26:32}) = 0
27308 mmap2(NULL, 12428, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7ddf000
27308 mmap2(0xb7de1000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1000) = 0xb7de1000
27308 close(3)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libz.so.1", O_RDONLY|O_CLOEXEC) = 3
27308 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\26\0\0004\0\0\0\320\241\1\0\0\0\0\0004\0 \0\7\0(\0\34\0\33\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\304\217\1\0\304\217\1\0\5\0\0\0\0\20\0\0\1\0\0\0\20\236\1\0\20\236\1\0\20\236\1\0\210\2\0\0\214\2\0\0\6\0\0\0\0\20\0\0\2\0\0\0\350\236\1\0\350\236\1\0\350\236\1\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345tdD`\1\0D`\1\0D`\1\0t\3\0\0t\3\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\20\236\1\0\20\236\1\0\20\236\1\0\360\1\0\0\360\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0FL\336\224\331\n\261\327A\3\35J\303\371\267\210\246\246\3\263C\0\0\0\27\0\0\0\20\0\0\0\t\0\0\0\10\3l\24\f\3\0\24!\0\vI\232\2\236\20\234\t\4LQ\4\0\200<\0B\242\220\27\213\3\2kp\363E\302\20B\0l\0\0\250\241\220\237@\224\21E%g\306\241P\0\16\20\6\200 \20\27\0\0\0\32\0\0\0\33\0\0\0\35\0\0\0!\0\0\0\"\0\0\0$\0\0\0%\0\0\0\0\0\0\0&\0\0\0'\0\0\0*\0\0\0-\0\0\0.\0\0\0\0\0\0\0000\0\0\0\0\0\0\0001\0\0\0003\0\0\0004\0\0\0006\0\0\0008\0\0\0\0\0\0\0009\0\0\0:\0\0\0;\0\0\0\0\0\0\0<\0\0\0\0\0\0\0>\0\0\0", 512) = 512
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1052047, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=216, st_size=108080, st_atime=2017/04/26-19:25:17, st_mtime=2014/10/27-09:20:40, st_ctime=2015/09/26-01:26:32}) = 0
27308 mmap2(NULL, 106652, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7dc4000
27308 mmap2(0xb7ddd000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19000) = 0xb7ddd000
27308 close(3)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libm.so.6", O_RDONLY|O_CLOEXEC) = 3
27308 read(3, "\177ELF\1\1\1\3\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\320E\0\0004\0\0\0\314\262\4\0\0\0\0\0004\0 \0\7\0(\0\37\0\36\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0008\246\4\0008\246\4\0\5\0\0\0\0\20\0\0\1\0\0\0\264\256\4\0\264\276\4\0\264\276\4\0\250\1\0\0\354\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\300\256\4\0\300\276\4\0\300\276\4\0\20\1\0\0\20\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0P\345tdX\360\3\0X\360\3\0X\360\3\0l\17\0\0l\17\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\264\256\4\0\264\276\4\0\264\276\4\0L\1\0\0L\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\3037~\241\217(B8\23\312\351n\210\27\277{\3545\373\336\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0002\3\0\0\24\0\0\0\200\0\0\0\f\0\0\0%\0@ \0\240.\2\0\0\4)\200 W\202B\10\200  aH\312\0\t\0\0\0\0\0\0\0\0\0\0\0\0\212P\20\1\0\300\0\4\t\202\24\1\344\200&\0\204\253\20\240\212\2\316\0\212\4\0\0\0P\0\4 \0\0\4\4\5\r\7\7\27I\0\0\0\0\0\1@\0\t\0\24\4D\30\4@` \22\300\5\t\nE\225\0\1\200\0102@\0\0\0\0\0\0\0\0\4\2\0\0\0@\0\200\3\0\302\200\0\30\24\301`E\1\0\210#\0\4\2\0\200\0\4\0\2\0", 512) = 512
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1051939, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=608, st_size=309156, st_atime=2017/04/26-19:25:17, st_mtime=2015/03/26-07:01:21, st_ctime=2015/09/26-01:26:32}) = 0
27308 mmap2(NULL, 311456, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7d77000
27308 mmap2(0xb7dc2000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4a000) = 0xb7dc2000
27308 close(3)                          = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d76000
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d75000
27308 set_thread_area({entry_number:-1 -> 6, base_addr:0xb7d75700, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
27308 mprotect(0xb7f9d000, 12288, PROT_READ) = 0
27308 mprotect(0xb7dc2000, 4096, PROT_READ) = 0
27308 mprotect(0xb7ddd000, 4096, PROT_READ) = 0
27308 mprotect(0xb7de1000, 4096, PROT_READ) = 0
27308 mprotect(0xb7de6000, 4096, PROT_READ) = 0
27308 mprotect(0xb7fbd000, 4096, PROT_READ) = 0
27308 mprotect(0x8397000, 4096, PROT_READ) = 0
27308 mprotect(0xb7ffe000, 4096, PROT_READ) = 0
27308 munmap(0xb7fc1000, 101810)        = 0
27308 set_tid_address(0xb7d75768)       = 27308
27308 set_robust_list(0xb7d75770, 12)   = 0
27308 rt_sigaction(SIGRTMIN, {0xb7fa8a10, [], SA_RESTORER|SA_SIGINFO, 0xb7fb3b90}, NULL, 8) = 0
27308 rt_sigaction(SIGRT_1, {0xb7fa8a90, [], SA_RESTORER|SA_RESTART|SA_SIGINFO, 0xb7fb3b90}, NULL, 8) = 0
27308 rt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0
27308 getrlimit(RLIMIT_STACK, {rlim_cur=8192*1024, rlim_max=RLIM_INFINITY}) = 0
27308 uname({sysname="Linux", nodename="dev.local", release="3.19.0-49-generic", version="#55-Ubuntu SMP Fri Jan 22 02:09:44 UTC 2016", machine="i686", domainname="(none)"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 brk(0)                            = 0x840a000
27308 brk(0x842b000)                    = 0x842b000
27308 mmap2(NULL, 262144, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d35000
27308 fstat64(0, {st_dev=makedev(0, 13), st_ino=6, st_mode=S_IFCHR|0620, st_nlink=1, st_uid=1000, st_gid=5, st_blksize=1024, st_blocks=0, st_rdev=makedev(136, 3), st_atime=2017/04/26-21:30:19, st_mtime=2017/04/26-21:30:19, st_ctime=2017/04/26-21:03:39}) = 0
27308 fstat64(0, {st_dev=makedev(0, 13), st_ino=6, st_mode=S_IFCHR|0620, st_nlink=1, st_uid=1000, st_gid=5, st_blksize=1024, st_blocks=0, st_rdev=makedev(136, 3), st_atime=2017/04/26-21:30:19, st_mtime=2017/04/26-21:30:19, st_ctime=2017/04/26-21:03:39}) = 0
27308 fstat64(1, {st_dev=makedev(0, 13), st_ino=6, st_mode=S_IFCHR|0620, st_nlink=1, st_uid=1000, st_gid=5, st_blksize=1024, st_blocks=0, st_rdev=makedev(136, 3), st_atime=2017/04/26-21:30:19, st_mtime=2017/04/26-21:30:19, st_ctime=2017/04/26-21:03:39}) = 0
27308 fstat64(2, {st_dev=makedev(0, 13), st_ino=6, st_mode=S_IFCHR|0620, st_nlink=1, st_uid=1000, st_gid=5, st_blksize=1024, st_blocks=0, st_rdev=makedev(136, 3), st_atime=2017/04/26-21:30:19, st_mtime=2017/04/26-21:30:19, st_ctime=2017/04/26-21:03:39}) = 0
27308 stat64("/usr/local/sbin/python", 0xbfffd368) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/local/bin/python", 0xbfffd368) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/sbin/python", 0xbfffd368) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/bin/python", {st_dev=makedev(8, 1), st_ino=656090, st_mode=S_IFREG|0755, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=7592, st_size=3885384, st_atime=2017/04/26-21:00:29, st_mtime=2015/04/02-16:48:58, st_ctime=2015/09/26-01:26:38}) = 0
27308 readlink("/usr/bin/python", "python2.7", 4096) = 9
27308 readlink("/usr/bin/python2.7", 0xbfffe3cb, 4096) = -1 EINVAL (Invalid argument)
27308 stat64("/usr/bin/Modules/Setup", 0xbfffd2cc) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/bin/lib/python2.7/os.py", 0xbfffd2cc) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/bin/lib/python2.7/os.pyc", 0xbfffd2cc) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/os.py", {st_dev=makedev(8, 1), st_ino=661540, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=25914, st_atime=2017/04/02-20:25:33, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 stat64("/usr/bin/pybuilddir.txt", 0xbfffd2cc) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/bin/lib/python2.7/lib-dynload", 0xbfffd2dc) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/lib-dynload", {st_dev=makedev(8, 1), st_ino=661408, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/22-18:29:54, st_mtime=2015/10/08-03:49:04, st_ctime=2015/10/08-03:49:04}) = 0
27308 rt_sigaction(SIGPIPE, {SIG_IGN, [], SA_RESTORER, 0xb7fb3b98}, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGXFSZ, {SIG_IGN, [], SA_RESTORER, 0xb7fb3b98}, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGHUP, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGINT, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGQUIT, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGILL, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGTRAP, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGABRT, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGBUS, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGFPE, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGKILL, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGUSR1, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGSEGV, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGUSR2, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGPIPE, NULL, {SIG_IGN, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 rt_sigaction(SIGALRM, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGTERM, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGSTKFLT, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGCHLD, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGCONT, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGSTOP, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGTSTP, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGTTIN, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGTTOU, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGURG, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGXCPU, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGXFSZ, NULL, {SIG_IGN, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 rt_sigaction(SIGVTALRM, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGPROF, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGWINCH, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGIO, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGPWR, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGSYS, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_2, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_3, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_4, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_5, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_6, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_7, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_8, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_9, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_10, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_11, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_12, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_13, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_14, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_15, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_16, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_17, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_18, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_19, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_20, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_21, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_22, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_23, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_24, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_25, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_26, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_27, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_28, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_29, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_30, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_31, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGRT_32, NULL, {SIG_DFL, [], 0}, 8) = 0
27308 rt_sigaction(SIGINT, {0x818da90, [], SA_RESTORER, 0xb7fb3b98}, {SIG_DFL, [], 0}, 8) = 0
27308 stat64("/usr/lib/python2.7/", {st_dev=makedev(8, 1), st_ino=656757, st_mode=S_IFDIR|0755, st_nlink=27, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=12288, st_atime=2017/04/22-18:29:54, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 stat64("/usr/lib/python2.7/", {st_dev=makedev(8, 1), st_ino=656757, st_mode=S_IFDIR|0755, st_nlink=27, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=12288, st_atime=2017/04/22-18:29:54, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 stat64("/usr/lib/python2.7/site", 0xbfffe19c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/site.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/site.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sitemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/site.py", O_RDONLY|O_LARGEFILE) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=661577, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=20370, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/site.pyc", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=669311, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=19712, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(4, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0sp\1\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0d\1\0d\2\0l\3\0Z\3\0d\1\0d\2\0l\4\0Z\4\0e\1\0j\5\0e\1\0j\6\0g\2\0Z\7\0d\2\0a\t\0d\2\0a\n\0d\2\0a\v\0d\3\0\204\0\0Z\f\0d\4\0\204\0\0Z\r\0d\5\0\204\0\0Z\16\0d\6\0\204\0\0Z\17\0d\7\0\204\0\0Z\20\0d\2\0d\10\0\204\1\0Z\21\0d\t\0\204\0\0Z\22\0d\n\0\204\0\0Z\23\0d\v\0\204\0\0Z\24\0d\f\0\204\0\0Z\25\0d\r\0\204\0\0Z\26\0d\16\0\204\0\0Z\27\0d\17\0\204\0\0Z\30\0d\20\0\204\0\0Z\31\0d\21\0e\32\0f\1\0d\22\0\204\0\0\203\0\0YZ\33\0d\23\0\204\0\0Z\34\0d\24\0e\32\0f\1\0d\25\0\204\0\0\203\0\0YZ\35\0d\26\0\204\0\0Z\36\0d\27\0\204\0\0Z\37\0d\30\0\204\0\0Z \0d\31\0\204\0\0Z!\0d\32\0\204\0\0Z\"\0d\33\0\204\0\0Z#\0e#\0\203\0\0\1d\34\0\204\0\0Z$\0e%\0d\35\0k\2\0rl\1e$\0\203\0\0\1n\0\0d\2\0S(\36\0\0\0s\213\n\0\0Append module search paths for third-party packages to sys.path.\n\n****************************************************************\n* This module is automatically imported during initialization. *\n****************************************************************\n\nIn earlier versions of Python (up to 1.5a3), scripts or modules that\nneeded to use site-specific modules would place ``import site''\nsomewhere near the top of their code.  Because of the automatic\nimport, this is no longer necessary (but code that does it still\nworks).\n\nThis will append site-specific paths to the module search path.  On\nUnix (including Mac OSX), it starts with sys.prefix and\nsys.exec_prefix (if different) and appends\nlib/python<version>/site-packages as well as lib/site-python.\nOn other platforms (such as Windows), it tries each of the\nprefixes directly, as well as with lib/site-packages appended.  The\nresulting directories, if they exist, are appended to sys.path, and\nalso inspected for path configuration files.\n\nFor Debian and derivatives, this sys.path is augmented with directories\nfor packages distributed within the distribution. Local addons go\ninto /usr/local/lib/python<version>/dist-packages, Debian addons\ninstall into /usr/{lib,share}/python<version>/dist-packages.\n/usr/lib/python<version>/site-packages is not used.\n\nA path configuration file is a file whose name has the form\n<package>.pth; its contents are additional directories (one per line)\nto be added to sys.path.  Non-existing directories (or\nnon-directories) are never added to sys.path; no directory is added to\nsys.path more than once.  Blank lines and lines beginning with\n'#' are skipped. Lines starting with 'import' are executed.\n\nFor example, suppose sys.prefix and sys.exec_prefix are set to\n/usr/local and there is a directory /usr/local/lib/python2.5/site-packages\nwith three subdirectories, foo, bar and spam, and two path\nconfiguration files, foo.pth and bar.pth.  Assume foo.pth contains the\nfollowing:\n\n  # foo package configuration\n  foo\n  bar\n  bletch\n\nand bar.pth contains:\n\n  # bar package configuration\n  bar\n\nThen the following directories are added to sys.path, in this order:\n\n  /usr/local/lib/python2.5/site-packages/bar\n  /usr/local/lib/python2.5/site-packages/foo\n\nNote that bletch is omitted because it doesn't exist; bar precedes foo\nbecause bar.pth comes alphabetically before foo.pth; and spam is\nomitted because it is not mentioned in either path configuration file.\n\nAfter these path manipulations, an attempt is made to import a module\nnamed sitecustomize, which can perform arbitrary additional\nsite-specific customizations.  If this import fails with an\nImportError exception, it is silently ignored.\n\ni\377\377\377\377Nc\0\0\0\0\2\0\0\0\5\0\0\0G\0\0\0sR\0\0\0t\0\0j\1\0j\2\0|\0\0\214\0\0}\1\0y\26\0t\0\0j\1\0j\3\0|\1\0\203\1\0}\1\0Wn\21\0\4t\4\0k\n\0r;\0\1\1\1n\1\0X|\1\0t\0\0j\1\0j\5\0|\1\0\203\1\0f\2\0S(\1\0\0\0N(\6\0\0\0t\2\0\0\0ost\4\0\0\0patht\4\0\0\0joint\7\0\0\0abspatht\7\0\0\0OSErrort\10\0\0\0normcase(\2\0\0\0t\5\0\0\0pathst\3\0\0\0dir(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\10\0\0\0makepathU\0\0\0s\f\0\0\0\0\1\22\1\3\1\26\1\r\1\4\1c\0\0\0\0\1\0\0\0\7\0\0\0C\0\0\0si\0\0\0xb\0t\0\0j\1\0j\2\0\203\0\0D]Q\0}\0\0t\3\0|\0\0d\1\0\203\2\0r+\0q\20\0n\0\0y\34\0t\4\0j\5\0j\6\0|\0\0j\7\0\203\1\0|\0\0_\7\0Wq\20\0\4t\10\0t\t\0f\2\0k\n\0r`\0\1\1\1q\20\0Xq\20\0Wd\2\0S(\3\0\0\0s6\0\0\0Set all module' __file__ attribute to an absolute patht\n\0\0\0__loader__N(\n\0\0\0t\3\0\0\0syst\7\0\0\0modulest\6\0\0\0valuest\7\0\0\0hasattrR\0\0\0\0R\1\0\0\0R\3\0\0\0t\10\0\0\0__file__t\16\0\0\0AttributeErrorR\4\0\0\0(\1\0\0\0t\1\0\0\0m(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\v\0\0\0abs__file__^\0\0\0s\16\0\0\0\0\2\26\1\17\1\6\1\3\1\34\1\23\1c\0\0\0\0\4\0\0\0\3\0\0\0C\0\0\0sl\0\0\0g\0\0}\0\0t\0\0\203\0\0}\1\0xL\0t\1\0j\2\0D]A\0}\2\0t\3\0|\2\0\203\1\0\\\2\0}\2\0}\3\0|\3\0|\1\0k\7\0r\31\0|\0\0j\4\0|\2\0\203\1\0\1|\1\0j\5\0|\3\0\203\1\0\1q\31\0q\31\0W|\0\0t\1\0j\2\0(|\1\0S(\1\0\0\0sK\0\0\0 Remove duplicate entries from sys.path along with making them\n    absolute(\6\0\0\0t\3\0\0\0setR\n\0\0\0R\1\0\0\0R\10\0\0\0t\6\0\0\0appendt\3\0\0\0add(\4\0\0\0t\1\0\0\0Lt\v\0\0\0known_pathsR\7\0\0\0t\7\0\0\0dircase(\0\0\0", 4096) = 4096
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=669311, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=19712, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 brk(0x844f000)                    = 0x844f000
27308 read(4, "\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\16\0\0\0removeduppathsi\0\0\0s\22\0\0\0\0\5\6\1\t\1\20\4\22\1\f\1\r\1\24\1\n\1c\0\0\0\0\3\0\0\0\6\0\0\0C\0\0\0sp\0\0\0t\0\0\203\0\0}\0\0x`\0t\1\0j\2\0D]U\0}\1\0y8\0t\3\0j\2\0j\4\0|\1\0\203\1\0rP\0t\5\0|\1\0\203\1\0\\\2\0}\1\0}\2\0|\0\0j\6\0|\2\0\203\1\0\1n\0\0Wq\23\0\4t\7\0k\n\0rg\0\1\1\1q\23\0q\23\0Xq\23\0W|\0\0S(\1\0\0\0sD\0\0\0Return a set containing all existing directory entries from sys.path(\10\0\0\0R\22\0\0\0R\n\0\0\0R\1\0\0\0R\0\0\0\0t\5\0\0\0isdirR\10\0\0\0R\24\0\0\0t\t\0\0\0TypeError(\3\0\0\0t\1\0\0\0dR\7\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\16\0\0\0_init_pathinfo|\0\0\0s\22\0\0\0\0\2\t\1\20\1\3\1\22\1\22\1\24\1\r\1\v\1c\3\0\0\0\f\0\0\0\v\0\0\0B\0\0\0s\272\1\0\0|\2\0d\4\0k\10\0r\34\0e\1\0\203\0\0\1d\1\0}\3\0n\6\0d\2\0}\3\0e\2\0j\3\0j\4\0|\0\0|\1\0\203\2\0}\4\0y\23\0e\5\0|\4\0d\3\0\203\2\0}\5\0Wn\22\0\4e\6\0k\n\0r^\0\1\1\1d\4\0SX|\5\0\217@\1\1x8\1e\7\0|\5\0\203\1\0D]*\1\\\2\0}\6\0}\7\0|\7\0j\10\0d\5\0\203\1\0r\224\0qs\0n\0\0y\200\0|\7\0j\10\0d\v\0\203\1\0r\264\0|\7\0d\4\0\4Uws\0n\0\0|\7\0j\t\0\203\0\0}\7\0e\n\0|\0\0|\7\0\203\2\0\\\2\0}\10\0}\t\0|\t\0|\2\0k\7\0r\23\1e\2\0j\3\0j\v\0|\10\0\203\1\0r\23\1e\f\0j\3\0j\r\0|\10\0\203\1\0\1|\2\0j\16\0|\t\0\203\1\0\1n\0\0Wqs\0\4e\17\0k\n\0r\234\1\1}\n\0\1e\f\0j\20\0\4d\10\0j\21\0|\6\0d\1\0\27|\4\0\203\2\0\2IJxE\0e\22\0j\23\0e\f\0j\24\0\203\0\0\214\0\0D].\0}\v\0x%\0|\v\0j\25\0\203\0\0D]\27\0}\7\0e\f\0j\20\0\4d\t\0|\7\0\27\2IJql\1WqY\1We\f\0j\20\0\4d\n\0\2IJPqs\0Xqs\0WWd\4\0QX|\3\0r\266\1d\4\0}\2\0n\0\0|\2\0S(\f\0\0\0s\326\0\0\0Process a .pth file within the site-packages directory:\n       For each line in the file, either combine it with sitedir to a path\n       and add that to known_paths, or execute it if it starts with 'import '.\n    i\1\0\0\0i\0\0\0\0t\2\0\0\0rUNt\1\0\0\0#s\7\0\0\0import s\7\0\0\0import\ts\"\0\0\0Error processing line {:d} of {}:\ns\2\0\0\0  s\32\0\0\0\nRemainder of file ignored(\2\0\0\0s\7\0\0\0import s\7\0\0\0import\t(\26\0\0\0t\4\0\0\0NoneR\34\0\0\0R\0\0\0\0R\1\0\0\0R\2\0\0\0t\4\0\0\0opent\7\0\0\0IOErrort\t\0\0\0enumeratet\n\0\0\0startswitht\6\0\0\0rstripR\10\0\0\0t\6\0\0\0existsR\n\0\0\0R\23\0\0\0R\24\0\0\0t\t\0\0\0Exceptiont\6\0\0\0stderrt\6\0\0\0formatt\t\0\0\0tracebackt\20\0\0\0format_exceptiont\10\0\0\0exc_infot\n\0\0\0splitlines(\f\0\0\0t\7\0\0\0sitedirt\4\0\0\0nameR\26\0\0\0t\5\0\0\0resett\10\0\0\0fullnamet\1\0\0\0ft\1\0\0\0nt\4\0\0\0lineR\7\0\0\0R\27\0\0\0t\3\0\0\0errt\6\0\0\0record(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\n\0\0\0addpackage\211\0\0\0sB\0\0\0\0\5\f\1\7\1\t\2\6\1\25\1\3\1\23\1\r\1\5\1\7\1\31\1\17\1\6\1\3\1\17\1\10\1\6\1\f\1\25\1\36\1\20\1\24\1\17\1\r\1\20\1\34\1\23\1\31\1\r\1\17\1\6\1\t\1c\2\0\0\0\7\0\0\0\5\0\0\0C\0\0\0s\357\0\0\0|\1\0d\3\0k\10\0r\36\0t\1\0\203\0\0}\1\0d\1\0}\2\0n\6\0d\2\0}\2\0t\2\0|\0\0\203\1\0\\\2\0}\0\0}\3\0|\3\0|\1\0k\7\0rU\0t\3\0j\4\0j\5\0|\0\0\203\1\0\1n\0\0y\23\0t\6\0j\7\0|\0\0\203\1\0}\4\0Wn\25\0\4t\6\0j\10\0k\n\0r\177\0\1\1\1d\3\0SXt\6\0j\t\0d\4\0\27}\5\0g\0\0|\4\0D]\33\0}\6\0|\6\0j\n\0|\5\0\203\1\0r\224\0|\6\0^\2\0q\224\0}\4\0x$\0t\v\0|\4\0\203\1\0D]\26\0}\6\0t\f\0|\0\0|\6\0|\1\0\203\3\0\1q\302\0W|\2\0r\353\0d\3\0}\1\0n\0\0|\1\0S(\5\0\0\0sT\0\0\0Add 'sitedir' argument to sys.path if missing and handle .pth files in\n    'sitedir'i\1\0\0\0i\0\0\0\0Nt\3\0\0\0pth(\r\0\0\0R\37\0\0\0R\34\0\0\0R\10\0\0\0R\n\0\0\0R\1\0\0\0R\23\0\0\0R\0\0\0\0t\7\0\0\0listdirt\5\0\0\0errort\6\0\0\0extsept\10\0\0\0endswitht\6\0\0\0sortedR6\0\0\0(\7\0\0\0R-\0\0\0R\26\0\0\0R/\0\0\0t\v\0\0\0sitedircaset\5\0\0\0namest\6\0\0\0dotpthR.\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\n\0\0\0addsitedir\262\0\0\0s$\0\0\0\0\3\f\1\t\1\t\2\6\1\22\1\f\1\23\1\3\1\23\1\20\1\5\1\r\1(\1\23\1\24\1\6\1\t\1c\0\0\0\0\0\0\0\0\3\0\0\0C\0\0\0s\216\0\0\0t\0\0j\1\0j\2\0r\20\0t\3\0St\4\0t\5\0d\1\0\203\2\0rM\0t\4\0t\5\0d\2\0\203\2\0rM\0t\5\0j\6\0\203\0\0t\5\0j\7\0\203\0\0k\3\0rM\0d\5\0Sn\0\0t\4\0t\5\0d\3\0\203\2\0r\212\0t\4\0t\5\0d\4\0\203\2\0r\212\0t\5\0j\t\0\203\0\0t\5\0j\n\0\203\0\0k\3\0r\212\0d\5\0Sn\0\0t\v\0S(\6\0\0\0s,\1\0\0Check if user site directory is safe for inclusion\n\n    The function tests for the command line flag (including environment var),\n    process uid/gid equal to effective uid/gid.\n\n    None: Disabled for security reasons\n    False: Disabled by user (command line option)\n    True: Safe and enabled\n    t\6\0\0\0getuidt\7\0\0\0geteuidt\6\0\0\0getgidt\7\0\0\0getegidN(\f\0\0\0R\n\0\0\0t\5\0\0\0flagst\f\0\0\0no_user_sitet\5\0\0\0FalseR\r\0\0\0R\0\0\0\0RB\0\0\0RA\0\0\0R\37\0\0\0RD\0\0\0RC\0\0\0t\4\0\0\0True(\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\24\0\0\0check_enableusersite\312\0\0\0s\22\0\0\0\0\n\f\1\4\2\36\2\30\1\7\1\36\2\30\1\7\2c\0\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s0\0\0\0t\0\0d\4\0k\t\0r\20\0t\0\0Sd\1\0d\2\0l\2\0m\3\0}\0\0\1|\0\0d\3\0\203\1\0a\0\0t\0\0S(\5\0\0\0s\313\0\0\0Returns the `user base` directory path.\n\n    The `user base` directory can be used to store data. If the global\n    variable ``USER_BASE`` is not initialized yet, this function will also set\n    it.\n    i\377\377\377\377(\1\0\0\0t\16\0\0\0get_config_vart\10\0\0\0userbaseN(\4\0\0\0t\t\0\0\0USER_BASER\37\0\0\0t\t\0\0\0sysconfigRJ\0\0\0(\1\0\0\0RJ\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\v\0\0\0getuserbase\342\0\0\0s\n\0\0\0\0\10\f\1\4\1\20\1\f\1c\0\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s\220\0\0\0t\0\0\203\0\0}\0\0t\1\0d\3\0k\t\0r\31\0t\1\0Sd\1\0d\2\0l\3\0m\4\0}\1\0\1d\1\0d\3\0l\5\0}\2\0t\6\0j\7\0d\4\0k\2\0rv\0d\1\0d\5\0l\3\0m\10\0}\3\0\1|\3\0d\6\0\203\1\0rv\0|\1\0d\7\0d\10\0\203\2\0a\1\0t\1\0Sn\0\0|\1\0d\7\0d\t\0|\2\0j\t\0\26\203\2\0a\1\0t\1\0S(\n\0\0\0s\242\0\0\0Returns the user-specific site-packages directory path.\n\n    If the global variable ``USER_SITE`` is not initialized yet, this\n    function will also set it.\n    i\377\377\377\377(\1\0\0\0t\10\0\0\0get_pathNt\6\0\0\0darwin(\1\0\0\0RJ\0\0\0t\17\0\0\0PYTHONFRAMEWORKt\7\0\0\0purelibt\22\0\0\0osx_framework_users\7\0\0\0%s_user(\n\0\0\0RN\0\0\0t\t\0\0\0USER_SITER\37\0\0\0RM\0\0\0RO\0\0\0R\0\0\0\0R\n\0\0\0t\10\0\0\0platformRJ\0\0\0R.\0\0\0(\4\0\0\0t\t\0\0\0user_baseRO\0\0\0R\0\0\0\0RJ\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\23\0\0\0getusersitepackages\360\0\0\0s\30\0\0\0\0\7\t\2\f\1\4\2\20\1\f\2\17\1\20\1\f\1\17\1\7\2\26\1c\1\0\0\0\3\0\0\0\7\0\0\0C\0\0\0s\227\0\0\0t\0\0\203\0\0}\1\0t\1\0r1\0t\2\0j\3\0j\4\0|\1\0\203\1\0r1\0t\5\0|\1\0|\0\0\203\2\0\1n\0\0t\1\0r\223\0xY\0d\6\0D]N\0}\2\0t\2\0j\3\0j\6\0t\7\0|\2\0d\3\0t\10\0j\t\0d\4\0 \27d\5\0\203\4\0}\1\0t\2\0j\3\0j\4\0|\1\0\203\1\0r>\0t\5\0|\1\0|\0\0\203\2\0\1q>\0q>\0Wn\0\0|\0\0S(\7\0\0\0s\206\0\0\0Add a per user site-package to sys.path\n\n    Each user has its own python directory with site-packages in the\n    home directory.\n    s\t\0\0\0local/libt\3\0\0\0libt\6\0\0\0pythoni\3\0\0\0s\r\0\0\0dist-packages(\2\0\0\0s\t\0\0\0local/libRX\0\0\0(\n\0\0\0RW\0\0\0t\20\0\0\0ENABLE_USER_SITER\0\0\0\0R\1\0\0\0R\31\0\0\0R@\0\0\0R\2\0\0\0RL\0\0\0R\n\0\0\0t\7\0\0\0version(\3\0\0\0R\26\0\0\0t\t\0\0\0user_sitet\v\0\0\0dist_libdir(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\23\0\0\0addusersitepackages\10\1\0\0s\26\0\0\0\0\10\t\2\30\1\20\1\6\1\r\1\17\1\16\1\t\1\22\1\27\1c\0\0\0\0\5\0\0\0\10\0\0\0C\0\0\0ss\1\0\0g\0\0}\0\0t\0\0\203\0\0}\1\0x]\1t\1\0D]U\1}\2\0|\2\0\fs\26\0|\2\0|\1\0k\6\0r5\0q\26\0n\0\0|\1\0j\2\0|\2\0\203\1\0\1t\3\0j\4\0d\20\0k\6\0rs\0|\0\0j\5\0t\6\0j\7\0j\10\0|\2\0d\3\0d\4\0\203\3\0\203\1\0\1n\230\0t\6\0j\t\0d\5\0k\2\0r\337\0|\0\0j\5\0t\6\0j\7\0j\10\0|\2\0d\6\0d\7\0t\3\0j\n\0d\10\0 \27d\t\0\203\4\0\203\1\0\1|\0\0j\5\0t\6\0j\7\0j\10\0|\2\0d\n\0d\7\0t\3\0j\n\0d\10\0 \27d\t\0\203\4\0\203\1\0\1n,\0|\0\0j\5\0|\2\0\203\1\0\1|\0\0j\5\0t\6\0j\7\0j\10\0|\2\0d\n\0d\4\0\203\3\0\203\1\0\1t\3\0j\4\0d\v\0k\2\0r\26\0d\f\0d\r\0l\v\0m\f\0}\3\0\1|\3\0d\16\0\203\1\0}\4\0|\4\0rk\1|\0\0j\5\0t\6\0j\7\0j\10\0d\17\0|\4\0t\3\0j\n\0d\10\0 d\4\0\203\4\0\203\1\0\1qk\1q\26\0q\26\0W|\0\0S(\21\0\0\0s+\1\0\0Returns a list containing all global site-packages directories\n    (and possibly site-python).\n\n    For each directory present in the global ``PREFIXES``, this function\n    will find its `site-packages` subdirectory depending on the system\n    environment, and will return a list of full paths.\n    t\6\0\0\0os2emxt\6\0\0\0riscost\3\0\0\0Libs\r\0\0\0site-packagest\1\0\0\0/s\t\0\0\0local/libRY\0\0\0i\3\0\0\0s\r\0\0\0dist-packagesRX\0\0\0RP\0\0\0i\377\377\377\377(\1\0\0\0RJ\0\0\0RQ\0\0\0s\10\0\0\0/Library(\2\0\0\0R_\0\0\0R`\0\0\0(\r\0\0\0R\22\0\0\0t\10\0\0\0PREFIXESR\24\0\0\0R\n\0\0\0RU\0\0\0R\23\0\0\0R\0\0\0\0R\1\0\0\0R\2\0\0\0t\3\0\0\0sepR[\0\0\0RM\0\0\0RJ\0\0\0(\5\0\0\0t\f\0\0\0sitepackagest\4\0\0\0seent\6\0\0\0prefixRJ\0\0\0t\t\0\0\0framework(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\17\0\0\0getsitepackages\35\1\0\0s2\0\0\0\0\10\6\1\t\2\r\1\23\1\6\1\r\2\17\1\"\1\17\1\25\1\16\1\n\1\25\1\16\1\r\2\r\1\37\1\17\3\20\1\f\1\6\1\6\1\17\1\36\1c\1\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s:\0\0\0x3\0t\0\0\203\0\0D](\0}\1\0t\1\0j\2\0j\3\0|\1\0\203\1\0r\n\0t\4\0|\1\0|\0\0\203\2\0\1q\n\0q\n\0W|\0\0S(\1\0\0\0s8\0\0\0Add site-packages (and possibly site-python) to sys.path(\5\0\0\0Ri\0\0\0R\0\0\0\0R\1\0\0\0R\31\0\0\0R@\0\0\0(\2\0\0\0R\26\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\17\0\0\0addsitepackagesD\1\0\0s\10\0\0\0\0\2\20\1\22\1\24\2c\0\0\0\0\2\0\0\0\4\0\0\0C\0\0\0so\0\0\0t\0\0j\1\0j\2\0t\3\0j\4\0d\1\0d\2\0\203\3\0}\0\0t\0\0j\5\0d\3\0\31j\6\0d\4\0\203\1\0}\1\0|\1\0d\5\0\31rK\0|\1\0j\7\0|\0\0\203\1\0\1n\n\0|\0\0|\1\0d\5\0<d\4\0j\2\0|\1\0\203\1\0t\0\0j\5\0d\3\0<d\6\0S(\7\0\0\0sE\1\0\0The OS/2 EMX port has optional extension modules that do double duty\n    as DLLs (and must use the .DLL file extension) for other extensions.\n    The library search path needs to be amended so these will be found\n    during module import.  Use BEGINLIBPATH so that these are at the start\n    of the library search path.\n\n    Ra\0\0\0s\v\0\0\0lib-dynloadt\f\0\0\0BEGINLIBPATHt\1\0\0\0;i\377\377\377\377N(\10\0\0\0R\0\0\0\0R\1\0\0\0R\2\0\0\0R\n\0\0\0Rg\0\0\0t\7\0\0\0environt\5\0\0\0splitR\23\0\0\0(\2\0\0\0t\7\0\0\0dllpatht\7\0\0\0libpath(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\17\0\0\0setBEGINLIBPATHL\1\0\0s\f\0\0\0\0\10\33\1\26\1\n\1\20\2\n\1c\0\0\0\0\1\0\0\0\4\0\0\0\3\0\0\0st\0\0\0t\0\0j\1\0d\1\0k\2\0r\30\0d\2\0\211\0\0n\36\0t\0\0j\1\0d\3\0k\2\0r0\0d\4\0\211\0\0n\6\0d\5\0\211\0\0d\6\0t\2\0f\1\0\207\0\0f\1\0d\7\0\206\0\0\203\0\0Y}\0\0|\0\0d\10\0\203\1\0t\3\0_\4\0|\0\0d\t\0\203\1\0t\3\0_\5\0d\n\0S(\v\0\0\0s\255\0\0\0Define new builtins 'quit' and 'exit'.\n\n    These are objects which make the interpreter exit when called.\n    The repr of each object contains a hint at how it works.\n\n    t\1\0\0\0:s\5\0\0\0Cmd-Qs\1\0\0\0\\s\22\0\0\0Ctrl-Z plus Returns\21\0\0\0Ctrl-D (i.e. EOF)t\7\0\0\0Quitterc\0\0\0\0\0\0\0\0\2\0\0\0\2\0\0\0s,\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0\207\0\0f\1\0d\1\0\206\0\0Z\3\0d\3\0d\2\0\204\1\0Z\5\0RS(\4\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\r\0\0\0|\1\0|\0\0_\0\0d\0\0S(\1\0\0\0N(\1\0\0\0R.\0\0\0(\2\0\0\0t\4\0\0\0selfR.\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\10\0\0\0__init__l\1\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\3\0\0\0\23\0\0\0s\21\0\0\0d\1\0|\0\0j\0\0\210\0\0f\2\0\26S(\2\0\0\0Ns\26\0\0\0Use %s() or %s to exit(\1\0\0\0R.\0\0\0(\1\0\0\0Rt\0\0\0(\1\0\0\0t\3\0\0\0eof(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\10\0\0\0__repr__n\1\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0S\0\0\0s+\0\0\0y\21\0t\0\0j\1\0j\2\0\203\0\0\1Wn\7\0\1\1\1n\1\0Xt\3\0|\1\0\203\1\0\202\1\0d\0\0S(\1\0\0\0N(\4\0\0\0R\n\0\0\0t\5\0\0\0stdint\5\0\0\0closet\n\0\0\0SystemExit(\2\0\0\0Rt\0\0\0t\4\0\0\0code(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\10\0\0\0__call__p\1\0\0s\n\0\0\0\0\3\3\1\21\1\3\1\4\1N(\6\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__Ru\0\0\0Rw\0\0\0R\37\0\0\0R|\0\0\0(\0\0\0\0(\1\0\0\0Rv\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyRs\0\0\0k\1\0\0s\6\0\0\0\6\1\t\2\17\2t\4\0\0\0quitt\4\0\0\0exitN(\6\0\0\0R\0\0\0\0Rd\0\0\0t\6\0\0\0objectt\v\0\0\0__builtin__R\177\0\0\0R\200\0\0\0(\1\0\0\0Rs\0\0\0(\0\0\0\0(\1\0\0\0Rv\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\7\0\0\0setquit]\1\0\0s\20\0\0\0\0\7\17\1\t\1\17\1\t\2\6\2\34\r\17\1t\10\0\0\0_Printerc\0\0\0\0\0\0\0\0\3\0\0\0B\0\0\0s>\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0Z\3\0d\6\0d\7\0d\2\0\204\2\0Z\4\0d\3\0\204\0\0Z\5\0d\4\0\204\0\0Z\6\0d\5\0\204\0\0Z\7\0RS(\10\0\0\0sn\0\0\0interactive prompt objects for printing the license text, a list of\n    contributors and the copyright notice.i\27\0\0\0c\5\0\0\0\5\0\0\0\2\0\0\0C\0\0\0s1\0\0\0|\1\0|\0\0_\0\0|\2\0|\0\0_\1\0|\3\0|\0\0_\2\0|\4\0|\0\0_\3\0d\0\0|\0\0_\5\0d\0\0S(\1\0\0\0N(\6\0\0\0t\16\0\0\0_Printer__namet\16\0\0\0_Printer__datat\17\0\0\0_Printer__filest\16\0\0\0_Printer__dirsR\37\0\0\0t\17\0\0\0_Printer__lines(\5\0\0\0Rt\0\0\0R.\0\0\0t\4\0\0\0datat\5\0\0\0filest\4\0\0\0dirs(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyRu\0\0\0\202\1\0\0s\n\0\0\0\0\1\t\1\t\1\t\1\t\1c\1\0\0\0\5\0\0\0\7\0\0\0C\0\0\0s\322\0\0\0|\0\0j\0\0r\r\0d\0\0Sd\0\0}\1\0x\202\0|\0\0j\2\0D]w\0}\2\0xd\0|\0\0j\3\0D]Y\0}\3\0t\4\0j\5\0j\6\0|\2\0|\3\0\203\2\0}\3\0y*\0t\7\0|\3\0d\1\0\203\2\0}\4\0|\4\0j\10\0\203\0\0}\1\0|\4\0j\t\0\203\0\0\1PWq-\0\4t\n\0k\n\0r\205\0\1\1\1q-\0Xq-\0W|\1\0r\35\0Pq\35\0q\35\0W|\1\0s\252\0|\0\0j\v\0}\1\0n\0\0|\1\0j\f\0d\2\0\203\1\0|\0\0_\0\0t\r\0|\0\0j\0\0\203\1\0|\0\0_\16\0d\0\0S(\3\0\0\0NR\35\0\0\0s\1\0\0\0\n(\17\0\0\0R\211\0\0\0R\37\0\0\0R\210\0\0\0R\207\0\0\0R\0\0\0\0R\1\0\0\0R\2\0\0\0t\4\0\0\0filet\4\0\0\0readRy\0\0\0R!\0\0\0R\206\0\0\0Rn\0\0\0t\3\0\0\0lent\21\0\0\0_Printer__linecnt(\5\0\0\0Rt\0\0\0R\212\0\0\0R\7\0\0\0t\10\0\0\0filenamet\2\0\0\0fp(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\7\0\0\0__setup\211\1\0\0s&\0\0\0\0\1\t\1\4\1\6\1\20\1\20\1\25\1\3\1\17\1\f\1\n\1\5\1\r\1\10\1\6\1\10\1\6\1\f\1\22\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0sH\0\0\0|\0\0j\0\0\203\0\0\1t\1\0|\0\0j\2\0\203\1\0|\0\0j\3\0k\1\0r2\0d\1\0j\4\0|\0\0j\2\0\203\1\0Sd\2\0|\0\0j\5\0f\1\0d\3\0\24\26Sd\0\0S(\4\0\0\0Ns\1\0\0\0\ns!\0\0\0Type %s() to see the full %s texti\2\0\0\0(\6\0\0\0t\17\0\0\0_Printer__setupR\217\0\0\0R\211\0\0\0t\10\0\0\0MAXLINESR\2\0\0\0R\205\0\0\0(\1\0\0\0Rt\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyRw\0\0\0\236\1\0\0s\10\0\0\0\0\1\n\1\30\1\20\2c\1\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\276\0\0\0|\0\0j\0\0\203\0\0\1d\1\0}\1\0d\2\0}\2\0x\241\0y1\0x*\0t\1\0|\2\0|\2\0|\0\0j\2\0\27\203\2\0D]\22\0}\3\0|\0\0j\3\0|\3\0\31GHq3\0WWn\22\0\4t\4\0k\n\0r^\0\1\1\1Pq\31\0X|\2\0|\0\0j\2\0007}\2\0d\0\0}\4\0x1\0|\4\0d\0\0k\10\0r\245\0t\6\0|\1\0\203\1\0}\4\0|\4\0d\5\0k\7\0ru\0d\0\0}\4\0qu\0qu\0W|\4\0d\4\0k\2\0r\31\0Pq\31\0q\31\0Wd\0\0S(\6\0\0\0Ns0\0\0\0Hit Return for more, or q (and Return) to quit: i\0\0\0\0t\0\0\0\0t\1\0\0\0q(\2\0\0\0R\226\0\0\0R\227\0\0\0(\7\0\0\0R\224\0\0\0t\5\0\0\0rangeR\225\0\0\0R\211\0\0\0t\n\0\0\0IndexErrorR\37\0\0\0t\t\0\0\0raw_input(\5\0\0\0Rt\0\0\0t\6\0\0\0promptt\6\0\0\0linenot\1\0\0\0it\3\0\0\0key(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyR|\0\0\0\245\1\0\0s\"\0\0\0\0\1\n\1\6\1\6\1\3\1\3\1\35\1\24\1\r\1\5\2\r\1\6\1\17\1\f\1\f\1\r\1\f\1(\0\0\0\0(\0\0\0\0(\10\0\0\0R}\0\0\0R~\0\0\0t\7\0\0\0__doc__R\225\0\0\0Ru\0\0\0R\224\0\0\0Rw\0\0\0R|\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyR\204\0\0\0|\1\0\0s\f\0\0\0\6\2\6\2\6\2\17\7\t\25\t\7c\0\0\0\0\1\0\0\0\7\0\0\0C\0\0\0s\244\0\0\0t\0\0d\1\0t\1\0j\2\0\203\2\0t\3\0_\2\0t\1\0j\4\0d\2\0 d\3\0k\2\0r=\0t\0\0d\4\0d\5\0\203\2\0t\3\0_\5\0n\22\0t\0\0d\4\0d\6\0\203\2\0t\3\0_\5\0t\6\0j\7\0j\10\0t\6\0j\t\0\203\1\0}\0\0t\0\0d\7\0d\10\0d\t\0d\n\0g\2\0t\6\0j\7\0j\n\0|\0\0t\6\0j\v\0\203\2\0|\0\0t\6\0j\f\0g\3\0\203\4\0t\3\0_\r\0d\v\0S(\f\0\0\0s,\0\0\0Set 'copyright' and 'credits' in __builtin__t\t\0\0\0copyrighti\4\0\0\0t\4\0\0\0javat\7\0\0\0creditss?\0\0\0Jython is maintained by the Jython developers (www.jython.org).s\236\0\0\0    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands\n    for supporting Python development.  See www.python.org for more information.t\7\0\0\0licenses'\0\0\0See https://www.python.org/psf/license/s\v\0\0\0LICENSE.txtt\7\0\0\0LICENSEN(\16\0\0\0R\204\0\0\0R\n\0\0\0R\240\0\0\0R\202\0\0\0RU\0\0\0R\242\0\0\0R\0\0\0\0R\1\0\0\0t\7\0\0\0dirnameR\16\0\0\0R\2\0\0\0t\6\0\0\0pardirt\6\0\0\0curdirR\243\0\0\0(\1\0\0\0t\4\0\0\0here(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\f\0\0\0setcopyright\271\1\0\0s\30\0\0\0\0\2\25\1\23\1\3\1\3\1\17\2\6\2\f\1\25\1\3\1\6\1\t\1t\7\0\0\0_Helperc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s \0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0RS(\3\0\0\0sX\0\0\0Define the builtin 'help'.\n    This is a wrapper around pydoc.help (with a twist).\n\n    c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\1\0S(\2\0\0\0NsH\0\0\0Type help() for interactive help, or help(object) for help about object.(\0\0\0\0(\1\0\0\0Rt\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyRw\0\0\0\321\1\0\0s\2\0\0\0\0\1c\1\0\0\0\4\0\0\0\3\0\0\0O\0\0\0s\34\0\0\0d\1\0d\0\0l\0\0}\3\0|\3\0j\1\0|\1\0|\2\0\216\0\0S(\2\0\0\0Ni\377\377\377\377(\2\0\0\0t\5\0\0\0pydoct\4\0\0\0help(\4\0\0\0Rt\0\0\0t\4\0\0\0argst\4\0\0\0kwdsR\253\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyR|\0\0\0\324\1\0\0s\4\0\0\0\0\1\f\1(\5\0\0\0R}\0\0\0R~\0\0\0R\237\0\0\0Rw\0\0\0R|\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyR\252\0\0\0\313\1\0\0s\6\0\0\0\6\4\6\2\t\3c\0\0\0\0\0\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0\203\0\0t\1\0_\2\0d\0\0S(\1\0\0\0N(\3\0\0\0R\252\0\0\0R\202\0\0\0R\254\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\t\0\0\0sethelper\330\1\0\0s\2\0\0\0\0\1c\0\0\0\0\4\0\0\0\5\0\0\0C\0\0\0s\241\0\0\0t\0\0j\1\0d\1\0k\2\0r\235\0d\2\0d\3\0l\2\0}\0\0d\2\0d\3\0l\3\0}\1\0|\0\0j\4\0\203\0\0d\4\0\31}\2\0|\2\0j\5\0d\5\0\203\1\0r\235\0y\21\0|\1\0j\6\0|\2\0\203\1\0\1Wq\232\0\4t\7\0k\n\0r\226\0\1\1\1d\2\0d\3\0l\10\0}\3\0|\3\0j\t\0|\3\0j\n\0|\2\0<d\6\0|\3\0j\v\0j\v\0|\2\0<q\232\0Xq\235\0n\0\0d\3\0S(\7\0\0\0s\267\0\0\0On Windows, some default encodings are not provided by Python,\n    while they are always available as \"mbcs\" in each locale. Make\n    them usable by aliasing to \"mbcs\" in such a case.t\5\0\0\0win32i\377\377\377\377Ni\1\0\0\0t\2\0\0\0cpt\4\0\0\0mbcs(\f\0\0\0R\n\0\0\0RU\0\0\0t\6\0\0\0localet\6\0\0\0codecst\20\0\0\0getdefaultlocaleR#\0\0\0t\6\0\0\0lookupt\v\0\0\0LookupErrort\t\0\0\0encodingst\10\0\0\0_unknownt\6\0\0\0_cachet\7\0\0\0aliases(\4\0\0\0R\263\0\0\0R\264\0\0\0t\3\0\0\0encR\270\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\t\0\0\0aliasmbcs\333\1\0\0", 12288) = 12288
27308 read(4, "s\24\0\0\0\0\4\17\1\30\1\20\1\17\1\3\1\21\1\r\1\f\1\20\1c\0\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s&\0\0\0d\1\0}\0\0|\0\0d\1\0k\3\0r\"\0t\0\0j\1\0|\0\0\203\1\0\1n\0\0d\2\0S(\3\0\0\0s\226\0\0\0Set the string encoding used by the Unicode implementation.  The\n    default is 'ascii', but if you're willing to experiment, you can\n    change this.t\5\0\0\0asciiN(\2\0\0\0R\n\0\0\0t\22\0\0\0setdefaultencoding(\1\0\0\0t\10\0\0\0encoding(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\v\0\0\0setencoding\352\1\0\0s\6\0\0\0\0\4\6\v\f\2c\0\0\0\0\1\0\0\0\5\0\0\0C\0\0\0sg\0\0\0y\20\0d\1\0d\2\0l\0\0}\0\0WnP\0\4t\1\0k\n\0r#\0\1\1\1n@\0\4t\2\0k\n\0rb\0\1\1\1t\3\0j\4\0j\5\0rR\0t\3\0j\6\0t\3\0j\7\0\203\0\0\214\0\0\1qc\0t\3\0j\10\0\4d\3\0\2IJn\1\0Xd\2\0S(\4\0\0\0s,\0\0\0Run custom site specific code, if available.i\377\377\377\377Ns3\0\0\0'import sitecustomize' failed; use -v for traceback(\t\0\0\0t\r\0\0\0sitecustomizet\v\0\0\0ImportErrorR&\0\0\0R\n\0\0\0RE\0\0\0t\7\0\0\0verboset\n\0\0\0excepthookR+\0\0\0R'\0\0\0(\1\0\0\0R\302\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\21\0\0\0execsitecustomize\376\1\0\0s\22\0\0\0\0\2\3\1\20\1\r\1\3\1\r\1\f\1\26\2\7\1c\0\0\0\0\1\0\0\0\5\0\0\0C\0\0\0sg\0\0\0y\20\0d\1\0d\2\0l\0\0}\0\0WnP\0\4t\1\0k\n\0r#\0\1\1\1n@\0\4t\2\0k\n\0rb\0\1\1\1t\3\0j\4\0j\5\0rR\0t\3\0j\6\0t\3\0j\7\0\203\0\0\214\0\0\1qc\0t\3\0j\10\0\4d\3\0\2IJn\1\0Xd\2\0S(\4\0\0\0s,\0\0\0Run custom user specific code, if available.i\377\377\377\377Ns3\0\0\0'import usercustomize' failed; use -v for traceback(\t\0\0\0t\r\0\0\0usercustomizeR\303\0\0\0R&\0\0\0R\n\0\0\0RE\0\0\0R\304\0\0\0R\305\0\0\0R+\0\0\0R'\0\0\0(\1\0\0\0R\307\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\21\0\0\0execusercustomize\f\2\0\0s\22\0\0\0\0\2\3\1\20\1\r\1\3\1\r\1\f\1\26\2\7\1c\0\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\257\0\0\0t\0\0\203\0\0\1t\1\0\203\0\0}\0\0t\2\0d\0\0k\10\0r(\0t\4\0\203\0\0a\2\0n\0\0t\5\0|\0\0\203\1\0}\0\0t\6\0|\0\0\203\1\0}\0\0t\7\0j\10\0d\1\0k\2\0rY\0t\t\0\203\0\0\1n\0\0t\n\0\203\0\0\1t\v\0\203\0\0\1t\f\0\203\0\0\1t\r\0\203\0\0\1t\16\0\203\0\0\1t\17\0\203\0\0\1t\2\0r\223\0t\20\0\203\0\0\1n\0\0t\21\0t\7\0d\2\0\203\2\0r\253\0t\7\0`\22\0n\0\0d\0\0S(\3\0\0\0NR_\0\0\0R\277\0\0\0(\23\0\0\0R\21\0\0\0R\30\0\0\0RZ\0\0\0R\37\0\0\0RI\0\0\0R^\0\0\0Rj\0\0\0R\n\0\0\0RU\0\0\0Rq\0\0\0R\203\0\0\0R\251\0\0\0R\257\0\0\0R\275\0\0\0R\301\0\0\0R\306\0\0\0R\310\0\0\0R\r\0\0\0R\277\0\0\0(\1\0\0\0R\26\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\4\0\0\0main\32\2\0\0s$\0\0\0\0\3\7\1\t\1\f\1\f\1\f\1\f\1\17\1\n\1\7\1\7\1\7\1\7\1\7\1\7\1\6\1\n\4\17\1c\0\0\0\0\5\0\0\0\4\0\0\0C\0\0\0s\234\1\0\0d\1\0}\0\0t\0\0j\1\0d\2\0\37}\1\0|\1\0s\252\0d\3\0GHx\35\0t\0\0j\2\0D]\22\0}\2\0d\4\0|\2\0f\1\0\26GHq(\0Wd\5\0GHd\6\0t\3\0t\4\0j\2\0j\5\0t\3\0\203\1\0ra\0d\7\0n\3\0d\10\0f\2\0\26GHd\t\0t\6\0t\4\0j\2\0j\5\0t\6\0\203\1\0r\210\0d\7\0n\3\0d\10\0f\2\0\26GHd\n\0t\7\0\26GHt\0\0j\10\0d\v\0\203\1\0\1n\0\0g\0\0}\3\0d\f\0|\1\0k\6\0r\314\0|\3\0j\t\0t\3\0\203\1\0\1n\0\0d\r\0|\1\0k\6\0r\350\0|\3\0j\t\0t\6\0\203\1\0\1n\0\0|\3\0r]\1t\4\0j\n\0j\v\0|\3\0\203\1\0GHt\7\0r\25\1t\0\0j\10\0d\v\0\203\1\0\1q\230\1t\7\0t\f\0k\10\0r1\1t\0\0j\10\0d\2\0\203\1\0\1q\230\1t\7\0d\0\0k\10\0rM\1t\0\0j\10\0d\16\0\203\1\0\1q\230\1t\0\0j\10\0d\17\0\203\1\0\1n;\0d\20\0d\0\0l\16\0}\4\0|\4\0j\17\0|\0\0t\0\0j\1\0d\v\0\31t\4\0j\n\0f\2\0\26\203\1\0GHt\0\0j\10\0d\21\0\203\1\0\1d\0\0S(\22\0\0\0Ns\262\1\0\0    %s [--user-base] [--user-site]\n\n    Without arguments print some useful information\n    With arguments print the value of USER_BASE and/or USER_SITE separated\n    by '%s'.\n\n    Exit codes with --user-base or --user-site:\n      0 - user site directory is enabled\n      1 - user site directory is disabled by user\n      2 - uses site directory is disabled by super user\n          or for security reasons\n     >2 - unknown error\n    i\1\0\0\0s\f\0\0\0sys.path = [s\7\0\0\0    %r,t\1\0\0\0]s\22\0\0\0USER_BASE: %r (%s)R%\0\0\0s\r\0\0\0doesn't exists\22\0\0\0USER_SITE: %r (%s)s\24\0\0\0ENABLE_USER_SITE: %ri\0\0\0\0s\v\0\0\0--user-bases\v\0\0\0--user-sitei\2\0\0\0i\3\0\0\0i\377\377\377\377i\n\0\0\0(\20\0\0\0R\n\0\0\0t\4\0\0\0argvR\1\0\0\0RL\0\0\0R\0\0\0\0R\31\0\0\0RT\0\0\0RZ\0\0\0R\200\0\0\0R\23\0\0\0t\7\0\0\0pathsepR\2\0\0\0RG\0\0\0R\37\0\0\0t\10\0\0\0textwrapt\6\0\0\0dedent(\5\0\0\0R\254\0\0\0R\255\0\0\0R\7\0\0\0t\6\0\0\0bufferR\315\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\7\0\0\0_script5\2\0\0s<\0\0\0\0\16\6\1\r\1\6\1\5\1\20\1\20\1\5\1\6\1!\1\6\1!\1\t\1\20\2\6\1\f\1\20\1\f\1\20\2\6\1\21\1\6\1\20\1\f\1\20\1\f\1\20\2\20\2\f\1\"\1t\10\0\0\0__main__(&\0\0\0R\237\0\0\0R\n\0\0\0R\0\0\0\0R\202\0\0\0R)\0\0\0Rg\0\0\0t\v\0\0\0exec_prefixRc\0\0\0R\37\0\0\0RZ\0\0\0RT\0\0\0RL\0\0\0R\10\0\0\0R\21\0\0\0R\30\0\0\0R\34\0\0\0R6\0\0\0R@\0\0\0RI\0\0\0RN\0\0\0RW\0\0\0R^\0\0\0Ri\0\0\0Rj\0\0\0Rq\0\0\0R\203\0\0\0R\201\0\0\0R\204\0\0\0R\251\0\0\0R\252\0\0\0R\257\0\0\0R\275\0\0\0R\301\0\0\0R\306\0\0\0R\310\0\0\0R\311\0\0\0R\320\0\0\0R}\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/site.pyt\10\0\0\0<module>A\0\0\0sF\0\0\0\6\2\f\1\f\1\f\1\f\3\22\3\6\5\6\1\6\3\t\t\t\v\t\23\t\r\t)\f\30\t\30\t\16\t\30\t\25\t'\t\10\t\21\t\37\26=\t\22\26\r\t\3\t\17\t\24\t\16\t\16\t\31\7\2\t1\f\1", 4096) = 3328
27308 read(4, "", 4096)                 = 0
27308 mmap2(NULL, 262144, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7cf5000
27308 close(4)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/os", 0xbfffddec) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/os.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/os.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/osmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/os.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661540, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=25914, st_atime=2017/04/02-20:25:33, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/os.pyc", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669312, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=25597, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(5, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\16\0\0\0@\0\0\0s\372\6\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0e\1\0j\3\0Z\4\0d\3\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0d\v\0d\f\0d\r\0d\16\0d\17\0d\20\0g\16\0Z\5\0d\21\0\204\0\0Z\6\0d\22\0e\4\0k\6\0r\333\0d\22\0Z\7\0d\23\0Z\10\0d\1\0d\24\0l\t\0Ty\24\0d\1\0d\25\0l\t\0m\n\0Z\n\0\1Wn\21\0\4e\v\0k\n\0r\251\0\1\1\1n\1\0Xd\1\0d\2\0l\f\0Z\r\0d\1\0d\2\0l\t\0Z\t\0e\5\0j\16\0e\6\0e\t\0\203\1\0\203\1\0\1[\t\0n,\2d\26\0e\4\0k\6\0rV\1d\26\0Z\7\0d\27\0Z\10\0d\1\0d\24\0l\17\0Ty\24\0d\1\0d\25\0l\17\0m\n\0Z\n\0\1Wn\21\0\4e\v\0k\n\0r$\1\1\1\1n\1\0Xd\1\0d\2\0l\20\0Z\r\0d\1\0d\2\0l\17\0Z\17\0e\5\0j\16\0e\6\0e\17\0\203\1\0\203\1\0\1[\17\0n\261\1d\30\0e\4\0k\6\0r\10\2d\30\0Z\7\0d\27\0Z\10\0d\1\0d\24\0l\21\0Ty\24\0d\1\0d\25\0l\21\0m\n\0Z\n\0\1Wn\21\0\4e\v\0k\n\0r\237\1\1\1\1n\1\0Xe\1\0j\22\0j\23\0d\31\0\203\1\0d\1\0k\2\0r\307\1d\1\0d\2\0l\20\0Z\r\0n\34\0d\1\0d\2\0l\24\0Z\r\0d\1\0d\32\0l\25\0m\26\0Z\26\0\1d\1\0d\2\0l\21\0Z\21\0e\5\0j\16\0e\6\0e\21\0\203\1\0\203\1\0\1[\21\0n\377\0d\33\0e\4\0k\6\0r\203\2d\33\0Z\7\0d\27\0Z\10\0d\1\0d\24\0l\27\0Ty\24\0d\1\0d\25\0l\27\0m\n\0Z\n\0\1Wn\21\0\4e\v\0k\n\0rQ\2\1\1\1n\1\0Xd\1\0d\2\0l\20\0Z\r\0d\1\0d\2\0l\27\0Z\27\0e\5\0j\16\0e\6\0e\27\0\203\1\0\203\1\0\1[\27\0n\204\0d\34\0e\4\0k\6\0r\376\2d\34\0Z\7\0d\23\0Z\10\0d\1\0d\24\0l\30\0Ty\24\0d\1\0d\25\0l\30\0m\n\0Z\n\0\1Wn\21\0\4e\v\0k\n\0r\314\2\1\1\1n\1\0Xd\1\0d\2\0l\31\0Z\r\0d\1\0d\2\0l\30\0Z\30\0e\5\0j\16\0e\6\0e\30\0\203\1\0\203\1\0\1[\30\0n\t\0e\v\0d\35\0\202\2\0e\r\0e\1\0j\32\0d\36\0<d\1\0d\37\0l\33\0m\34\0Z\34\0m\35\0Z\35\0m\36\0Z\36\0m\37\0Z\37\0m \0Z \0m!\0Z!\0m\"\0Z\"\0m#\0Z#\0\1[\4\0d \0Z$\0d!\0Z%\0d\"\0Z&\0d#\0d$\0\204\1\0Z'\0d%\0\204\0\0Z(\0d&\0\204\0\0Z)\0e\5\0j\16\0d'\0d(\0d)\0g\3\0\203\1\0\1e*\0d\2\0e,\0d*\0\204\3\0Z-\0e\5\0j.\0d+\0\203\1\0\1y\10\0e/\0\1Wn\27\0\4e0\0k\n\0r\327\3\1\1\1i\0\0Z/\0n\1\0Xd,\0\204\0\0Z1\0d-\0\204\0\0Z2\0d.\0\204\0\0Z3\0d/\0\204\0\0Z4\0d0\0\204\0\0Z5\0d1\0\204\0\0Z6\0e\5\0j\16\0d2\0d3\0d4\0d5\0d6\0d7\0g\6\0\203\1\0\1d\2\0d8\0\204\1\0Z7\0y\10\0e8\0\1Wn\21\0\4e0\0k\n\0rT\4\1\1\1n\221\0Xd\1\0d\2\0l9\0Z9\0e\7\0d_\0k\6\0ry\4d9\0\204\0\0Z:\0n\0\0e\7\0d\34\0k\2\0r\230\4d\1\0d:\0l;\0m<\0Z<\0\1nA\0e\7\0d`\0k\6\0r\300\4d;\0e9\0j=\0f\1\0d<\0\204\0\0\203\0\0YZ<\0n\31\0d;\0e9\0j=\0f\1\0d=\0\204\0\0\203\0\0YZ<\0e<\0e/\0\203\1\0Z/\0d\2\0d>\0\204\1\0Z>\0e\5\0j.\0d?\0\203\1\0\1d@\0\204\0\0Z?\0e?\0dA\0\203\1\0rl\5e?\0dB\0\203\1\0\frl\5e?\0dC\0\203\1\0rl\5d \0Z@\0d!\0\4ZA\0ZB\0dD\0\204\0\0ZC\0dE\0\204\0\0ZD\0dF\0\204\0\0ZE\0dG\0\204\0\0ZF\0dH\0\204\0\0ZG\0n\0\0e?\0dB\0\203\1\0r\246\5dI\0\204\0\0ZH\0dJ\0\204\0\0ZI\0e\5\0j\16\0dB\0dK\0dL\0dM\0g\4\0\203\1\0\1n\0\0e?\0dN\0\203\1\0r\340\5dO\0\204\0\0ZJ\0dP\0\204\0\0ZK\0e\5\0j\16\0dN\0dQ\0dR\0dS\0g\4\0\203\1\0\1n\0\0e?\0dA\0\203\1\0rp\6e?\0dT\0\203\1\0s\27\6dU\0d\1\0dV\0\204\2\0ZL\0e\5\0j.\0dT\0\203\1\0\1n\0\0e?\0dW\0\203\1\0sB\6dU\0d\1\0dX\0\204\2\0ZM\0e\5\0j.\0dW\0\203\1\0\1n\0\0e?\0dY\0\203\1\0sp\6dU\0d\1\0dZ\0\204\2\0ZN\0e\5\0j.\0dY\0\203\1\0\1qp\6n\0\0d\1\0d\2\0lO\0ZP\0d[\0\204\0\0ZQ\0d\\\0\204\0\0ZR\0y\27\0eP\0jS\0eT\0eR\0eQ\0\203\3\0\1Wn\21\0\4e0\0k\n\0r\270\6\1\1\1n\1\0Xd]\0\204\0\0ZU\0d^\0\204\0\0ZV\0y\27\0eP\0jS\0eW\0eV\0eU\0\203\3\0\1Wn\21\0\4e0\0k\n\0r\365\6\1\1\1n\1\0Xd\2\0S(a\0\0\0s}\4\0\0OS routines for NT or Posix depending on what system we're on.\n\nThis exports:\n  - all functions from posix, nt, os2, or ce, e.g. unlink, stat, etc.\n  - os.path is one of the modules posixpath, or ntpath\n  - os.name is 'posix', 'nt', 'os2', 'ce' or 'riscos'\n  - os.curdir is a string representing the current directory ('.' or ':')\n  - os.pardir is a string representing the parent directory ('..' or '::')\n  - os.sep is the (or a most common) pathname separator ('/' or ':' or '\\\\')\n  - os.extsep is the extension separator ('.' or '/')\n  - os.altsep is the alternate pathname separator (None or '/')\n  - os.pathsep is the component separator used in $PATH etc\n  - os.linesep is the line separator in text files ('\\r' or '\\n' or '\\r\\n')\n  - os.defpath is the default search path for executables\n  - os.devnull is the file path of the null device ('/dev/null', etc.)\n\nPrograms that import and use 'os' stand a better chance of being\nportable between different platforms.  Of course, they must then\nonly use functions that are defined by all platforms (e.g., unlink\nand opendir), and leave all pathname manipulation to os.path\n(e.g., split and join).\ni\377\377\377\377Nt\6\0\0\0altsept\6\0\0\0curdirt\6\0\0\0pardirt\3\0\0\0sept\6\0\0\0extsept\7\0\0\0pathsept\7\0\0\0linesept\7\0\0\0defpatht\4\0\0\0namet\4\0\0\0patht\7\0\0\0devnullt\10\0\0\0SEEK_SETt\10\0\0\0SEEK_CURt\10\0\0\0SEEK_ENDc\1\0\0\0\2\0\0\0\5\0\0\0C\0\0\0sS\0\0\0y\21\0t\0\0|\0\0j\1\0\203\1\0SWn;\0\4t\2\0k\n\0rN\0\1\1\1g\0\0t\3\0|\0\0\203\1\0D]\34\0}\1\0|\1\0d\1\0\31d\2\0k\3\0r.\0|\1\0^\2\0q.\0SXd\0\0S(\3\0\0\0Ni\0\0\0\0t\1\0\0\0_(\4\0\0\0t\4\0\0\0listt\7\0\0\0__all__t\16\0\0\0AttributeErrort\3\0\0\0dir(\2\0\0\0t\6\0\0\0modulet\1\0\0\0n(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\21\0\0\0_get_exports_list#\0\0\0s\10\0\0\0\0\1\3\1\21\1\r\1t\5\0\0\0posixs\1\0\0\0\n(\1\0\0\0t\1\0\0\0*(\1\0\0\0t\5\0\0\0_exitt\2\0\0\0nts\2\0\0\0\r\nt\3\0\0\0os2s\7\0\0\0EMX GCC(\1\0\0\0t\4\0\0\0linkt\2\0\0\0cet\6\0\0\0riscoss\33\0\0\0no os specific module founds\7\0\0\0os.path(\10\0\0\0R\1\0\0\0R\2\0\0\0R\3\0\0\0R\5\0\0\0R\7\0\0\0R\4\0\0\0R\0\0\0\0R\n\0\0\0i\0\0\0\0i\1\0\0\0i\2\0\0\0i\377\1\0\0c\2\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\262\0\0\0t\0\0j\1\0|\0\0\203\1\0\\\2\0}\2\0}\3\0|\3\0s3\0t\0\0j\1\0|\2\0\203\1\0\\\2\0}\2\0}\3\0n\0\0|\2\0r\241\0|\3\0r\241\0t\0\0j\2\0|\2\0\203\1\0\fr\241\0y\21\0t\3\0|\2\0|\1\0\203\2\0\1Wn+\0\4t\4\0k\n\0r\215\0\1}\4\0\1|\4\0j\5\0t\5\0j\6\0k\3\0r\216\0\202\0\0q\216\0n\1\0X|\3\0t\7\0k\2\0r\241\0d\1\0Sn\0\0t\10\0|\0\0|\1\0\203\2\0\1d\1\0S(\2\0\0\0s\2\1\0\0makedirs(path [, mode=0777])\n\n    Super-mkdir; create a leaf directory and all intermediate ones.\n    Works like mkdir, except that any intermediate path segment (not\n    just the rightmost) will be created if it does not exist.  This is\n    recursive.\n\n  ", 4096) = 4096
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669312, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=25597, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(5, "  N(\t\0\0\0R\t\0\0\0t\5\0\0\0splitt\6\0\0\0existst\10\0\0\0makedirst\7\0\0\0OSErrort\5\0\0\0errnot\6\0\0\0EEXISTR\1\0\0\0t\5\0\0\0mkdir(\5\0\0\0R\10\0\0\0t\4\0\0\0modet\4\0\0\0headt\4\0\0\0tailt\1\0\0\0e(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyR \0\0\0\210\0\0\0s\30\0\0\0\0\t\25\1\6\1\30\1\34\1\3\1\21\1\17\2\22\1\n\1\f\1\7\1c\1\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s\214\0\0\0t\0\0|\0\0\203\1\0\1t\1\0j\2\0|\0\0\203\1\0\\\2\0}\1\0}\2\0|\2\0s=\0t\1\0j\2\0|\1\0\203\1\0\\\2\0}\1\0}\2\0n\0\0xH\0|\1\0r\207\0|\2\0r\207\0y\16\0t\0\0|\1\0\203\1\0\1Wn\22\0\4t\3\0k\n\0rn\0\1\1\1Pn\1\0Xt\1\0j\2\0|\1\0\203\1\0\\\2\0}\1\0}\2\0q@\0Wd\1\0S(\2\0\0\0s\254\1\0\0removedirs(path)\n\n    Super-rmdir; remove a leaf directory and all empty intermediate\n    ones.  Works like rmdir except that, if the leaf directory is\n    successfully removed, directories corresponding to rightmost path\n    segments will be pruned away until either the whole path is\n    consumed or an error occurs.  Errors during this latter phase are\n    ignored -- they generally mean that a directory was not empty.\n\n    N(\4\0\0\0t\5\0\0\0rmdirR\t\0\0\0R\36\0\0\0t\5\0\0\0error(\3\0\0\0R\10\0\0\0R&\0\0\0R'\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\n\0\0\0removedirs\237\0\0\0s\24\0\0\0\0\v\n\1\25\1\6\1\30\1\17\1\3\1\16\1\r\1\5\1c\2\0\0\0\4\0\0\0\5\0\0\0C\0\0\0s\225\0\0\0t\0\0j\1\0|\1\0\203\1\0\\\2\0}\2\0}\3\0|\2\0r>\0|\3\0r>\0t\0\0j\2\0|\2\0\203\1\0\fr>\0t\3\0|\2\0\203\1\0\1n\0\0t\4\0|\0\0|\1\0\203\2\0\1t\0\0j\1\0|\0\0\203\1\0\\\2\0}\2\0}\3\0|\2\0r\221\0|\3\0r\221\0y\16\0t\5\0|\2\0\203\1\0\1Wq\221\0\4t\6\0k\n\0r\215\0\1\1\1q\221\0Xn\0\0d\1\0S(\2\0\0\0s@\2\0\0renames(old, new)\n\n    Super-rename; create directories as necessary and delete any left\n    empty.  Works like rename, except creation of any intermediate\n    directories needed to make the new pathname good is attempted\n    first.  After the rename, directories corresponding to rightmost\n    path segments of the old name will be pruned way until either the\n    whole path is consumed or a nonempty directory is found.\n\n    Note: this function can fail with the new directory structure made\n    if you lack permissions needed to unlink the leaf directory or\n    file.\n\n    N(\7\0\0\0R\t\0\0\0R\36\0\0\0R\37\0\0\0R \0\0\0t\6\0\0\0renameR+\0\0\0R*\0\0\0(\4\0\0\0t\3\0\0\0oldt\3\0\0\0newR&\0\0\0R'\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\7\0\0\0renames\265\0\0\0s\24\0\0\0\0\17\25\1\34\1\r\1\r\1\25\1\f\1\3\1\16\1\r\1R \0\0\0R+\0\0\0R/\0\0\0c\4\0\0\0\16\0\0\0\6\0\0\0c\0\0\0s:\1\0\0t\0\0j\1\0t\0\0j\2\0t\0\0j\3\0\3\2}\4\0}\5\0}\6\0y\20\0t\4\0|\0\0\203\1\0}\7\0Wn-\0\4t\5\0k\n\0r\\\0\1}\10\0\1|\2\0d\1\0k\t\0rX\0|\2\0|\10\0\203\1\0\1n\0\0d\1\0SXg\0\0g\0\0\2}\t\0}\n\0x@\0|\7\0D]8\0}\v\0|\6\0|\5\0|\0\0|\v\0\203\2\0\203\1\0r\234\0|\t\0j\7\0|\v\0\203\1\0\1qq\0|\n\0j\7\0|\v\0\203\1\0\1qq\0W|\1\0r\304\0|\0\0|\t\0|\n\0f\3\0V\1n\0\0xX\0|\t\0D]P\0}\v\0|\5\0|\0\0|\v\0\203\2\0}\f\0|\3\0s\363\0|\4\0|\f\0\203\1\0\fr\313\0x%\0t\10\0|\f\0|\1\0|\2\0|\3\0\203\4\0D]\v\0}\r\0|\r\0V\1q\t\1Wq\313\0q\313\0W|\1\0s6\1|\0\0|\t\0|\n\0f\3\0V\1n\0\0d\1\0S(\2\0\0\0s\323\n\0\0Directory tree generator.\n\n    For each directory in the directory tree rooted at top (including top\n    itself, but excluding '.' and '..'), yields a 3-tuple\n\n        dirpath, dirnames, filenames\n\n    dirpath is a string, the path to the directory.  dirnames is a list of\n    the names of the subdirectories in dirpath (excluding '.' and '..').\n    filenames is a list of the names of the non-directory files in dirpath.\n    Note that the names in the lists are just names, with no path components.\n    To get a full path (which begins with top) to a file or directory in\n    dirpath, do os.path.join(dirpath, name).\n\n    If optional arg 'topdown' is true or not specified, the triple for a\n    directory is generated before the triples for any of its subdirectories\n    (directories are generated top down).  If topdown is false, the triple\n    for a directory is generated after the triples for all of its\n    subdirectories (directories are generated bottom up).\n\n    When topdown is true, the caller can modify the dirnames list in-place\n    (e.g., via del or slice assignment), and walk will only recurse into the\n    subdirectories whose names remain in dirnames; this can be used to prune the\n    search, or to impose a specific order of visiting.  Modifying dirnames when\n    topdown is false is ineffective, since the directories in dirnames have\n    already been generated by the time dirnames itself is generated. No matter\n    the value of topdown, the list of subdirectories is retrieved before the\n    tuples for the directory and its subdirectories are generated.\n\n    By default errors from the os.listdir() call are ignored.  If\n    optional arg 'onerror' is specified, it should be a function; it\n    will be called with one argument, an os.error instance.  It can\n    report the error to continue with the walk, or raise the exception\n    to abort the walk.  Note that the filename is available as the\n    filename attribute of the exception object.\n\n    By default, os.walk does not follow symbolic links to subdirectories on\n    systems that support them.  In order to get this functionality, set the\n    optional argument 'followlinks' to true.\n\n    Caution:  if you pass a relative pathname for top, don't change the\n    current working directory between resumptions of walk.  walk never\n    changes the current directory, and assumes that the client doesn't\n    either.\n\n    Example:\n\n    import os\n    from os.path import join, getsize\n    for root, dirs, files in os.walk('python/Lib/email'):\n        print root, \"consumes\",\n        print sum([getsize(join(root, name)) for name in files]),\n        print \"bytes in\", len(files), \"non-directory files\"\n        if 'CVS' in dirs:\n            dirs.remove('CVS')  # don't visit CVS directories\n\n    N(\t\0\0\0R\t\0\0\0t\6\0\0\0islinkt\4\0\0\0joint\5\0\0\0isdirt\7\0\0\0listdirR*\0\0\0t\4\0\0\0Nonet\6\0\0\0appendt\4\0\0\0walk(\16\0\0\0t\3\0\0\0topt\7\0\0\0topdownt\7\0\0\0onerrort\v\0\0\0followlinksR0\0\0\0R1\0\0\0R2\0\0\0t\5\0\0\0namest\3\0\0\0errt\4\0\0\0dirst\7\0\0\0nondirsR\10\0\0\0t\10\0\0\0new_patht\1\0\0\0x(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyR6\0\0\0\321\0\0\0s*\0\0\0\0;\35\7\3\3\20\1\17\1\f\1\r\1\5\2\r\1\r\1\25\1\20\2\21\2\6\1\21\1\r\1\17\1\23\1\34\1\20\1\6\1R6\0\0\0c\1\0\0\0\2\0\0\0\3\0\0\0G\0\0\0s\21\0\0\0t\0\0|\0\0|\1\0\203\2\0\1d\1\0S(\2\0\0\0sp\0\0\0execl(file, *args)\n\n    Execute the executable file with argument list args, replacing the\n    current process. N(\1\0\0\0t\5\0\0\0execv(\2\0\0\0t\4\0\0\0filet\4\0\0\0args(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\5\0\0\0execl5\1\0\0s\2\0\0\0\0\5c\1\0\0\0\3\0\0\0\4\0\0\0G\0\0\0s\"\0\0\0|\1\0d\1\0\31}\2\0t\0\0|\0\0|\1\0d\1\0 |\2\0\203\3\0\1d\2\0S(\3\0\0\0s\212\0\0\0execle(file, *args, env)\n\n    Execute the executable file with argument list args and\n    environment env, replacing the current process. i\377\377\377\377N(\1\0\0\0t\6\0\0\0execve(\3\0\0\0RB\0\0\0RC\0\0\0t\3\0\0\0env(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\6\0\0\0execle<\1\0\0s\4\0\0\0\0\5\n\1c\1\0\0\0\2\0\0\0\3\0\0\0G\0\0\0s\21\0\0\0t\0\0|\0\0|\1\0\203\2\0\1d\1\0S(\2\0\0\0s\225\0\0\0execlp(file, *args)\n\n    Execute the executable file (which is searched for along $PATH)\n    with argument list args, replacing the current process. N(\1\0\0\0t\6\0\0\0execvp(\2\0\0\0RB\0\0\0RC\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\6\0\0\0execlpD\1\0\0s\2\0\0\0\0\5c\1\0\0\0\3\0\0\0\4\0\0\0G\0\0\0s\"\0\0\0|\1\0d\1\0\31}\2\0t\0\0|\0\0|\1\0d\1\0 |\2\0\203\3\0\1d\2\0S(\3\0\0\0s\263\0\0\0execlpe(file, *args, env)\n\n    Execute the executable file (which is searched for along $PATH)\n    with argument list args and environment env, replacing the current\n    process. i\377\377\377\377N(\1\0\0\0t\7\0\0\0execvpe(\3\0\0\0RB\0\0\0RC\0\0\0RF\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\7\0\0\0execlpeK\1\0\0s\4\0\0\0\0\6\n\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\21\0\0\0t\0\0|\0\0|\1\0\203\2\0\1d\1\0S(\2\0\0\0s\300\0\0\0execvp(file, args)\n\n    Execute the executable file (which is searched for along $PATH)\n    with argument list args, replacing the current process.\n    args may be a list or tuple of strings. N(\1\0\0\0t\10\0\0\0_execvpe(\2\0\0\0RB\0\0\0RC\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRH\0\0\0T\1\0\0s\2\0\0\0\0\6c\3\0\0\0\3\0\0\0\4\0\0\0C\0\0\0s\24\0\0\0t\0\0|\0\0|\1\0|\2\0\203\3\0\1d\1\0S(\2\0\0\0s\337\0\0\0execvpe(file, args, env)\n\n    Execute the executable file (which is searched for along $PATH)\n    with argument list args and environment env , replacing the\n    current process.\n    args may be a list or tuple of strings. N(\1\0\0\0RL\0\0\0(\3\0\0\0RB\0\0\0RC\0\0\0RF\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRJ\0\0\0\\\1\0\0s\2\0\0\0\0\7RD\0\0\0RG\0\0\0RI\0\0\0RK\0\0\0RH\0\0\0RJ\0\0\0c\3\0\0\0\17\0\0\0\6\0\0\0C\0\0\0sZ\1\0\0|\2\0d\0\0k\t\0r!\0t\1\0}\3\0|\1\0|\2\0f\2\0}\4\0n\25\0t\2\0}\3\0|\1\0f\1\0}\4\0t\3\0}\2\0t\4\0j\5\0|\0\0\203\1\0\\\2\0}\5\0}\6\0|\5\0rb\0|\3\0|\0\0|\4\0\214\1\0\1d\0\0Sd\1\0|\2\0k\6\0r{\0|\2\0d\1\0\31}\7\0n\6\0t\6\0}\7\0|\7\0j\5\0t\7\0\203\1\0}\10\0d\0\0}\t\0d\0\0}\n\0x\226\0|\10\0D]\216\0}\v\0t\4\0j\10\0|\v\0|\0\0\203\2\0}\f\0y\21\0|\3\0|\f\0|\4\0\214\1\0\1Wq\243\0\4t\t\0k\n\0r0\1\1}\r\0\1t\n\0j\v\0\203\0\0d\2\0\31}\16\0|\r\0j\f\0t\f\0j\r\0k\3\0r1\1|\r\0j\f\0t\f\0j\16\0k\3\0r1\1|\t\0d\0\0k\10\0r1\1|\r\0}\t\0|\16\0}\n\0q1\1q\243\0Xq\243\0W|\t\0rJ\1t\t\0|\t\0|\n\0\202\3\0n\0\0t\t\0|\r\0|\16\0\202\3\0d\0\0S(\3\0\0\0Nt\4\0\0\0PATHi\2\0\0\0(\17\0\0\0R4\0\0\0RE\0\0\0RA\0\0\0t\7\0\0\0environR\t\0\0\0R\36\0\0\0R\7\0\0\0R\5\0\0\0R1\0\0\0R*\0\0\0t\3\0\0\0syst\10\0\0\0exc_infoR\"\0\0\0t\6\0\0\0ENOENTt\7\0\0\0ENOTDIR(\17\0\0\0RB\0\0\0RC\0\0\0RF\0\0\0t\4\0\0\0funct\7\0\0\0argrestR&\0\0\0R'\0\0\0t\7\0\0\0envpathRM\0\0\0t\t\0\0\0saved_exct\10\0\0\0saved_tbR\22\0\0\0t\10\0\0\0fullnameR(\0\0\0t\2\0\0\0tb(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRL\0\0\0g\1\0\0s:\0\0\0\0\1\f\1\6\1\17\2\6\1\t\1\6\2\25\1\6\1\r\1\4\1\f\1\r\2\6\1\17\1\6\1\6\1\r\1\22\1\3\1\21\1\17\1\20\1$\1\f\1\6\1\21\1\6\1\17\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\21\0\0\0t\0\0|\0\0d\1\0\203\2\0\1d\0\0S(\2\0\0\0Nt\0\0\0\0(\1\0\0\0t\6\0\0\0putenv(\1\0\0\0t\3\0\0\0key(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\10\0\0\0unsetenv\227\1\0\0s\2\0\0\0\0\1(\1\0\0\0t\10\0\0\0_EnvironR^\0\0\0c\0\0\0\0\0\0\0\0\5\0\0\0B\0\0\0s\226\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0y\10\0e\5\0\1Wn\32\0\4e\6\0k\n\0rE\0\1\1\1d\3\0\204\0\0Z\7\0n\34\0Xd\4\0\204\0\0Z\7\0d\5\0\204\0\0Z\10\0d\6\0\204\0\0Z\t\0d\7\0\204\0\0Z\n\0d\10\0\204\0\0Z\v\0d\f\0d\t\0\204\1\0Z\r\0d\f\0d\n\0\204\1\0Z\16\0d\v\0\204\0\0Z\17\0RS(\r\0\0\0c\2\0\0\0\5\0\0\0\4\0\0\0C\0\0\0sJ\0\0\0t\0\0j\0\0j\1\0|\0\0\203\1\0\1|\0\0j\2\0}\2\0x*\0|\1\0j\3\0\203\0\0D]\34\0\\\2\0}\3\0}\4\0|\4\0|\2\0|\3\0j\4\0\203\0\0<q&\0Wd\0\0S(\1\0\0\0N(\5\0\0\0t\10\0\0\0UserDictt\10\0\0\0__init__t\4\0\0\0datat\5\0\0\0itemst\5\0\0\0upper(\5\0\0\0t\4\0\0\0selfRN\0\0\0Ra\0\0\0t\1\0\0\0kt\1\0\0\0v(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyR`\0\0\0\240\1\0\0s\10\0\0\0\0\1\20\1\t\1\31\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s$\0\0\0t\0\0|\1\0|\2\0\203\2\0\1|\2\0|\0\0j\1\0|\1\0j\2\0\203\0\0<d\0\0S(\1\0\0\0N(\3\0\0\0R[\0\0\0Ra\0\0\0Rc\0\0\0(\3\0\0\0Rd\0\0\0R\\\0\0\0t\4\0\0\0item(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\v\0\0\0__setitem__\245\1\0\0s\4\0\0\0\0\1\r\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0|\1\0j\1\0\203\0\0\31S(\1\0\0\0N(\2\0\0\0Ra\0\0\0Rc\0\0\0(\2\0\0\0Rd\0\0\0R\\\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\v\0\0\0__getitem__\250\1\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\24\0\0\0|\0\0j\0\0|\1\0j\1\0\203\0\0=d\0\0S(\1\0\0\0N(\2\0\0\0Ra\0\0\0Rc\0\0\0(\2\0\0\0Rd\0\0\0R\\\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\v\0\0\0__delitem__\255\1\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\36\0\0\0t\0\0|\1\0\203\1\0\1|\0\0j\1\0|\1\0j\2\0\203\0\0=d\0\0S(\1\0\0\0N(\3\0\0\0R]\0\0\0Ra\0\0\0Rc\0\0\0(\2\0\0\0Rd\0\0\0R\\\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRj\0\0\0\260\1\0\0s\4\0\0\0\0\1\n\1c\1\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s2\0\0\0x+\0|\0\0j\0\0j\1\0\203\0\0D]\32\0}\1\0t\2\0|\1\0\203\1\0\1|\0\0j\0\0|\1\0=q\20\0Wd\0\0S(\1\0\0\0N(\3\0\0\0Ra\0\0\0t\4\0\0\0keysR]\0\0\0(\2\0\0\0Rd\0\0\0R\\\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\5\0\0\0clear\263\1\0\0s\6\0\0\0\0\1\26\1\n\1c\2\0\0\0\3\0\0\0\3\0\0\0G\0\0\0s#\0\0\0t\0\0|\1\0\203\1\0\1|\0\0j\1\0j\2\0|\1\0j\3\0\203\0\0|\2\0\214\1\0S(\1\0\0\0N(\4\0\0\0R]\0\0\0Ra\0\0\0t\3\0\0\0popRc\0\0\0(\3\0\0\0Rd\0\0\0R\\\0\0\0RC\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRm\0\0\0\267\1\0\0s\4\0\0\0\0\1\n\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\23\0\0\0|\1\0j\0\0\203\0\0|\0\0j\1\0k\6\0S(\1\0\0\0N(\2\0\0\0Rc\0\0\0Ra\0\0\0(\2\0\0\0Rd\0\0\0R\\\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\7\0\0\0has_key\272\1\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\23\0\0\0|\1\0j\0\0\203\0\0|\0\0j\1\0k\6\0S(\1\0\0\0N(\2\0\0\0Rc\0\0\0Ra\0\0\0(\2\0\0\0Rd\0\0\0R\\\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\f\0\0\0__contains__\274\1\0\0s\2\0\0\0\0\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\31\0\0\0|\0\0j\0\0j\1\0|\1\0j\2\0\203\0\0|\2\0\203\2\0S(\1\0\0\0N(\3\0\0\0Ra\0\0\0t\3\0\0\0getRc\0\0\0(\3\0\0\0Rd\0\0\0R\\\0\0\0t\7\0\0\0failobj(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRp\0\0\0\276\1\0\0s\2\0\0\0\0\1c\2\0\0\0\6\0\0\0\5\0\0\0K\0\0\0s\207\0\0\0|\1\0rm\0y\20\0|\1\0j\0\0\203\0\0}\3\0Wn2\0\4t\1\0k\n\0rJ\0\1\1\1xA\0|\1\0D]\26\0\\\2\0}\4\0}\5\0|\5\0|\0\0|\4\0<q-\0Wqm\0Xx\37\0|\3\0D]\24\0}\4\0|\1\0|\4\0\31|\0\0|\4\0<qR\0Wn\0\0|\2\0r\203\0|\0\0j\2\0|\2\0\203\1\0\1n\0\0d\0\0S(\1\0\0\0N(\3\0\0\0Rk\0\0\0R\21\0\0\0t\6\0\0\0update(\6\0\0\0Rd\0\0\0t\4\0\0\0dictt\6\0\0\0kwargsRk\0\0\0Re\0\0\0Rf\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRr\0\0\0\300\1\0\0s\24\0\0\0\0\1\6\1\3\1\20\1\r\2\23\1\22\5\r\1\25\1\6\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0N(\1\0\0\0Rs\0\0\0(\1\0\0\0Rd\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\4\0\0\0copy\320\1\0\0s\2\0\0\0\0\1N(\20\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__R`\0\0\0Rh\0\0\0Ri\0\0\0R]\0\0\0t\t\0\0\0NameErrorRj\0\0\0Rl\0\0\0Rm\0\0\0Rn\0\0\0Ro\0\0\0R4\0\0\0Rp\0\0\0Rr\0\0\0Ru\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyR^\0\0\0\237\1\0\0s\36\0\0\0\6\1\t\5\t\3\t\2\3\1\10\1\r\1\r\3\t\3\t\4\t\3\t\2\t\2\f\2\f\20c\0\0\0\0\0\0\0\0\5\0\0\0B\0\0\0sf\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0d\1\0\204\0\0Z\3\0d\7\0d\2\0\204\1\0Z\5\0y\10\0e\6\0\1Wn\21\0\4e\7\0k\n\0r?\0\1\1\1n\34\0Xd\3\0\204\0\0Z\10\0d\4\0\204\0\0Z\t\0d\5\0\204\0\0Z\n\0d\6\0\204\0\0Z\v\0RS(\10\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\35\0\0\0t\0\0j\0\0j\1\0|\0\0\203\1\0\1|\1\0|\0\0_\2\0d\0\0S(\1\0\0\0N(\3\0\0\0R_\0\0\0R`\0\0\0Ra\0\0\0(\2\0\0\0Rd\0\0\0RN\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyR`\0\0\0\325\1\0\0s\4\0\0\0\0\1\20\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\36\0\0\0t\0\0|\1\0|\2\0\203\2\0\1|\2\0|\0\0j\1\0|\1\0<d\0\0S(\1\0\0\0N(\2\0\0\0R[\0\0\0Ra\0\0\0(\3\0\0\0Rd\0\0\0R\\\0\0\0Rg\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRh\0\0\0\330\1\0\0s\4\0\0\0\0\1\r\1c\2\0\0\0\6\0\0\0\5\0\0\0K\0\0\0s\207\0\0\0|\1\0rm\0y\20\0|\1\0j\0\0\203\0\0}\3\0Wn2\0\4t\1\0k\n\0rJ\0\1\1\1xA\0|\1\0D]\26\0\\\2\0}\4\0}\5\0|\5\0|\0\0|\4\0<q-\0Wqm\0Xx\37\0|\3\0D]\24\0}\4\0|\1\0|\4\0\31|\0\0|\4\0<qR\0Wn\0\0|\2\0r\203\0|\0\0j\2\0|\2\0\203\1\0\1n\0\0d\0\0S(\1\0\0\0N(\3\0\0\0Rk\0\0\0R\21\0\0\0Rr\0\0\0(\6\0\0\0Rd\0\0\0Rs\0\0\0Rt\0\0\0Rk\0\0\0Re\0\0\0Rf\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRr\0\0\0\333\1\0\0s\24\0\0\0\0\1\6\1\3\1\20\1\r\2\23\1\22\5\r\1\25\1\6\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\30\0\0\0t\0\0|\1\0\203\1\0\1|\0\0j\1\0|\1\0=d\0\0S(\1\0\0\0N(\2\0\0\0R]\0\0\0Ra\0\0\0(\2\0\0\0Rd\0\0\0R\\\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRj\0\0\0\360\1\0\0s\4\0\0\0\0\1\n\1c\1\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s2\0\0\0x+\0|\0\0j\0\0j\1\0\203\0\0D]\32\0}\1\0t\2\0|\1\0\203\1\0\1|\0\0j\0\0|\1\0=q\20\0Wd\0\0S(\1\0\0\0N(\3\0\0\0Ra\0\0\0Rk\0\0\0R]\0\0\0(\2\0\0\0Rd\0\0\0R\\\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRl\0\0\0\363\1\0\0s\6\0\0\0\0\1\26\1\n\1c\2\0\0\0\3\0\0\0\3\0\0\0G\0\0\0s\35\0\0\0t\0\0|\1\0\203\1\0\1|\0\0j\1\0j\2\0|\1\0|\2\0\214\1\0S(\1\0\0\0N(\3\0\0\0R]\0\0\0Ra\0\0\0Rm\0\0\0(\3\0\0\0Rd\0\0\0R\\\0\0\0RC\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRm\0\0\0\367\1\0\0s\4\0\0\0\0\1\n\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0N(\1\0\0\0Rs\0\0\0(\1\0\0\0Rd\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyRu\0\0\0\372\1\0\0s\2\0\0\0\0\1N(\f\0\0\0Rv\0\0\0Rw\0\0\0R`\0\0\0Rh\0\0\0R4\0\0\0Rr\0\0\0R]\0\0\0Rx\0\0\0Rj\0\0\0Rl\0\0\0Rm\0\0\0Ru\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyR^\0\0\0\324\1\0\0s\26\0\0\0\6\1\t\3\t\3\f\20\3\1\10\1\r\1\4\2\t\3\t\4\t\3c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\20\0\0\0t\0\0j\1\0|\0\0|\1\0\203\2\0S(\1\0\0\0s\200\0\0\0Get an environment variable, return None if it doesn't exist.\n    The optional second argument can specify an alternate default.(\2\0\0\0RN\0\0\0Rp\0\0\0(\2\0\0\0R\\\0\0\0t\7\0\0\0default(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\6\0\0\0getenv\0\2\0\0s\2\0\0\0\0\3Rz\0\0\0c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0t\0\0\203\0\0k\6\0S(\1\0\0\0N(\1\0\0\0t\7\0\0\0globals(\1\0\0\0R\10\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\7\0\0\0_exists\6\2\0\0s\2\0\0\0\0\1t\4\0\0\0forkt\6\0\0\0spawnvRA\0\0\0c\5\0\0\0\10\0\0\0\4\0\0\0C\0\0\0s\316\0\0\0t\0\0\203\0\0}\5\0|\5\0sV\0y0\0|\3\0d\0\0k\10\0r.\0|\4\0|\1\0|\2\0\203\2\0\1n\20\0|\4\0|\1\0|\2\0|\3\0\203\3\0\1Wq\312\0\1\1\1t\2\0d\1\0\203\1\0\1q\312\0Xnt\0|\0\0t\3\0k\2\0rf\0|\5\0Sxa\0t\4\0|\5\0d\2\0\203\2\0\\\2\0}\6\0}\7\0t\5\0|\7\0\203\1\0r\220\0qi\0qi\0t\6\0|\7\0\203\1\0r\247\0t\7\0|\7\0\203\1\0\vSt\10\0|\7\0\203\1\0r\275\0t\t\0|\7\0\203\1\0St\n\0d\3\0\202\2\0qi\0Wd\0\0S(\4\0\0\0Ni\177\0\0\0i\0\0\0\0s\"\0\0\0Not stopped, signaled or exited???(\v\0\0\0R}\0\0\0R4\0\0\0R\30\0\0\0t\10\0\0\0P_NOWAITt\7\0\0\0waitpidt\n\0\0\0WIFSTOPPEDt\v\0\0\0WIFSIGNALEDt\10\0\0\0WTERMSIGt\t\0\0\0WIFEXITEDt\v\0\0\0WEXITSTATUSR*\0\0\0(\10\0\0\0R%\0\0\0RB\0\0\0RC\0\0\0RF\0\0\0RS\0\0\0t\3\0\0\0pidt\4\0\0\0wpidt\3\0\0\0sts(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\t\0\0\0_spawnvef\23\2\0\0s&\0\0\0\0\2\t\1\6\2\3\1\f\1\20\2\24\1\3\1\21\3\f\1\4\1\3\1\25\1\f\1\6\1\f\1\v\1\f\1\n\2c\3\0\0\0\3\0\0\0\6\0\0\0C\0\0\0s\26\0\0\0t\0\0|\0\0|\1\0|\2\0d\1\0t\2\0\203\5\0S(\2\0\0\0s\25\1\0\0spawnv(mode, file, args) -> integer\n\nExecute file with arguments from args in a subprocess.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. N(\3\0\0\0R\211\0\0\0R4\0\0\0RA\0\0\0(\3\0\0\0R%\0\0\0RB\0\0\0RC\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyR~\0\0\0.\2\0\0s\2\0\0\0\0\7c\4\0\0\0\4\0\0\0\6\0\0\0C\0\0\0s\26\0\0\0t\0\0|\0\0|\1\0|\2\0|\3\0t\1\0\203\5\0S(\1\0\0\0s:\1\0\0spawnve(mode, file, args, env) -> integer\n\nExecute file with arguments from args in a subprocess with the\nspecified environment.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. (\2\0\0\0R\211\0\0\0RE\0\0\0(\4\0\0\0R%\0\0\0RB\0\0\0RC\0\0\0RF\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\7\0\0\0spawnve7\2\0\0s\2\0\0\0\0\10c\3\0\0\0\3\0\0\0\6\0\0\0C\0\0\0s\26\0\0\0t\0\0|\0\0|\1\0|\2\0d\1\0t\2\0\203\5\0S(\2\0\0\0s8\1\0\0spawnvp(mode, file, args) -> integer\n\nExecute file (which is looked for along $PATH) with arguments from\nargs in a subprocess.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. N(\3\0\0\0R\211\0\0\0R4\0\0\0RH\0\0\0(\3\0\0\0R%\0\0\0RB\0\0\0RC\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\7\0\0\0spawnvpC\2\0\0s\2\0\0\0\0\10c\4\0\0\0\4\0\0\0\6\0\0\0C\0\0\0s\26\0\0\0t\0\0|\0\0|\1\0|\2\0|\3\0t\1\0\203\5\0S(\1\0\0\0s\\\1\0\0spawnvpe(mode, file, args, env) -> integer\n\nExecute file (which is looked for along $PATH) with arguments from\nargs in a subprocess with the supplied environment.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. (\2\0\0\0R\211\0\0\0RJ\0\0\0(\4\0\0\0R%\0\0\0RB\0\0\0RC\0\0\0RF\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\10\0\0\0spawnvpeM\2\0\0s\2\0\0\0\0\10c\2\0\0\0\3\0\0\0\4\0\0\0G\0\0\0s\20\0\0\0t\0\0|\0\0|\1\0|\2\0\203\3\0S(\1\0\0\0s\26\1\0\0spawnl(mode, file, *args) -> integer\n\nExecute file with arguments from args in a subprocess.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. (\1\0\0\0R~\0\0\0(\3\0\0\0R%\0\0\0RB\0\0\0RC\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\6\0\0\0spawnl[\2\0\0s\2\0\0\0\0\7c\2\0\0\0\4\0\0\0\5\0\0\0G\0\0\0s!\0\0\0|\2\0d\1\0\31}\3\0t\0\0|\0\0|\1\0|\2\0d\1\0 |\3\0\203\4\0S(\2\0\0\0s:\1\0\0spawnle(mode, file, *args, env) -> integer\n\nExecute file with arguments from args in a subprocess with the\nsupplied environment.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. i\377\377\377\377(\1\0\0\0R\212\0\0\0(\4\0\0\0R%\0\0\0RB\0\0\0RC\0\0\0RF\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\7\0\0\0spawnled\2\0\0s\4\0\0\0\0\10\n\1R\212\0\0\0R\215\0\0\0R\216\0\0\0R\213\0\0\0c\2\0\0\0\3\0\0\0\4\0\0\0G\0\0\0s\20\0\0\0t\0\0|\0\0|\1\0|\2\0\203\3\0S(\1\0\0\0sW\1\0\0spawnlp(mode, file, *args) -> integer\n\nExecute file (which is looked for along $PATH) with arguments from\nargs in a subprocess with the supplied environment.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. (\1\0\0\0R\213\0\0\0(\3\0\0\0R%\0\0\0RB\0\0\0RC\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\7\0\0\0spawnlpv\2\0\0s\2\0\0\0\0\10c\2\0\0\0\4\0\0\0\5\0\0\0G\0\0\0s!\0\0\0|\2\0d\1\0\31}\3\0t\0\0|\0\0|\1\0|\2\0d\1\0 |\3\0\203\4\0S(\2\0\0\0s]\1\0\0spawnlpe(mode, file, *args, env) -> integer\n\nExecute file (which is looked for along $PATH) with arguments from\nargs in a subprocess with the supplied environment.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. i\377\377\377\377(\1\0\0\0R\214\0\0\0(\4\0\0\0R%\0\0\0RB\0\0\0RC\0\0\0RF\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\10\0\0\0spawnlpe\200\2\0\0s\4\0\0\0\0\10\n\1R\214\0\0\0R\217\0\0\0R\220\0\0\0t\6\0\0\0popen2t\1\0\0\0tc\3\0\0\0\10\0\0\0\f\0\0\0C\0\0\0s\203\0\0\0d\1\0d\2\0l\0\0}\3\0d\3\0}\4\0|\3\0j\1\0|\4\0t\2\0d\4\0d\5\0\203\2\1\1d\1\0d\2\0l\3\0}\5\0|\5\0j\4\0}\6\0|\5\0j\5\0|\0\0d\6\0t\6\0|\0\0t\7\0\203\2\0d\7\0|\2\0d\10\0|\6\0d\t\0|\6\0d\n\0t\10\0\203\1\5}\7\0|\7\0j\t\0|\7\0j\n\0f\2\0S(\v\0\0\0s\317\1\0\0Execute the shell command 'cmd' in a sub-process.  On UNIX, 'cmd'\n            may be a sequence, in which case arguments will be passed directly to\n            the program without shell intervention (as with os.spawnv()).  If 'cmd'\n            is a string it will be passed to the shell (as with os.system()). If\n            'bufsize' is specified, it sets the buffer size for the I/O pipes.  The\n            file objects (child_stdin, child_stdout) are returned.i\377\377\377\377Ns4\0\0\0os.popen2 is deprecated.  Use the subprocess module.t\n\0\0\0stackleveli\2\0\0\0t\5\0\0\0shellt\7\0\0\0bufsizet\5\0\0\0stdint\6\0\0\0stdoutt\t\0\0\0close_fds(\v\0\0\0t\10\0\0\0warningst\4\0\0\0warnt\22\0\0\0DeprecationWarningt\n\0\0\0subprocesst\4\0\0\0PIPEt\5\0\0\0Popent\n\0\0\0isinstancet\n\0\0\0basestringt\4\0\0\0TrueR\226\0\0\0R\227\0\0\0(\10\0\0\0t\3\0\0\0cmdR%\0\0\0R\225\0\0\0R\231\0\0\0t\3\0\0\0msgR\234\0\0\0R\235\0\0\0t\1\0\0\0p(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyR\221\0\0\0\222\2\0\0s\22\0\0\0\0\7\f\1\6\1\26\2\f\1\t\1\33\1\22\1\t\1t\6\0\0\0popen3c\3\0\0\0\10\0\0\0\16\0\0\0C\0\0\0s\217\0\0\0d\1\0d\2\0l\0\0}\3\0d\3\0}\4\0|\3\0j\1\0|\4\0t\2\0d\4\0d\5\0\203\2\1\1d\1\0d\2\0l\3\0}\5\0|\5\0j\4\0}\6\0|\5\0j\5\0|\0\0d\6\0t\6\0|\0\0t\7\0\203\2\0d\7\0|\2\0d\10\0|\6\0d\t\0|\6\0d\n\0|\6\0d\v\0t\10\0\203\1\6}\7\0|\7\0j\t\0|\7\0j\n\0|\7\0j\v\0f\3\0S(\f\0\0\0s\335\1\0\0Execute the shell command 'cmd' in a sub-process.  On UNIX, 'cmd'\n            may be a sequence, in which case arguments will be passed directly to\n            the program without shell intervention (as with os.spawnv()).  If 'cmd'\n            is a string it will be passed to the shell (as with os.system()). If\n            'bufsize' is specified, it sets the buffer size for the I/O pipes.  The\n            file objects (child_stdin, child_stdout, child_stderr) are returned.i\377\377\377\377Ns4\0\0\0os.popen3 is deprecated.  Use the subprocess module.R\223\0\0\0i\2\0\0\0R\224\0\0\0R\225\0\0\0R\226\0\0\0R\227\0\0\0t\6\0\0\0stderrR\230\0\0\0(\f\0\0\0R\231\0\0\0R\232\0\0\0R\233\0\0\0R\234\0\0\0R\235\0\0\0R\236\0\0\0R\237\0\0\0R\240\0\0\0R\241\0\0\0R\226\0\0\0R\227\0\0\0R\246\0\0\0(\10\0\0\0R\242\0\0\0R%\0\0\0R\225\0\0\0R\231\0\0\0R\243\0\0\0R\234\0\0\0R\235\0\0\0R\244\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyR\245\0\0\0\246\2\0\0s\22\0\0\0\0\7\f\1\6\1\26\2\f\1\t\1\33\1\22\1\17\1t\6\0\0\0popen4c\3\0\0\0\10\0\0\0\16\0\0\0C\0\0\0s\214\0\0\0d\1\0d\2\0l\0\0}\3\0d\3\0}\4\0|\3\0j\1\0|\4\0t\2\0d\4\0d\5\0\203\2\1\1d\1\0d\2\0l\3\0}\5\0|\5\0j\4\0}\6\0|\5\0j\5\0|\0\0d\6\0t\6\0|\0\0t\7\0\203\2\0d\7\0|\2\0d\10\0|\6\0d\t\0|\6\0d\n\0|\5\0j\10\0d\v\0t\t\0\203\1\6}\7\0|\7\0j\n\0|\7\0j\v\0f\2\0S(\f\0\0\0s\326\1\0\0Execute the shell command 'cmd' in a sub-process.  On UNIX, 'cmd'\n            may be a sequence, in which case arguments will be passed directly to\n            the program without shell intervention (as with os.spawnv()).  If 'cmd'\n            is a string it will be passed to the shell (as with os.system()). If\n            'bufsize' is specified, it sets the buffer size for the I/O pipes.  The\n            file objects (child_stdin, child_stdout_stderr) are returned.i\377\377\377\377Ns4\0\0\0os.popen4 is deprecated.  Use the subprocess module.R\223\0\0\0i\2\0\0\0R\224\0\0\0R\225\0\0\0R\226\0\0\0R\227\0\0\0R\246\0\0\0R\230\0\0\0(\f\0\0\0R\231\0\0\0R\232\0\0\0R\233\0\0\0R\234\0\0\0R\235\0\0\0R\236\0\0\0R\237\0\0\0R\240\0\0\0t\6\0\0\0STDOUTR\241\0\0\0R\226\0\0\0R\227\0\0\0(\10\0\0\0R\242\0\0\0R%\0\0\0R\225\0\0\0R\231\0\0\0R\243\0\0\0R\234\0\0\0R\235\0\0\0R\244\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyR\247\0\0\0\272\2\0\0s\22\0\0\0\0\7\f\1\6\1\26\2\f\1\t\1\33\1\22\1\22\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0|\1\0\203\2\0S(\1\0\0\0N(\1\0\0\0t\v\0\0\0stat_result(\2\0\0\0t\3\0\0\0tupRs\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\21\0\0\0_make_stat_result\317\2\0\0s\2\0\0\0\0\1c\1\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s\34\0\0\0|\0\0j\0\0\203\0\0\\\2\0}\1\0}\2\0t\1\0|\2\0f\2\0S(\1\0\0\0N(\2\0\0\0t\n\0\0\0__reduce__R\253\0\0\0(\3\0\0\0t\2\0\0\0srt\4\0\0\0typeRC\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\23\0\0\0_pickle_stat_result\322\2\0\0s\4\0\0\0\0\1\22\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0|\1\0\203\2\0S(\1\0\0\0N(\1\0\0\0t\16\0\0\0statvfs_result(\2\0\0\0R\252\0\0\0Rs\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\24\0\0\0_make_statvfs_result\333\2\0\0s\2\0\0\0\0\1c\1\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s\34\0\0\0|\0\0j\0\0\203\0\0\\\2\0}\1\0}\2\0t\1\0|\2\0f\2\0S(\1\0\0\0N(\2\0\0\0R\254\0\0\0R\261\0\0\0(\3\0\0\0R\255\0\0\0R\256\0\0\0RC\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\26\0\0\0_pickle_statvfs_result\336\2\0\0s\4\0\0\0\0\1\22\1(\2\0\0\0s\3\0\0\0os2s\2\0\0\0nt(", 20480) = 20480
27308 read(5, "\2\0\0\0s\3\0\0\0os2s\2\0\0\0nt(X\0\0\0t\7\0\0\0__doc__RO\0\0\0R\"\0\0\0t\24\0\0\0builtin_module_namest\6\0\0\0_namesR\20\0\0\0R\25\0\0\0R\10\0\0\0R\6\0\0\0R\26\0\0\0R\30\0\0\0t\v\0\0\0ImportErrort\t\0\0\0posixpathR\t\0\0\0t\6\0\0\0extendR\31\0\0\0t\6\0\0\0ntpathR\32\0\0\0t\7\0\0\0versiont\4\0\0\0findt\n\0\0\0os2emxpatht\t\0\0\0_emx_linkR\33\0\0\0R\34\0\0\0R\35\0\0\0t\n\0\0\0riscospatht\7\0\0\0modulest\7\0\0\0os.pathR\1\0\0\0R\2\0\0\0R\3\0\0\0R\5\0\0\0R\7\0\0\0R\4\0\0\0R\0\0\0\0R\n\0\0\0R\v\0\0\0R\f\0\0\0R\r\0\0\0R \0\0\0R+\0\0\0R/\0\0\0R\241\0\0\0R4\0\0\0t\5\0\0\0FalseR6\0\0\0R5\0\0\0RN\0\0\0Rx\0\0\0RD\0\0\0RG\0\0\0RI\0\0\0RK\0\0\0RH\0\0\0RJ\0\0\0RL\0\0\0R[\0\0\0R_\0\0\0R]\0\0\0t\r\0\0\0riscosenvironR^\0\0\0t\20\0\0\0IterableUserDictRz\0\0\0R|\0\0\0t\6\0\0\0P_WAITR\177\0\0\0t\t\0\0\0P_NOWAITOR\211\0\0\0R~\0\0\0R\212\0\0\0R\213\0\0\0R\214\0\0\0R\215\0\0\0R\216\0\0\0R\217\0\0\0R\220\0\0\0R\221\0\0\0R\245\0\0\0R\247\0\0\0t\10\0\0\0copy_regt\t\0\0\0_copy_regR\253\0\0\0R\257\0\0\0t\6\0\0\0pickleR\251\0\0\0R\261\0\0\0R\262\0\0\0R\260\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/os.pyt\10\0\0\0<module>\26\0\0\0s,\1\0\0\6\4\30\2\t\3\25\1\f\1\17\2\t\6\f\1\6\1\6\1\n\1\3\1\24\1\r\1\4\1\f\2\f\1\23\1\6\2\f\1\6\1\6\1\n\1\3\1\24\1\r\1\4\1\f\2\f\1\23\1\6\2\f\1\6\1\6\1\n\1\3\1\24\1\r\1\4\1\30\1\17\2\f\1\20\2\f\1\23\1\6\2\f\1\6\1\6\1\n\1\3\1\24\1\r\1\4\2\f\2\f\1\23\1\6\2\f\1\6\1\6\1\n\1\3\1\24\1\r\1\4\1\f\2\f\1\23\1\6\3\t\2\r\1:\3\3\4\6\1\6\1\6\7\f\27\t\26\t\32\26\2\22\\\r\3\3\1\10\1\r\1\n\2\t\7\t\10\t\7\t\t\t\10\t\t\37\2\f#\3\2\10\1\r\1\4\2\f\6\f\1\f\3\f\2\23\1\f\2\0345\31*\f\2\f\4\r\2\t\4%\2\6\1\n\6\t\33\t\t\t\f\t\n\f\n\f\4\t\t\t\f\34\3\f\3\t\n\t\f\34\4\f\1\f\1\17\21\20\2\f\1\17\21\20\2\f\1\17\21\23\2\f\2\t\3\t\4\3\1\27\1\r\1\4\2\t\3\t\4\3\1\f\1\v\1\r\1", 4096) = 1021
27308 read(5, "", 4096)                 = 0
27308 close(5)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 open("/proc/meminfo", O_RDONLY|O_CLOEXEC) = 5
27308 fstat64(5, {st_dev=makedev(0, 4), st_ino=4026531989, st_mode=S_IFREG|0444, st_nlink=1, st_uid=0, st_gid=0, st_blksize=1024, st_blocks=0, st_size=0, st_atime=2017/04/05-20:18:55, st_mtime=2017/04/05-20:18:55, st_ctime=2017/04/05-20:18:55}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(5, "MemTotal:        1024468 kB\nMemFree:           75148 kB\nMemAvailable:     623496 kB\nBuffers:           59528 kB\nCached:           606660 kB\nSwapCached:         2620 kB\nActive:           484364 kB\nInactive:         351812 kB\nActive(anon):      92152 kB\nInactive(anon):   101988 kB\nActive(file):     392212 kB\nInactive(file):   249824 kB\nUnevictable:          32 kB\nMlocked:              32 kB\nHighTotal:        135048 kB\nHighFree:           1804 kB\nLowTotal:         889420 kB\nLowFree:           73344 kB\nSwapTotal:       1046524 kB\nSwapFree:        1020408 kB\nDirty:               144 kB\nWriteback:             0 kB\nAnonPages:        168236 kB\nMapped:           109076 kB\nShmem:             24136 kB\nSlab:              68404 kB\nSReclaimable:      41084 kB\nSUnreclaim:        27320 kB\nKernelStack:        2928 kB\nPageTables:         4424 kB\nNFS_Unstable:          0 kB\nBounce:                0 kB\nWritebackTmp:          0 kB\nCommitLimit:     1558756 kB\nCommitted_AS:    1316176 kB\nVmallocTotal:     122880 kB\nVmallocUsed:    ", 1024) = 1024
27308 close(5)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/posixpath", 0xbfffda3c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/posixpath.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/posixpath.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/posixpathmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/posixpath.py", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=661553, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=13925, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/posixpath.pyc", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669313, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=11374, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(6, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0&\0\0\0@\0\0\0s\373\1\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0d\1\0d\2\0l\3\0Z\3\0d\1\0d\2\0l\4\0Z\4\0d\1\0d\2\0l\5\0Z\5\0d\1\0d\3\0l\4\0Td\1\0d\4\0l\4\0m\6\0Z\6\0\1d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0d\v\0d\f\0d\r\0d\16\0d\17\0d\20\0d\21\0d\22\0d\23\0d\24\0d\25\0d\26\0d\27\0d\30\0d\31\0d\32\0d\33\0d\34\0d\35\0d\36\0d\37\0d \0d!\0d\"\0d#\0d$\0d%\0d&\0d'\0d(\0d)\0d*\0g&\0Z\7\0d+\0Z\10\0d,\0Z\t\0d+\0Z\n\0d-\0Z\v\0d.\0Z\f\0d/\0Z\r\0d\2\0Z\17\0d0\0Z\20\0d1\0\204\0\0Z\21\0d2\0\204\0\0Z\22\0d3\0\204\0\0Z\23\0d4\0\204\0\0Z\24\0d5\0\204\0\0Z\25\0e\4\0j\26\0j\0\0e\25\0_\0\0d6\0\204\0\0Z\27\0d7\0\204\0\0Z\30\0d8\0\204\0\0Z\31\0d9\0\204\0\0Z\32\0d:\0\204\0\0Z\33\0d;\0\204\0\0Z\34\0d<\0\204\0\0Z\35\0d=\0\204\0\0Z\36\0d>\0\204\0\0Z\37\0d?\0\204\0\0Z \0d@\0\204\0\0Z!\0d\2\0a\"\0d\2\0a#\0dA\0\204\0\0Z$\0dB\0\204\0\0Z%\0dC\0\204\0\0Z&\0dD\0\204\0\0Z'\0dE\0\204\0\0Z(\0e\2\0j)\0dF\0k\2\0Z*\0e\10\0dG\0\204\1\0Z+\0d\2\0S(H\0\0\0s\347\1\0\0Common operations on Posix pathnames.\n\nInstead of importing this module directly, import os and refer to\nthis module as os.path.  The \"os.path\" name is an alias for this\nmodule on Posix systems; on other systems (e.g. Mac, Windows),\nos.path provides the same operations in a manner specific to that\nplatform, and is an alias to another module (e.g. macpath, ntpath).\n\nSome of this can actually be useful on non-Posix systems too, e.g.\nfor manipulation of the pathname component of URLs.\ni\377\377\377\377N(\1\0\0\0t\1\0\0\0*(\1\0\0\0t\10\0\0\0_unicodet\10\0\0\0normcaset\5\0\0\0isabst\4\0\0\0joint\n\0\0\0splitdrivet\5\0\0\0splitt\10\0\0\0splitextt\10\0\0\0basenamet\7\0\0\0dirnamet\f\0\0\0commonprefixt\7\0\0\0getsizet\10\0\0\0getmtimet\10\0\0\0getatimet\10\0\0\0getctimet\6\0\0\0islinkt\6\0\0\0existst\7\0\0\0lexistst\5\0\0\0isdirt\6\0\0\0isfilet\7\0\0\0ismountt\4\0\0\0walkt\n\0\0\0expandusert\n\0\0\0expandvarst\10\0\0\0normpatht\7\0\0\0abspatht\10\0\0\0samefilet\f\0\0\0sameopenfilet\10\0\0\0samestatt\6\0\0\0curdirt\6\0\0\0pardirt\3\0\0\0sept\7\0\0\0pathsept\7\0\0\0defpatht\6\0\0\0altsept\6\0\0\0extsept\7\0\0\0devnullt\10\0\0\0realpatht\32\0\0\0supports_unicode_filenamest\7\0\0\0relpatht\1\0\0\0.s\2\0\0\0..t\1\0\0\0/t\1\0\0\0:s\16\0\0\0:/bin:/usr/bins\t\0\0\0/dev/nullc\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0|\0\0S(\1\0\0\0s6\0\0\0Normalize case of pathname.  Has no effect under Posix(\0\0\0\0(\1\0\0\0t\1\0\0\0s(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\2\0\0\0,\0\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0d\1\0\203\1\0S(\2\0\0\0s\37\0\0\0Test whether a path is absoluteR)\0\0\0(\1\0\0\0t\n\0\0\0startswith(\1\0\0\0R+\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\3\0\0\0004\0\0\0s\2\0\0\0\0\2c\1\0\0\0\4\0\0\0\4\0\0\0G\0\0\0si\0\0\0|\0\0}\2\0x\\\0|\1\0D]T\0}\3\0|\3\0j\0\0d\1\0\203\1\0r+\0|\3\0}\2\0q\r\0|\2\0d\2\0k\2\0sF\0|\2\0j\1\0d\1\0\203\1\0rS\0|\2\0|\3\0007}\2\0q\r\0|\2\0d\1\0|\3\0\0277}\2\0q\r\0W|\2\0S(\3\0\0\0s\346\0\0\0Join two or more pathname components, inserting '/' as needed.\n    If any component is an absolute path, all previous path components\n    will be discarded.  An empty last part will result in a path that\n    ends with a separator.R)\0\0\0t\0\0\0\0(\2\0\0\0R,\0\0\0t\10\0\0\0endswith(\4\0\0\0t\1\0\0\0at\1\0\0\0pt\4\0\0\0patht\1\0\0\0b(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\4\0\0\0=\0\0\0s\20\0\0\0\0\5\6\1\r\1\17\1\t\1\33\1\r\2\22\1c\1\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s`\0\0\0|\0\0j\0\0d\1\0\203\1\0d\2\0\27}\1\0|\0\0|\1\0 |\0\0|\1\0\37\2}\2\0}\3\0|\2\0rV\0|\2\0d\1\0t\1\0|\2\0\203\1\0\24k\3\0rV\0|\2\0j\2\0d\1\0\203\1\0}\2\0n\0\0|\2\0|\3\0f\2\0S(\3\0\0\0s\200\0\0\0Split a pathname.  Returns tuple \"(head, tail)\" where \"tail\" is\n    everything after the final slash.  Either part may be empty.R)\0\0\0i\1\0\0\0(\3\0\0\0t\5\0\0\0rfindt\3\0\0\0lent\6\0\0\0rstrip(\4\0\0\0R0\0\0\0t\1\0\0\0it\4\0\0\0headt\4\0\0\0tail(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\6\0\0\0R\0\0\0s\n\0\0\0\0\3\23\1\25\1\34\1\22\1c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0s\26\0\0\0t\0\0j\1\0|\0\0t\2\0t\3\0t\4\0\203\4\0S(\1\0\0\0N(\5\0\0\0t\v\0\0\0genericpatht\t\0\0\0_splitextR\37\0\0\0R\"\0\0\0R#\0\0\0(\1\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\7\0\0\0a\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0d\1\0|\0\0f\2\0S(\2\0\0\0sJ\0\0\0Split a pathname into drive and path. On Posix, drive is always\n    empty.R-\0\0\0(\0\0\0\0(\1\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\5\0\0\0h\0\0\0s\2\0\0\0\0\3c\1\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\33\0\0\0|\0\0j\0\0d\1\0\203\1\0d\2\0\27}\1\0|\0\0|\1\0\37S(\3\0\0\0s)\0\0\0Returns the final component of a pathnameR)\0\0\0i\1\0\0\0(\1\0\0\0R3\0\0\0(\2\0\0\0R0\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\10\0\0\0p\0\0\0s\4\0\0\0\0\2\23\1c\1\0\0\0\3\0\0\0\4\0\0\0C\0\0\0sO\0\0\0|\0\0j\0\0d\1\0\203\1\0d\2\0\27}\1\0|\0\0|\1\0 }\2\0|\2\0rK\0|\2\0d\1\0t\1\0|\2\0\203\1\0\24k\3\0rK\0|\2\0j\2\0d\1\0\203\1\0}\2\0n\0\0|\2\0S(\3\0\0\0s-\0\0\0Returns the directory component of a pathnameR)\0\0\0i\1\0\0\0(\3\0\0\0R3\0\0\0R4\0\0\0R5\0\0\0(\3\0\0\0R0\0\0\0R6\0\0\0R7\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\t\0\0\0x\0\0\0s\n\0\0\0\0\2\23\1\n\1\34\1\22\1c\1\0\0\0\2\0\0\0\6\0\0\0C\0\0\0sA\0\0\0y\23\0t\0\0j\1\0|\0\0\203\1\0}\1\0Wn\33\0\4t\0\0j\2\0t\3\0f\2\0k\n\0r0\0\1\1\1t\4\0SXt\5\0j\6\0|\1\0j\7\0\203\1\0S(\1\0\0\0s&\0\0\0Test whether a path is a symbolic link(\10\0\0\0t\2\0\0\0ost\5\0\0\0lstatt\5\0\0\0errort\16\0\0\0AttributeErrort\5\0\0\0Falset\4\0\0\0statt\7\0\0\0S_ISLNKt\7\0\0\0st_mode(\2\0\0\0R1\0\0\0t\2\0\0\0st(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\17\0\0\0\204\0\0\0s\n\0\0\0\0\2\3\1\23\1\26\1\5\1c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0s-\0\0\0y\21\0t\0\0j\1\0|\0\0\203\1\0\1Wn\25\0\4t\0\0j\2\0k\n\0r(\0\1\1\1t\3\0SXt\4\0S(\1\0\0\0sC", 4096) = 4096
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669313, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=11374, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(6, "\0\0\0Test whether a path exists.  Returns True for broken symbolic links(\5\0\0\0R;\0\0\0R<\0\0\0R=\0\0\0R?\0\0\0t\4\0\0\0True(\1\0\0\0R1\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\21\0\0\0\216\0\0\0s\n\0\0\0\0\2\3\1\21\1\20\1\5\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0s+\0\0\0t\0\0j\1\0|\0\0\203\1\0}\2\0t\0\0j\1\0|\1\0\203\1\0}\3\0t\2\0|\2\0|\3\0\203\2\0S(\1\0\0\0s9\0\0\0Test whether two pathnames reference the same actual file(\3\0\0\0R;\0\0\0R@\0\0\0R\34\0\0\0(\4\0\0\0t\2\0\0\0f1t\2\0\0\0f2t\2\0\0\0s1t\2\0\0\0s2(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\32\0\0\0\231\0\0\0s\6\0\0\0\0\2\17\1\17\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0s+\0\0\0t\0\0j\1\0|\0\0\203\1\0}\2\0t\0\0j\1\0|\1\0\203\1\0}\3\0t\2\0|\2\0|\3\0\203\2\0S(\1\0\0\0s:\0\0\0Test whether two open file objects reference the same file(\3\0\0\0R;\0\0\0t\5\0\0\0fstatR\34\0\0\0(\4\0\0\0t\3\0\0\0fp1t\3\0\0\0fp2RG\0\0\0RH\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\33\0\0\0\243\0\0\0s\6\0\0\0\0\2\17\1\17\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\"\0\0\0|\0\0j\0\0|\1\0j\0\0k\2\0o!\0|\0\0j\1\0|\1\0j\1\0k\2\0S(\1\0\0\0s5\0\0\0Test whether two stat buffers reference the same file(\2\0\0\0t\6\0\0\0st_inot\6\0\0\0st_dev(\2\0\0\0RG\0\0\0RH\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\34\0\0\0\255\0\0\0s\4\0\0\0\0\2\22\1c\1\0\0\0\7\0\0\0\5\0\0\0C\0\0\0s\233\0\0\0t\0\0|\0\0\203\1\0r\20\0t\1\0Sy+\0t\2\0j\3\0|\0\0\203\1\0}\1\0t\2\0j\3\0t\4\0|\0\0d\1\0\203\2\0\203\1\0}\2\0Wn\25\0\4t\2\0j\5\0k\n\0rR\0\1\1\1t\1\0SX|\1\0j\6\0}\3\0|\2\0j\6\0}\4\0|\3\0|\4\0k\3\0ru\0t\7\0S|\1\0j\10\0}\5\0|\2\0j\10\0}\6\0|\5\0|\6\0k\2\0r\227\0t\7\0St\1\0S(\2\0\0\0s$\0\0\0Test whether a path is a mount points\2\0\0\0..(\t\0\0\0R\17\0\0\0R?\0\0\0R;\0\0\0R<\0\0\0R\4\0\0\0R=\0\0\0RM\0\0\0RD\0\0\0RL\0\0\0(\7\0\0\0R1\0\0\0RG\0\0\0RH\0\0\0t\4\0\0\0dev1t\4\0\0\0dev2t\4\0\0\0ino1t\4\0\0\0ino2(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\24\0\0\0\266\0\0\0s \0\0\0\0\2\f\2\4\1\3\1\17\1\34\1\20\1\5\1\t\1\t\1\f\1\4\1\t\1\t\1\f\1\4\1c\3\0\0\0\6\0\0\0\6\0\0\0C\0\0\0s\304\0\0\0t\0\0j\1\0d\1\0d\2\0d\3\0\203\1\1\1y\23\0t\2\0j\3\0|\0\0\203\1\0}\3\0Wn\25\0\4t\2\0j\4\0k\n\0r=\0\1\1\1d\4\0SX|\1\0|\2\0|\0\0|\3\0\203\3\0\1xo\0|\3\0D]g\0}\4\0t\5\0|\0\0|\4\0\203\2\0}\4\0y\23\0t\2\0j\6\0|\4\0\203\1\0}\5\0Wn\27\0\4t\2\0j\4\0k\n\0r\226\0\1\1\1qU\0n\1\0Xt\7\0j\10\0|\5\0j\t\0\203\1\0rU\0t\n\0|\4\0|\1\0|\2\0\203\3\0\1qU\0qU\0Wd\4\0S(\5\0\0\0sI\3\0\0Directory tree walk with callback function.\n\n    For each directory in the directory tree rooted at top (including top\n    itself, but excluding '.' and '..'), call func(arg, dirname, fnames).\n    dirname is the name of the directory, and fnames a list of the names of\n    the files and subdirectories in dirname (excluding '.' and '..').  func\n    may modify the fnames list in-place (e.g. via del or slice assignment),\n    and walk will only recurse into the subdirectories whose names remain in\n    fnames; this can be used to implement a filter, or to impose a specific\n    order of visiting.  No semantics are defined for, or required of, arg,\n    beyond that arg is always passed to func.  It can be used, e.g., to pass\n    a filename pattern, or a mutable object designed to accumulate\n    statistics.  Passing None for arg is common.s4\0\0\0In 3.x, os.path.walk is removed in favor of os.walk.t\n\0\0\0stackleveli\2\0\0\0N(\v\0\0\0t\10\0\0\0warningst\10\0\0\0warnpy3kR;\0\0\0t\7\0\0\0listdirR=\0\0\0R\4\0\0\0R<\0\0\0R@\0\0\0t\7\0\0\0S_ISDIRRB\0\0\0R\25\0\0\0(\6\0\0\0t\3\0\0\0topt\4\0\0\0funct\3\0\0\0argt\5\0\0\0namest\4\0\0\0nameRC\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\25\0\0\0\323\0\0\0s\36\0\0\0\0\16\f\1\7\1\3\1\23\1\20\1\5\1\20\1\r\1\17\1\3\1\23\1\20\1\7\1\22\1c\1\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\367\0\0\0|\0\0j\0\0d\1\0\203\1\0s\23\0|\0\0S|\0\0j\1\0d\2\0d\3\0\203\2\0}\1\0|\1\0d\4\0k\0\0r@\0t\2\0|\0\0\203\1\0}\1\0n\0\0|\1\0d\3\0k\2\0r\222\0d\5\0t\3\0j\4\0k\7\0r\202\0d\6\0d\7\0l\5\0}\2\0|\2\0j\6\0t\3\0j\7\0\203\0\0\203\1\0j\10\0}\3\0q\326\0t\3\0j\4\0d\5\0\31}\3\0nD\0d\6\0d\7\0l\5\0}\2\0y\32\0|\2\0j\t\0|\0\0d\3\0|\1\0!\203\1\0}\4\0Wn\22\0\4t\n\0k\n\0r\314\0\1\1\1|\0\0SX|\4\0j\10\0}\3\0|\3\0j\v\0d\2\0\203\1\0}\3\0|\3\0|\0\0|\1\0\37\27p\366\0d\2\0S(\10\0\0\0sO\0\0\0Expand ~ and ~user constructions.  If user or $HOME is unknown,\n    do nothing.t\1\0\0\0~R)\0\0\0i\1\0\0\0i\0\0\0\0t\4\0\0\0HOMEi\377\377\377\377N(\f\0\0\0R,\0\0\0t\4\0\0\0findR4\0\0\0R;\0\0\0t\7\0\0\0environt\3\0\0\0pwdt\10\0\0\0getpwuidt\6\0\0\0getuidt\6\0\0\0pw_dirt\10\0\0\0getpwnamt\10\0\0\0KeyErrorR5\0\0\0(\5\0\0\0R1\0\0\0R6\0\0\0R`\0\0\0t\10\0\0\0userhomet\5\0\0\0pwent(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\26\0\0\0\373\0\0\0s$\0\0\0\0\3\17\1\4\1\22\1\f\1\17\1\f\1\17\1\f\1\33\2\20\2\f\1\3\1\32\1\r\1\5\1\t\1\17\1c\1\0\0\0\n\0\0\0\3\0\0\0C\0\0\0s\226\1\0\0d\1\0|\0\0k\7\0r\20\0|\0\0St\0\0|\0\0t\1\0\203\2\0r^\0t\2\0sI\0d\2\0d\3\0l\3\0}\1\0|\1\0j\4\0d\4\0|\1\0j\5\0\203\2\0a\2\0n\0\0t\2\0}\2\0t\6\0j\7\0\203\0\0}\3\0n0\0t\10\0s\202\0d\2\0d\3\0l\3\0}\1\0|\1\0j\4\0d\5\0\203\1\0a\10\0n\0\0t\10\0}\2\0d\3\0}\3\0d\6\0}\4\0x\373\0t\n\0r\221\1|\2\0j\v\0|\0\0|\4\0\203\2\0}\5\0|\5\0s\271\0Pn\0\0|\5\0j\f\0d\6\0\203\1\0\\\2\0}\4\0}\6\0|\5\0j\r\0d\7\0\203\1\0}\7\0|\7\0j\16\0d\10\0\203\1\0r\v\1|\7\0j\17\0d\t\0\203\1\0r\v\1|\7\0d\7\0d\2\0!}\7\0n\0\0|\3\0r#\1|\7\0j\20\0|\3\0\203\1\0}\7\0n\0\0|\7\0t\21\0j\22\0k\6\0r\210\1|\0\0|\6\0\37}\10\0t\21\0j\22\0|\7\0\31}\t\0|\3\0ra\1|\t\0j\23\0|\3\0\203\1\0}\t\0n\0\0|\0\0|\4\0 |\t\0\27}\0\0t\24\0|\0\0\203\1\0}\4\0|\0\0|\10\0007}\0\0q\227\0|\6\0}\4\0q\227\0W|\0\0S(\n\0\0\0sZ\0\0\0Expand shell variables of form $var and ${var}.  Unknown variables\n    are left unchanged.t\1\0\0\0$i\377\377\377\377Nu\21\0\0\0\\$(\\w+|\\{[^}]*\\})s\21\0\0\0\\$(\\w+|\\{[^}]*\\})i\0\0\0\0i\1\0\0\0t\1\0\0\0{t\1\0\0\0}(\25\0\0\0t\n\0\0\0isinstanceR\1\0\0\0t\t\0\0\0_uvarprogt\2\0\0\0ret\7\0\0\0compilet\7\0\0\0UNICODEt\3\0\0\0syst\25\0\0\0getfilesystemencodingt\10\0\0\0_varprogt", 4096) = 4096
27308 read(6, "\4\0\0\0NoneRD\0\0\0t\6\0\0\0searcht\4\0\0\0spant\5\0\0\0groupR,\0\0\0R.\0\0\0t\6\0\0\0encodeR;\0\0\0R_\0\0\0t\6\0\0\0decodeR4\0\0\0(\n\0\0\0R1\0\0\0Rm\0\0\0t\7\0\0\0varprogt\10\0\0\0encodingR6\0\0\0t\1\0\0\0mt\1\0\0\0jR[\0\0\0R8\0\0\0t\5\0\0\0value(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\27\0\0\0\33\1\0\0sD\0\0\0\0\4\f\1\4\1\17\1\6\1\f\1\30\1\6\1\17\2\6\1\f\1\22\1\6\1\6\1\6\1\t\1\22\1\6\1\4\1\25\1\17\1\36\1\20\1\6\1\22\1\17\1\n\1\r\1\6\1\22\1\16\1\f\1\r\2\n\1c\1\0\0\0\7\0\0\0\4\0\0\0C\0\0\0s/\1\0\0t\0\0|\0\0t\1\0\203\2\0r\25\0d\v\0n\3\0d\f\0\\\2\0}\1\0}\2\0|\0\0d\5\0k\2\0r1\0|\2\0S|\0\0j\2\0d\3\0\203\1\0}\3\0|\3\0rn\0|\0\0j\2\0d\6\0\203\1\0rn\0|\0\0j\2\0d\7\0\203\1\0\frn\0d\10\0}\3\0n\0\0|\0\0j\3\0d\3\0\203\1\0}\4\0g\0\0}\5\0xs\0|\4\0D]k\0}\6\0|\6\0d\r\0k\6\0r\242\0q\212\0n\0\0|\6\0d\t\0k\3\0s\322\0|\3\0\fr\274\0|\5\0\fs\322\0|\5\0r\342\0|\5\0d\n\0\31d\t\0k\2\0r\342\0|\5\0j\4\0|\6\0\203\1\0\1q\212\0|\5\0r\212\0|\5\0j\5\0\203\0\0\1q\212\0q\212\0W|\5\0}\4\0|\1\0j\6\0|\4\0\203\1\0}\0\0|\3\0r%\1|\1\0|\3\0\24|\0\0\27}\0\0n\0\0|\0\0p.\1|\2\0S(\16\0\0\0s0\0\0\0Normalize path, eliminating double slashes, etc.u\1\0\0\0/u\1\0\0\0.R)\0\0\0R(\0\0\0R-\0\0\0s\2\0\0\0//s\3\0\0\0///i\2\0\0\0s\2\0\0\0..i\377\377\377\377(\2\0\0\0u\1\0\0\0/u\1\0\0\0.(\2\0\0\0R)\0\0\0R(\0\0\0(\2\0\0\0R-\0\0\0R(\0\0\0(\7\0\0\0Rk\0\0\0R\1\0\0\0R,\0\0\0R\6\0\0\0t\6\0\0\0appendt\3\0\0\0popR\4\0\0\0(\7\0\0\0R1\0\0\0t\5\0\0\0slasht\3\0\0\0dott\17\0\0\0initial_slashest\5\0\0\0compst\t\0\0\0new_compst\4\0\0\0comp(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\30\0\0\0I\1\0\0s,\0\0\0\0\3!\1\f\1\4\1\17\3\6\1\37\1\t\1\17\1\6\1\r\1\f\1\6\1\32\1\26\1\20\1\6\1\21\1\6\1\17\1\6\1\21\1c\1\0\0\0\2\0\0\0\3\0\0\0C\0\0\0sR\0\0\0t\0\0|\0\0\203\1\0sH\0t\1\0|\0\0t\2\0\203\2\0r*\0t\3\0j\4\0\203\0\0}\1\0n\f\0t\3\0j\5\0\203\0\0}\1\0t\6\0|\1\0|\0\0\203\2\0}\0\0n\0\0t\7\0|\0\0\203\1\0S(\1\0\0\0s\30\0\0\0Return an absolute path.(\10\0\0\0R\3\0\0\0Rk\0\0\0R\1\0\0\0R;\0\0\0t\7\0\0\0getcwdut\6\0\0\0getcwdR\4\0\0\0R\30\0\0\0(\2\0\0\0R1\0\0\0t\3\0\0\0cwd(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\31\0\0\0f\1\0\0s\f\0\0\0\0\2\f\1\17\1\17\2\f\1\22\1c\1\0\0\0\3\0\0\0\4\0\0\0C\0\0\0s\"\0\0\0t\0\0d\1\0|\0\0i\0\0\203\3\0\\\2\0}\1\0}\2\0t\1\0|\1\0\203\1\0S(\2\0\0\0sl\0\0\0Return the canonical path of the specified filename, eliminating any\nsymbolic links encountered in the path.R-\0\0\0(\2\0\0\0t\r\0\0\0_joinrealpathR\31\0\0\0(\3\0\0\0t\10\0\0\0filenameR1\0\0\0t\2\0\0\0ok(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR%\0\0\0t\1\0\0s\4\0\0\0\0\3\30\1c\3\0\0\0\7\0\0\0\4\0\0\0C\0\0\0sk\1\0\0t\0\0|\1\0\203\1\0r\37\0|\1\0d\1\0\37}\1\0t\1\0}\0\0n\0\0x?\1|\1\0r`\1|\1\0j\2\0t\1\0\203\1\0\\\3\0}\3\0}\4\0}\1\0|\3\0\fs\"\0|\3\0t\3\0k\2\0rY\0q\"\0n\0\0|\3\0t\4\0k\2\0r\255\0|\0\0r\241\0t\5\0|\0\0\203\1\0\\\2\0}\0\0}\3\0|\3\0t\4\0k\2\0r\247\0t\6\0|\0\0t\4\0t\4\0\203\3\0}\0\0q\247\0q\"\0t\4\0}\0\0q\"\0n\0\0t\6\0|\0\0|\3\0\203\2\0}\5\0t\7\0|\5\0\203\1\0s\324\0|\5\0}\0\0q\"\0n\0\0|\5\0|\2\0k\6\0r\17\1|\2\0|\5\0\31}\0\0|\0\0d\0\0k\t\0r\374\0q\"\0n\0\0t\6\0|\5\0|\1\0\203\2\0t\t\0f\2\0Sd\0\0|\2\0|\5\0<t\n\0|\0\0t\v\0j\f\0|\5\0\203\1\0|\2\0\203\3\0\\\2\0}\0\0}\6\0|\6\0sS\1t\6\0|\0\0|\1\0\203\2\0t\t\0f\2\0S|\0\0|\2\0|\5\0<q\"\0W|\0\0t\r\0f\2\0S(\2\0\0\0Ni\1\0\0\0(\16\0\0\0R\3\0\0\0R\37\0\0\0t\t\0\0\0partitionR\35\0\0\0R\36\0\0\0R\6\0\0\0R\4\0\0\0R\17\0\0\0Rs\0\0\0R?\0\0\0R\211\0\0\0R;\0\0\0t\10\0\0\0readlinkRD\0\0\0(\7\0\0\0R1\0\0\0t\4\0\0\0restt\4\0\0\0seenR[\0\0\0t\1\0\0\0_t\7\0\0\0newpathR\213\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR\211\0\0\0|\1\0\0s:\0\0\0\0\1\f\1\n\1\t\2\t\1\30\1\23\2\6\1\f\2\6\1\22\1\f\1\30\2\6\1\6\1\17\1\f\1\6\1\6\2\f\2\n\1\f\2\6\3\23\1\n\1!\1\6\1\23\1\16\2t\6\0\0\0darwinc\2\0\0\0\7\0\0\0\4\0\0\0C\0\0\0s\274\0\0\0|\0\0s\25\0t\0\0d\1\0\203\1\0\202\1\0n\0\0g\0\0t\1\0|\1\0\203\1\0j\2\0t\3\0\203\1\0D]\22\0}\2\0|\2\0r+\0|\2\0^\2\0q+\0}\3\0g\0\0t\1\0|\0\0\203\1\0j\2\0t\3\0\203\1\0D]\22\0}\2\0|\2\0rY\0|\2\0^\2\0qY\0}\4\0t\4\0t\5\0|\3\0|\4\0g\2\0\203\1\0\203\1\0}\5\0t\6\0g\1\0t\4\0|\3\0\203\1\0|\5\0\30\24|\4\0|\5\0\37\27}\6\0|\6\0s\262\0t\7\0St\10\0|\6\0\214\0\0S(\2\0\0\0s#\0\0\0Return a relative version of a paths\21\0\0\0no path specified(\t\0\0\0t\n\0\0\0ValueErrorR\31\0\0\0R\6\0\0\0R\37\0\0\0R4\0\0\0R\n\0\0\0R\36\0\0\0R\35\0\0\0R\4\0\0\0(\7\0\0\0R1\0\0\0t\5\0\0\0startt\1\0\0\0xt\n\0\0\0start_listt\t\0\0\0path_listR6\0\0\0t\10\0\0\0rel_list(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyR'\0\0\0\250\1\0\0s\22\0\0\0\0\3\6\1\17\2.\1.\3\30\2\37\1\6\1\4\1(,\0\0\0t\7\0\0\0__doc__R;\0\0\0Rp\0\0\0R@\0\0\0R9\0\0\0RS\0\0\0R\1\0\0\0t\7\0\0\0__all__R\35\0\0\0R\36\0\0\0R#\0\0\0R\37\0\0\0R \0\0\0R!\0\0\0Rs\0\0\0R\"\0\0\0R$\0\0\0R\2\0\0\0R\3\0\0\0R\4\0\0\0R\6\0\0\0R\7\0\0\0R:\0\0\0R\5\0\0\0R\10\0\0\0R\t\0\0\0R\17\0\0\0R\21\0\0\0R\32\0\0\0R\33\0\0\0R\34\0\0\0R\24\0\0\0R\25\0\0\0R\26\0\0\0Rr\0\0\0Rl\0\0\0R\27\0\0\0R\30\0\0\0R\31\0\0\0R%\0\0\0R\211\0\0\0t\10\0\0\0platformR&\0\0\0R'\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/posixpath.pyt\10\0\0\0<module>\v\0\0\0s`\0\0\0\6\2\f\1\f\1\f\1\f\1\f\1\n\1\20\2\22\1\17\1\25\1\22\1\t\1\25\1\22\3\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\7\t\10\t\t\t\25\t\17\t\2\17\5\t\10\t\10\t\f\t\n\t\v\t\n\t\n\t\t\t\35\t(\t\35\6\1\6\2\t.\t\35\t\16\t\10\t*\17\2", 4096) = 3182
27308 read(6, "", 4096)                 = 0
27308 close(6)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/stat", 0xbfffd68c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/stat.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/stat.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/statmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/stat.py", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=661588, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1842, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/stat.pyc", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669314, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2731, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(7, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\1\0\0\0@\0\0\0s{\1\0\0d\0\0Z\0\0d\1\0Z\1\0d\2\0Z\2\0d\3\0Z\3\0d\4\0Z\4\0d\5\0Z\5\0d\6\0Z\6\0d\7\0Z\7\0d\10\0Z\10\0d\t\0Z\t\0d\n\0Z\n\0d\v\0\204\0\0Z\v\0d\f\0\204\0\0Z\f\0d\r\0Z\r\0d\16\0Z\16\0d\17\0Z\17\0d\20\0Z\20\0d\21\0Z\21\0d\22\0Z\22\0d\23\0Z\23\0d\24\0\204\0\0Z\24\0d\25\0\204\0\0Z\25\0d\26\0\204\0\0Z\26\0d\27\0\204\0\0Z\27\0d\30\0\204\0\0Z\30\0d\31\0\204\0\0Z\31\0d\32\0\204\0\0Z\32\0d\33\0Z\33\0d\34\0Z\34\0e\34\0Z\35\0d\35\0Z\36\0d\36\0Z\37\0d\37\0Z \0d \0Z!\0d!\0Z\"\0d\36\0Z#\0d\37\0Z$\0d \0Z%\0d\"\0Z&\0d#\0Z'\0d$\0Z(\0d\t\0Z)\0d\10\0Z*\0d\5\0Z+\0d\3\0Z,\0d\2\0Z-\0d\2\0Z.\0d\3\0Z/\0d\5\0Z0\0d\t\0Z1\0d$\0Z2\0d#\0Z3\0d\20\0Z4\0d%\0Z5\0d&\0Z6\0d'\0Z7\0d(\0Z8\0d)\0Z9\0d*\0S(+\0\0\0so\0\0\0Constants/functions for interpreting results of os.stat() and os.lstat().\n\nSuggested usage: from stat import *\ni\0\0\0\0i\1\0\0\0i\2\0\0\0i\3\0\0\0i\4\0\0\0i\5\0\0\0i\6\0\0\0i\7\0\0\0i\10\0\0\0i\t\0\0\0c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\10\0\0\0|\0\0d\1\0@S(\2\0\0\0Ni\377\17\0\0(\0\0\0\0(\1\0\0\0t\4\0\0\0mode(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/stat.pyt\7\0\0\0S_IMODE\25\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\10\0\0\0|\0\0d\1\0@S(\2\0\0\0Ni\0\360\0\0(\0\0\0\0(\1\0\0\0R\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/stat.pyt\6\0\0\0S_IFMT\30\0\0\0s\2\0\0\0\0\1i\0@\0\0i\0 \0\0i\0`\0\0i\0\200\0\0i\0\20\0\0i\0\240\0\0i\0\300\0\0c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0|\0\0\203\1\0t\1\0k\2\0S(\1\0\0\0N(\2\0\0\0R\2\0\0\0t\7\0\0\0S_IFDIR(\1\0\0\0R\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/stat.pyt\7\0\0\0S_ISDIR(\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0|\0\0\203\1\0t\1\0k\2\0S(\1\0\0\0N(\2\0\0\0R\2\0\0\0t\7\0\0\0S_IFCHR(\1\0\0\0R\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/stat.pyt\7\0\0\0S_ISCHR+\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0|\0\0\203\1\0t\1\0k\2\0S(\1\0\0\0N(\2\0\0\0R\2\0\0\0t\7\0\0\0S_IFBLK(\1\0\0\0R\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/stat.pyt\7\0\0\0S_ISBLK.\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0|\0\0\203\1\0t\1\0k\2\0S(\1\0\0\0N(\2\0\0\0R\2\0\0\0t\7\0\0\0S_IFREG(\1\0\0\0R\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/stat.pyt\7\0\0\0S_ISREG1\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0|\0\0\203\1\0t\1\0k\2\0S(\1\0\0\0N(\2\0\0\0R\2\0\0\0t\7\0\0\0S_IFIFO(\1\0\0\0R\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/stat.pyt\10\0\0\0S_ISFIFO4\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0|\0\0\203\1\0t\1\0k\2\0S(\1\0\0\0N(\2\0\0\0R\2\0\0\0t\7\0\0\0S_IFLNK(\1\0\0\0R\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/stat.pyt\7\0\0\0S_ISLNK7\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0|\0\0\203\1\0t\1\0k\2\0S(\1\0\0\0N(\2\0\0\0R\2\0\0\0t\10\0\0\0S_IFSOCK(\1\0\0\0R\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/stat.pyt\10\0\0\0S_ISSOCK:\0\0\0s\2\0\0\0\0\1i\0\10\0\0i\0\4\0\0i\0\2\0\0i\0\1\0\0i\200\0\0\0i@\0\0\0i\300\1\0\0i8\0\0\0i \0\0\0i\20\0\0\0i\0\0\1\0i\0\0\2\0i\0\0\4\0i\0\0\20\0i\0\0 \0N(:\0\0\0t\7\0\0\0__doc__t\7\0\0\0ST_MODEt\6\0\0\0ST_INOt\6\0\0\0ST_DEVt\10\0\0\0ST_NLINKt\6\0\0\0ST_UIDt\6\0\0\0ST_GIDt\7\0\0\0ST_SIZEt\10\0\0\0ST_ATIMEt\10\0\0\0ST_MTIMEt\10\0\0\0ST_CTIMER\1\0\0\0R\2\0\0\0R\3\0\0\0R\5\0\0\0R\7\0\0\0R\t\0\0\0R\v\0\0\0R\r\0\0\0R\17\0\0\0R\4\0\0\0R\6\0\0\0R\10\0\0\0R\n\0\0\0R\f\0\0\0R\16\0\0\0R\20\0\0\0t\7\0\0\0S_ISUIDt\7\0\0\0S_ISGIDt\7\0\0\0S_ENFMTt\7\0\0\0S_ISVTXt\7\0\0\0S_IREADt\10\0\0\0S_IWRITEt\7\0\0\0S_IEXECt\7\0\0\0S_IRWXUt\7\0\0\0S_IRUSRt\7\0\0\0S_IWUSRt\7\0\0\0S_IXUSRt\7\0\0\0S_IRWXGt\7\0\0\0S_IRGRPt\7\0\0\0S_IWGRPt\7\0\0\0S_IXGRPt\7\0\0\0S_IRWXOt\7\0\0\0S_IROTHt\7\0\0\0S_IWOTHt\7\0\0\0S_IXOTHt\t\0\0\0UF_NODUMPt\f\0\0\0UF_IMMUTABLEt\t\0\0\0UF_APPENDt\t\0\0\0UF_OPAQUEt\v\0\0\0UF_NOUNLINKt\r\0\0\0UF_COMPRESSEDt\t\0\0\0UF_HIDDENt\v\0\0\0SF_ARCHIVEDt\f\0\0\0SF_IMMUTABLEt\t\0\0\0SF_APPENDt\v\0\0\0SF_NOUNLINKt\v\0\0\0SF_SNAPSHOT(\0\0\0\0(\0\0\0\0(\0\0\0\0s\32\0\0\0/usr/lib/python2.7/stat.pyt\10\0\0\0<module>\4\0\0\0sr\0\0\0\6\4\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\4\t\3\t\6\6\1\6\1\6\1\6\1\6\1\6\1\6\4\t\3\t\3\t\3\t\3\t\3\t\3\t\5\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\4\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1", 4096) = 2731
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669314, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2731, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(7, "", 4096)                 = 0
27308 brk(0x847b000)                    = 0x847b000
27308 close(7)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 close(6)                          = 0
27308 stat64("/usr/lib/python2.7/genericpath", 0xbfffd68c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/genericpath.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/genericpath.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/genericpathmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/genericpath.py", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=661498, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3201, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/genericpath.pyc", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669315, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3495, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(7, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\10\0\0\0@\0\0\0s\305\0\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0d\3\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0g\10\0Z\3\0y\n\0e\4\0Z\5\0Wn'\0\4e\6\0k\n\0ro\0\1\1\1d\v\0e\7\0f\1\0d\f\0\204\0\0\203\0\0YZ\5\0n\1\0Xd\r\0\204\0\0Z\10\0d\16\0\204\0\0Z\t\0d\17\0\204\0\0Z\n\0d\20\0\204\0\0Z\v\0d\21\0\204\0\0Z\f\0d\22\0\204\0\0Z\r\0d\23\0\204\0\0Z\16\0d\24\0\204\0\0Z\17\0d\25\0\204\0\0Z\20\0d\2\0S(\26\0\0\0s\230\0\0\0\nPath operations common to more than one OS\nDo not use directly.  The OS specific modules import the appropriate\nfunctions from this module themselves.\ni\377\377\377\377Nt\f\0\0\0commonprefixt\6\0\0\0existst\10\0\0\0getatimet\10\0\0\0getctimet\10\0\0\0getmtimet\7\0\0\0getsizet\5\0\0\0isdirt\6\0\0\0isfilet\10\0\0\0_unicodec\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__(\0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/genericpath.pyR\10\0\0\0\22\0\0\0s\2\0\0\0\6\1c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0s-\0\0\0y\21\0t\0\0j\1\0|\0\0\203\1\0\1Wn\25\0\4t\0\0j\2\0k\n\0r(\0\1\1\1t\3\0SXt\4\0S(\1\0\0\0sD\0\0\0Test whether a path exists.  Returns False for broken symbolic links(\5\0\0\0t\2\0\0\0ost\4\0\0\0statt\5\0\0\0errort\5\0\0\0Falset\4\0\0\0True(\1\0\0\0t\4\0\0\0path(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/genericpath.pyR\1\0\0\0\27\0\0\0s\n\0\0\0\0\2\3\1\21\1\20\1\5\1c\1\0\0\0\2\0\0\0\5\0\0\0C\0\0\0s;\0\0\0y\23\0t\0\0j\1\0|\0\0\203\1\0}\1\0Wn\25\0\4t\0\0j\2\0k\n\0r*\0\1\1\1t\3\0SXt\1\0j\4\0|\1\0j\5\0\203\1\0S(\1\0\0\0s%\0\0\0Test whether a path is a regular file(\6\0\0\0R\v\0\0\0R\f\0\0\0R\r\0\0\0R\16\0\0\0t\7\0\0\0S_ISREGt\7\0\0\0st_mode(\2\0\0\0R\20\0\0\0t\2\0\0\0st(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/genericpath.pyR\7\0\0\0\"\0\0\0s\n\0\0\0\0\2\3\1\23\1\20\1\5\1c\1\0\0\0\2\0\0\0\5\0\0\0C\0\0\0s;\0\0\0y\23\0t\0\0j\1\0|\0\0\203\1\0}\1\0Wn\25\0\4t\0\0j\2\0k\n\0r*\0\1\1\1t\3\0SXt\1\0j\4\0|\1\0j\5\0\203\1\0S(\1\0\0\0s<\0\0\0Return true if the pathname refers to an existing directory.(\6\0\0\0R\v\0\0\0R\f\0\0\0R\r\0\0\0R\16\0\0\0t\7\0\0\0S_ISDIRR\22\0\0\0(\2\0\0\0t\1\0\0\0sR\23\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/genericpath.pyR\6\0\0\0.\0\0\0s\n\0\0\0\0\2\3\1\23\1\20\1\5\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0j\1\0|\0\0\203\1\0j\2\0S(\1\0\0\0s1\0\0\0Return the size of a file, reported by os.stat().(\3\0\0\0R\v\0\0\0R\f\0\0\0t\7\0\0\0st_size(\1\0\0\0t\10\0\0\0filename(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/genericpath.pyR\5\0\0\0007\0\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0j\1\0|\0\0\203\1\0j\2\0S(\1\0\0\0sC\0\0\0Return the last modification time of a file, reported by os.stat().(\3\0\0\0R\v\0\0\0R\f\0\0\0t\10\0\0\0st_mtime(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/genericpath.pyR\4\0\0\0<\0\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0j\1\0|\0\0\203\1\0j\2\0S(\1\0\0\0s=\0\0\0Return the last access time of a file, reported by os.stat().(\3\0\0\0R\v\0\0\0R\f\0\0\0t\10\0\0\0st_atime(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/genericpath.pyR\2\0\0\0A\0\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0j\1\0|\0\0\203\1\0j\2\0S(\1\0\0\0sA\0\0\0Return the metadata change time of a file, reported by os.stat().(\3\0\0\0R\v\0\0\0R\f\0\0\0t\10\0\0\0st_ctime(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/genericpath.pyR\3\0\0\0F\0\0\0s\2\0\0\0\0\2c\1\0\0\0\5\0\0\0\4\0\0\0C\0\0\0s[\0\0\0|\0\0s\n\0d\1\0St\0\0|\0\0\203\1\0}\1\0t\1\0|\0\0\203\1\0}\2\0x2\0t\2\0|\1\0\203\1\0D]$\0\\\2\0}\3\0}\4\0|\4\0|\2\0|\3\0\31k\3\0r/\0|\1\0|\3\0 Sq/\0W|\1\0S(\2\0\0\0sG\0\0\0Given a list of pathnames, returns the longest common leading componentt\0\0\0\0(\3\0\0\0t\3\0\0\0mint\3\0\0\0maxt\t\0\0\0enumerate(\5\0\0\0t\1\0\0\0mt\2\0\0\0s1t\2\0\0\0s2t\1\0\0\0it\1\0\0\0c(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/genericpath.pyR\0\0\0\0L\0\0\0s\20\0\0\0\0\2\6\0\4\1\f\1\f\1\31\1\20\1\f\1c\4\0\0\0\10\0\0\0\3\0\0\0C\0\0\0s\247\0\0\0|\0\0j\0\0|\1\0\203\1\0}\4\0|\2\0r6\0|\0\0j\0\0|\2\0\203\1\0}\5\0t\1\0|\4\0|\5\0\203\2\0}\4\0n\0\0|\0\0j\0\0|\3\0\203\1\0}\6\0|\6\0|\4\0k\4\0r\235\0|\4\0d\1\0\27}\7\0x?\0|\7\0|\6\0k\0\0r\231\0|\0\0|\7\0\31|\3\0k\3\0r\214\0|\0\0|\6\0 |\0\0|\6\0\37f\2\0S|\7\0d\1\0007}\7\0q^\0Wn\0\0|\0\0d\2\0f\2\0S(\3\0\0\0s\244\0\0\0Split the extension from a pathname.\n\n    Extension is everything from the last dot to the end, ignoring\n    leading dots.  Returns \"(root, ext)\"; ext may be empty.i\1\0\0\0R\33\0\0\0(\2\0\0\0t\5\0\0\0rfindR\35\0\0\0(\10\0\0\0t\1\0\0\0pt\3\0\0\0sept\6\0\0\0altsept\6\0\0\0extsept\10\0\0\0sepIndext\v\0\0\0altsepIndext\10\0\0\0dotIndext\r\0\0\0filenameIndex(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/genericpath.pyt\t\0\0\0_splitext]\0\0\0s\30\0\0\0\0\6\17\1\6\1\17\1\22\2\17\1\f\2\n\1\17\1\20\1\22\1\21\2(\21\0\0\0t\7\0\0\0__doc__R\v\0\0\0R\f\0\0\0t\7\0\0\0__all__t\7\0\0\0unicodeR\10\0\0\0t\t\0\0\0NameErrort\6\0\0\0objectR\1\0\0\0R\7\0\0\0R\6\0\0\0R\5\0\0\0R\4\0\0\0R\2\0\0\0R\3\0\0\0R\0\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/genericpath.pyt\10\0\0\0<module>\5\0\0\0s\"\0\0\0\6\1\f\1\f\2\17\1\17\3\3\1\n\1\r\3\32\5\t\v\t\f\t\t\t\5\t\5\t\5\t\6\t\21", 4096) = 3495
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669315, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3495, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(7, "", 4096)                 = 0
27308 close(7)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 close(6)                          = 0
27308 stat64("/usr/lib/python2.7/warnings", 0xbfffd68c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/warnings.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/warnings.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/warningsmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/warnings.py", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=661621, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=14185, st_atime=2017/04/13-18:38:00, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/warnings.pyc", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669316, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=13132, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(7, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\10\0\0\0@\0\0\0sY\2\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0d\1\0d\2\0l\3\0Z\3\0d\3\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0g\10\0Z\4\0d\2\0d\v\0d\f\0\204\2\0Z\6\0d\2\0d\2\0d\r\0\204\2\0Z\7\0e\7\0Z\10\0d\2\0d\16\0\204\1\0Z\t\0d\17\0e\n\0d\17\0d\20\0d\20\0d\21\0\204\5\0Z\v\0e\n\0d\20\0d\20\0d\22\0\204\3\0Z\f\0d\23\0\204\0\0Z\r\0d\24\0e\16\0f\1\0d\25\0\204\0\0\203\0\0YZ\17\0d\26\0\204\0\0Z\20\0d\27\0\204\0\0Z\21\0d\30\0\204\0\0Z\22\0d\31\0\204\0\0Z\23\0d\2\0d\v\0d\32\0\204\2\0Z\24\0d\2\0d\2\0d\2\0d\33\0\204\3\0Z\25\0d\34\0e\26\0f\1\0d\35\0\204\0\0\203\0\0YZ\27\0d\n\0e\26\0f\1\0d\36\0\204\0\0\203\0\0YZ\30\0e\31\0Z\32\0y>\0d\1\0d\37\0l\33\0m\34\0Z\34\0m\35\0Z\35\0m\36\0Z\36\0m\24\0Z\24\0m\25\0Z\25\0\1e\35\0Z\37\0e\36\0Z \0e!\0Z\32\0Wn#\0\4e\"\0k\n\0r\233\1\1\1\1g\0\0Z\34\0d \0Z\37\0i\0\0Z \0n\1\0Xe\20\0e\2\0j#\0\203\1\0\1e\32\0sR\2e$\0e%\0g\2\0Z&\0e\2\0j'\0\fr\342\1e\2\0j(\0j)\0\fr\342\1e&\0j*\0e+\0\203\1\0\1n\0\0x\36\0e&\0D]\26\0Z,\0e\f\0d!\0d\"\0e,\0\203\1\1\1q\351\1We\2\0j(\0j-\0Z-\0e-\0d\v\0k\4\0r$\2d#\0Z.\0n\25\0e-\0r3\2d \0Z.\0n\6\0d!\0Z.\0e\f\0e.\0d\"\0e/\0d$\0d\v\0\203\1\2\1n\0\0[\32\0d\2\0S(%\0\0\0s&\0\0\0Python part of the warnings subsystem.i\377\377\377\377Nt\4\0\0\0warnt\r\0\0\0warn_explicitt\v\0\0\0showwarningt\r\0\0\0formatwarningt\16\0\0\0filterwarningst\f\0\0\0simplefiltert\r\0\0\0resetwarningst\16\0\0\0catch_warningsi\1\0\0\0c\3\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s9\0\0\0t\0\0j\1\0r5\0|\1\0d\2\0k\10\0r\36\0t\3\0}\1\0n\0\0t\4\0|\0\0|\1\0|\2\0d\1\0\27\203\3\0\1n\0\0d\2\0S(\3\0\0\0s\207\0\0\0Issue a deprecation warning for Python 3.x related changes.\n\n    Warnings are omitted unless Python is started with the -3 option.\n    i\1\0\0\0N(\5\0\0\0t\3\0\0\0syst\v\0\0\0py3kwarningt\4\0\0\0Nonet\22\0\0\0DeprecationWarningR\0\0\0\0(\3\0\0\0t\7\0\0\0messaget\10\0\0\0categoryt\n\0\0\0stacklevel(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyt\10\0\0\0warnpy3k\17\0\0\0s\10\0\0\0\0\5\t\1\f\1\t\1c\6\0\0\0\6\0\0\0\7\0\0\0C\0\0\0sc\0\0\0|\4\0d\1\0k\10\0r(\0t\1\0j\2\0}\4\0|\4\0d\1\0k\10\0r(\0d\1\0Sn\0\0y#\0|\4\0j\3\0t\4\0|\0\0|\1\0|\2\0|\3\0|\5\0\203\5\0\203\1\0\1Wn\21\0\4t\5\0k\n\0r^\0\1\1\1n\1\0Xd\1\0S(\2\0\0\0s7\0\0\0Hook to write a warning to a file; replace if you like.N(\6\0\0\0R\n\0\0\0R\10\0\0\0t\6\0\0\0stderrt\5\0\0\0writeR\3\0\0\0t\7\0\0\0IOError(\6\0\0\0R\f\0\0\0R\r\0\0\0t\10\0\0\0filenamet\6\0\0\0linenot\4\0\0\0filet\4\0\0\0line(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyt\r\0\0\0_show_warning\31\0\0\0s\20\0\0\0\0\2\f\1\t\1\f\2\7\1\3\1#\1\r\1c\5\0\0\0\6\0\0\0\5\0\0\0C\0\0\0sd\0\0\0d\1\0|\2\0|\3\0|\1\0j\0\0|\0\0f\4\0\26}\5\0|\4\0d\3\0k\10\0r7\0t\2\0j\3\0|\2\0|\3\0\203\2\0n\3\0|\4\0}\4\0|\4\0r`\0|\4\0j\4\0\203\0\0}\4\0|\5\0d\2\0|\4\0\0267}\5\0n\0\0|\5\0S(\4\0\0\0s.\0\0\0Function to format a warning the standard way.s\16\0\0\0%s:%s: %s: %s\ns\5\0\0\0  %s\nN(\5\0\0\0t\10\0\0\0__name__R\n\0\0\0t\t\0\0\0linecachet\7\0\0\0getlinet\5\0\0\0strip(\6\0\0\0R\f\0\0\0R\r\0\0\0R\23\0\0\0R\24\0\0\0R\26\0\0\0t\1\0\0\0s(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyR\3\0\0\0(\0\0\0s\f\0\0\0\0\2\31\1$\1\6\1\f\1\21\1t\0\0\0\0i\0\0\0\0c\6\0\0\0\10\0\0\0\7\0\0\0C\0\0\0s\36\1\0\0d\1\0d\2\0l\0\0}\6\0|\0\0d\20\0k\6\0s+\0t\1\0d\t\0|\0\0f\1\0\26\203\1\0\202\1\0t\2\0|\1\0t\3\0\203\2\0sF\0t\1\0d\n\0\203\1\0\202\1\0t\2\0|\2\0t\4\0t\5\0j\6\0f\2\0\203\2\0sj\0t\1\0d\v\0\203\1\0\202\1\0t\7\0|\2\0t\10\0\203\2\0s\205\0t\1\0d\f\0\203\1\0\202\1\0t\2\0|\3\0t\3\0\203\2\0s\240\0t\1\0d\r\0\203\1\0\202\1\0t\2\0|\4\0t\t\0\203\2\0r\273\0|\4\0d\16\0k\5\0s\307\0t\1\0d\17\0\203\1\0\202\1\0|\0\0|\6\0j\n\0|\1\0|\6\0j\v\0\203\2\0|\2\0|\6\0j\n\0|\3\0\203\1\0|\4\0f\5\0}\7\0|\5\0r\n\1t\f\0j\r\0|\7\0\203\1\0\1n\20\0t\f\0j\16\0d\16\0|\7\0\203\2\0\1d\2\0S(\21\0\0\0s\326\1\0\0Insert an entry into the list of warnings filters (at the front).\n\n    'action' -- one of \"error\", \"ignore\", \"always\", \"default\", \"module\",\n                or \"once\"\n    'message' -- a regex that the warning message must match\n    'category' -- a class that the warning must be a subclass of\n    'module' -- a regex that the module name must match\n    'lineno' -- an integer line number, 0 matches all warnings\n    'append' -- if true, append to the list of filters\n    i\377\377\377\377Nt\5\0\0\0errort\6\0\0\0ignoret\6\0\0\0alwayst\7\0\0\0defaultt\6\0\0\0modulet\4\0\0\0onces\22\0\0\0invalid action: %rs\30\0\0\0message must be a strings\30\0\0\0category must be a classs#\0\0\0category must be a Warning subclasss\27\0\0\0module must be a stringi\0\0\0\0s\32\0\0\0lineno must be an int >= 0(\6\0\0\0s\5\0\0\0errors\6\0\0\0ignoreR \0\0\0s\7\0\0\0defaults\6\0\0\0moduleR#\0\0\0(\17\0\0\0t\2\0\0\0ret\16\0\0\0AssertionErrort\n\0\0\0isinstancet\n\0\0\0basestringt\4\0\0\0typet\5\0\0\0typest\t\0\0\0ClassTypet\n\0\0\0issubclasst\7\0\0\0Warningt\3\0\0\0intt\7\0\0\0compilet\1\0\0\0It\7\0\0\0filterst\6\0\0\0appendt\6\0\0\0insert(\10\0\0\0t\6\0\0\0actionR\f\0\0\0R\r\0\0\0R\"\0\0\0R\24\0\0\0R1\0\0\0R$\0\0\0t\4\0\0\0item(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyR\4\0\0\0001\0\0\0s\36\0\0\0\0\f\f\1\3\1\34\1\33\1\33\1\t\1\33\1\33\1\36\1\t\1\30\1\25\1\6\1\20\2c\4\0\0\0\5\0\0\0\7\0\0\0C\0\0\0s\205\0\0\0|\0\0d\v\0k\6\0s\37\0t\0\0d\7\0|\0\0f\1\0\26\203\1\0\202\1\0t\1\0|\2\0t\2\0\203\2\0r:\0|\2\0d\10\0k\5\0sF\0t\0\0d\t\0\203\1\0\202\1\0|\0\0d\n\0|\1\0d\n\0|\2\0f\5\0}\4\0|\3\0rq\0t\4\0j\5\0|\4\0\203\1\0\1n\20\0t\4\0j\6\0d\10\0|\4\0\203\2\0\1d\n\0S(\f\0\0\0s\235\1\0\0Insert a simple entry into the list of warnings filters (at the front).\n\n    A simple filter matches all modules and messages.\n    'action' -- one of \"error\", \"ignore\", \"always\", \"default\", \"module\",\n                or \"once\"\n    'category' -- a class that the warning must be a subclass of\n    'lineno' -- an integer line number, 0 matches all warnings\n    'append' -- if true, append to the list of filters\n    R\36\0\0\0R\37\0\0\0R \0\0\0R!\0\0\0R\"\0\0\0R#\0\0\0s\22\0\0\0invalid action: %ri\0\0\0\0s\32\0\0\0lineno must be an i", 4096) = 4096
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669316, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=13132, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(7, "nt >= 0N(\6\0\0\0s\5\0\0\0errors\6\0\0\0ignores\6\0\0\0alwayss\7\0\0\0defaults\6\0\0\0modules\4\0\0\0once(\7\0\0\0R%\0\0\0R&\0\0\0R-\0\0\0R\n\0\0\0R0\0\0\0R1\0\0\0R2\0\0\0(\5\0\0\0R3\0\0\0R\r\0\0\0R\24\0\0\0R1\0\0\0R4\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyR\5\0\0\0N\0\0\0s\20\0\0\0\0\n\3\1\34\1\36\1\t\1\25\1\6\1\20\2c\0\0\0\0\0\0\0\0\2\0\0\0C\0\0\0s\v\0\0\0g\0\0t\0\0(d\1\0S(\2\0\0\0sA\0\0\0Clear the list of warning filters, so that no filters are active.N(\1\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyR\6\0\0\0b\0\0\0s\2\0\0\0\0\2t\f\0\0\0_OptionErrorc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\16\0\0\0e\0\0Z\1\0d\0\0Z\2\0RS(\1\0\0\0s,\0\0\0Exception used by option processing helpers.(\3\0\0\0R\30\0\0\0t\n\0\0\0__module__t\7\0\0\0__doc__(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyR5\0\0\0f\0\0\0s\4\0\0\0\6\1\6\1c\1\0\0\0\3\0\0\0\6\0\0\0C\0\0\0sL\0\0\0xE\0|\0\0D]=\0}\1\0y\16\0t\0\0|\1\0\203\1\0\1Wq\7\0\4t\1\0k\n\0rC\0\1}\2\0\1t\2\0j\3\0\4d\1\0\2I\4|\2\0\2IJq\7\0Xq\7\0Wd\0\0S(\2\0\0\0Ns\32\0\0\0Invalid -W option ignored:(\4\0\0\0t\n\0\0\0_setoptionR5\0\0\0R\10\0\0\0R\20\0\0\0(\3\0\0\0t\4\0\0\0argst\3\0\0\0argt\3\0\0\0msg(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyt\17\0\0\0_processoptionsk\0\0\0s\n\0\0\0\0\1\r\1\3\1\16\1\17\1c\1\0\0\0\t\0\0\0\6\0\0\0C\0\0\0s[\1\0\0d\1\0d\0\0l\0\0}\1\0|\0\0j\1\0d\2\0\203\1\0}\2\0t\2\0|\2\0\203\1\0d\3\0k\4\0rC\0t\3\0d\4\0|\0\0f\1\0\26\203\1\0\202\1\0n\0\0x#\0t\2\0|\2\0\203\1\0d\3\0k\0\0rh\0|\2\0j\4\0d\5\0\203\1\0\1qF\0Wg\0\0|\2\0D]\22\0}\3\0|\3\0j\5\0\203\0\0^\2\0qp\0\\\5\0}\4\0}\5\0}\6\0}\7\0}\10\0t\6\0|\4\0\203\1\0}\4\0|\1\0j\7\0|\5\0\203\1\0}\5\0t\10\0|\6\0\203\1\0}\6\0|\1\0j\7\0|\7\0\203\1\0}\7\0|\7\0r\340\0|\7\0d\6\0\27}\7\0n\0\0|\10\0r;\1y%\0t\t\0|\10\0\203\1\0}\10\0|\10\0d\7\0k\0\0r\n\1t\n\0\202\1\0n\0\0WqA\1\4t\n\0t\v\0f\2\0k\n\0r7\1\1\1\1t\3\0d\10\0|\10\0f\1\0\26\203\1\0\202\1\0qA\1Xn\6\0d\7\0}\10\0t\f\0|\4\0|\5\0|\6\0|\7\0|\10\0\203\5\0\1d\0\0S(\t\0\0\0Ni\377\377\377\377t\1\0\0\0:i\5\0\0\0s\33\0\0\0too many fields (max 5): %rR\35\0\0\0t\1\0\0\0$i\0\0\0\0s\21\0\0\0invalid lineno %r(\r\0\0\0R$\0\0\0t\5\0\0\0splitt\3\0\0\0lenR5\0\0\0R1\0\0\0R\33\0\0\0t\n\0\0\0_getactiont\6\0\0\0escapet\f\0\0\0_getcategoryR-\0\0\0t\n\0\0\0ValueErrort\r\0\0\0OverflowErrorR\4\0\0\0(\t\0\0\0R:\0\0\0R$\0\0\0t\5\0\0\0partsR\34\0\0\0R3\0\0\0R\f\0\0\0R\r\0\0\0R\"\0\0\0R\24\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyR8\0\0\0s\0\0\0s.\0\0\0\0\1\f\1\17\1\22\1\26\1\25\1\21\1\3\1+\1\f\1\17\1\f\1\17\1\6\1\r\1\6\1\3\1\f\1\f\1\r\1\23\1\32\2\6\1c\1\0\0\0\2\0\0\0\6\0\0\0C\0\0\0sU\0\0\0|\0\0s\n\0d\1\0S|\0\0d\2\0k\2\0r\32\0d\3\0Sx!\0d\t\0D]\31\0}\1\0|\1\0j\0\0|\0\0\203\1\0r!\0|\1\0Sq!\0Wt\1\0d\10\0|\0\0f\1\0\26\203\1\0\202\1\0d\0\0S(\n\0\0\0NR!\0\0\0t\3\0\0\0allR \0\0\0R\37\0\0\0R\"\0\0\0R#\0\0\0R\36\0\0\0s\22\0\0\0invalid action: %r(\6\0\0\0s\7\0\0\0defaults\6\0\0\0alwayss\6\0\0\0ignores\6\0\0\0modules\4\0\0\0onces\5\0\0\0error(\2\0\0\0t\n\0\0\0startswithR5\0\0\0(\2\0\0\0R3\0\0\0t\1\0\0\0a(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyRA\0\0\0\216\0\0\0s\20\0\0\0\0\1\6\1\4\1\f\0\4\1\r\1\17\1\10\1c\1\0\0\0\7\0\0\0\5\0\0\0C\0\0\0s/\1\0\0d\1\0d\0\0l\0\0}\1\0|\0\0s\26\0t\1\0S|\1\0j\2\0d\2\0|\0\0\203\2\0rb\0y\20\0t\3\0|\0\0\203\1\0}\2\0Wq\6\1\4t\4\0k\n\0r^\0\1\1\1t\5\0d\3\0|\0\0f\1\0\26\203\1\0\202\1\0q\6\1Xn\244\0|\0\0j\6\0d\4\0\203\1\0}\3\0|\0\0|\3\0 }\4\0|\0\0|\3\0d\5\0\27\37}\5\0y\34\0t\7\0|\4\0d\0\0d\0\0|\5\0g\1\0\203\4\0}\6\0Wn$\0\4t\t\0k\n\0r\313\0\1\1\1t\5\0d\6\0|\4\0f\1\0\26\203\1\0\202\1\0n\1\0Xy\23\0t\n\0|\6\0|\5\0\203\2\0}\2\0Wn$\0\4t\v\0k\n\0r\5\1\1\1\1t\5\0d\3\0|\0\0f\1\0\26\203\1\0\202\1\0n\1\0Xt\f\0|\2\0t\1\0\203\2\0s+\1t\5\0d\7\0|\0\0f\1\0\26\203\1\0\202\1\0n\0\0|\2\0S(\10\0\0\0Ni\377\377\377\377s\17\0\0\0^[a-zA-Z0-9_]+$s\34\0\0\0unknown warning category: %rt\1\0\0\0.i\1\0\0\0s\27\0\0\0invalid module name: %rs\34\0\0\0invalid warning category: %r(\r\0\0\0R$\0\0\0R,\0\0\0t\5\0\0\0matcht\4\0\0\0evalt\t\0\0\0NameErrorR5\0\0\0t\5\0\0\0rfindt\n\0\0\0__import__R\n\0\0\0t\v\0\0\0ImportErrort\7\0\0\0getattrt\16\0\0\0AttributeErrorR+\0\0\0(\7\0\0\0R\r\0\0\0R$\0\0\0t\3\0\0\0catt\1\0\0\0iR\"\0\0\0t\5\0\0\0klasst\1\0\0\0m(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyRC\0\0\0\230\0\0\0s,\0\0\0\0\1\f\1\6\1\4\1\22\1\3\1\20\1\r\1\32\2\17\1\n\1\16\1\3\1\34\1\r\1\27\1\3\1\23\1\r\1\27\1\17\1\26\1c\3\0\0\0\n\0\0\0\10\0\0\0C\0\0\0sg\1\0\0t\0\0|\0\0t\1\0\203\2\0r\33\0|\0\0j\2\0}\1\0n\0\0|\1\0d\v\0k\10\0r0\0t\4\0}\1\0n\0\0t\5\0|\1\0t\1\0\203\2\0sE\0t\6\0\202\1\0y\23\0t\7\0j\10\0|\2\0\203\1\0}\3\0Wn \0\4t\t\0k\n\0rz\0\1\1\1t\7\0j\n\0}\4\0d\1\0}\5\0n\23\0X|\3\0j\v\0}\4\0|\3\0j\f\0}\5\0d\2\0|\4\0k\6\0r\246\0|\4\0d\2\0\31}\6\0n\6\0d\3\0}\6\0|\4\0j\r\0d\4\0\203\1\0}\7\0|\7\0r\354\0|\7\0j\16\0\203\0\0}\10\0|\10\0j\17\0d\f\0\203\1\0r5\1|\7\0d\7\0 }\7\0q5\1nI\0|\6\0d\10\0k\2\0r&\1y\21\0t\7\0j\20\0d\t\0\31}\7\0Wq&\1\4t\21\0k\n\0r\"\1\1\1\1d\10\0}\7\0q&\1Xn\0\0|\7\0s5\1|\6\0}\7\0n\0\0|\4\0j\22\0d\n\0i\0\0\203\2\0}\t\0t\23\0|\0\0|\1\0|\7\0|\5\0|\6\0|\t\0|\4\0\203\7\0\1d\v\0S(\r\0\0\0s:\0\0\0Issue a warning, or maybe ignore it or raise an exception.i\1\0\0\0R\30\0\0\0s\10\0\0\0<string>t\10\0\0\0__file__s\4\0\0\0.pycs\4\0\0\0.pyoi\377\377\377\377t\10\0\0\0__main__i\0\0\0\0t\23\0\0\0__warningregistry__N(\2\0\0\0s\4\0\0\0.pycs\4\0\0\0.pyo(\24\0\0\0R&\0\0\0R,\0\0\0t\t\0\0\0__class__R\n\0\0\0t\v\0\0\0UserWarningR+\0\0\0R%\0\0\0R\10\0\0\0t\t\0\0\0_getframeRD\0\0\0t\10\0\0\0__dict__t\t\0\0\0f_globalst\10\0\0\0f_linenot\3\0\0\0gett\5\0\0\0lowert\10\0\0\0endswitht\4\0\0\0argvRR\0\0\0t\n\0\0\0setdefaultR\1\0\0\0(\n\0\0\0R\f\0\0\0R\r\0\0\0R\16\0\0\0t\6\0\0\0callert\7\0\0\0globalsR\24\0\0\0R\"\0\0\0R\23\0\0\0t\3\0\0\0fnlt\10\0\0\0registry(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyR\0\0\0\0\263\0\0\0s<\0\0\0\0\3\17\1\f\2\f\1\t\1\25\2\3\1\23\1\r\1\t\1\n\2\t\1\t\1\f\1\r\2\6\1\17\1\6\1\f\1\17\1\20\2\f\1\3\1\21\1\r\2\r\1\6\1\t\1\22\1\25\1c\7\0\0\0\21\0\0\0\6\0\0\0C\0\0\0sb\2\0\0t\0\0|\3\0\203\1\0}\3\0|\4\0d\0\0k\10\0rJ\0|\2\0p!\0d\1\0}\4\0|\4\0d\2\0\37j\2\0\203\0\0d\3\0k\2\0rJ\0|\4\0d\2\0 }\4\0qJ\0n\0\0|\5\0d\0\0k\10\0r_\0i\0\0}\5\0n\0\0t\3\0|\0\0t\4\0\203\2\0r\206\0t\5\0|\0\0\203\1\0}\7\0|\0\0j\6\0}\1\0n\22\0|\0\0}\7\0|\1\0|\0\0\203\1\0}\0\0|\7\0|\1\0|\3\0f\3\0}\10\0|\5\0j\7\0|\10\0\203\1\0r\272\0d\0\0Sx\212\0t\10\0D]|\0}\t\0|\t\0\\\5\0}\n\0}\v\0}\f\0}\r\0}\16\0|\v\0d\0\0k\10\0s\367\0|\v\0j\t\0|\7\0\203\1\0r\301\0t\n\0|\1\0|\f\0\203\2\0r\301\0|\r\0d\0\0k\10\0s!\1|\r\0j\t\0|\4\0\203\1\0r\301\0|\16\0d\4\0k\2\0s9\1|\3\0|\16\0k\2\0r\301\0Pq\301\0q\301\0Wt\v\0}\n\0|\n\0d\5\0k\2\0ra\1d\6\0|\5\0|\10\0<d\0\0St\f\0j\r\0|\2\0|\6\0\203\2\0\1|\n\0d\7\0k\2\0r\206\1|\0\0\202\1\0n\0\0|\n\0d\10\0k\2\0r\310\1d\6\0|\5\0|\10\0<|\7\0|\1\0f\2\0}\17\0t\16\0j\7\0|\17\0\203\1\0r\273\1d\0\0Sd\6\0t\16\0|\17\0<n\203\0|\n\0d\t\0k\2\0r\327\1nt\0|\n\0d\n\0k\2\0r\34\2d\6\0|\5\0|\10\0<|\7\0|\1\0d\4\0f\3\0}\20\0|\5\0j\7\0|\20\0\203\1\0r\17\2d\0\0Sd\6\0|\5\0|\20\0<n/\0|\n\0d\v\0k\2\0r5\2d\6\0|\5\0|\10\0<n\26\0t\17\0d\f\0|\n\0|\t\0f\2\0\26\203\1\0\202\1\0t\20\0|\0\0|\1\0|\2\0|\3\0\203\4\0\1d\0\0S(\r\0\0\0Ns\t\0\0\0<unknown>i\375\377\377\377s\3\0\0\0.pyi\0\0\0\0R\37\0\0\0i\1\0\0\0R\36\0\0\0R#\0\0\0R \0\0\0R\"\0\0\0R!\0\0\0s1\0\0\0Unrecognized action (%r) in warnings.filters:\n %s(\21\0\0\0R-\0\0\0R\n\0\0\0Ra\0\0\0R&\0\0\0R,\0\0\0t\3\0\0\0strRZ\0\0\0R`\0\0\0R0\0\0\0RK\0\0\0R+\0\0\0t\r\0\0\0defaultactionR\31\0\0\0t\10\0\0\0getlinest\f\0\0\0onceregistryt\f\0\0\0RuntimeErrorR\2\0\0\0(\21\0\0\0R\f\0\0\0R\r\0\0\0R\23\0\0\0R\24\0\0\0R\"\0\0\0Rh\0\0\0t\16\0\0\0module_globalst\4\0\0\0textt\3\0\0\0keyR4\0\0\0R3\0\0\0R;\0\0\0RS\0\0\0t\3\0\0\0modt\2\0\0\0lnt\7\0\0\0oncekeyt\6\0\0\0altkey(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyR\1\0\0\0\333\0\0\0sb\0\0\0\0\2\f\1\f\1\f\1\26\1\20\1\f\1\t\1\17\1\f\1\f\2\6\1\f\1\17\2\17\1\4\2\r\1\25\1\33\1\17\1\33\1\30\1\10\2\6\2\f\1\n\1\4\4\20\2\f\1\t\2\f\1\n\1\f\1\17\1\4\1\r\1\f\1\3\1\f\1\n\1\17\1\17\1\4\1\r\1\f\1\r\3\3\1\3\1\20\2t\16\0\0\0WarningMessagec\0\0\0\0\0\0\0\0\6\0\0\0B\0\0\0s,\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\t\0Z\3\0d\n\0d\n\0d\7\0\204\2\0Z\5\0d\10\0\204\0\0Z\6\0RS(\v\0\0\0s0\0\0\0Holds the result of a single showwarning() call.R\f\0\0\0R\r\0\0\0R\23\0\0\0R\24\0\0\0R\25\0\0\0R\26\0\0\0c\7\0\0\0\t\0\0\0\6\0\0\0C\0\0\0sM\0\0\0t\0\0\203\0\0}\7\0x%\0|\0\0j\1\0D]\32\0}\10\0t\2\0|\0\0|\10\0|\7\0|\10\0\31\203\3\0\1q\23\0W|\2\0r@\0|\2\0j\3\0n\3\0d\0\0|\0\0_\5\0d\0\0S(\1\0\0\0N(\6\0\0\0t\6\0\0\0localst\20\0\0\0_WARNING_DETAILSt\7\0\0\0setattrR\30\0\0\0R\n\0\0\0t\16\0\0\0_category_name(\t\0\0\0t\4\0\0\0selfR\f\0\0\0R\r\0\0\0R\23\0\0\0R\24\0\0\0R\25\0\0\0R\26\0\0\0t\f\0\0\0local_valuest\4\0\0\0attr(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyt\10\0\0\0__init__$\1\0\0s\10\0\0\0\0\2\t\1\20\1\30\1c\1\0\0\0\1\0\0\0\6\0\0\0C\0\0\0s&\0\0\0d\1\0|\0\0j\0\0|\0\0j\1\0|\0\0j\2\0|\0\0j\3\0|\0\0j\4\0f\5\0\26S(\2\0\0\0NsD\0\0\0{message : %r, category : %r, filename : %r, lineno : %s, line : %r}(\5\0\0\0R\f\0\0\0Ry\0\0\0R\23\0\0\0R\24\0\0\0R\26\0\0\0(\1\0\0\0Rz\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyt\7\0\0\0__str__+\1\0\0s\6\0\0\0\0\1\3\1\f\1(\6\0\0\0s\7\0\0\0messages\10\0\0\0categorys\10\0\0\0filenames\6\0\0\0linenos\4\0\0\0files\4\0\0\0lineN(\7\0\0\0R\30\0\0\0R6\0\0\0R7\0\0\0Rw\0\0\0R\n\0\0\0R}\0\0\0R~\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyRu\0\0\0\35\1\0\0s\f\0\0\0\6\2\6\2\0\1\6\2\3\1\f\6c\0\0\0\0\0\0\0\0\3\0\0\0B\0\0\0s8\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0d\5\0d\1\0\204\2\0Z\5\0d\2\0\204\0\0Z\6\0d\3\0\204\0\0Z\7\0d\4\0\204\0\0Z\10\0RS(\6\0\0\0s\217\2\0\0A context manager that copies and restores the warnings filter upon\n    exiting the context.\n\n    The 'record' argument specifies whether warnings should be captured by a\n    custom implementation of warnings.showwarning() and be appended to a list\n    returned by the context manager. Otherwise None is returned by the context\n    manager. The objects appended to the list are arguments whose attributes\n    mirror the arguments to showwarning().\n\n    The 'module' argument is to specify an alternative module to the module\n    named 'warnings' and imported under that name. This argument is only useful\n    when testing the warnings module itself.\n\n    c\3\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s8\0\0\0|\1\0|\0\0_\0\0|\2\0d\2\0k\10\0r\"\0t\2\0j\3\0d\1\0\31n\3\0|\2\0|\0\0_\4\0t\5\0|\0\0_\6\0d\2\0S(\3\0\0\0s\352\0\0\0Specify whether to record warnings and if an alternative module\n        should be used other than sys.modules['warnings'].\n\n        For compatibility with Python 3.0, please consider all arguments to be\n        keyword-only.\n\n        t\10\0\0\0warningsN(\7\0\0\0t\7\0\0\0_recordR\n\0\0\0R\10\0\0\0t\7\0\0\0modulest\7\0\0\0_modulet\5\0\0\0Falset\10\0\0\0_entered(\3\0\0\0Rz\0\0\0t\6\0\0\0recordR\"\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyR}\0\0\0B\1\0\0s\6\0\0\0\0\10\t\1\"\1c\1\0\0\0\3\0\0\0\4\0\0\0C\0\0\0sr\0\0\0g\0\0}\1\0|\0\0j\0\0r\37\0|\1\0j\1\0d\1\0\203\1\0\1n\0\0|\0\0j\2\0t\3\0j\4\0d\2\0\31k\t\0rL\0|\1\0j\1\0d\3\0|\0\0j\2\0\26\203\1\0\1n\0\0t\5\0|\0\0\203\1\0j\6\0}\2\0d\4\0|\2\0d\5\0j\7\0|\1\0\203\1\0f\2\0\26S(\6\0\0\0Ns\v\0\0\0record=TrueR\177\0\0\0s\t\0\0\0module=%rs\6\0\0\0%s(%s)s\2\0\0\0, (\10\0\0\0R\200\0\0\0R1\0\0\0R\202\0\0\0R\10\0\0\0R\201\0\0\0R(\0\0\0R\30\0\0\0t\4\0\0\0join(\3\0\0\0Rz\0\0\0R9\0\0\0t\4\0\0\0name(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyt\10\0\0\0__repr__N\1\0\0s\16\0\0\0\0\1\6\1\t\1\20\1\26\1\27\1\17\1c\1\0\0\0\2\0\0\0\3\0\0\0\3\0\0\0s\211\0\0\0|\0\0j\0\0r\34\0t\1\0d\1\0|\0\0\26\203\1\0\202\1\0n\0\0t\2\0|\0\0_\0\0|\0\0j\3\0j\4\0|\0\0_\5\0|\0\0j\5\0\36|\0\0j\3\0_\4\0|\0\0j\3\0j\6\0|\0\0_\7\0|\0\0j\10\0r\201\0g\0\0\211\0\0\207\0\0f\1\0d\2\0\206\0\0}\1\0|\1\0|\0\0j\3\0_\6\0\210\0\0Sd\0\0Sd\0\0S(\3\0\0\0Ns\25\0\0\0Cannot enter %r twicec\0\0\0\0\2\0\0\0\4\0\0\0\37\0\0\0s\32\0\0\0\210\0\0j\0\0t\1\0|\0\0|\1\0\216\0\0\203\1\0\1d\0\0S(\1\0\0\0N(\2\0\0\0R1\0\0\0Ru\0\0\0(\2\0\0\0R9\0\0\0t\6\0\0\0kwargs(\1\0\0\0t\3\0\0\0log(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyR\2\0\0\0`\1\0\0s\2\0\0\0\0\1(\n\0\0\0R\204\0\0\0Rm\0\0\0t\4\0\0\0TrueR\202\0\0\0R0\0\0\0t\10\0\0\0_filtersR\2\0\0\0t\f\0\0\0_showwarningR\200\0\0\0R\n\0\0\0(\2\0\0\0Rz\0\0\0R\2\0\0\0(\0\0\0\0(\1\0\0\0R\212\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyt\t\0\0\0__enter__W\1\0\0s\30\0\0\0\0\1\t\1\23\1\t\1\17\1\20\1\17\1\t\1\6\1\17\2\f\1\4\2c\1\0\0\0\2\0\0\0\3\0\0\0G\0\0\0s>\0\0\0|\0\0j\0\0s\34\0t\1\0d\1\0|\0\0\26\203\1\0\202\1\0n\0\0|\0\0j\2\0|\0\0j\3\0_\4\0|\0\0j\5\0|\0\0j\3\0_\6\0d\0\0S(\2\0\0\0Ns%\0\0\0Cannot exit %r without entering first(\7\0\0\0R\204\0\0\0Rm\0\0\0R\214\0\0\0R\202\0\0\0R0\0\0\0R\215\0\0\0R\2\0\0\0(\2\0\0\0Rz\0\0\0t\10\0\0\0exc_info(\0\0\0\0(\0\0\0\0s\36\0\0\0/u", 8192) = 8192
27308 read(7, "sr/lib/python2.7/warnings.pyt\10\0\0\0__exit__g\1\0\0s\10\0\0\0\0\1\t\1\23\1\17\1N(\t\0\0\0R\30\0\0\0R6\0\0\0R7\0\0\0R\203\0\0\0R\n\0\0\0R}\0\0\0R\210\0\0\0R\216\0\0\0R\220\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyR\7\0\0\0001\1\0\0s\n\0\0\0\6\17\6\2\17\f\t\t\t\20(\5\0\0\0R0\0\0\0t\16\0\0\0default_actiont\r\0\0\0once_registryR\0\0\0\0R\1\0\0\0R!\0\0\0R\37\0\0\0R\r\0\0\0R\36\0\0\0R1\0\0\0(0\0\0\0R7\0\0\0R\31\0\0\0R\10\0\0\0R)\0\0\0t\7\0\0\0__all__R\n\0\0\0R\17\0\0\0R\27\0\0\0R\2\0\0\0R\3\0\0\0R,\0\0\0R\4\0\0\0R\5\0\0\0R\6\0\0\0t\t\0\0\0ExceptionR5\0\0\0R<\0\0\0R8\0\0\0RA\0\0\0RC\0\0\0R\0\0\0\0R\1\0\0\0t\6\0\0\0objectRu\0\0\0R\7\0\0\0R\203\0\0\0t\22\0\0\0_warnings_defaultst\t\0\0\0_warningsR0\0\0\0R\221\0\0\0R\222\0\0\0Rj\0\0\0Rl\0\0\0R\213\0\0\0RP\0\0\0t\v\0\0\0warnoptionst\r\0\0\0ImportWarningt\31\0\0\0PendingDeprecationWarningt\7\0\0\0silenceR\t\0\0\0t\5\0\0\0flagst\20\0\0\0division_warningR1\0\0\0R\v\0\0\0t\3\0\0\0clst\r\0\0\0bytes_warningt\f\0\0\0bytes_actiont\f\0\0\0BytesWarning(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/warnings.pyt\10\0\0\0<module>\1\0\0\0s`\0\0\0\6\5\f\1\f\1\f\2\t\1\t\1\f\3\17\n\17\r\6\2\f\t\f\1\f\34\22\24\t\4\26\5\t\10\t\33\t\n\t\33\17)\22A\26\24\26E\6\1\3\1(\2\6\1\6\1\n\1\r\1\6\1\6\1\n\4\r\1\6\1\f\2\27\1\20\1\r\1\24\1\f\1\f\1\t\1\6\1\t\2\6\1\31\1", 4096) = 844
27308 read(7, "", 4096)                 = 0
27308 close(7)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/linecache", 0xbfffd2dc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/linecache.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/linecache.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/linecachemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/linecache.py", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=661517, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4027, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/linecache.pyc", O_RDONLY|O_LARGEFILE) = 8
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669317, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3260, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(8, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0sp\0\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0d\3\0d\4\0d\5\0g\3\0Z\3\0d\2\0d\6\0\204\1\0Z\5\0i\0\0a\6\0d\7\0\204\0\0Z\7\0d\2\0d\10\0\204\1\0Z\10\0d\2\0d\t\0\204\1\0Z\t\0d\2\0d\n\0\204\1\0Z\n\0d\2\0S(\v\0\0\0s\265\0\0\0Cache lines from files.\n\nThis is intended to read lines from modules imported -- hence if a filename\nis not found, it will look down the module search path for a file by\nthat name.\ni\377\377\377\377Nt\7\0\0\0getlinet\n\0\0\0clearcachet\n\0\0\0checkcachec\3\0\0\0\4\0\0\0\3\0\0\0C\0\0\0sE\0\0\0t\0\0|\0\0|\2\0\203\2\0}\3\0d\1\0|\1\0\4\3k\1\0o,\0t\1\0|\3\0\203\1\0k\1\0n\2\0\2\1r=\0|\3\0|\1\0d\1\0\30\31Sd\2\0Sd\0\0S(\3\0\0\0Ni\1\0\0\0t\0\0\0\0(\2\0\0\0t\10\0\0\0getlinest\3\0\0\0len(\4\0\0\0t\10\0\0\0filenamet\6\0\0\0linenot\16\0\0\0module_globalst\5\0\0\0lines(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/linecache.pyR\0\0\0\0\r\0\0\0s\10\0\0\0\0\1\17\1\"\1\f\2c\0\0\0\0\0\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0i\0\0a\0\0d\1\0S(\2\0\0\0s\31\0\0\0Clear the cache entirely.N(\1\0\0\0t\5\0\0\0cache(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/linecache.pyR\1\0\0\0\32\0\0\0s\2\0\0\0\0\4c\2\0\0\0\2\0\0\0\5\0\0\0C\0\0\0sI\0\0\0|\0\0t\0\0k\6\0r\30\0t\0\0|\0\0\31d\1\0\31Sy\21\0t\1\0|\0\0|\1\0\203\2\0SWn\31\0\4t\2\0k\n\0rD\0\1\1\1t\3\0\203\0\0\1g\0\0SXd\2\0S(\3\0\0\0ss\0\0\0Get the lines for a file from the cache.\n    Update the cache if it doesn't contain an entry for this file already.i\2\0\0\0N(\4\0\0\0R\n\0\0\0t\v\0\0\0updatecachet\v\0\0\0MemoryErrorR\1\0\0\0(\2\0\0\0R\6\0\0\0R\10\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/linecache.pyR\4\0\0\0!\0\0\0s\16\0\0\0\0\4\f\1\f\2\3\1\21\1\r\1\7\1c\1\0\0\0\7\0\0\0\6\0\0\0C\0\0\0s\320\0\0\0|\0\0d\1\0k\10\0r\33\0t\1\0j\2\0\203\0\0}\1\0n\34\0|\0\0t\1\0k\6\0r3\0|\0\0g\1\0}\1\0n\4\0d\1\0Sx\222\0|\1\0D]\212\0}\0\0t\1\0|\0\0\31\\\4\0}\2\0}\3\0}\4\0}\5\0|\3\0d\1\0k\10\0rl\0q>\0n\0\0y\23\0t\3\0j\4\0|\5\0\203\1\0}\6\0Wn\36\0\4t\3\0j\5\0k\n\0r\237\0\1\1\1t\1\0|\0\0=q>\0n\1\0X|\2\0|\6\0j\6\0k\3\0s\276\0|\3\0|\6\0j\7\0k\3\0r>\0t\1\0|\0\0=q>\0q>\0Wd\1\0S(\2\0\0\0sU\0\0\0Discard cache entries that are out of date.\n    (This is not checked upon each call!)N(\10\0\0\0t\4\0\0\0NoneR\n\0\0\0t\4\0\0\0keyst\2\0\0\0ost\4\0\0\0statt\5\0\0\0errort\7\0\0\0st_sizet\10\0\0\0st_mtime(\7\0\0\0R\6\0\0\0t\t\0\0\0filenamest\4\0\0\0sizet\5\0\0\0mtimeR\t\0\0\0t\10\0\0\0fullnameR\20\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/linecache.pyR\2\0\0\0/\0\0\0s \0\0\0\0\4\f\1\17\2\f\1\f\2\4\2\r\1\26\1\f\1\6\1\3\1\23\1\20\1\7\1\7\1\36\1c\2\0\0\0\17\0\0\0\7\0\0\0C\0\0\0sf\2\0\0|\0\0t\0\0k\6\0r\26\0t\0\0|\0\0=n\0\0|\0\0\fs;\0|\0\0j\1\0d\1\0\203\1\0r?\0|\0\0j\2\0d\2\0\203\1\0r?\0g\0\0S|\0\0}\2\0y\23\0t\3\0j\4\0|\2\0\203\1\0}\3\0Wnt\1\4t\5\0k\n\0r\316\1\1\1\1|\0\0}\4\0|\1\0r<\1d\3\0|\1\0k\6\0r<\1|\1\0j\6\0d\4\0\203\1\0}\5\0|\1\0d\3\0\31}\6\0t\7\0|\6\0d\5\0d\t\0\203\3\0}\7\0|\5\0r<\1|\7\0r<\1y\20\0|\7\0|\5\0\203\1\0}\10\0Wn\27\0\4t\t\0t\n\0f\2\0k\n\0r\340\0\1\1\1q9\1X|\10\0d\t\0k\10\0r\361\0g\0\0St\v\0|\10\0\203\1\0d\t\0g\0\0|\10\0j\f\0\203\0\0D]\20\0}\t\0|\t\0d\6\0\27^\2\0q\n\1|\2\0f\4\0t\0\0|\0\0<t\0\0|\0\0\31d\7\0\31Sq<\1n\0\0t\3\0j\r\0j\16\0|\0\0\203\1\0rR\1g\0\0Sxz\0t\17\0j\r\0D]g\0}\n\0y\31\0t\3\0j\r\0j\20\0|\n\0|\4\0\203\2\0}\2\0Wn\32\0\4t\21\0t\22\0f\2\0k\n\0r\227\1\1\1\1q\\\1n\1\0Xy\24\0t\3\0j\4\0|\2\0\203\1\0}\3\0PWq\\\1\4t\3\0j\23\0k\n\0r\302\1\1\1\1q\\\1Xq\\\1Wg\0\0Sn\1\0Xy(\0t\24\0|\2\0d\10\0\203\2\0\217\23\0}\v\0|\v\0j\25\0\203\0\0}\f\0Wd\t\0QXWn\22\0\4t\n\0k\n\0r\v\2\1\1\1g\0\0SX|\f\0r9\2|\f\0d\n\0\31j\2\0d\6\0\203\1\0\fr9\2|\f\0d\n\0c\2\0\31d\6\0007\3<n\0\0|\3\0j\26\0|\3\0j\27\0\2}\r\0}\16\0|\r\0|\16\0|\f\0|\2\0f\4\0t\0\0|\0\0<|\f\0S(\v\0\0\0s\224\0\0\0Update a cache entry and return its list of lines.\n    If something's wrong, print a message, discard the cache entry,\n    and return an empty list.t\1\0\0\0<t\1\0\0\0>t\n\0\0\0__loader__t\10\0\0\0__name__t\n\0\0\0get_sources\1\0\0\0\ni\2\0\0\0t\2\0\0\0rUNi\377\377\377\377(\30\0\0\0R\n\0\0\0t\n\0\0\0startswitht\10\0\0\0endswithR\17\0\0\0R\20\0\0\0t\7\0\0\0OSErrort\3\0\0\0gett\7\0\0\0getattrR\r\0\0\0t\v\0\0\0ImportErrort\7\0\0\0IOErrorR\5\0\0\0t\n\0\0\0splitlinest\4\0\0\0patht\5\0\0\0isabst\3\0\0\0syst\4\0\0\0joint\t\0\0\0TypeErrort\16\0\0\0AttributeErrorR\21\0\0\0t\4\0\0\0opent\t\0\0\0readlinesR\22\0\0\0R\23\0\0\0(\17\0\0\0R\6\0\0\0R\10\0\0\0R\27\0\0\0R\20\0\0\0t\10\0\0\0basenamet\4\0\0\0namet\6\0\0\0loaderR\34\0\0\0t\4\0\0\0datat\4\0\0\0linet\7\0\0\0dirnamet\2\0\0\0fpR\t\0\0\0R\25\0\0\0R\26\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/linecache.pyR\v\0\0\0H\0\0\0s\\\0\0\0\0\5\f\1\n\1%\1\4\2\6\1\3\1\23\1\r\1\6\3\22\1\17\1\n\1\22\2\f\1\3\1\20\1\23\1\4\2\f\3\4\2\f\1-\2\22\4\22\1\4\2\20\3\3\1\31\1\23\2\7\1\3\1\17\1\5\1\20\1\10\2\10\1\3\1\22\1\26\1\r\1\5\1\32\1\23\1\23\1\26\1(\v\0\0\0t\7\0\0\0__doc__R(\0\0\0R\17\0\0\0t\7\0\0\0__all__R\r\0\0\0R\0\0\0\0R\n\0\0\0R\1\0\0\0R\4\0\0\0R\2\0\0\0R\v\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/linecache.pyt\10\0\0\0<module>\6\0\0\0s\22\0\0\0\6\2\f\1\f\2\17\2\f\n\6\3\t\7\f\16\f\31", 4096) = 3260
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669317, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3260, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(8, "", 4096)                 = 0
27308 close(8)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 close(7)                          = 0
27308 stat64("/usr/lib/python2.7/types", 0xbfffd2dc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/types.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/types.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/typesmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/types.py", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=661614, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2094, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/types.pyc", O_RDONLY|O_LARGEFILE) = 8
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669318, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2711, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(8, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\5\0\0\0@\0\0\0sH\2\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0e\2\0d\2\0\203\1\0Z\4\0e\2\0Z\5\0e\6\0Z\7\0e\10\0Z\t\0e\n\0Z\v\0e\f\0Z\r\0e\16\0Z\17\0y\n\0e\20\0Z\21\0Wn\21\0\4e\22\0k\n\0r_\0\1\1\1n\1\0Xe\23\0Z\24\0y\26\0e\25\0Z\26\0e\24\0e\26\0f\2\0Z\27\0Wn\32\0\4e\22\0k\n\0r\230\0\1\1\1e\24\0f\1\0Z\27\0n\1\0Xe\30\0Z\31\0e\32\0Z\33\0e\34\0Z\35\0e\36\0\4Z\37\0Z \0d\3\0\204\0\0Z!\0e\2\0e!\0\203\1\0Z\"\0e\2\0d\4\0\204\0\0\203\1\0Z#\0e\2\0e!\0j$\0\203\1\0Z%\0d\5\0\204\0\0Z&\0e\2\0e&\0\203\0\0\203\1\0Z'\0d\6\0d\n\0d\7\0\204\0\0\203\0\0YZ(\0e\2\0e(\0\203\1\0Z)\0e\2\0e(\0j*\0\203\1\0Z+\0e(\0\203\0\0Z,\0e\2\0e,\0\203\1\0Z-\0e\2\0e,\0j*\0\203\1\0Z.\0e\2\0e/\0\203\1\0Z0\0e\2\0g\0\0j1\0\203\1\0Z2\0e\2\0e\1\0\203\1\0Z3\0e4\0Z5\0e6\0Z7\0y\n\0e8\0\202\1\0Wn?\0\4e8\0k\n\0r\320\1\1\1\1e\1\0j9\0\203\0\0d\10\0\31Z:\0e\2\0e:\0\203\1\0Z;\0e\2\0e:\0j<\0\203\1\0Z=\0[:\0n\1\0Xe>\0Z?\0e\2\0e@\0\203\1\0ZA\0e\2\0e\5\0jB\0\203\1\0ZC\0e\2\0eD\0\203\1\0ZE\0e\2\0e\"\0j$\0\203\1\0ZF\0e\2\0e\"\0jG\0\203\1\0ZH\0[\1\0[!\0[&\0[(\0[,\0e\34\0d\t\0\204\0\0eI\0\203\0\0D\203\1\0\203\1\0ZJ\0d\2\0S(\v\0\0\0s\213\0\0\0Define names for all type symbols known in the standard interpreter.\n\nTypes that are part of optional modules (e.g. array) are not listed.\ni\377\377\377\377Nc\0\0\0\0\0\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\0\0S(\1\0\0\0N(\0\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/types.pyt\2\0\0\0_f*\0\0\0s\0\0\0\0c\0\0\0\0\0\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\0\0S(\1\0\0\0N(\1\0\0\0t\4\0\0\0None(\0\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/types.pyt\10\0\0\0<lambda>,\0\0\0s\0\0\0\0c\0\0\0\0\0\0\0\0\1\0\0\0c\0\0\0s\t\0\0\0d\1\0V\1d\0\0S(\2\0\0\0Ni\1\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/types.pyt\2\0\0\0_g/\0\0\0s\2\0\0\0\0\1t\2\0\0\0_Cc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\21\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0RS(\1\0\0\0c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\0\0S(\1\0\0\0N(\0\0\0\0(\1\0\0\0t\4\0\0\0self(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/types.pyt\2\0\0\0_m4\0\0\0s\0\0\0\0(\3\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__R\6\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/types.pyR\4\0\0\0003\0\0\0s\2\0\0\0\6\1i\2\0\0\0c\1\0\0\0\2\0\0\0\3\0\0\0c\0\0\0s%\0\0\0|\0\0]\33\0}\1\0|\1\0d\0\0 d\1\0k\3\0r\3\0|\1\0V\1q\3\0d\2\0S(\3\0\0\0i\1\0\0\0t\1\0\0\0_N(\0\0\0\0(\2\0\0\0t\2\0\0\0.0t\1\0\0\0n(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/types.pys\t\0\0\0<genexpr>V\0\0\0s\2\0\0\0\6\0(\0\0\0\0(K\0\0\0t\7\0\0\0__doc__t\3\0\0\0syst\4\0\0\0typeR\1\0\0\0t\10\0\0\0NoneTypet\10\0\0\0TypeTypet\6\0\0\0objectt\n\0\0\0ObjectTypet\3\0\0\0intt\7\0\0\0IntTypet\4\0\0\0longt\10\0\0\0LongTypet\5\0\0\0floatt\t\0\0\0FloatTypet\4\0\0\0boolt\v\0\0\0BooleanTypet\7\0\0\0complext\v\0\0\0ComplexTypet\t\0\0\0NameErrort\3\0\0\0strt\n\0\0\0StringTypet\7\0\0\0unicodet\v\0\0\0UnicodeTypet\v\0\0\0StringTypest\6\0\0\0buffert\n\0\0\0BufferTypet\5\0\0\0tuplet\t\0\0\0TupleTypet\4\0\0\0listt\10\0\0\0ListTypet\4\0\0\0dictt\10\0\0\0DictTypet\16\0\0\0DictionaryTypeR\0\0\0\0t\f\0\0\0FunctionTypet\n\0\0\0LambdaTypet\t\0\0\0func_codet\10\0\0\0CodeTypeR\3\0\0\0t\r\0\0\0GeneratorTypeR\4\0\0\0t\t\0\0\0ClassTypeR\6\0\0\0t\21\0\0\0UnboundMethodTypet\2\0\0\0_xt\f\0\0\0InstanceTypet\n\0\0\0MethodTypet\3\0\0\0lent\23\0\0\0BuiltinFunctionTypet\6\0\0\0appendt\21\0\0\0BuiltinMethodTypet\n\0\0\0ModuleTypet\4\0\0\0filet\10\0\0\0FileTypet\6\0\0\0xranget\n\0\0\0XRangeTypet\t\0\0\0TypeErrort\10\0\0\0exc_infot\2\0\0\0tbt\r\0\0\0TracebackTypet\10\0\0\0tb_framet\t\0\0\0FrameTypet\5\0\0\0slicet\t\0\0\0SliceTypet\10\0\0\0Ellipsist\f\0\0\0EllipsisTypet\10\0\0\0__dict__t\r\0\0\0DictProxyTypet\16\0\0\0NotImplementedt\22\0\0\0NotImplementedTypet\24\0\0\0GetSetDescriptorTypet\f\0\0\0func_globalst\24\0\0\0MemberDescriptorTypet\7\0\0\0globalst\7\0\0\0__all__(\0\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/types.pyt\10\0\0\0<module>\4\0\0\0sl\0\0\0\6\1\f\7\f\1\6\1\6\2\6\1\6\1\6\1\6\1\3\1\n\1\r\1\4\2\6\5\3\1\6\1\20\1\r\1\r\2\6\2\6\1\6\1\n\2\t\1\f\1\17\1\17\2\t\2\17\2\23\2\f\1\17\1\t\1\f\1\17\2\f\1\17\2\f\1\6\1\6\2\3\1\n\1\r\1\20\1\f\1\17\1\7\2\6\1\f\2\17\1\f\3\17\1\17\2\17\2", 4096) = 2711
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669318, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2711, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(8, "", 4096)                 = 0
27308 close(8)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 close(7)                          = 0
27308 close(6)                          = 0
27308 close(5)                          = 0
27308 stat64("/usr/lib/python2.7/UserDict", 0xbfffda3c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/UserDict.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/UserDict.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/UserDictmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/UserDict.py", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=661434, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=5811, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/UserDict.pyc", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669319, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8730, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(6, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0sb\0\0\0d\0\0Z\0\0d\1\0d\t\0d\2\0\204\0\0\203\0\0YZ\1\0d\3\0e\1\0f\1\0d\4\0\204\0\0\203\0\0YZ\2\0d\5\0d\6\0l\3\0Z\3\0e\3\0j\4\0j\5\0e\2\0\203\1\0\1d\7\0d\n\0d\10\0\204\0\0\203\0\0YZ\6\0d\6\0S(\v\0\0\0sG\0\0\0A more or less complete user-defined wrapper around dictionary objects.t\10\0\0\0UserDictc\0\0\0\0\0\0\0\0\3\0\0\0B\0\0\0s\362\0\0\0e\0\0Z\1\0d\27\0d\0\0\204\1\0Z\3\0d\1\0\204\0\0Z\4\0d\2\0\204\0\0Z\5\0d\27\0Z\6\0d\3\0\204\0\0Z\7\0d\4\0\204\0\0Z\10\0d\5\0\204\0\0Z\t\0d\6\0\204\0\0Z\n\0d\7\0\204\0\0Z\v\0d\10\0\204\0\0Z\f\0d\t\0\204\0\0Z\r\0d\n\0\204\0\0Z\16\0d\v\0\204\0\0Z\17\0d\f\0\204\0\0Z\20\0d\r\0\204\0\0Z\21\0d\16\0\204\0\0Z\22\0d\17\0\204\0\0Z\23\0d\27\0d\20\0\204\1\0Z\24\0d\27\0d\21\0\204\1\0Z\25\0d\27\0d\22\0\204\1\0Z\26\0d\23\0\204\0\0Z\27\0d\24\0\204\0\0Z\30\0d\25\0\204\0\0Z\31\0e\32\0d\27\0d\26\0\204\1\0\203\1\0Z\33\0RS(\30\0\0\0c\2\0\0\0\3\0\0\0\2\0\0\0K\0\0\0sE\0\0\0i\0\0|\0\0_\0\0|\1\0d\0\0k\t\0r%\0|\0\0j\2\0|\1\0\203\1\0\1n\0\0t\3\0|\2\0\203\1\0rA\0|\0\0j\2\0|\2\0\203\1\0\1n\0\0d\0\0S(\1\0\0\0N(\4\0\0\0t\4\0\0\0datat\4\0\0\0Nonet\6\0\0\0updatet\3\0\0\0len(\3\0\0\0t\4\0\0\0selft\4\0\0\0dictt\6\0\0\0kwargs(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\10\0\0\0__init__\4\0\0\0s\n\0\0\0\0\1\t\1\f\1\20\1\f\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0j\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0t\4\0\0\0reprR\1\0\0\0(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\10\0\0\0__repr__\n\0\0\0s\0\0\0\0c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s6\0\0\0t\0\0|\1\0t\1\0\203\2\0r\"\0t\2\0|\0\0j\3\0|\1\0j\3\0\203\2\0St\2\0|\0\0j\3\0|\1\0\203\2\0Sd\0\0S(\1\0\0\0N(\4\0\0\0t\n\0\0\0isinstanceR\0\0\0\0t\3\0\0\0cmpR\1\0\0\0(\2\0\0\0R\5\0\0\0R\6\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\7\0\0\0__cmp__\v\0\0\0s\6\0\0\0\0\1\17\1\23\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0j\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0R\4\0\0\0R\1\0\0\0(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\7\0\0\0__len__\21\0\0\0s\0\0\0\0c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0sO\0\0\0|\1\0|\0\0j\0\0k\6\0r\32\0|\0\0j\0\0|\1\0\31St\1\0|\0\0j\2\0d\1\0\203\2\0r?\0|\0\0j\2\0j\3\0|\0\0|\1\0\203\2\0St\4\0|\1\0\203\1\0\202\1\0d\0\0S(\2\0\0\0Nt\v\0\0\0__missing__(\5\0\0\0R\1\0\0\0t\7\0\0\0hasattrt\t\0\0\0__class__R\17\0\0\0t\10\0\0\0KeyError(\2\0\0\0R\5\0\0\0t\3\0\0\0key(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\v\0\0\0__getitem__\22\0\0\0s\n\0\0\0\0\1\17\1\v\1\22\1\23\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\21\0\0\0|\2\0|\0\0j\0\0|\1\0<d\0\0S(\1\0\0\0N(\1\0\0\0R\1\0\0\0(\3\0\0\0R\5\0\0\0R\23\0\0\0t\4\0\0\0item(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\v\0\0\0__setitem__\30\0\0\0s\0\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\16\0\0\0|\0\0j\0\0|\1\0=d\0\0S(\1\0\0\0N(\1\0\0\0R\1\0\0\0(\2\0\0\0R\5\0\0\0R\23\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\v\0\0\0__delitem__\31\0\0\0s\0\0\0\0c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\2\0\0\0R\1\0\0\0t\5\0\0\0clear(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\30\0\0\0\32\0\0\0s\0\0\0\0c\1\0\0\0\4\0\0\0\5\0\0\0C\0\0\0sq\0\0\0|\0\0j\0\0t\1\0k\10\0r\"\0t\1\0|\0\0j\2\0j\3\0\203\0\0\203\1\0Sd\1\0d\0\0l\3\0}\1\0|\0\0j\2\0}\2\0z\34\0i\0\0|\0\0_\2\0|\1\0j\3\0|\0\0\203\1\0}\3\0Wd\0\0|\2\0|\0\0_\2\0X|\3\0j\4\0|\0\0\203\1\0\1|\3\0S(\2\0\0\0Ni\377\377\377\377(\5\0\0\0R\21\0\0\0R\0\0\0\0R\1\0\0\0t\4\0\0\0copyR\3\0\0\0(\4\0\0\0R\5\0\0\0R\31\0\0\0R\1\0\0\0t\1\0\0\0c(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\31\0\0\0\33\0\0\0s\24\0\0\0\0\1\17\1\23\1\f\1\t\1\3\1\t\1\23\2\n\1\r\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0N(\2\0\0\0R\1\0\0\0t\4\0\0\0keys(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\33\0\0\0'\0\0\0s\0\0\0\0c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0N(\2\0\0\0R\1\0\0\0t\5\0\0\0items(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\34\0\0\0(\0\0\0s\0\0\0\0c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0N(\2\0\0\0R\1\0\0\0t\t\0\0\0iteritems(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\35\0\0\0)\0\0\0s\0\0\0\0c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0N(\2\0\0\0R\1\0\0\0t\10\0\0\0iterkeys(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\36\0\0\0*\0\0\0s\0\0\0\0c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0N(\2\0\0\0R\1\0\0\0t\n\0\0\0itervalues(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\37\0\0\0+\0\0\0s\0\0\0\0c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0N(\2\0\0\0R\1\0\0\0t\6\0\0\0values(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR \0\0\0,\0\0\0s\0\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\1\0|\0\0j\0\0k\6\0S(\1\0\0\0N(\1\0\0\0R\1\0\0\0(\2\0\0\0R\5\0\0\0R\23\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\7\0\0\0has_key-\0\0\0s\0\0\0\0c\2\0\0\0\5\0\0\0\4\0\0\0K\0\0\0s\266\0\0\0|\1\0d\0\0k\10\0r\17\0n\204\0t\1\0|\1\0t\2\0\203\2\0r4\0|\0\0j\3\0j\4\0|\1\0j\3\0\203\1\0\1n_\0t\1\0|\1\0t\5\0i\0\0\203\1\0\203\2\0sY\0t\6\0|\1\0d\1\0\203\2\0\frl\0|\0\0j\3\0j\4\0|\1\0\203\1\0\1n'\0x$\0|\1\0j\7\0\203\0\0D]\26\0\\\2\0}\3\0}\4\0|\4\0|\0\0|\3\0<qy\0Wt\10\0|\2\0\203\1\0r\262\0|\0\0j\3\0j\4\0|\2\0\203\1\0\1n\0\0d\0\0S(\2\0\0\0NR\34\0\0\0(\t\0\0\0R\2\0\0\0R\v\0\0\0R\0\0\0\0R\1\0\0\0R\3\0\0\0t\4\0\0\0typeR\20\0\0\0R\34\0\0\0R\4\0\0\0(\5\0\0\0R\5\0\0\0R\6\0\0\0R\7\0\0\0t\1\0\0\0kt\1\0\0\0v(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\3\0\0\0.\0\0\0s\24\0\0\0\0\1\f\1\3\1\17\1\26\1%\1\23\2\31\1\16\1\f\1c\3\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s\30\0\0\0|\1\0|\0\0k\7\0r\20\0|\2\0S|\0\0|\1\0\31S(\1\0\0\0N(\0\0\0\0(\3\0\0\0R\5\0\0\0R\23\0\0\0t\7\0\0\0failobj(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\3\0\0\0get:\0\0\0s\6\0\0\0\0\1\f\1\4\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s!\0\0\0|\1\0|\0\0k\7\0r\31\0|\2\0|\0\0|\1\0<n\0\0|\0\0|\1\0\31S(\1\0\0\0N(\0\0\0\0(\3\0\0\0R\5\0\0\0R\23\0\0\0R%\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\n\0\0\0setdefault>\0\0\0s\6\0\0\0\0\1\f\1\r\1c\2\0\0\0\3\0\0\0\3\0\0\0G\0\0\0s\23\0\0\0|\0\0j\0\0j\1\0|\1\0|\2\0\214\1\0S(\1\0\0\0N(\2\0\0\0R\1\0\0\0t\3\0\0\0pop(\3\0\0\0R\5\0\0\0R\23\0\0\0t\4\0\0\0args(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR(\0\0\0B\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0N(\2\0\0\0R\1\0\0\0t\7\0\0\0popitem(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR*\0\0\0D\0\0\0s\2\0\0\0", 4096) = 4096
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669319, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8730, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(6, "\0\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\1\0|\0\0j\0\0k\6\0S(\1\0\0\0N(\1\0\0\0R\1\0\0\0(\2\0\0\0R\5\0\0\0R\23\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\f\0\0\0__contains__F\0\0\0s\2\0\0\0\0\1c\3\0\0\0\5\0\0\0\4\0\0\0C\0\0\0s(\0\0\0|\0\0\203\0\0}\3\0x\30\0|\1\0D]\20\0}\4\0|\2\0|\3\0|\4\0<q\20\0W|\3\0S(\1\0\0\0N(\0\0\0\0(\5\0\0\0t\3\0\0\0clst\10\0\0\0iterablet\5\0\0\0valuet\1\0\0\0dR\23\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\10\0\0\0fromkeysH\0\0\0s\10\0\0\0\0\2\t\1\r\1\16\1N(\34\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__R\2\0\0\0R\10\0\0\0R\n\0\0\0R\r\0\0\0t\10\0\0\0__hash__R\16\0\0\0R\24\0\0\0R\26\0\0\0R\27\0\0\0R\30\0\0\0R\31\0\0\0R\33\0\0\0R\34\0\0\0R\35\0\0\0R\36\0\0\0R\37\0\0\0R \0\0\0R!\0\0\0R\3\0\0\0R&\0\0\0R'\0\0\0R(\0\0\0R*\0\0\0R+\0\0\0t\v\0\0\0classmethodR0\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\0\0\0\0\3\0\0\0s2\0\0\0\6\1\f\6\t\1\t\5\6\1\t\1\t\6\t\1\t\1\t\1\t\f\t\1\t\1\t\1\t\1\t\1\t\1\t\1\f\f\f\4\f\4\t\2\t\2\t\2\3\1t\20\0\0\0IterableUserDictc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\21\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0RS(\1\0\0\0c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0j\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0t\4\0\0\0iterR\1\0\0\0(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\10\0\0\0__iter__P\0\0\0s\2\0\0\0\0\1(\3\0\0\0R1\0\0\0R2\0\0\0R7\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR5\0\0\0O\0\0\0s\2\0\0\0\6\1i\377\377\377\377Nt\t\0\0\0DictMixinc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s\252\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0d\3\0\204\0\0Z\5\0d\4\0\204\0\0Z\6\0d\5\0\204\0\0Z\7\0d\6\0\204\0\0Z\10\0d\7\0\204\0\0Z\t\0d\10\0\204\0\0Z\n\0d\21\0d\t\0\204\1\0Z\f\0d\n\0\204\0\0Z\r\0d\v\0\204\0\0Z\16\0d\21\0d\f\0\204\1\0Z\17\0d\21\0d\r\0\204\1\0Z\20\0d\16\0\204\0\0Z\21\0d\17\0\204\0\0Z\22\0d\20\0\204\0\0Z\23\0RS(\22\0\0\0c\1\0\0\0\2\0\0\0\2\0\0\0c\0\0\0s \0\0\0x\31\0|\0\0j\0\0\203\0\0D]\v\0}\1\0|\1\0V\1q\r\0Wd\0\0S(\1\0\0\0N(\1\0\0\0R\33\0\0\0(\2\0\0\0R\5\0\0\0R#\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR7\0\0\0`\0\0\0s\4\0\0\0\0\1\23\1c\2\0\0\0\2\0\0\0\5\0\0\0C\0\0\0s%\0\0\0y\f\0|\0\0|\1\0\31\1Wn\22\0\4t\0\0k\n\0r \0\1\1\1t\1\0SXt\2\0S(\1\0\0\0N(\3\0\0\0R\22\0\0\0t\5\0\0\0Falset\4\0\0\0True(\2\0\0\0R\5\0\0\0R\23\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR!\0\0\0c\0\0\0s\n\0\0\0\0\1\3\1\f\1\r\1\5\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0|\1\0\203\1\0S(\1\0\0\0N(\1\0\0\0R!\0\0\0(\2\0\0\0R\5\0\0\0R\23\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR+\0\0\0i\0\0\0s\2\0\0\0\0\1c\1\0\0\0\2\0\0\0\4\0\0\0c\0\0\0s$\0\0\0x\35\0|\0\0D]\25\0}\1\0|\1\0|\0\0|\1\0\31f\2\0V\1q\7\0Wd\0\0S(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\5\0\0\0R#\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\35\0\0\0m\0\0\0s\4\0\0\0\0\1\r\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0|\0\0j\0\0\203\0\0S(\1\0\0\0N(\1\0\0\0R7\0\0\0(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\36\0\0\0p\0\0\0s\2\0\0\0\0\1c\1\0\0\0\3\0\0\0\3\0\0\0c\0\0\0s&\0\0\0x\37\0|\0\0j\0\0\203\0\0D]\21\0\\\2\0}\1\0}\2\0|\2\0V\1q\r\0Wd\0\0S(\1\0\0\0N(\1\0\0\0R\35\0\0\0(\3\0\0\0R\5\0\0\0t\1\0\0\0_R$\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\37\0\0\0t\0\0\0s\4\0\0\0\0\1\31\1c\1\0\0\0\3\0\0\0\4\0\0\0C\0\0\0s#\0\0\0g\0\0|\0\0j\0\0\203\0\0D]\22\0\\\2\0}\1\0}\2\0|\2\0^\2\0q\r\0S(\1\0\0\0N(\1\0\0\0R\35\0\0\0(\3\0\0\0R\5\0\0\0R;\0\0\0R$\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR \0\0\0w\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0|\0\0j\1\0\203\0\0\203\1\0S(\1\0\0\0N(\2\0\0\0t\4\0\0\0listR\35\0\0\0(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\34\0\0\0y\0\0\0s\2\0\0\0\0\1c\1\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\"\0\0\0x\33\0|\0\0j\0\0\203\0\0D]\r\0}\1\0|\0\0|\1\0=q\r\0Wd\0\0S(\1\0\0\0N(\1\0\0\0R\33\0\0\0(\2\0\0\0R\5\0\0\0R\23\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\30\0\0\0{\0\0\0s\4\0\0\0\0\1\23\1c\3\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s.\0\0\0y\f\0|\0\0|\1\0\31SWn\33\0\4t\0\0k\n\0r)\0\1\1\1|\2\0|\0\0|\1\0<n\1\0X|\2\0S(\1\0\0\0N(\1\0\0\0R\22\0\0\0(\3\0\0\0R\5\0\0\0R\23\0\0\0t\7\0\0\0default(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR'\0\0\0~\0\0\0s\n\0\0\0\0\1\3\1\f\1\r\1\16\1c\2\0\0\0\4\0\0\0\6\0\0\0G\0\0\0sp\0\0\0t\0\0|\2\0\203\1\0d\1\0k\4\0r2\0t\1\0d\2\0t\2\0d\1\0t\0\0|\2\0\203\1\0\27\203\1\0\27\202\2\0n\0\0y\16\0|\0\0|\1\0\31}\3\0Wn\"\0\4t\3\0k\n\0rd\0\1\1\1|\2\0r^\0|\2\0d\3\0\31S\202\0\0n\1\0X|\0\0|\1\0=|\3\0S(\4\0\0\0Ni\1\0\0\0s&\0\0\0pop expected at most 2 arguments, got i\0\0\0\0(\4\0\0\0R\4\0\0\0t\t\0\0\0TypeErrorR\t\0\0\0R\22\0\0\0(\4\0\0\0R\5\0\0\0R\23\0\0\0R)\0\0\0R.\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR(\0\0\0\204\0\0\0s\26\0\0\0\0\1\22\1\6\1\32\1\3\1\16\1\r\1\6\1\10\1\7\1\7\1c\1\0\0\0\3\0\0\0\5\0\0\0C\0\0\0sJ\0\0\0y\34\0|\0\0j\0\0\203\0\0j\1\0\203\0\0\\\2\0}\1\0}\2\0Wn\32\0\4t\2\0k\n\0r8\0\1\1\1t\3\0d\1\0\202\2\0n\1\0X|\0\0|\1\0=|\1\0|\2\0f\2\0S(\2\0\0\0Ns\22\0\0\0container is empty(\4\0\0\0R\35\0\0\0t\4\0\0\0nextt\r\0\0\0StopIterationR\22\0\0\0(\3\0\0\0R\5\0\0\0R#\0\0\0R$\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR*\0\0\0\220\0\0\0s\f\0\0\0\0\1\3\1\34\1\r\1\r\1\7\1c\2\0\0\0\5\0\0\0\4\0\0\0K\0\0\0s\272\0\0\0|\1\0d\0\0k\10\0r\17\0n\221\0t\1\0|\1\0d\1\0\203\2\0rH\0x\177\0|\1\0j\2\0\203\0\0D]\26\0\\\2\0}\3\0}\4\0|\4\0|\0\0|\3\0<q+\0WnX\0t\1\0|\1\0d\2\0\203\2\0r\177\0xF\0|\1\0j\3\0\203\0\0D]\24\0}\3\0|\1\0|\3\0\31|\0\0|\3\0<qd\0Wn!\0x\36\0|\1\0D]\26\0\\\2\0}\3\0}\4\0|\4\0|\0\0|\3\0<q\206\0W|\2\0r\266\0|\0\0j\4\0|\2\0\203\1\0\1n\0\0d\0\0S(\3\0\0\0NR\35\0\0\0R\33\0\0\0(\5\0\0\0R\2\0\0\0R\20\0\0\0R\35\0\0\0R\33\0\0\0R\3\0\0\0(\5\0\0\0R\5\0\0\0t\5\0\0\0otherR\7\0\0\0R#\0\0\0R$\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\3\0\0\0\227\0\0\0s\30\0\0\0\0\2\f\1\3\1\17\1\31\1\21\1\17\1\23\1\25\2\23\1\16\1\6\1c\3\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s%\0\0\0y\f\0|\0\0|\1\0\31SWn\22\0\4t\0\0k\n\0r \0\1\1\1|\2\0SXd\0\0S(\1\0\0\0N(\1\0\0\0R\22\0\0\0(\3\0\0\0R\5\0\0\0R\23\0\0\0R=\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR&\0\0\0\246\0\0\0s\10\0\0\0\0\1\3\1\f\1\r\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\26\0\0\0t\0\0t\1\0|\0\0j\2\0\203\0\0\203\1\0\203\1\0S(\1\0\0\0N(\3\0\0\0R\t\0\0\0R\6\0\0\0R\35\0\0\0(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\n\0\0\0\253\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0sM\0\0\0|\1\0d\0\0k\10\0r\20\0d\1\0St\1\0|\1\0t\2\0\203\2\0r4\0t\3\0|\1\0j\4\0\203\0\0\203\1\0}\1\0n\0\0t\5\0t\3\0|\0\0j\4\0\203\0\0\203\1\0|\1\0\203\2\0S(\2\0\0\0Ni\1\0\0\0(\6\0\0\0R\2\0\0\0R\v\0\0\0R8\0\0\0R\6\0\0\0R\35\0\0\0R\f\0\0\0(\2\0\0\0R\5\0\0\0RA\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7", 4096) = 4096
27308 read(6, "/UserDict.pyR\r\0\0\0\255\0\0\0s\n\0\0\0\0\1\f\1\4\1\17\1\25\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0|\0\0j\1\0\203\0\0\203\1\0S(\1\0\0\0N(\2\0\0\0R\4\0\0\0R\33\0\0\0(\1\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR\16\0\0\0\263\0\0\0s\2\0\0\0\0\1N(\24\0\0\0R1\0\0\0R2\0\0\0R7\0\0\0R!\0\0\0R+\0\0\0R\35\0\0\0R\36\0\0\0R\37\0\0\0R \0\0\0R\34\0\0\0R\30\0\0\0R\2\0\0\0R'\0\0\0R(\0\0\0R*\0\0\0R\3\0\0\0R&\0\0\0R\n\0\0\0R\r\0\0\0R\16\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyR8\0\0\0W\0\0\0s\"\0\0\0\6\t\t\3\t\6\t\4\t\3\t\4\t\3\t\2\t\2\t\3\f\6\t\f\t\7\f\17\f\5\t\2\t\6(\0\0\0\0(\0\0\0\0(\7\0\0\0t\7\0\0\0__doc__R\0\0\0\0R5\0\0\0t\7\0\0\0_abcollt\16\0\0\0MutableMappingt\10\0\0\0registerR8\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/UserDict.pyt\10\0\0\0<module>\1\0\0\0s\n\0\0\0\6\2\23L\26\4\f\1\20\3", 4096) = 538
27308 read(6, "", 4096)                 = 0
27308 close(6)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/_abcoll", 0xbfffd68c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_abcoll.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_abcoll.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_abcollmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_abcoll.py", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=661441, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=18496, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/_abcoll.pyc", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669320, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=25344, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(7, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\20\0\0\0@\0\0\0sI\2\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0m\2\0Z\2\0m\3\0Z\3\0\1d\1\0d\3\0l\4\0Z\4\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0d\v\0d\f\0d\r\0d\16\0d\17\0d\20\0d\21\0d\22\0d\23\0g\20\0Z\5\0d\24\0\204\0\0Z\6\0d\4\0d%\0d\25\0\204\0\0\203\0\0YZ\7\0d\5\0d&\0d\26\0\204\0\0\203\0\0YZ\10\0e\10\0j\t\0e\n\0\203\1\0\1d\6\0e\10\0f\1\0d\27\0\204\0\0\203\0\0YZ\v\0d\7\0d'\0d\30\0\204\0\0\203\0\0YZ\f\0d\10\0d(\0d\31\0\204\0\0\203\0\0YZ\r\0d\t\0d)\0d\32\0\204\0\0\203\0\0YZ\16\0d\n\0e\f\0e\10\0e\r\0f\3\0d\33\0\204\0\0\203\0\0YZ\17\0e\17\0j\t\0e\20\0\203\1\0\1d\v\0e\17\0f\1\0d\34\0\204\0\0\203\0\0YZ\21\0e\21\0j\t\0e\22\0\203\1\0\1d\f\0e\f\0e\10\0e\r\0f\3\0d\35\0\204\0\0\203\0\0YZ\23\0d\16\0e\f\0f\1\0d\36\0\204\0\0\203\0\0YZ\24\0d\17\0e\24\0e\17\0f\2\0d\37\0\204\0\0\203\0\0YZ\25\0d\20\0e\24\0e\17\0f\2\0d \0\204\0\0\203\0\0YZ\26\0d\21\0e\24\0f\1\0d!\0\204\0\0\203\0\0YZ\27\0d\r\0e\23\0f\1\0d\"\0\204\0\0\203\0\0YZ\30\0e\30\0j\t\0e\31\0\203\1\0\1d\22\0e\f\0e\10\0e\r\0f\3\0d#\0\204\0\0\203\0\0YZ\32\0e\32\0j\t\0e\33\0\203\1\0\1e\32\0j\t\0e\34\0\203\1\0\1e\32\0j\t\0e\35\0\203\1\0\1e\32\0j\t\0e\36\0\203\1\0\1d\23\0e\32\0f\1\0d$\0\204\0\0\203\0\0YZ\37\0e\37\0j\t\0e \0\203\1\0\1d\3\0S(*\0\0\0s\7\1\0\0Abstract Base Classes (ABCs) for collections, according to PEP 3119.\n\nDON'T USE THIS MODULE DIRECTLY!  The classes here should be imported\nvia collections; they are defined here only to alleviate certain\nbootstrapping issues.  Unit tests are in test_collections.\ni\377\377\377\377(\2\0\0\0t\7\0\0\0ABCMetat\16\0\0\0abstractmethodNt\10\0\0\0Hashablet\10\0\0\0Iterablet\10\0\0\0Iteratort\5\0\0\0Sizedt\t\0\0\0Containert\10\0\0\0Callablet\3\0\0\0Sett\n\0\0\0MutableSett\7\0\0\0Mappingt\16\0\0\0MutableMappingt\v\0\0\0MappingViewt\10\0\0\0KeysViewt\t\0\0\0ItemsViewt\n\0\0\0ValuesViewt\10\0\0\0Sequencet\17\0\0\0MutableSequencec\2\0\0\0\2\0\0\0\5\0\0\0\3\0\0\0sC\0\0\0y!\0t\0\0\207\0\0f\1\0d\1\0\206\0\0|\0\0j\1\0D\203\1\0\203\1\0SWn\33\0\4t\2\0k\n\0r>\0\1\1\1t\3\0|\0\0\210\0\0\203\2\0SXd\0\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\3\0\0\0003\0\0\0s\36\0\0\0|\0\0]\24\0}\1\0\210\0\0|\1\0j\0\0k\6\0V\1q\3\0d\0\0S(\1\0\0\0N(\1\0\0\0t\10\0\0\0__dict__(\2\0\0\0t\2\0\0\0.0t\1\0\0\0B(\1\0\0\0t\4\0\0\0attr(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pys\t\0\0\0<genexpr>\32\0\0\0s\2\0\0\0\6\0(\4\0\0\0t\3\0\0\0anyt\7\0\0\0__mro__t\16\0\0\0AttributeErrort\7\0\0\0hasattr(\2\0\0\0t\1\0\0\0CR\25\0\0\0(\0\0\0\0(\1\0\0\0R\25\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0_hasattr\30\0\0\0s\10\0\0\0\0\1\3\1!\1\r\2c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s,\0\0\0e\0\0Z\1\0e\2\0Z\3\0e\4\0d\0\0\204\0\0\203\1\0Z\5\0e\6\0d\1\0\204\0\0\203\1\0Z\7\0RS(\2\0\0\0c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\1\0S(\2\0\0\0Ni\0\0\0\0(\0\0\0\0(\1\0\0\0t\4\0\0\0self(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0__hash__#\0\0\0s\2\0\0\0\0\2c\2\0\0\0\3\0\0\0\5\0\0\0C\0\0\0sy\0\0\0|\0\0t\0\0k\10\0ru\0y<\0x5\0|\1\0j\1\0D]*\0}\2\0d\1\0|\2\0j\2\0k\6\0r\31\0|\2\0j\2\0d\1\0\31r?\0t\3\0SPq\31\0q\31\0WWqu\0\4t\4\0k\n\0rq\0\1\1\1t\5\0|\1\0d\1\0d\0\0\203\3\0rr\0t\3\0Squ\0Xn\0\0t\7\0S(\2\0\0\0NR\35\0\0\0(\10\0\0\0R\2\0\0\0R\27\0\0\0R\22\0\0\0t\4\0\0\0TrueR\30\0\0\0t\7\0\0\0getattrt\4\0\0\0Nonet\16\0\0\0NotImplemented(\3\0\0\0t\3\0\0\0clsR\32\0\0\0R\24\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\20\0\0\0__subclasshook__'\0\0\0s\26\0\0\0\0\2\f\1\3\1\20\1\17\1\r\1\4\1\f\1\r\2\22\1\v\1(\10\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__R\0\0\0\0t\r\0\0\0__metaclass__R\1\0\0\0R\35\0\0\0t\v\0\0\0classmethodR#\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\2\0\0\0 \0\0\0s\6\0\0\0\6\1\6\2\17\4c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s,\0\0\0e\0\0Z\1\0e\2\0Z\3\0e\4\0d\0\0\204\0\0\203\1\0Z\5\0e\6\0d\1\0\204\0\0\203\1\0Z\7\0RS(\2\0\0\0c\1\0\0\0\1\0\0\0\1\0\0\0c\0\0\0s\26\0\0\0x\17\0t\0\0r\21\0d\0\0V\1q\3\0Wd\0\0S(\1\0\0\0N(\2\0\0\0t\5\0\0\0FalseR \0\0\0(\1\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0__iter__:\0\0\0s\4\0\0\0\0\2\t\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s&\0\0\0|\0\0t\0\0k\10\0r\"\0t\1\0|\1\0d\1\0\203\2\0r\"\0t\2\0Sn\0\0t\3\0S(\2\0\0\0NR)\0\0\0(\4\0\0\0R\3\0\0\0R\33\0\0\0R\36\0\0\0R!\0\0\0(\2\0\0\0R\"\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR#\0\0\0?\0\0\0s\10\0\0\0\0\2\f\1\17\1\7\1(\10\0\0\0R$\0\0\0R%\0\0\0R\0\0\0\0R&\0\0\0R\1\0\0\0R)\0\0\0R'\0\0\0R#\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\3\0\0\0007\0\0\0s\6\0\0\0\6\1\6\2\17\5c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s/\0\0\0e\0\0Z\1\0e\2\0d\0\0\204\0\0\203\1\0Z\3\0d\1\0\204\0\0Z\4\0e\5\0d\2\0\204\0\0\203\1\0Z\6\0RS(\3\0\0\0c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\1\0S(\2\0\0\0sK\0\0\0Return the next item from the iterator. When exhausted, raise StopIterationN(\1\0\0\0t\r\0\0\0StopIteration(\1\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\4\0\0\0nextK\0\0\0s\2\0\0\0\0\3c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0|\0\0S(\1\0\0\0N(\0\0\0\0(\1\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR)\0\0\0P\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s5\0\0\0|\0\0t\0\0k\10\0r1\0t\1\0|\1\0d\1\0\203\2\0r1\0t\1\0|\1\0d\2\0\203\2\0r1\0t\2\0Sn\0\0t\3\0S(\3\0\0\0NR+\0\0\0R)\0\0\0(\4\0\0\0R\4\0\0\0R\33\0\0\0R\36\0\0\0R!\0\0\0(\2\0\0\0R\"\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR#\0\0\0S\0\0\0s\10\0\0\0\0\2\f\1\36\1\7\1(\7\0\0\0R$\0\0\0R%\0\0\0R\1\0\0\0R+\0\0\0R)\0\0\0R'\0\0\0R#\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\4\0\0\0I\0\0\0s\6\0\0\0\6\2\17\5\t\3c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s,\0\0\0e\0\0Z\1\0e\2\0Z\3\0e\4\0d\0\0\204\0\0\203\1\0Z\5\0e\6\0d\1\0\204\0\0\203\1\0Z\7\0RS(\2\0\0\0c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\1\0S(\2\0\0\0Ni\0\0\0\0(\0\0\0\0(\1\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\7\0\0\0__len__^\0\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s&\0\0\0|\0\0t\0\0k\10\0r\"\0t\1\0|\1\0d\1\0\203\2\0r\"\0t\2\0Sn\0\0t\3\0S(\2\0\0\0NR,\0\0\0(\4\0\0\0R\5\0\0\0R\33\0\0\0R\36\0\0\0R!\0\0\0(\2\0\0\0R\"\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR#\0\0\0b\0\0\0s\10\0\0\0\0\2\f\1\17\1\7\1(\10\0\0\0R$\0\0\0R%\0\0\0R\0\0\0\0R&\0\0\0R\1\0\0\0R,\0\0\0R'\0\0\0R#\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\5\0\0\0[\0\0\0s\6\0\0\0\6\1\6\2\17\4c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s,\0\0\0e\0\0Z\1\0e\2\0Z\3\0e\4\0d\0\0\204\0\0\203\1\0Z\5\0e\6\0d\1\0\204\0\0\203\1\0Z\7\0RS(\2\0\0\0c\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0t\0\0S(\1\0\0\0N(\1\0\0\0R(\0\0\0(\2\0\0\0R\34\0\0\0t\1\0\0\0x(\0\0\0\0", 4096) = 4096
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669320, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=25344, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(7, "(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\f\0\0\0__contains__m\0\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s&\0\0\0|\0\0t\0\0k\10\0r\"\0t\1\0|\1\0d\1\0\203\2\0r\"\0t\2\0Sn\0\0t\3\0S(\2\0\0\0NR.\0\0\0(\4\0\0\0R\6\0\0\0R\33\0\0\0R\36\0\0\0R!\0\0\0(\2\0\0\0R\"\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR#\0\0\0q\0\0\0s\10\0\0\0\0\2\f\1\17\1\7\1(\10\0\0\0R$\0\0\0R%\0\0\0R\0\0\0\0R&\0\0\0R\1\0\0\0R.\0\0\0R'\0\0\0R#\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\6\0\0\0j\0\0\0s\6\0\0\0\6\1\6\2\17\4c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s,\0\0\0e\0\0Z\1\0e\2\0Z\3\0e\4\0d\0\0\204\0\0\203\1\0Z\5\0e\6\0d\1\0\204\0\0\203\1\0Z\7\0RS(\2\0\0\0c\1\0\0\0\3\0\0\0\1\0\0\0O\0\0\0s\4\0\0\0t\0\0S(\1\0\0\0N(\1\0\0\0R(\0\0\0(\3\0\0\0R\34\0\0\0t\4\0\0\0argst\4\0\0\0kwds(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0__call__|\0\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s&\0\0\0|\0\0t\0\0k\10\0r\"\0t\1\0|\1\0d\1\0\203\2\0r\"\0t\2\0Sn\0\0t\3\0S(\2\0\0\0NR1\0\0\0(\4\0\0\0R\7\0\0\0R\33\0\0\0R\36\0\0\0R!\0\0\0(\2\0\0\0R\"\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR#\0\0\0\200\0\0\0s\10\0\0\0\0\2\f\1\17\1\7\1(\10\0\0\0R$\0\0\0R%\0\0\0R\0\0\0\0R&\0\0\0R\1\0\0\0R1\0\0\0R'\0\0\0R#\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\7\0\0\0y\0\0\0s\6\0\0\0\6\1\6\2\17\4c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s\252\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0d\3\0\204\0\0Z\5\0d\4\0\204\0\0Z\6\0d\5\0\204\0\0Z\7\0d\6\0\204\0\0Z\10\0e\t\0d\7\0\204\0\0\203\1\0Z\n\0d\10\0\204\0\0Z\v\0e\v\0Z\f\0d\t\0\204\0\0Z\r\0d\n\0\204\0\0Z\16\0e\16\0Z\17\0d\v\0\204\0\0Z\20\0d\f\0\204\0\0Z\21\0d\r\0\204\0\0Z\22\0e\22\0Z\23\0d\17\0Z\25\0d\16\0\204\0\0Z\26\0RS(\20\0\0\0sZ\1\0\0A set is a finite, iterable container.\n\n    This class provides concrete generic implementations of all\n    methods except for __contains__, __iter__ and __len__.\n\n    To override the comparisons (presumably for speed, as the\n    semantics are fixed), redefine __le__ and __ge__,\n    then the other operations will automatically follow suit.\n    c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sT\0\0\0t\0\0|\1\0t\1\0\203\2\0s\23\0t\2\0St\3\0|\0\0\203\1\0t\3\0|\1\0\203\1\0k\4\0r/\0t\4\0Sx\36\0|\0\0D]\26\0}\2\0|\2\0|\1\0k\7\0r6\0t\4\0Sq6\0Wt\5\0S(\1\0\0\0N(\6\0\0\0t\n\0\0\0isinstanceR\10\0\0\0R!\0\0\0t\3\0\0\0lenR(\0\0\0R\36\0\0\0(\3\0\0\0R\34\0\0\0t\5\0\0\0othert\4\0\0\0elem(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\6\0\0\0__le__\226\0\0\0s\20\0\0\0\0\1\17\1\4\1\30\1\4\1\r\1\f\1\10\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s8\0\0\0t\0\0|\1\0t\1\0\203\2\0s\23\0t\2\0St\3\0|\0\0\203\1\0t\3\0|\1\0\203\1\0k\0\0o7\0|\0\0j\4\0|\1\0\203\1\0S(\1\0\0\0N(\5\0\0\0R2\0\0\0R\10\0\0\0R!\0\0\0R3\0\0\0R6\0\0\0(\2\0\0\0R\34\0\0\0R4\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\6\0\0\0__lt__\240\0\0\0s\6\0\0\0\0\1\17\1\4\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s8\0\0\0t\0\0|\1\0t\1\0\203\2\0s\23\0t\2\0St\3\0|\0\0\203\1\0t\3\0|\1\0\203\1\0k\4\0o7\0|\0\0j\4\0|\1\0\203\1\0S(\1\0\0\0N(\5\0\0\0R2\0\0\0R\10\0\0\0R!\0\0\0R3\0\0\0t\6\0\0\0__ge__(\2\0\0\0R\34\0\0\0R4\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\6\0\0\0__gt__\245\0\0\0s\6\0\0\0\0\1\17\1\4\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sT\0\0\0t\0\0|\1\0t\1\0\203\2\0s\23\0t\2\0St\3\0|\0\0\203\1\0t\3\0|\1\0\203\1\0k\0\0r/\0t\4\0Sx\36\0|\1\0D]\26\0}\2\0|\2\0|\0\0k\7\0r6\0t\4\0Sq6\0Wt\5\0S(\1\0\0\0N(\6\0\0\0R2\0\0\0R\10\0\0\0R!\0\0\0R3\0\0\0R(\0\0\0R\36\0\0\0(\3\0\0\0R\34\0\0\0R4\0\0\0R5\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR8\0\0\0\252\0\0\0s\20\0\0\0\0\1\17\1\4\1\30\1\4\1\r\1\f\1\10\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s8\0\0\0t\0\0|\1\0t\1\0\203\2\0s\23\0t\2\0St\3\0|\0\0\203\1\0t\3\0|\1\0\203\1\0k\2\0o7\0|\0\0j\4\0|\1\0\203\1\0S(\1\0\0\0N(\5\0\0\0R2\0\0\0R\10\0\0\0R!\0\0\0R3\0\0\0R6\0\0\0(\2\0\0\0R\34\0\0\0R4\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\6\0\0\0__eq__\264\0\0\0s\6\0\0\0\0\1\17\1\4\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\v\0\0\0|\0\0|\1\0k\2\0\fS(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\34\0\0\0R4\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\6\0\0\0__ne__\271\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0|\0\0|\1\0\203\1\0S(\1\0\0\0s\274\0\0\0Construct an instance of the class from any iterable input.\n\n        Must override this method if the class constructor signature\n        does not accept an iterable for an input.\n        (\0\0\0\0(\2\0\0\0R\"\0\0\0t\2\0\0\0it(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\16\0\0\0_from_iterable\274\0\0\0s\2\0\0\0\0\7c\2\0\0\0\2\0\0\0\3\0\0\0\3\0\0\0s0\0\0\0t\0\0|\1\0t\1\0\203\2\0s\23\0t\2\0S\210\0\0j\3\0\207\0\0f\1\0d\1\0\206\0\0|\1\0D\203\1\0\203\1\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\3\0\0\0003\0\0\0s!\0\0\0|\0\0]\27\0}\1\0|\1\0\210\0\0k\6\0r\3\0|\1\0V\1q\3\0d\0\0S(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\23\0\0\0t\5\0\0\0value(\1\0\0\0R\34\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pys\t\0\0\0<genexpr>\310\0\0\0s\2\0\0\0\6\0(\4\0\0\0R2\0\0\0R\3\0\0\0R!\0\0\0R=\0\0\0(\2\0\0\0R\34\0\0\0R4\0\0\0(\0\0\0\0(\1\0\0\0R\34\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\7\0\0\0__and__\305\0\0\0s\6\0\0\0\0\1\17\1\4\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s%\0\0\0x\36\0|\1\0D]\26\0}\2\0|\2\0|\0\0k\6\0r\7\0t\0\0Sq\7\0Wt\1\0S(\1\0\0\0s1\0\0\0Return True if two sets have a null intersection.(\2\0\0\0R(\0\0\0R\36\0\0\0(\3\0\0\0R\34\0\0\0R4\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\n\0\0\0isdisjoint\314\0\0\0s\10\0\0\0\0\2\r\1\f\1\10\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s6\0\0\0t\0\0|\1\0t\1\0\203\2\0s\23\0t\2\0Sd\1\0\204\0\0|\0\0|\1\0f\2\0D\203\1\0}\2\0|\0\0j\3\0|\2\0\203\1\0S(\2\0\0\0Nc\1\0\0\0\3\0\0\0\3\0\0\0s\0\0\0s\"\0\0\0|\0\0]\30\0}\1\0|\1\0D]\v\0}\2\0|\2\0V\1q\r\0q\3\0d\0\0S(\1\0\0\0N(\0\0\0\0(\3\0\0\0R\23\0\0\0t\1\0\0\0st\1\0\0\0e(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pys\t\0\0\0<genexpr>\326\0\0\0s\2\0\0\0\6\0(\4\0\0\0R2\0\0\0R\3\0\0\0R!\0\0\0R=\0\0\0(\3\0\0\0R\34\0\0\0R4\0\0\0t\5\0\0\0chain(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\6\0\0\0__or__\323\0\0\0s\10\0\0\0\0\1\17\1\4\1\26\1c\2\0\0\0\2\0\0\0\3\0\0\0\3\0\0\0sQ\0\0\0t\0\0\210\0\0t\1\0\203\2\0s4\0t\0\0\210\0\0t\2\0\203\2\0s\"\0t\3\0S|\0\0j\4\0\210\0\0\203\1\0\211\0\0n\0\0|\0\0j\4\0\207\0\0f\1\0d\1\0\206\0\0|\0\0D\203\1\0\203\1\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\3\0\0\0003\0\0\0s!\0\0\0|\0\0]\27\0}\1\0|\1\0\210\0\0k\7\0r\3\0|\1\0V\1q\3\0d\0\0S(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\23\0\0\0R>\0\0\0(\1\0\0\0R4\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pys\t\0\0\0<genexpr>\340\0\0\0s\4\0\0\0\6\0\3\1(\5\0\0\0R2\0\0\0R\10\0\0\0R\3\0\0\0R!\0\0\0R=\0\0\0(\2\0\0\0R\34\0\0\0R4\0\0\0(\0\0\0\0(\1\0\0\0R4\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\7\0\0\0__sub__\333\0\0\0s\n\0\0\0\0\1\17\1\17\1\4\1\22\1c\2\0\0\0\2\0\0\0\3\0\0\0\3\0\0\0sQ\0\0\0t\0\0|\1\0t\1\0\203\2\0s4\0t\0\0|\1\0t\2\0\203\2\0s\"\0t\3\0S\210\0\0j\4\0|\1\0\203\1\0}\1\0n\0\0\210\0\0j\4\0\207\0\0f\1\0d\1\0\206\0\0|\1\0D\203\1\0\203\1\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\3\0\0\0003\0\0\0s!\0\0\0|\0\0]\27\0}\1\0|\1\0\210\0\0k\7\0r\3\0|\1\0V\1q\3\0d\0\0S(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\23\0\0\0R>\0\0\0(\1\0\0\0R\34\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pys\t\0\0\0<genexpr>\350\0\0\0s\4\0\0\0\6\0\3\1(\5\0\0\0R2\0\0\0R\10\0\0\0R\3\0\0\0R!\0\0\0R=\0\0\0(\2\0\0\0R\34\0\0\0R4\0\0\0(\0\0\0\0(\1\0\0\0R\34\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0__rsub__\343\0\0\0s\n\0\0\0\0\1\17\1\17\1\4\1\22\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0sD\0\0\0t\0\0|\1\0t\1\0\203\2\0s4\0t\0\0|\1\0t\2\0\203\2\0s\"\0t\3\0S|\0\0j\4\0|\1\0\203\1\0}\1\0n\0\0|\0\0|\1\0\30|\1\0|\0\0\30BS(\1\0\0\0N(\5\0\0\0R2\0\0\0R\10\0\0\0R\3\0\0\0R!\0\0\0R=\0\0\0(\2\0\0\0R\34\0\0\0R4\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\7\0\0\0__xor__\353\0\0\0s\n\0\0\0\0\1\17\1\17\1\4\1\22\1c\1\0\0\0\7\0\0\0\5\0\0\0C\0\0\0s\312\0\0\0t\0\0j\1\0}\1\0d\1\0|\1\0\24d\2\0\27}\2\0t\2\0|\0\0\203\1\0}\3\0d\3\0|\3\0d\2\0\27\24}\4\0|\4\0|\2\0M}\4\0x>\0|\0\0D]6\0}\5\0t\3\0|\5\0\203\1\0}\6\0|\4\0|\6\0|\6\0d\4\0>Ad\5\0Ad\6\0\24N}\4\0|\4\0|\2\0M}\4\0qB\0W|\4\0d\7\0\24d\10\0\27}\4\0|\4\0|\2\0M}\4\0|\4\0|\1\0k\4\0r\261\0|\4\0|\2\0d\2\0\0278}\4\0n\0\0|\4\0d\t\0k\2\0r\306\0d\n\0}\4\0n\0\0|\4\0S(\v\0\0\0s+\2\0\0Compute the hash value of a set.\n\n        Note that we don't define __hash__: not all sets are hashable.\n        But if you define a hashable set type, its __hash__ should\n        call this function.\n\n        This must be compatible __eq__.\n\n        All sets ought to compare equal if they contain the same\n        elements, regardless of how they are implemented, and\n        regardless of the order of the elements; so there's not much\n        freedom for __eq__ or __hash__.  We match the algorithm used\n        by the built-in frozenset type.\n        i\2\0\0\0i\1\0\0\0iM\357\350ri\20\0\0\0i\263M[\5l\3\0\0\0\3274~2\3\0i\315\r\1\0i\343\303\0216i\377\377\377\377i\301\3078#(\4\0\0\0t\3\0\0\0syst\6\0\0\0maxintR3\0\0\0t\4\0\0\0hash(\7\0\0\0R\34\0\0\0t\3\0\0\0MAXt\4\0\0\0MASKt\1\0\0\0nt\1\0\0\0hR-\0\0\0t\2\0\0\0hx(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\5\0\0\0_hash\367\0\0\0s \0\0\0\0\17\t\1\16\1\f\1\16\1\n\1\r\1\f\1\32\1\16\1\16\1\n\1\f\1\21\1\f\1\t\1N(\27\0\0\0R$\0\0\0R%\0\0\0t\7\0\0\0__doc__R6\0\0\0R7\0\0\0R9\0\0\0R8\0\0\0R:\0\0\0R;\0\0\0R'\0\0\0R=\0\0\0R?\0\0\0t\10\0\0\0__rand__R@\0\0\0RD\0\0\0t\7\0\0\0__ror__RE\0\0\0RF\0\0\0RG\0\0\0t\10\0\0\0__rxor__R \0\0\0R\35\0\0\0RP\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\10\0\0\0\213\0\0\0s&\0\0\0\6\t\6\2\t\n\t\5\t\5\t\n\t\5\t\3\17\t\t\5\6\2\t\7\t\6\6\2\t\10\t\10\t\7\6\3\6\2c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sk\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0d\1\0\204\0\0\203\1\0Z\4\0e\3\0d\2\0\204\0\0\203\1\0Z\5\0d\3\0\204\0\0Z\6\0d\4\0\204\0\0Z\7\0d\5\0\204\0\0Z\10\0d\6\0\204\0\0Z\t\0d\7\0\204\0\0Z\n\0d\10\0\204\0\0Z\v\0d\t\0\204\0\0Z\f\0RS(\n\0\0\0s\207\1\0\0A mutable set is a finite, iterable container.\n\n    This class provides concrete generic implementations of all\n    methods except for __contains__, __iter__, __len__,\n    add(), and discard().\n\n    To override the comparisons (presumably for speed, as the\n    semantics are fixed), all you have to do is redefine __le__ and\n    then the other operations will automatically follow suit.\n    c\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\1\0S(\2\0\0\0s\17\0\0\0Add an element.N(\1\0\0\0t\23\0\0\0NotImplementedError(\2\0\0\0R\34\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\3\0\0\0add&\1\0\0s\2\0\0\0\0\3c\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\1\0S(\2\0\0\0s8\0\0\0Remove an element.  Do not raise an exception if absent.N(\1\0\0\0RU\0\0\0(\2\0\0\0R\34\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\7\0\0\0discard+\1\0\0s\2\0\0\0\0\3c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s,\0\0\0|\1\0|\0\0k\7\0r\33\0t\0\0|\1\0\203\1\0\202\1\0n\0\0|\0\0j\1\0|\1\0\203\1\0\1d\1\0S(\2\0\0\0s5\0\0\0Remove an element. If not a member, raise a KeyError.N(\2\0\0\0t\10\0\0\0KeyErrorRW\0\0\0(\2\0\0\0R\34\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\6\0\0\0remove0\1\0\0s\6\0\0\0\0\2\f\1\17\1c\1\0\0\0\3\0\0\0\5\0\0\0C\0\0\0sG\0\0\0t\0\0|\0\0\203\1\0}\1\0y\20\0t\1\0|\1\0\203\1\0}\2\0Wn\27\0\4t\2\0k\n\0r5\0\1\1\1t\3\0\202\1\0n\1\0X|\0\0j\4\0|\2\0\203\1\0\1|\2\0S(\1\0\0\0s2\0\0\0Return the popped value.  Raise KeyError if empty.(\5\0\0\0t\4\0\0\0iterR+\0\0\0R*\0\0\0RX\0\0\0RW\0\0\0(\3\0\0\0R\34\0\0\0R<\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\3\0\0\0pop6\1\0\0s\16\0\0\0\0\2\f\1\3\1\20\1\r\1\n\1\r\1c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0s3\0\0\0y\33\0x\24\0t\0\0r\31\0|\0\0j\1\0\203\0\0\1q\6\0WWn\21\0\4t\2\0k\n\0r.\0\1\1\1n\1\0Xd\1\0S(\2\0\0\0s6\0\0\0This is slow (creates N new iterators!) but effective.N(\3\0\0\0R\36\0\0\0R[\0\0\0RX\0\0\0(\1\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\5\0\0\0clear@\1\0\0s\n\0\0\0\0\2\3\1\t\1\22\1\r\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\"\0\0\0x\33\0|\1\0D]\23\0}\2\0|\0\0j\0\0|\2\0\203\1\0\1q\7\0W|\0\0S(\1\0\0\0N(\1\0\0\0RV\0\0\0(\3\0\0\0R\34\0\0\0R<\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\7\0\0\0__ior__H\1\0\0s\6\0\0\0\0\1\r\1\21\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s&\0\0\0x\37\0|\0\0|\1\0\30D]\23\0}\2\0|\0\0j\0\0|\2\0\203\1\0\1q\v\0W|\0\0S(\1\0\0\0N(\1\0\0\0RW\0\0\0(\3\0\0\0R\34\0\0\0R<\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0__iand__M\1\0\0s\6\0\0\0\0\1\21\1\21\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sx\0\0\0|\1\0|\0\0k\10\0r\31\0|\0\0j\0\0\203\0\0\1n[\0t\1\0|\1\0t\2\0\203\2\0s:\0|\0\0j\3\0|\1\0\203\1\0}\1\0n\0\0x7\0|\1\0D]/\0}\2\0|\2\0|\0\0k\6\0rc\0|\0\0j\4\0|\2\0\203\1\0\1qA\0|\0\0j\5\0|\2\0\203\1\0\1qA\0W|\0\0S(\1\0\0\0N(\6\0\0\0R\\\0\0\0R2\0\0\0R\10\0\0\0R=\0\0\0RW\0\0\0RV\0\0\0(\3\0\0\0R\34\0\0\0R<\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0__ixor__R\1\0\0s\22\0\0\0\0\1\f\1\r\2\17\1\22\1\r\1\f\1\20\2\21\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s;\0\0\0|\1\0|\0\0k\10\0r\31\0|\0\0j\0\0\203\0\0\1n\36\0x\33\0|\1\0D]\23\0}\2\0|\0\0j\1\0|\2\0\203\1\0\1q \0W|\0\0S(\1\0\0\0N(\2\0\0\0R\\\0\0\0RW\0\0\0(\3\0\0\0R\34\0\0\0R<\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0__isub___\1\0\0s\n\0\0\0\0\1\f\1\r\2\r\1\21\1(\r\0\0\0R$\0\0\0R%\0\0\0RQ\0\0\0R\1\0\0\0RV\0\0\0RW\0\0\0RY\0\0\0R[\0\0\0R\\\0\0\0R]\0\0\0R^\0\0\0R_\0\0\0R`\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\t\0\0\0\32\1\0\0s\24\0\0\0\6\n\6\2\17\5\17\5\t\6\t\n\t\10\t\5\t\5\t\rc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s\200\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0d\1\0\204\0\0\203\1\0Z\4\0d\f\0d\2\0\204\1\0Z\6\0d\3\0\204\0\0Z\7\0d\4\0\204\0\0Z\10\0d\5\0\204\0\0Z\t\0d\6\0\204\0\0Z\n\0d\7\0\204\0\0Z\v\0d\10\0\204\0\0Z\f\0d\t\0\204\0\0Z\r\0d\f\0Z\16\0d\n\0\204\0\0Z\17\0d\v\0\204\0\0Z\20\0RS(\r\0\0\0s\307\0\0\0A Mapping is a generic container for associating key/value\n    pairs.\n\n    This class provides concrete generic implementations of all\n    methods except for __getitem__, __iter__, and __len__.\n\n    c\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\0\0S(\1\0\0\0N(\1\0\0\0RX\0\0\0(\2\0\0\0R\34\0\0\0t\3\0\0\0key(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\v\0\0\0__getitem__w\1\0\0s\2\0\0\0\0\2c\3\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s%\0\0\0y\f\0|\0\0|\1\0\31SWn\22\0\4t\0\0k\n\0r \0\1\1\1|\2\0SXd\1\0S(\2\0\0\0s<\0\0\0D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.N(\1\0\0\0RX\0\0\0(\3\0\0\0R\34\0\0\0Ra\0\0\0t\7\0\0\0default(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\3\0\0\0get{\1\0\0s\10\0\0\0\0\2\3\1\f\1\r\1c\2\0\0\0\2\0\0\0\5\0\0\0C\0\0\0s)\0\0\0y\f\0|\0\0|\1\0\31\1Wn\22\0\4t\0\0k\n\0r \0\1\1\1t\1\0SXt\2\0Sd\0\0S(\1\0\0\0N(\3\0\0\0RX\0\0\0R(\0\0\0R\36\0\0\0(\2\0\0\0R\34\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR.\0\0\0\202\1\0\0s\n\0\0\0\0\1\3\1\f\1\r\1\5\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0s.\0\0\0D.iterkeys() -> an iterator over the keys of D(\1\0\0\0RZ\0\0\0(\1\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0iterkeys\212\1\0\0s\2\0\0\0\0\2c\1\0\0\0\2\0\0\0\3\0\0\0c\0\0\0s\36\0\0\0x\27\0|\0\0D]\17\0}\1\0|\0\0|\1\0\31V\1q\7\0Wd\1\0S(\2\0\0\0s2\0\0\0D.itervalues() -> an iterator over the values of DN(\0\0\0\0(\2\0\0\0R\34\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\n\0\0\0itervalues\216\1\0\0s\4\0\0\0\0\2\r\1c\1\0\0\0\2\0\0\0\4\0\0\0c\0\0\0s$\0\0\0x\35\0|\0\0D]\25\0}\1\0|\1\0|\0\0|\1\0\31f\2\0V\1q\7\0Wd\1\0S(\2\0\0\0s=\0\0\0D.iteritems() -> an iterator over the (key, value) items of DN(\0\0\0\0(\2\0\0\0R\34\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\t\0\0\0iteritems\223\1\0\0s\4\0\0\0\0\2\r\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0s\34\0\0\0D.keys() -> list of D's keys(\1\0\0\0t\4\0\0\0list(\1\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\4\0\0\0keys\230\1\0\0s\2\0\0\0\0\2c\1\0\0\0\2\0\0\0\5\0\0\0C\0\0\0s!\0\0\0g\0\0|\0\0D]\26\0}\1\0|\1\0|\0\0|\1\0\31f\2\0^\2\0q\7\0S(\1\0\0\0s8\0\0\0D.items() -> list of D's (key, value) pairs, as 2-tuples(\0\0\0\0(\2\0\0\0R\34\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\5\0\0\0items\234\1\0\0s\2\0\0\0\0\2c\1\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s\33\0\0\0g\0\0|\0\0D]\20\0}\1\0|\0\0|\1\0\31^\2\0q\7\0S(\1\0\0\0s \0\0\0D.values() -> list of D's values(\0\0\0\0(\2\0\0\0R\34\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\6\0\0\0values\240\1\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s5\0\0\0t\0\0|\1\0t\1\0\203\2\0s\23\0t\2\0St\3\0|\0\0j\4\0\203\0\0\203\1\0t\3\0|\1\0j\4\0\203\0\0\203\1\0k\2\0S(\1\0\0\0N(\5\0\0\0R2\0\0\0R\n\0\0\0R!\0\0\0t\4\0\0\0dictRj\0\0\0(\2\0\0\0R\34\0\0\0R4\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR:\0\0\0\247\1\0\0s\6\0\0\0\0\1\17\1\4\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\v\0\0\0|\0\0|\1\0k\2\0\fS(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\34\0\0\0R4\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR;\0\0\0\254\1\0\0s\2\0\0\0\0\1N(\21\0\0\0R$\0\0\0R%\0\0\0RQ\0\0\0R\1\0\0\0Rb\0\0\0R \0\0\0Rd\0\0\0R.\0\0\0Re\0\0\0Rf\0\0\0Rg\0\0\0Ri\0\0\0Rj\0\0\0Rk\0\0\0R\35\0\0\0R:\0\0\0R;\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\n\0\0\0m\1\0\0s\32\0\0\0\6\10\6\2\17\4\f\7\t\10\t\4\t\5\t\5\t\4\t\4\t\5\6\2\t\5c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s#\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0RS(\3\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\1\0|\0\0_\0\0d\0\0S(\1\0\0\0N(\1\0\0\0t\10\0\0\0_mapping(\2\0\0\0R\34\0\0\0t\7\0\0\0mapping(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0__init__\261\1\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0j\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0R3\0\0\0Rm\0\0\0(\1\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR,\0\0\0\264\1\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0d\1\0j\0\0|\0\0\203\1\0S(\2\0\0\0Ns&\0\0\0{0.__class__.__name__}({0._mapping!r})(\1\0\0\0t\6\0\0\0format(\1\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0__repr__\267\1\0\0s\2\0\0\0\0\1(\5\0\0\0R$\0\0\0R%\0\0\0Ro\0\0\0R,\0\0\0Rq\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\f\0\0\0\257\1\0\0s\6\0\0\0\6\2\t\3\t\3c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s)\0\0\0e\0\0Z\1\0e\2\0d\0\0\204\0\0\203\1\0Z\3\0d\1\0\204\0\0Z\4\0d\2\0\204\0\0Z\5\0RS(\3\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\1\0\203\1\0S(\1\0\0\0N(\1\0\0\0t\3\0\0\0set(\2\0\0\0R\34\0\0\0R<\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR=\0\0\0\275\1\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\1\0|\0\0j\0\0k\6\0S(\1\0\0\0N(\1\0\0\0Rm\0\0\0(\2\0\0\0R\34\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR.\0\0\0\301\1\0\0s\2\0\0\0\0\1c\1\0\0\0\2\0\0\0\2\0\0\0c\0\0\0s\35\0\0\0x\26\0|\0\0j\0\0D]\v\0}\1\0|\1\0V\1q\n\0Wd\0\0S(\1\0\0\0N(\1\0\0\0Rm\0\0\0(\2\0\0\0R\34\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR)\0\0\0\304\1\0\0s\4\0\0\0\0\1\20\1(\6\0\0\0R$\0\0\0R%\0\0\0R'\0\0\0R=\0\0\0R.\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\r\0\0\0\273\1\0\0s\6\0\0\0\6\2\17\4\t\3c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s)\0\0\0e\0\0Z\1\0e\2\0d\0\0\204\0\0\203\1\0Z\3\0d\1\0\204\0\0Z\4\0d\2\0\204\0\0Z\5\0RS(\3\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\1\0\203\1\0S(\1\0\0\0N(\1\0\0\0Rr\0\0\0(\2\0\0\0R\34\0\0\0R<\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR=\0\0\0\313\1\0\0s\2\0\0\0\0\2c\2\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s@\0\0\0|\1\0\\\2\0}\2\0}\3\0y\21\0|\0\0j\0\0|\2\0\31}\4\0Wn\22\0\4t\1\0k\n\0r1\0\1\1\1t\2\0SX|\4\0|\3\0k\2\0Sd\0\0S(\1\0\0\0N(\3\0\0\0Rm\0\0\0RX\0\0\0R(\0\0\0(\5\0\0\0R\34\0\0\0t\4\0\0\0itemRa\0\0\0R>\0\0\0t\1\0\0\0v(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR.\0\0\0\317\1\0\0s\f\0\0\0\0\1\f\1\3\1\21\1\r\1\5\2c\1\0\0\0\2\0\0\0\4\0\0\0c\0\0\0s*\0\0\0x#\0|\0\0j\0\0D]\30\0}\1\0|\1\0|\0\0j\0\0|\1\0\31f\2\0V\1q\n\0Wd\0\0S(\1\0\0\0N(\1\0\0\0Rm\0\0\0(\2\0\0\0R\34\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR)\0\0\0\330\1\0\0s\4\0\0\0\0\1\20\1(\6\0\0\0R$\0\0\0R%\0\0\0R'\0\0\0R=\0\0\0R.\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\16\0\0\0\311\1\0\0s\6\0\0\0\6\2\17\4\t\tc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\32\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0d\1\0\204\0\0Z\3\0RS(\2\0\0\0c\2\0\0\0\3\0\0\0\4\0\0\0C\0\0\0s/\0\0\0x(\0|\0\0j\0\0D]\35\0}\2\0|\1\0|\0\0j\0\0|\2\0\31k\2\0r\n\0t\1\0Sq\n\0Wt\2\0S(\1\0\0\0N(\3\0\0\0Rm\0\0\0R\36\0\0\0R(\0\0\0(\3\0\0\0R\34\0\0\0R>\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR.\0\0\0\337\1\0\0s\10\0\0\0\0\1\20\1\23\1\10\1c\1\0\0\0\2\0\0\0\3\0\0\0c\0\0\0s$\0\0\0x\35\0|\0\0j\0\0D]\22\0}\1\0|\0\0j\0\0|\1\0\31V\1q\n\0Wd\0\0S(\1\0\0\0N(\1\0\0\0Rm\0\0\0(\2\0\0\0R\34\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR)\0\0\0\345\1\0\0s\4\0\0\0\0\1\20\1(\4\0\0\0R$\0\0\0R%\0\0\0R.\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\17\0\0\0\335\1\0\0s\4\0\0\0\6\2\t\6c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sh\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0d\1\0\204\0\0\203\1\0Z\4\0e\3\0d\2\0\204\0\0\203\1\0Z\5\0e\6\0\203\0\0Z\7\0e\7\0d\3\0\204\1\0Z\10\0d\4\0\204\0\0Z\t\0d\5\0\204\0\0Z\n\0d\6\0\204\0\0Z\v\0d\10\0d\7\0\204\1\0Z\r\0RS(\t\0\0\0s\354\0\0\0A MutableMapping is a generic container for associating\n    key/value pairs.\n\n    This class provides concrete generic implementations of all\n    methods except for __getitem__, __setitem__, __delitem__,\n    __iter__, and __len__.\n\n    c\3\0\0\0\3\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\0\0S(\1\0\0\0N(\1\0\0\0RX\0\0\0(\3\0\0\0R\34\0\0\0Ra\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\v\0\0\0__setitem__\365\1\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\0\0S(\1\0\0\0N(\1\0\0\0RX\0\0\0(\2\0\0\0R\34\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\v\0\0\0__delitem__\371\1\0\0s\2\0\0\0\0\2c\3\0\0\0\4\0\0\0\5\0\0\0C\0\0\0sG\0\0\0y\16\0|\0\0|\1\0\31}\3\0Wn'\0\4t\0\0k\n\0r7\0\1\1\1|\2\0|\0\0j\1\0k\10\0r3\0\202\0\0n\0\0|\2\0SX|\0\0|\1\0=|\3\0Sd\1\0S(\2\0\0\0s\251\0\0\0D.pop(k[,d]) -> v, remove specified key and return the corresponding value.\n          If key is not found, d is returned if given, otherwise KeyError is raised.\n        N(\2\0\0\0RX\0\0\0t\27\0\0\0_MutableMapping__marker(\4\0\0\0R\34\0\0\0Ra\0\0\0Rc\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR[\0\0\0\377\1\0\0s\20\0\0\0\0\4\3\1\16\1\r\1\17\1\6\1\5\2\7\1c\1\0\0\0\3\0\0\0\5\0\0\0C\0\0\0sK\0\0\0y\26\0t\0\0t\1\0|\0\0\203\1\0\203\1\0}\1\0Wn\27\0\4t\2\0k\n\0r/\0\1\1\1t\3\0\202\1\0n\1\0X|\0\0|\1\0\31}\2\0|\0\0|\1\0=|\1\0|\2\0f\2\0S(\1\0\0\0s\203\0\0\0D.popitem() -> (k, v), remove and return some (key, value) pair\n           as a 2-tuple; but raise KeyError if D is empty.\n        (\4\0\0\0R+\0\0\0RZ\0\0\0R*\0\0\0RX\0\0\0(\3\0\0\0R\34\0\0\0Ra\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\7\0\0\0popitem\r\2\0\0s\16\0\0\0\0\4\3\1\26\1\r\1\n\1\n\1\7\1c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0s3\0\0\0y\33\0x\24\0t\0\0r\31\0|\0\0j\1\0\203\0\0\1q\6\0WWn\21\0\4t\2\0k\n\0r.\0\1\1\1n\1\0Xd\1\0S(\2\0\0\0s,\0\0\0D.clear() -> None.  Remove all items from D.N(\3\0\0\0R\36\0\0\0Rx\0\0\0RX\0\0\0(\1\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\\\0\0\0\31\2\0\0s\n\0\0\0\0\2\3\1\t\1\22\1\r\1c\0\0\0\0\6\0\0\0\4\0\0\0O\0\0\0s\33\1\0\0|\0\0s\25\0t\0\0d\1\0\203\1\0\202\1\0n\0\0|\0\0d\2\0\31}\2\0|\0\0d\3\0\37}\0\0t\1\0|\0\0\203\1\0d\3\0k\4\0rT\0t\0\0d\4\0t\1\0|\0\0\203\1\0\26\203\1\0\202\1\0n\0\0|\0\0r\360\0|\0\0d\2\0\31}\3\0t\2\0|\3\0t\3\0\203\2\0r\225\0xw\0|\3\0D]\24\0}\4\0|\3\0|\4\0\31|\2\0|\4\0<qz\0Wq\360\0t\4\0|\3\0d\5\0\203\2\0r\314\0xF\0|\3\0j\5\0\203\0\0D]\24\0}\4\0|\3\0|\4\0\31|\2\0|\4\0<q\261\0Wq\360\0x!\0|\3\0D]\26\0\\\2\0}\4\0}\5\0|\5\0|\2\0|\4\0<q\323\0Wn\0\0x$\0|\1\0j\6\0\203\0\0D]\26\0\\\2\0}\4\0}\5\0|\5\0|\2\0|\4\0<q\375\0Wd\6\0S(\7\0\0\0sK\1\0\0 D.update([E, ]**F) -> None.  Update D from mapping/iterable E and F.\n            If E present and has a .keys() method, does:     for k in E: D[k] = E[k]\n            If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v\n            In either case, this is followed by: for k, v in F.items(): D[k] = v\n        s@\0\0\0descriptor 'update' of 'MutableMapping' object needs an argumenti\0\0\0\0i\1\0\0\0s+\0\0\0update expected at most 1 arguments, got %dRi\0\0\0N(\7\0\0\0t\t\0\0\0TypeErrorR3\0\0\0R2\0\0\0R\n\0\0\0R\31\0\0\0Ri\0\0\0Rj\0\0\0(\6\0\0\0R/\0\0\0R0\0\0\0R\34\0\0\0R4\0\0\0Ra\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\6\0\0\0update!\2\0\0s&\0\0\0\0\6\6\1\17\2\n\1\n\1\22\1\6\1\23\1\6\1\n\1\17\1\r\1\25\1\17\1\23\1\25\2\23\1\21\1\31\1c\3\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s.\0\0\0y\f\0|\0\0|\1\0\31SWn\33\0\4t\0\0k\n\0r)\0\1\1\1|\2\0|\0\0|\1\0<n\1\0X|\2\0S(\1\0\0\0s@\0\0\0D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D(\1\0\0\0RX\0\0\0(\3\0\0\0R\34\0\0\0Ra\0\0\0Rc\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\n\0\0\0setdefault=\2\0\0s\n\0\0\0\0\2\3\1\f\1\r\1\16\1N(\16\0\0\0R$\0\0\0R%\0\0\0RQ\0\0\0R\1\0\0\0Ru\0\0\0Rv\0\0\0t\6\0\0\0objectRw\0\0\0R[\0\0\0Rx\0\0\0R\\\0\0\0Rz\0\0\0R \0\0\0R{\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\v\0\0\0\352\1\0\0s\22\0\0\0\6\t\6\2\17\4\17\4\t\2\f\16\t\f\t\10\t\34c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sJ\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0d\1\0\204\0\0\203\1\0Z\4\0d\2\0\204\0\0Z\5\0d\3\0\204\0\0Z\6\0d\4\0\204\0\0Z\7\0d\5\0\204\0\0Z\10\0d\6\0\204\0\0Z\t\0RS(\7\0\0\0s\212\0\0\0All the operations on a read-only sequence.\n\n    Concrete subclasses must override __new__ or __init__,\n    __getitem__, and __len__.\n    c\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\0\0S(\1\0\0\0N(\1\0\0\0t\n\0\0\0IndexError(\2\0\0\0R\34\0\0\0t\5\0\0\0index(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyRb\0\0\0R\2\0\0s\2\0\0\0\0\2c\1\0\0\0\3\0\0\0\5\0\0\0c\0\0\0sI\0\0\0d\1\0}\1\0y*\0x#\0t\0\0r.\0|\0\0|\1\0\31}\2\0|\2\0V\1|\1\0d\2\0007}\1\0q\f\0WWn\22\0\4t\1\0k\n\0rD\0\1\1\1d\0\0SXd\0\0S(\3\0\0\0Ni\0\0\0\0i\1\0\0\0(\2\0\0\0R\36\0\0\0R}\0\0\0(\3\0\0\0R\34\0\0\0t\1\0\0\0iRt\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR)\0\0\0V\2\0\0s\20\0\0\0\0\1\6\1\3\1\t\1\n\1\5\1\22\1\r\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s%\0\0\0x\36\0|\0\0D]\26\0}\2\0|\2\0|\1\0k\2\0r\7\0t\0\0Sq\7\0Wt\1\0S(\1\0\0\0N(\2\0\0\0R\36\0\0\0R(\0\0\0(\3\0\0\0R\34\0\0\0R>\0\0\0Rt\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR.\0\0\0`\2\0\0s\10\0\0\0\0\1\r\1\f\1\10\1c\1\0\0\0\2\0\0\0\4\0\0\0c\0\0\0s0\0\0\0x)\0t\0\0t\1\0t\2\0|\0\0\203\1\0\203\1\0\203\1\0D]\17\0}\1\0|\0\0|\1\0\31V\1q\31\0Wd\0\0S(\1\0\0\0N(\3\0\0\0t\10\0\0\0reversedt\5\0\0\0rangeR3\0\0\0(\2\0\0\0R\34\0\0\0R\177\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\f\0\0\0__reversed__f\2\0\0s\4\0\0\0\0\1\37\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0s7\0\0\0x*\0t\0\0|\0\0\203\1\0D]\34\0\\\2\0}\2\0}\3\0|\3\0|\1\0k\2\0r\r\0|\2\0Sq\r\0Wt\1\0\202\1\0d\1\0S(\2\0\0\0s|\0\0\0S.index(value) -> integer -- return first index of value.\n           Raises ValueError if the value is not present.\n        N(\2\0\0\0t\t\0\0\0enumeratet\n\0\0\0ValueError(\4\0\0\0R\34\0\0\0R>\0\0\0R\177\0\0\0Rt\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR~\0\0\0j\2\0\0s\10\0\0\0\0\4\31\1\f\1\10\1c\2\0\0\0\2\0\0\0\3\0\0\0\3\0\0\0s\32\0\0\0t\0\0\207\0\0f\1\0d\1\0\206\0\0|\0\0D\203\1\0\203\1\0S(\2\0\0\0sB\0\0\0S.count(value) -> integer -- return number of occurrences of valuec\1\0\0\0\2\0\0\0\3\0\0\0003\0\0\0s!\0\0\0|\0\0]\27\0}\1\0|\1\0\210\0\0k\2\0r\3\0d\0\0V\1q\3\0d\1\0S(\2\0\0\0i\1\0\0\0N(\0\0\0\0(\2\0\0\0R\23\0\0\0Rt\0\0\0(\1\0\0\0R>\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pys\t\0\0\0<genexpr>u\2\0\0s\2\0\0\0\6\0(\1\0\0\0t\3\0\0\0sum(\2\0\0\0R\34\0\0\0R>\0\0\0(\0\0\0\0(\1\0\0\0R>\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\5\0\0\0counts\2\0\0s\2\0\0\0\0\2(\n\0\0\0R$\0\0\0R%\0\0\0RQ\0\0\0R\1\0\0\0Rb\0\0\0R)\0\0\0R.\0\0\0R\202\0\0\0R~\0\0\0R\206\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\20\0\0\0K\2\0\0s\16\0\0\0\6\5\6\2\17\4\t\n\t\6\t\4\t\tc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0st\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0d\1\0\204\0\0\203\1\0Z\4\0e\3\0d\2\0\204\0\0\203\1\0Z\5\0e\3\0d\3\0\204\0\0\203\1\0Z\6\0d\4\0\204\0\0Z\7\0d\5\0\204\0\0Z\10\0d\6\0\204\0\0Z\t\0d\7\0d\10\0\204\1\0Z\n\0d\t\0\204\0\0Z\v\0d\n\0\204\0\0Z\f\0RS(\v\0\0\0s\256\0\0\0All the operations on a read-only sequence.\n\n    Concrete subclasses must provide __new__ or __init__,\n    __getitem__, __setitem__, __delitem__, __len__, and insert().\n\n    c\3\0\0\0\3\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\0\0S(\1\0\0\0N(\1\0\0\0R}\0\0\0(\3\0\0\0R\34\0\0\0R~\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyRu\0\0\0\206\2\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\0\0S(\1\0\0\0N(\1\0\0\0R}\0\0\0(\2\0\0\0R\34\0\0\0R~\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyRv\0\0\0\212\2\0\0s\2\0\0\0\0\2c\3\0\0\0\3\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\1\0S(\2\0\0\0s5\0\0\0S.insert(index, object) -- insert object before indexN(\1\0\0\0R}\0\0\0(\3\0\0\0R\34\0\0\0R~\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\6\0\0\0insert\216\2\0\0s\2\0\0\0\0\3c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\32\0\0\0|\0\0j\0\0t\1\0|\0\0\203\1\0|\1\0\203\2\0\1d\1\0S(\2\0\0\0s<\0\0\0S.append(object) -- append object to the end of the sequenceN(\2\0\0\0R\207\0\0\0R3\0\0\0(\2\0\0\0R\34\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\6\0\0\0append\223\2\0\0s\2\0\0\0\0\2c\1\0\0\0\3\0\0\0\5\0\0\0C\0\0\0sX\0\0\0t\0\0|\0\0\203\1\0}\1\0xE\0t\1\0|\1\0d\1\0\32\203\1\0D]3\0}\2\0|\0\0|\1\0|\2\0\30d\2\0\30\31|\0\0|\2\0\31\2|\0\0|\2\0<|\0\0|\1\0|\2\0\30d\2\0\30<q\35\0Wd\3\0S(\4\0\0\0s!\0\0\0S.reverse() -- reverse *IN PLACE*i\2\0\0\0i\1\0\0\0N(\2\0\0\0R3\0\0\0R\201\0\0\0(\3\0\0\0R\34\0\0\0RM\0\0\0R\177\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\7\0\0\0reverse\227\2\0\0s\6\0\0\0\0\2\f\1\27\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\"\0\0\0x\33\0|\1\0D]\23\0}\2\0|\0\0j\0\0|\2\0\203\1\0\1q\7\0Wd\1\0S(\2\0\0\0sM\0\0\0S.extend(iterable) -- extend sequence by appending elements from the iterableN(\1\0\0\0R\210\0\0\0(\3\0\0\0R\34\0\0\0Rk\0\0\0Rt\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\6\0\0\0extend\235\2\0\0s\4\0\0\0\0\2\r\1i\377\377\377\377c\2\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s\25\0\0\0|\0\0|\1\0\31}\2\0|\0\0|\1\0=|\2\0S(\1\0\0\0s\231\0\0\0S.pop([index]) -> item -- remove and return item at index (default last).\n           Raise IndexError if list is empty or index is out of range.\n        (\0\0\0\0(\3\0\0\0R\34\0\0\0R~\0\0\0Rt\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR[\0\0\0\242\2\0\0s\6\0\0\0\0\4\n\1\7\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\24\0\0\0|\0\0|\0\0j\0\0|\1\0\203\1\0=d\1\0S(\2\0\0\0sv\0\0\0S.remove(value) -- remove first occurrence of value.\n           Raise ValueError if the value is not present.\n        N(", 20480) = 20480
27308 read(7, "\1\0\0\0R~\0\0\0(\2\0\0\0R\34\0\0\0R>\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyRY\0\0\0\252\2\0\0s\2\0\0\0\0\4c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0|\1\0\203\1\0\1|\0\0S(\1\0\0\0N(\1\0\0\0R\212\0\0\0(\2\0\0\0R\34\0\0\0Rk\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0__iadd__\260\2\0\0s\4\0\0\0\0\1\r\1(\r\0\0\0R$\0\0\0R%\0\0\0RQ\0\0\0R\1\0\0\0Ru\0\0\0Rv\0\0\0R\207\0\0\0R\210\0\0\0R\211\0\0\0R\212\0\0\0R[\0\0\0RY\0\0\0R\213\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyR\21\0\0\0}\2\0\0s\24\0\0\0\6\7\6\2\17\4\17\4\17\5\t\4\t\6\t\5\f\10\t\6(\0\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0(!\0\0\0RQ\0\0\0t\3\0\0\0abcR\0\0\0\0R\1\0\0\0RH\0\0\0t\7\0\0\0__all__R\33\0\0\0R\2\0\0\0R\3\0\0\0t\10\0\0\0registert\3\0\0\0strR\4\0\0\0R\5\0\0\0R\6\0\0\0R\7\0\0\0R\10\0\0\0t\t\0\0\0frozensetR\t\0\0\0Rr\0\0\0R\n\0\0\0R\f\0\0\0R\r\0\0\0R\16\0\0\0R\17\0\0\0R\v\0\0\0Rl\0\0\0R\20\0\0\0t\5\0\0\0tuplet\n\0\0\0basestringt\6\0\0\0buffert\6\0\0\0xrangeR\21\0\0\0Rh\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/_abcoll.pyt\10\0\0\0<module>\t\0\0\0sD\0\0\0\6\2\26\1\f\2\t\1\t\1\6\1\6\1\f\1\f\5\t\10\23\27\23\17\r\3\26\22\23\17\23\17\23\22\34\214\r\3\26M\r\6\34B\26\f\31\16\31\24\26\r\26[\r\6\34,\r\1\r\1\r\1\r\3\0267", 4096) = 768
27308 read(7, "", 4096)                 = 0
27308 close(7)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/abc", 0xbfffd2dc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/abc.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/abc.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/abcmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/abc.py", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=661448, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=7145, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/abc.pyc", O_RDONLY|O_LARGEFILE) = 8
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669321, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=6121, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(8, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0s}\0\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\3\0l\2\0m\3\0Z\3\0\1d\4\0d\v\0d\5\0\204\0\0\203\0\0YZ\4\0e\5\0e\4\0\203\0\0\203\1\0Z\6\0d\6\0\204\0\0Z\7\0d\7\0e\10\0f\1\0d\10\0\204\0\0\203\0\0YZ\t\0d\t\0e\5\0f\1\0d\n\0\204\0\0\203\0\0YZ\n\0d\2\0S(\f\0\0\0s3\0\0\0Abstract Base Classes (ABCs) according to PEP 3119.i\377\377\377\377N(\1\0\0\0t\7\0\0\0WeakSett\2\0\0\0_Cc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__(\0\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/abc.pyR\1\0\0\0\v\0\0\0s\2\0\0\0\6\0c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0_\1\0|\0\0S(\1\0\0\0s\357\1\0\0A decorator indicating abstract methods.\n\n    Requires that the metaclass is ABCMeta or derived from it.  A\n    class that has a metaclass derived from ABCMeta cannot be\n    instantiated unless all of its abstract methods are overridden.\n    The abstract methods can be called using any of the normal\n    'super' call mechanisms.\n\n    Usage:\n\n        class C:\n            __metaclass__ = ABCMeta\n            @abstractmethod\n            def my_abstract_method(self, ...):\n                ...\n    (\2\0\0\0t\4\0\0\0Truet\24\0\0\0__isabstractmethod__(\1\0\0\0t\7\0\0\0funcobj(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/abc.pyt\16\0\0\0abstractmethod\17\0\0\0s\4\0\0\0\0\21\t\1t\20\0\0\0abstractpropertyc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\24\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0Z\4\0RS(\1\0\0\0s/\3\0\0A decorator indicating abstract properties.\n\n    Requires that the metaclass is ABCMeta or derived from it.  A\n    class that has a metaclass derived from ABCMeta cannot be\n    instantiated unless all of its abstract properties are overridden.\n    The abstract properties can be called using any of the normal\n    'super' call mechanisms.\n\n    Usage:\n\n        class C:\n            __metaclass__ = ABCMeta\n            @abstractproperty\n            def my_abstract_property(self):\n                ...\n\n    This defines a read-only property; you can also define a read-write\n    abstract property using the 'long' form of property declaration:\n\n        class C:\n            __metaclass__ = ABCMeta\n            def getx(self): ...\n            def setx(self, value): ...\n            x = abstractproperty(getx, setx)\n    (\5\0\0\0R\2\0\0\0R\3\0\0\0t\7\0\0\0__doc__R\4\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/abc.pyR\10\0\0\0$\0\0\0s\4\0\0\0\6\31\6\1t\7\0\0\0ABCMetac\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sD\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0Z\3\0d\2\0\204\0\0Z\4\0d\3\0\204\0\0Z\5\0d\7\0d\4\0\204\1\0Z\7\0d\5\0\204\0\0Z\10\0d\6\0\204\0\0Z\t\0RS(\10\0\0\0si\2\0\0Metaclass for defining Abstract Base Classes (ABCs).\n\n    Use this metaclass to create an ABC.  An ABC can be subclassed\n    directly, and then acts as a mix-in class.  You can also register\n    unrelated concrete classes (even built-in classes) and unrelated\n    ABCs as 'virtual subclasses' -- these and their descendants will\n    be considered subclasses of the registering ABC by the built-in\n    issubclass() function, but the registering ABC won't show up in\n    their MRO (Method Resolution Order) nor will method\n    implementations defined by the registering ABC be callable (not\n    even via super()).\n\n    i\0\0\0\0c\4\0\0\0\10\0\0\0\6\0\0\0C\0\0\0s\345\0\0\0t\0\0t\1\0|\0\0\203\2\0j\2\0|\0\0|\1\0|\2\0|\3\0\203\4\0}\4\0t\3\0d\1\0\204\0\0|\3\0j\4\0\203\0\0D\203\1\0\203\1\0}\5\0xb\0|\2\0D]Z\0}\6\0xQ\0t\5\0|\6\0d\2\0t\3\0\203\0\0\203\3\0D]:\0}\1\0t\5\0|\4\0|\1\0d\0\0\203\3\0}\7\0t\5\0|\7\0d\3\0t\7\0\203\3\0r`\0|\5\0j\10\0|\1\0\203\1\0\1q`\0q`\0WqD\0Wt\t\0|\5\0\203\1\0|\4\0_\n\0t\v\0\203\0\0|\4\0_\f\0t\v\0\203\0\0|\4\0_\r\0t\v\0\203\0\0|\4\0_\16\0t\1\0j\17\0|\4\0_\20\0|\4\0S(\4\0\0\0Nc\1\0\0\0\3\0\0\0\5\0\0\0s\0\0\0s-\0\0\0|\0\0]#\0\\\2\0}\1\0}\2\0t\0\0|\2\0d\0\0t\1\0\203\3\0r\3\0|\1\0V\1q\3\0d\1\0S(\2\0\0\0R\5\0\0\0N(\2\0\0\0t\7\0\0\0getattrt\5\0\0\0False(\3\0\0\0t\2\0\0\0.0t\4\0\0\0namet\5\0\0\0value(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/abc.pys\t\0\0\0<genexpr>Y\0\0\0s\4\0\0\0\6\1\t\1t\23\0\0\0__abstractmethods__R\5\0\0\0(\21\0\0\0t\5\0\0\0superR\n\0\0\0t\7\0\0\0__new__t\3\0\0\0sett\5\0\0\0itemsR\v\0\0\0t\4\0\0\0NoneR\f\0\0\0t\3\0\0\0addt\t\0\0\0frozensetR\20\0\0\0R\0\0\0\0t\r\0\0\0_abc_registryt\n\0\0\0_abc_cachet\23\0\0\0_abc_negative_cachet\31\0\0\0_abc_invalidation_countert\33\0\0\0_abc_negative_cache_version(\10\0\0\0t\4\0\0\0mclsR\16\0\0\0t\5\0\0\0basest\t\0\0\0namespacet\3\0\0\0clst\t\0\0\0abstractst\4\0\0\0baseR\17\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/abc.pyR\22\0\0\0V\0\0\0s\34\0\0\0\0\1!\2\t\1\23\2\r\1\34\1\22\1\22\1\30\1\17\2\f\1\f\1\f\1\f\1c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s{\0\0\0t\0\0|\1\0t\1\0t\2\0j\3\0f\2\0\203\2\0s'\0t\4\0d\1\0\203\1\0\202\1\0n\0\0t\5\0|\1\0|\0\0\203\2\0r:\0d\2\0St\5\0|\0\0|\1\0\203\2\0rX\0t\6\0d\3\0\203\1\0\202\1\0n\0\0|\0\0j\7\0j\10\0|\1\0\203\1\0\1t\t\0\4j\n\0d\4\0007\2_\n\0d\2\0S(\5\0\0\0s&\0\0\0Register a virtual subclass of an ABC.s\31\0\0\0Can only register classesNs'\0\0\0Refusing to create an inheritance cyclei\1\0\0\0(\v\0\0\0t\n\0\0\0isinstancet\4\0\0\0typet\5\0\0\0typest\t\0\0\0ClassTypet\t\0\0\0TypeErrort\n\0\0\0issubclasst\f\0\0\0RuntimeErrorR\30\0\0\0R\26\0\0\0R\n\0\0\0R\33\0\0\0(\2\0\0\0R \0\0\0t\10\0\0\0subclass(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/abc.pyt\10\0\0\0r", 4096) = 4096
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669321, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=6121, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(8, "egisteri\0\0\0s\20\0\0\0\0\2\30\1\17\1\17\1\4\3\17\2\17\1\20\1c\2\0\0\0\4\0\0\0\6\0\0\0C\0\0\0s\204\0\0\0|\1\0\4d\1\0|\0\0j\0\0|\0\0j\1\0f\2\0\26\2IJ|\1\0\4d\2\0t\2\0j\3\0\26\2IJxR\0t\4\0|\0\0j\5\0j\6\0\203\0\0\203\1\0D];\0}\2\0|\2\0j\7\0d\3\0\203\1\0rA\0t\10\0|\0\0|\2\0\203\2\0}\3\0|\1\0\4d\4\0|\2\0|\3\0f\2\0\26\2IJqA\0qA\0Wd\5\0S(\6\0\0\0s'\0\0\0Debug helper to print the ABC registry.s\f\0\0\0Class: %s.%ss\17\0\0\0Inv.counter: %st\5\0\0\0_abc_s\6\0\0\0%s: %rN(\t\0\0\0R\3\0\0\0R\2\0\0\0R\n\0\0\0R\33\0\0\0t\6\0\0\0sortedt\10\0\0\0__dict__t\4\0\0\0keyst\n\0\0\0startswithR\v\0\0\0(\4\0\0\0R \0\0\0t\4\0\0\0fileR\16\0\0\0R\17\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/abc.pyt\16\0\0\0_dump_registryw\0\0\0s\f\0\0\0\0\2\32\1\21\1\34\1\17\1\17\1c\2\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s\270\0\0\0t\0\0|\1\0d\1\0d\2\0\203\3\0}\2\0|\2\0d\2\0k\t\0r1\0|\2\0|\0\0j\2\0k\6\0r1\0t\3\0St\4\0|\1\0\203\1\0}\3\0|\3\0t\5\0k\10\0rR\0|\2\0}\3\0n\0\0|\3\0|\2\0k\10\0sj\0|\2\0d\2\0k\10\0r\234\0|\0\0j\6\0t\7\0j\10\0k\2\0r\217\0|\3\0|\0\0j\t\0k\6\0r\217\0t\n\0S|\0\0j\v\0|\3\0\203\1\0S|\0\0j\v\0|\2\0\203\1\0p\267\0|\0\0j\v\0|\3\0\203\1\0S(\3\0\0\0s'\0\0\0Override for isinstance(instance, cls).t\t\0\0\0__class__N(\f\0\0\0R\v\0\0\0R\25\0\0\0R\31\0\0\0R\4\0\0\0R$\0\0\0t\r\0\0\0_InstanceTypeR\34\0\0\0R\n\0\0\0R\33\0\0\0R\32\0\0\0R\f\0\0\0t\21\0\0\0__subclasscheck__(\4\0\0\0R \0\0\0t\10\0\0\0instanceR*\0\0\0t\7\0\0\0subtype(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/abc.pyt\21\0\0\0__instancecheck__\200\0\0\0s\34\0\0\0\0\3\22\1\33\1\4\1\f\2\f\1\t\1\30\1\6\1\f\1\17\1\4\2\r\1\17\1c\2\0\0\0\5\0\0\0\5\0\0\0C\0\0\0sa\1\0\0|\1\0|\0\0j\0\0k\6\0r\23\0t\1\0S|\0\0j\2\0t\3\0j\4\0k\0\0r@\0t\5\0\203\0\0|\0\0_\6\0t\3\0j\4\0|\0\0_\2\0n\23\0|\1\0|\0\0j\6\0k\6\0rS\0t\7\0S|\0\0j\10\0|\1\0\203\1\0}\2\0|\2\0t\t\0k\t\0r\260\0t\n\0|\2\0t\v\0\203\2\0s\203\0t\f\0\202\1\0|\2\0r\234\0|\0\0j\0\0j\r\0|\1\0\203\1\0\1n\20\0|\0\0j\6\0j\r\0|\1\0\203\1\0\1|\2\0S|\0\0t\16\0|\1\0d\1\0d\2\0\203\3\0k\6\0r\334\0|\0\0j\0\0j\r\0|\1\0\203\1\0\1t\1\0Sx4\0|\0\0j\17\0D])\0}\3\0t\20\0|\1\0|\3\0\203\2\0r\346\0|\0\0j\0\0j\r\0|\1\0\203\1\0\1t\1\0Sq\346\0Wx7\0|\0\0j\21\0\203\0\0D])\0}\4\0t\20\0|\1\0|\4\0\203\2\0r \1|\0\0j\0\0j\r\0|\1\0\203\1\0\1t\1\0Sq \1W|\0\0j\6\0j\r\0|\1\0\203\1\0\1t\7\0S(\3\0\0\0s'\0\0\0Override for issubclass(subclass, cls).t\7\0\0\0__mro__(\0\0\0\0(\22\0\0\0R\31\0\0\0R\4\0\0\0R\34\0\0\0R\n\0\0\0R\33\0\0\0R\0\0\0\0R\32\0\0\0R\f\0\0\0t\20\0\0\0__subclasshook__t\16\0\0\0NotImplementedR#\0\0\0t\4\0\0\0boolt\16\0\0\0AssertionErrorR\26\0\0\0R\v\0\0\0R\30\0\0\0R(\0\0\0t\16\0\0\0__subclasses__(\5\0\0\0R \0\0\0R*\0\0\0t\2\0\0\0okt\4\0\0\0rclst\4\0\0\0scls(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/abc.pyR5\0\0\0\224\0\0\0s6\0\0\0\0\3\17\1\4\2\22\2\f\1\17\1\17\1\4\2\17\1\f\1\25\1\6\1\23\2\20\1\4\2\30\1\20\1\4\2\20\1\17\1\20\1\10\2\23\1\17\1\20\1\10\2\20\1N(\n\0\0\0R\2\0\0\0R\3\0\0\0R\t\0\0\0R\33\0\0\0R\22\0\0\0R+\0\0\0R\25\0\0\0R2\0\0\0R8\0\0\0R5\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/abc.pyR\n\0\0\0A\0\0\0s\16\0\0\0\6\16\6\5\6\2\t\23\t\16\f\t\t\24(\0\0\0\0(\v\0\0\0R\t\0\0\0R%\0\0\0t\v\0\0\0_weakrefsetR\0\0\0\0R\1\0\0\0R$\0\0\0R4\0\0\0R\7\0\0\0t\10\0\0\0propertyR\10\0\0\0R\n\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/abc.pyt\10\0\0\0<module>\4\0\0\0s\16\0\0\0\6\2\f\2\20\3\23\1\17\3\t\25\26\35", 4096) = 2025
27308 read(8, "", 4096)                 = 0
27308 close(8)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/_weakrefset", 0xbfffcf2c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_weakrefset.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_weakrefset.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_weakrefsetmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_weakrefset.py", O_RDONLY|O_LARGEFILE) = 8
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=661447, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=5911, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/_weakrefset.pyc", O_RDONLY|O_LARGEFILE) = 9
27308 fstat64(9, {st_dev=makedev(8, 1), st_ino=669322, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=9582, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(9, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0sI\0\0\0d\0\0d\1\0l\0\0m\1\0Z\1\0\1d\2\0g\1\0Z\2\0d\3\0e\3\0f\1\0d\4\0\204\0\0\203\0\0YZ\4\0d\2\0e\3\0f\1\0d\5\0\204\0\0\203\0\0YZ\5\0d\6\0S(\7\0\0\0i\377\377\377\377(\1\0\0\0t\3\0\0\0reft\7\0\0\0WeakSett\17\0\0\0_IterationGuardc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s#\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0RS(\3\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\23\0\0\0t\0\0|\1\0\203\1\0|\0\0_\1\0d\0\0S(\1\0\0\0N(\2\0\0\0R\0\0\0\0t\r\0\0\0weakcontainer(\2\0\0\0t\4\0\0\0selfR\3\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\10\0\0\0__init__\20\0\0\0s\2\0\0\0\0\2c\1\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s/\0\0\0|\0\0j\0\0\203\0\0}\1\0|\1\0d\0\0k\t\0r+\0|\1\0j\2\0j\3\0|\0\0\203\1\0\1n\0\0|\0\0S(\1\0\0\0N(\4\0\0\0R\3\0\0\0t\4\0\0\0Nonet\n\0\0\0_iteratingt\3\0\0\0add(\2\0\0\0R\4\0\0\0t\1\0\0\0w(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\t\0\0\0__enter__\24\0\0\0s\10\0\0\0\0\1\f\1\f\1\23\1c\4\0\0\0\6\0\0\0\2\0\0\0C\0\0\0sH\0\0\0|\0\0j\0\0\203\0\0}\4\0|\4\0d\0\0k\t\0rD\0|\4\0j\2\0}\5\0|\5\0j\3\0|\0\0\203\1\0\1|\5\0sD\0|\4\0j\4\0\203\0\0\1qD\0n\0\0d\0\0S(\1\0\0\0N(\5\0\0\0R\3\0\0\0R\6\0\0\0R\7\0\0\0t\6\0\0\0removet\20\0\0\0_commit_removals(\6\0\0\0R\4\0\0\0t\1\0\0\0et\1\0\0\0tt\1\0\0\0bR\t\0\0\0t\1\0\0\0s(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\10\0\0\0__exit__\32\0\0\0s\f\0\0\0\0\1\f\1\f\1\t\1\r\1\6\1(\5\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__R\5\0\0\0R\n\0\0\0R\21\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR\2\0\0\0\n\0\0\0s\6\0\0\0\6\6\t\4\t\6c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sL\1\0\0e\0\0Z\1\0d\37\0d\0\0\204\1\0Z\3\0d\1\0\204\0\0Z\4\0d\2\0\204\0\0Z\5\0d\3\0\204\0\0Z\6\0d\4\0\204\0\0Z\7\0d\5\0\204\0\0Z\10\0d\37\0Z\t\0d\6\0\204\0\0Z\n\0d\7\0\204\0\0Z\v\0d\10\0\204\0\0Z\f\0d\t\0\204\0\0Z\r\0d\n\0\204\0\0Z\16\0d\v\0\204\0\0Z\17\0d\f\0\204\0\0Z\20\0d\r\0\204\0\0Z\21\0d\16\0\204\0\0Z\22\0e\22\0Z\23\0d\17\0\204\0\0Z\24\0d\20\0\204\0\0Z\25\0d\21\0\204\0\0Z\26\0e\26\0Z\27\0d\22\0\204\0\0Z\30\0d\23\0\204\0\0Z\31\0d\24\0\204\0\0Z\32\0e\32\0Z\33\0d\25\0\204\0\0Z\34\0d\26\0\204\0\0Z\35\0e\35\0Z\36\0d\27\0\204\0\0Z\37\0d\30\0\204\0\0Z \0d\31\0\204\0\0Z!\0d\32\0\204\0\0Z\"\0e\"\0Z#\0d\33\0\204\0\0Z$\0d\34\0\204\0\0Z%\0d\35\0\204\0\0Z&\0e&\0Z'\0d\36\0\204\0\0Z(\0RS( \0\0\0c\2\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s\\\0\0\0t\0\0\203\0\0|\0\0_\1\0t\2\0|\0\0\203\1\0d\1\0\204\1\0}\2\0|\2\0|\0\0_\3\0g\0\0|\0\0_\4\0t\0\0\203\0\0|\0\0_\5\0|\1\0d\0\0k\t\0rX\0|\0\0j\7\0|\1\0\203\1\0\1n\0\0d\0\0S(\2\0\0\0Nc\2\0\0\0\3\0\0\0\2\0\0\0S\0\0\0sH\0\0\0|\1\0\203\0\0}\2\0|\2\0d\0\0k\t\0rD\0|\2\0j\1\0r1\0|\2\0j\2\0j\3\0|\0\0\203\1\0\1qD\0|\2\0j\4\0j\5\0|\0\0\203\1\0\1n\0\0d\0\0S(\1\0\0\0N(\6\0\0\0R\6\0\0\0R\7\0\0\0t\21\0\0\0_pending_removalst\6\0\0\0appendt\4\0\0\0datat\7\0\0\0discard(\3\0\0\0t\4\0\0\0itemt\7\0\0\0selfrefR\4\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\7\0\0\0_remove&\0\0\0s\n\0\0\0\0\1\t\1\f\1\t\1\23\2(\10\0\0\0t\3\0\0\0setR\26\0\0\0R\0\0\0\0R\32\0\0\0R\24\0\0\0R\7\0\0\0R\6\0\0\0t\6\0\0\0update(\3\0\0\0R\4\0\0\0R\26\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR\5\0\0\0$\0\0\0s\16\0\0\0\0\1\f\1\22\7\t\2\t\1\f\1\f\1c\1\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s6\0\0\0|\0\0j\0\0}\1\0|\0\0j\1\0j\2\0}\2\0x\32\0|\1\0r1\0|\2\0|\1\0j\3\0\203\0\0\203\1\0\1q\30\0Wd\0\0S(\1\0\0\0N(\4\0\0\0R\24\0\0\0R\26\0\0\0R\27\0\0\0t\3\0\0\0pop(\3\0\0\0R\4\0\0\0t\1\0\0\0lR\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR\f\0\0\0004\0\0\0s\10\0\0\0\0\1\t\1\f\1\t\1c\1\0\0\0\3\0\0\0\7\0\0\0c\0\0\0sH\0\0\0t\0\0|\0\0\203\1\0\2176\0\1x.\0|\0\0j\1\0D]#\0}\1\0|\1\0\203\0\0}\2\0|\2\0d\0\0k\t\0r\27\0|\2\0V\1q\27\0q\27\0WWd\0\0QXd\0\0S(\1\0\0\0N(\3\0\0\0R\2\0\0\0R\26\0\0\0R\6\0\0\0(\3\0\0\0R\4\0\0\0t\7\0\0\0itemrefR\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\10\0\0\0__iter__:\0\0\0s\n\0\0\0\0\1\r\1\20\1\t\1\f\3c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\32\0\0\0t\0\0|\0\0j\1\0\203\1\0t\0\0|\0\0j\2\0\203\1\0\30S(\1\0\0\0N(\3\0\0\0t\3\0\0\0lenR\26\0\0\0R\24\0\0\0(\1\0\0\0R\4\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\7\0\0\0__len__C\0\0\0s\2\0\0\0\0\1c\2\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s2\0\0\0y\20\0t\0\0|\1\0\203\1\0}\2\0Wn\22\0\4t\1\0k\n\0r$\0\1\1\1t\2\0SX|\2\0|\0\0j\3\0k\6\0S(\1\0\0\0N(\4\0\0\0R\0\0\0\0t\t\0\0\0TypeErrort\5\0\0\0FalseR\26\0\0\0(\3\0\0\0R\4\0\0\0R\30\0\0\0t\2\0\0\0wr(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\f\0\0\0__contains__F\0\0\0s\n\0\0\0\0\1\3\1\20\1\r\1\5\1c\1\0\0\0\1\0\0\0\6\0\0\0C\0\0\0s%\0\0\0|\0\0j\0\0t\1\0|\0\0\203\1\0f\1\0t\2\0|\0\0d\1\0d\0\0\203\3\0f\3\0S(\2\0\0\0Nt\10\0\0\0__dict__(\4\0\0\0t\t\0\0\0__class__t\4\0\0\0listt\7\0\0\0getattrR\6\0\0\0(\1\0\0\0R\4\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\n\0\0\0__reduce__M\0\0\0s\4\0\0\0\0\1\22\1c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s6\0\0\0|\0\0j\0\0r\26\0|\0\0j\1\0\203\0\0\1n\0\0|\0\0j\2\0j\3\0t\4\0|\1\0|\0\0j\5\0\203\2\0\203\1\0\1d\0\0S(\1\0\0\0N(\6\0\0\0R\24\0\0\0R\f\0\0\0R\26\0\0\0R\10\0\0\0R\0\0\0\0R\32\0\0\0(\2\0\0\0R\4\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR\10\0\0\0S\0\0\0s\6\0\0\0\0\1\t\1\r\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s'\0\0\0|\0\0j\0\0r\26\0|\0\0j\1\0\203\0\0\1n\0\0|\0\0j\2\0j\3\0\203\0\0\1d\0\0S(\1\0\0\0N(\4\0\0\0R\24\0\0\0R\f\0\0\0R\26\0\0\0t\5\0\0\0clear(\1\0\0\0R\4\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR,\0\0\0X\0\0\0s\6\0\0\0\0\1\t\1\r\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0|\0\0\203\1\0S(\1\0\0\0N(\1\0\0\0R(\0\0\0(\1\0\0\0R\4\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\4\0\0\0copy]\0\0\0s\2\0\0\0\0\1c\1\0\0\0\3\0\0\0\5\0\0\0C\0\0\0ss\0\0\0|\0\0j\0\0r\26\0|\0\0j\1\0\203\0\0\1n\0\0xV\0t\2\0rn\0y\23\0|\0\0j\3\0j\4\0\203\0\0}\1\0Wn\35\0\4t\5\0k\n\0rQ\0\1\1\1t\5\0d\1\0\203\1\0\202\1\0n\1\0X|\1\0\203\0\0}\2\0|\2\0d\0\0k\t\0r\31\0|\2\0Sq\31\0Wd\0\0S(\2\0\0\0Ns\26\0\0\0pop from empty WeakSet(\7\0\0\0R\24\0\0\0R\f\0\0\0t\4\0\0\0TrueR\26\0\0\0R\35\0\0\0t\10\0\0\0KeyErrorR\6\0\0\0(\3\0\0\0R\4\0\0\0R\37\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR\35\0\0\0`\0\0\0s\24\0\0\0\0\1\t\1\r\1\t\1\3\1\23\1\r\1\20\1\t\1\f\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s0\0\0\0|\0\0j\0\0r\26\0|\0\0j\1\0\203\0\0\1n\0\0|\0\0j\2\0j\3\0t\4\0|\1\0\203\1\0\203\1\0\1d\0\0S(\1\0\0\0N(\5\0\0\0R\24\0\0\0R\f\0\0\0R\26\0\0\0R\v\0\0\0R\0\0\0\0(\2\0\0\0R\4\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR\v\0\0\0l\0\0\0s\6\0\0\0\0\1\t\1\r\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s0\0\0\0|\0\0j\0\0r\26\0|\0\0j\1\0\203\0\0\1n\0\0|\0\0j\2\0j\3\0t\4\0|\1\0\203\1\0\203\1\0\1d\0\0S(\1\0\0\0N(\5\0\0\0R\24\0\0\0R\f\0\0\0R\26\0\0\0R\27\0\0\0R\0\0\0\0(\2\0\0\0R\4\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakr", 4096) = 4096
27308 fstat64(9, {st_dev=makedev(8, 1), st_ino=669322, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=9582, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(9, "efset.pyR\27\0\0\0q\0\0\0s\6\0\0\0\0\1\t\1\r\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s8\0\0\0|\0\0j\0\0r\26\0|\0\0j\1\0\203\0\0\1n\0\0x\33\0|\1\0D]\23\0}\2\0|\0\0j\2\0|\2\0\203\1\0\1q\35\0Wd\0\0S(\1\0\0\0N(\3\0\0\0R\24\0\0\0R\f\0\0\0R\10\0\0\0(\3\0\0\0R\4\0\0\0t\5\0\0\0othert\7\0\0\0element(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR\34\0\0\0v\0\0\0s\10\0\0\0\0\1\t\1\r\1\r\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0|\1\0\203\1\0\1|\0\0S(\1\0\0\0N(\1\0\0\0R\34\0\0\0(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\7\0\0\0__ior__|\0\0\0s\4\0\0\0\0\1\r\1c\2\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s\35\0\0\0|\0\0j\0\0\203\0\0}\2\0|\2\0j\1\0|\1\0\203\1\0\1|\2\0S(\1\0\0\0N(\2\0\0\0R-\0\0\0t\21\0\0\0difference_update(\3\0\0\0R\4\0\0\0R0\0\0\0t\6\0\0\0newset(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\n\0\0\0difference\200\0\0\0s\6\0\0\0\0\1\f\1\r\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0|\1\0\203\1\0\1d\0\0S(\1\0\0\0N(\1\0\0\0t\10\0\0\0__isub__(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR3\0\0\0\206\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0sP\0\0\0|\0\0j\0\0r\26\0|\0\0j\1\0\203\0\0\1n\0\0|\0\0|\1\0k\10\0r2\0|\0\0j\2\0j\3\0\203\0\0\1n\32\0|\0\0j\2\0j\4\0d\1\0\204\0\0|\1\0D\203\1\0\203\1\0\1|\0\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\3\0\0\0s\0\0\0s\33\0\0\0|\0\0]\21\0}\1\0t\0\0|\1\0\203\1\0V\1q\3\0d\0\0S(\1\0\0\0N(\1\0\0\0R\0\0\0\0(\2\0\0\0t\2\0\0\0.0R\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pys\t\0\0\0<genexpr>\216\0\0\0s\2\0\0\0\6\0(\5\0\0\0R\24\0\0\0R\f\0\0\0R\26\0\0\0R,\0\0\0R3\0\0\0(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR6\0\0\0\210\0\0\0s\f\0\0\0\0\1\t\1\r\1\f\1\20\2\32\1c\2\0\0\0\2\0\0\0\3\0\0\0\3\0\0\0s\35\0\0\0\210\0\0j\0\0\207\0\0f\1\0d\1\0\206\0\0|\1\0D\203\1\0\203\1\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\3\0\0\0003\0\0\0s!\0\0\0|\0\0]\27\0}\1\0|\1\0\210\0\0k\6\0r\3\0|\1\0V\1q\3\0d\0\0S(\1\0\0\0N(\0\0\0\0(\2\0\0\0R7\0\0\0R\30\0\0\0(\1\0\0\0R\4\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pys\t\0\0\0<genexpr>\222\0\0\0s\2\0\0\0\6\0(\1\0\0\0R(\0\0\0(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\1\0\0\0R\4\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\f\0\0\0intersection\221\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0|\1\0\203\1\0\1d\0\0S(\1\0\0\0N(\1\0\0\0t\10\0\0\0__iand__(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\23\0\0\0intersection_update\225\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s4\0\0\0|\0\0j\0\0r\26\0|\0\0j\1\0\203\0\0\1n\0\0|\0\0j\2\0j\3\0d\1\0\204\0\0|\1\0D\203\1\0\203\1\0\1|\0\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\3\0\0\0s\0\0\0s\33\0\0\0|\0\0]\21\0}\1\0t\0\0|\1\0\203\1\0V\1q\3\0d\0\0S(\1\0\0\0N(\1\0\0\0R\0\0\0\0(\2\0\0\0R7\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pys\t\0\0\0<genexpr>\232\0\0\0s\2\0\0\0\6\0(\4\0\0\0R\24\0\0\0R\f\0\0\0R\26\0\0\0R:\0\0\0(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR9\0\0\0\227\0\0\0s\10\0\0\0\0\1\t\1\r\1\32\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\32\0\0\0|\0\0j\0\0j\1\0d\1\0\204\0\0|\1\0D\203\1\0\203\1\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\3\0\0\0s\0\0\0s\33\0\0\0|\0\0]\21\0}\1\0t\0\0|\1\0\203\1\0V\1q\3\0d\0\0S(\1\0\0\0N(\1\0\0\0R\0\0\0\0(\2\0\0\0R7\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pys\t\0\0\0<genexpr>\236\0\0\0s\2\0\0\0\6\0(\2\0\0\0R\26\0\0\0t\10\0\0\0issubset(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR;\0\0\0\235\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s\35\0\0\0|\0\0j\0\0t\1\0d\1\0\204\0\0|\1\0D\203\1\0\203\1\0k\0\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\3\0\0\0s\0\0\0s\33\0\0\0|\0\0]\21\0}\1\0t\0\0|\1\0\203\1\0V\1q\3\0d\0\0S(\1\0\0\0N(\1\0\0\0R\0\0\0\0(\2\0\0\0R7\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pys\t\0\0\0<genexpr>\242\0\0\0s\2\0\0\0\6\0(\2\0\0\0R\26\0\0\0R\33\0\0\0(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\6\0\0\0__lt__\241\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\32\0\0\0|\0\0j\0\0j\1\0d\1\0\204\0\0|\1\0D\203\1\0\203\1\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\3\0\0\0s\0\0\0s\33\0\0\0|\0\0]\21\0}\1\0t\0\0|\1\0\203\1\0V\1q\3\0d\0\0S(\1\0\0\0N(\1\0\0\0R\0\0\0\0(\2\0\0\0R7\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pys\t\0\0\0<genexpr>\245\0\0\0s\2\0\0\0\6\0(\2\0\0\0R\26\0\0\0t\n\0\0\0issuperset(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR=\0\0\0\244\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s\35\0\0\0|\0\0j\0\0t\1\0d\1\0\204\0\0|\1\0D\203\1\0\203\1\0k\4\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\3\0\0\0s\0\0\0s\33\0\0\0|\0\0]\21\0}\1\0t\0\0|\1\0\203\1\0V\1q\3\0d\0\0S(\1\0\0\0N(\1\0\0\0R\0\0\0\0(\2\0\0\0R7\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pys\t\0\0\0<genexpr>\251\0\0\0s\2\0\0\0\6\0(\2\0\0\0R\26\0\0\0R\33\0\0\0(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\6\0\0\0__gt__\250\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s3\0\0\0t\0\0|\1\0|\0\0j\1\0\203\2\0s\26\0t\2\0S|\0\0j\3\0t\4\0d\1\0\204\0\0|\1\0D\203\1\0\203\1\0k\2\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\3\0\0\0s\0\0\0s\33\0\0\0|\0\0]\21\0}\1\0t\0\0|\1\0\203\1\0V\1q\3\0d\0\0S(\1\0\0\0N(\1\0\0\0R\0\0\0\0(\2\0\0\0R7\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pys\t\0\0\0<genexpr>\256\0\0\0s\2\0\0\0\6\0(\5\0\0\0t\n\0\0\0isinstanceR(\0\0\0t\16\0\0\0NotImplementedR\26\0\0\0R\33\0\0\0(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\6\0\0\0__eq__\253\0\0\0s\6\0\0\0\0\1\22\1\4\1c\2\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s$\0\0\0|\0\0j\0\0|\1\0\203\1\0}\2\0|\2\0t\1\0k\10\0r\37\0t\1\0S|\2\0\fS(\1\0\0\0N(\2\0\0\0RA\0\0\0R@\0\0\0(\3\0\0\0R\4\0\0\0R0\0\0\0t\10\0\0\0opposite(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\6\0\0\0__ne__\260\0\0\0s\10\0\0\0\0\1\17\1\f\1\4\1c\2\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s\35\0\0\0|\0\0j\0\0\203\0\0}\2\0|\2\0j\1\0|\1\0\203\1\0\1|\2\0S(\1\0\0\0N(\2\0\0\0R-\0\0\0t\33\0\0\0symmetric_difference_update(\3\0\0\0R\4\0\0\0R0\0\0\0R4\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\24\0\0\0symmetric_difference\266\0\0\0s\6\0\0\0\0\1\f\1\r\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0|\1\0\203\1\0\1d\0\0S(\1\0\0\0N(\1\0\0\0t\10\0\0\0__ixor__(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyRD\0\0\0\274\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0\3\0\0\0sV\0\0\0\210\0\0j\0\0r", 4096) = 4096
27308 read(9, "\26\0\210\0\0j\1\0\203\0\0\1n\0\0\210\0\0|\1\0k\10\0r2\0\210\0\0j\2\0j\3\0\203\0\0\1n \0\210\0\0j\2\0j\4\0\207\0\0f\1\0d\1\0\206\0\0|\1\0D\203\1\0\203\1\0\1\210\0\0S(\2\0\0\0Nc\1\0\0\0\2\0\0\0\4\0\0\0003\0\0\0s!\0\0\0|\0\0]\27\0}\1\0t\0\0|\1\0\210\0\0j\1\0\203\2\0V\1q\3\0d\0\0S(\1\0\0\0N(\2\0\0\0R\0\0\0\0R\32\0\0\0(\2\0\0\0R7\0\0\0R\30\0\0\0(\1\0\0\0R\4\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pys\t\0\0\0<genexpr>\304\0\0\0s\2\0\0\0\6\0(\5\0\0\0R\24\0\0\0R\f\0\0\0R\26\0\0\0R,\0\0\0RD\0\0\0(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\1\0\0\0R\4\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyRF\0\0\0\276\0\0\0s\f\0\0\0\0\1\t\1\r\1\f\1\20\2 \1c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s\35\0\0\0|\0\0j\0\0d\1\0\204\0\0|\0\0|\1\0f\2\0D\203\1\0\203\1\0S(\2\0\0\0Nc\1\0\0\0\3\0\0\0\3\0\0\0s\0\0\0s\"\0\0\0|\0\0]\30\0}\1\0|\1\0D]\v\0}\2\0|\2\0V\1q\r\0q\3\0d\0\0S(\1\0\0\0N(\0\0\0\0(\3\0\0\0R7\0\0\0R\20\0\0\0R\r\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pys\t\0\0\0<genexpr>\310\0\0\0s\2\0\0\0\6\0(\1\0\0\0R(\0\0\0(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\5\0\0\0union\307\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\31\0\0\0t\0\0|\0\0j\1\0|\1\0\203\1\0\203\1\0d\1\0k\2\0S(\2\0\0\0Ni\0\0\0\0(\2\0\0\0R!\0\0\0R8\0\0\0(\2\0\0\0R\4\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\n\0\0\0isdisjoint\313\0\0\0s\2\0\0\0\0\1N()\0\0\0R\22\0\0\0R\23\0\0\0R\6\0\0\0R\5\0\0\0R\f\0\0\0R \0\0\0R\"\0\0\0R&\0\0\0R+\0\0\0t\10\0\0\0__hash__R\10\0\0\0R,\0\0\0R-\0\0\0R\35\0\0\0R\v\0\0\0R\27\0\0\0R\34\0\0\0R2\0\0\0R5\0\0\0t\7\0\0\0__sub__R3\0\0\0R6\0\0\0R8\0\0\0t\7\0\0\0__and__R:\0\0\0R9\0\0\0R;\0\0\0t\6\0\0\0__le__R<\0\0\0R=\0\0\0t\6\0\0\0__ge__R>\0\0\0RA\0\0\0RC\0\0\0RE\0\0\0t\7\0\0\0__xor__RD\0\0\0RF\0\0\0RG\0\0\0t\6\0\0\0__or__RH\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyR\1\0\0\0#\0\0\0sL\0\0\0\6\1\f\20\t\6\t\t\t\3\t\7\t\4\6\2\t\5\t\5\t\3\t\f\t\5\t\5\t\6\t\4\t\4\6\2\t\2\t\t\t\2\6\2\t\2\t\6\t\2\6\2\t\3\t\2\6\2\t\3\t\5\t\6\t\4\6\2\t\2\t\t\t\2\6\2N(\6\0\0\0t\10\0\0\0_weakrefR\0\0\0\0t\7\0\0\0__all__t\6\0\0\0objectR\2\0\0\0R\1\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/_weakrefset.pyt\10\0\0\0<module>\5\0\0\0s\6\0\0\0\20\2\t\3\26\31", 4096) = 1390
27308 read(9, "", 4096)                 = 0
27308 close(9)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 close(8)                          = 0
27308 close(7)                          = 0
27308 mmap2(NULL, 262144, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7cb5000
27308 close(6)                          = 0
27308 close(5)                          = 0
27308 stat64("/usr/lib/python2.7/copy_reg", 0xbfffda3c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/copy_reg.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/copy_reg.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/copy_regmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/copy_reg.py", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=661479, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=6800, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/copy_reg.pyc", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669323, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=5091, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(6, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\5\0\0\0@\0\0\0s\326\0\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0m\2\0Z\3\0\1d\3\0d\4\0d\5\0d\6\0d\7\0g\5\0Z\4\0i\0\0Z\5\0d\24\0d\10\0\204\1\0Z\7\0d\t\0\204\0\0Z\10\0y\10\0e\t\0\1Wn\21\0\4e\n\0k\n\0ra\0\1\1\1n\32\0Xd\n\0\204\0\0Z\v\0e\7\0e\t\0e\v\0e\t\0\203\3\0\1d\v\0\204\0\0Z\f\0d\25\0Z\r\0d\16\0\204\0\0Z\16\0d\17\0\204\0\0Z\17\0d\20\0\204\0\0Z\20\0i\0\0Z\21\0i\0\0Z\22\0i\0\0Z\23\0d\21\0\204\0\0Z\24\0d\22\0\204\0\0Z\25\0d\23\0\204\0\0Z\26\0d\24\0S(\26\0\0\0s\254\0\0\0Helper to provide extensibility for pickle/cPickle.\n\nThis is only useful to add pickle support for extension types defined in\nC, not for instances of user-defined classes.\ni\377\377\377\377(\1\0\0\0t\t\0\0\0ClassTypet\6\0\0\0picklet\v\0\0\0constructort\r\0\0\0add_extensiont\20\0\0\0remove_extensiont\25\0\0\0clear_extension_cachec\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sf\0\0\0t\0\0|\0\0\203\1\0t\1\0k\10\0r!\0t\2\0d\1\0\203\1\0\202\1\0n\0\0t\3\0|\1\0d\2\0\203\2\0s?\0t\2\0d\3\0\203\1\0\202\1\0n\0\0|\1\0t\4\0|\0\0<|\2\0d\0\0k\t\0rb\0t\6\0|\2\0\203\1\0\1n\0\0d\0\0S(\4\0\0\0Ns-\0\0\0copy_reg is not intended for use with classest\10\0\0\0__call__s$\0\0\0reduction functions must be callable(\7\0\0\0t\4\0\0\0typet\n\0\0\0_ClassTypet\t\0\0\0TypeErrort\7\0\0\0hasattrt\16\0\0\0dispatch_tablet\4\0\0\0NoneR\2\0\0\0(\3\0\0\0t\7\0\0\0ob_typet\17\0\0\0pickle_functiont\16\0\0\0constructor_ob(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/copy_reg.pyR\1\0\0\0\16\0\0\0s\16\0\0\0\0\1\22\1\17\2\17\1\17\1\n\4\f\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\"\0\0\0t\0\0|\0\0d\1\0\203\2\0s\36\0t\1\0d\2\0\203\1\0\202\1\0n\0\0d\0\0S(\3\0\0\0NR\6\0\0\0s\35\0\0\0constructors must be callable(\2\0\0\0R\n\0\0\0R\t\0\0\0(\1\0\0\0t\6\0\0\0object(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/copy_reg.pyR\2\0\0\0\33\0\0\0s\4\0\0\0\0\1\17\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\26\0\0\0t\0\0|\0\0j\1\0|\0\0j\2\0f\2\0f\2\0S(\1\0\0\0N(\3\0\0\0t\7\0\0\0complext\4\0\0\0realt\4\0\0\0imag(\1\0\0\0t\1\0\0\0c(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/copy_reg.pyt\16\0\0\0pickle_complex'\0\0\0s\2\0\0\0\0\1c\3\0\0\0\4\0\0\0\3\0\0\0C\0\0\0sY\0\0\0|\1\0t\0\0k\10\0r\36\0t\0\0j\1\0|\0\0\203\1\0}\3\0n7\0|\1\0j\1\0|\0\0|\2\0\203\2\0}\3\0|\1\0j\2\0t\0\0j\2\0k\3\0rU\0|\1\0j\2\0|\3\0|\2\0\203\2\0\1n\0\0|\3\0S(\1\0\0\0N(\3\0\0\0R\20\0\0\0t\7\0\0\0__new__t\10\0\0\0__init__(\4\0\0\0t\3\0\0\0clst\4\0\0\0baset\5\0\0\0statet\3\0\0\0obj(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/copy_reg.pyt\16\0\0\0_reconstructor.\0\0\0s\f\0\0\0\0\1\f\1\22\2\22\1\22\1\23\1i\1\0\0\0i\t\0\0\0c\2\0\0\0\7\0\0\0\5\0\0\0C\0\0\0s8\1\0\0|\1\0d\1\0k\0\0s\22\0t\0\0\202\1\0x;\0|\0\0j\1\0j\2\0D]'\0}\2\0t\3\0|\2\0d\2\0\203\2\0r\37\0|\2\0j\4\0t\5\0@\fr\37\0Pq\37\0q\37\0Wt\6\0}\2\0|\2\0t\6\0k\10\0re\0d\0\0}\3\0n.\0|\2\0|\0\0j\1\0k\10\0r\207\0t\10\0d\3\0|\2\0j\t\0\26\202\2\0n\0\0|\2\0|\0\0\203\1\0}\3\0|\0\0j\1\0|\2\0|\3\0f\3\0}\4\0y\r\0|\0\0j\n\0}\5\0WnY\0\4t\v\0k\n\0r\r\1\1\1\1t\f\0|\0\0d\4\0d\0\0\203\3\0r\343\0t\10\0d\5\0\203\1\0\202\1\0n\0\0y\r\0|\0\0j\r\0}\6\0Wq\27\1\4t\v\0k\n\0r\t\1\1\1\1d\0\0}\6\0q\27\1Xn\n\0X|\5\0\203\0\0}\6\0|\6\0r*\1t\16\0|\4\0|\6\0f\3\0St\16\0|\4\0f\2\0Sd\0\0S(\6\0\0\0Ni\2\0\0\0t\t\0\0\0__flags__s\27\0\0\0can't pickle %s objectst\t\0\0\0__slots__sN\0\0\0a class that defines __slots__ without defining __getstate__ cannot be pickled(\17\0\0\0t\16\0\0\0AssertionErrort\t\0\0\0__class__t\7\0\0\0__mro__R\n\0\0\0R\35\0\0\0t\t\0\0\0_HEAPTYPER\20\0\0\0R\f\0\0\0R\t\0\0\0t\10\0\0\0__name__t\f\0\0\0__getstate__t\16\0\0\0AttributeErrort\7\0\0\0getattrt\10\0\0\0__dict__R\34\0\0\0(\7\0\0\0t\4\0\0\0selft\5\0\0\0protoR\31\0\0\0R\32\0\0\0t\4\0\0\0argst\10\0\0\0getstatet\4\0\0\0dict(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/copy_reg.pyt\n\0\0\0_reduce_ex;\0\0\0s0\0\0\0\0\1\22\1\23\1\35\1\10\2\6\1\f\1\t\2\17\1\23\1\f\1\22\1\3\1\r\1\r\1\22\1\17\2\3\1\r\1\r\1\16\2\t\1\6\1\r\2c\1\0\0\0\2\0\0\0\3\0\0\0G\0\0\0s\20\0\0\0|\0\0j\0\0|\0\0|\1\0\214\1\0S(\1\0\0\0N(\1\0\0\0R\26\0\0\0(\2\0\0\0R\30\0\0\0R*\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/copy_reg.pyt\n\0\0\0__newobj__\\\0\0\0s\2\0\0\0\0\1c\1\0\0\0\5\0\0\0\6\0\0\0C\0\0\0s\17\1\0\0|\0\0j\0\0j\1\0d\1\0\203\1\0}\1\0|\1\0d\7\0k\t\0r\"\0|\1\0Sg\0\0}\1\0t\3\0|\0\0d\2\0\203\2\0s:\0n\272\0x\267\0|\0\0j\4\0D]\254\0}\2\0d\2\0|\2\0j\0\0k\6\0rD\0|\2\0j\0\0d\2\0\31}\3\0t\5\0|\3\0t\6\0\203\2\0r\201\0|\3\0f\1\0}\3\0n\0\0xl\0|\3\0D]a\0}\4\0|\4\0d\10\0k\6\0r\240\0q\210\0q\210\0|\4\0j\7\0d\5\0\203\1\0r\334\0|\4\0j\10\0d\5\0\203\1\0\fr\334\0|\1\0j\t\0d\6\0|\2\0j\n\0|\4\0f\2\0\26\203\1\0\1q\210\0|\1\0j\t\0|\4\0\203\1\0\1q\210\0WqD\0qD\0Wy\r\0|\1\0|\0\0_\v\0Wn\7\0\1\1\1n\1\0X|\1\0S(\t\0\0\0s\233\1\0\0Return a list of slot names for a given class.\n\n    This needs to find slots defined by the class and its bases, so we\n    can't simply return the __slots__ attribute.  We must walk down\n    the Method Resolution Order and concatenate the __slots__ of each\n    class found there.  (This assumes classes don't modify their\n    __slots__ attribute to misrepresent their slots after the class is\n    defined.)\n    t\r\0\0\0__slotnames__R\36\0\0\0R'\0\0\0t\v\0\0\0__weakref__t\2\0\0\0__s\5\0\0\0_%s%sN(\2\0\0\0s\10\0\0\0__dict__s\v\0\0\0__weakref__(\f\0\0\0R'\0\0\0t\3\0\0\0getR\f\0\0\0R\n\0\0\0R!\0\0\0t\n\0\0\0isinstancet\n\0\0\0basestringt\n\0\0\0startswitht\10\0\0\0endswitht\6\0\0\0appendR#\0\0\0R/\0\0\0(\5\0\0\0R\30\0\0\0t\5\0\0\0namesR\24\0\0\0t\5\0\0\0slotst\4\0\0\0name(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/copy_reg.pyt\n\0\0\0_slotnames_\0\0\0s,\0\0\0\0\f\22\1\f\1\4\3\6\1\17\2\3\3\20\1\17\1\r\2\17\1\f\1\r\2\f\1\6\2\37\1\35\2\30\3\3\1\r\1\3\1\4\2c\3\0\0\0\4\0\0\0\5\0\0\0C\0\0\0s\330\0\0\0t\0\0|\2\0\203\1\0}\2\0d\1\0|\2\0\4\3k\1\0o#\0d\2\0k\1\0n\2\0\2\1s4\0t\1\0d\3\0\202\2\0n\0\0|\0\0|\1\0f\2\0}\3\0t\2\0j\3\0|\3\0\203\1\0|\2\0k\2\0rn\0t\4\0j\3\0|\2\0\203\1\0|\3\0k\2\0rn\0d\4\0S|\3\0t\2\0k\6\0r\227\0t\1\0d\5\0|\3\0t\2\0|\3\0\31f\2\0\26\203\1\0\202\1\0n\0\0|\2\0t\4\0k\6\0r\300\0t\1\0d\6\0|\2\0t\4\0|\2\0\31f\2\0\26\203\1\0\202\1\0n\0\0|\2\0t\2\0|\3\0<|\3\0t\4\0|\2\0<d\4\0S(\7\0\0\0s\33\0\0\0Register an extension code.i\1\0\0\0i\377\377\377\177s\21\0\0\0code out of rangeNs)\0\0\0key %s is already registered with code %ss$\0\0\0code %s is already in use for key %s(\5", 4096) = 4096
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669323, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=5091, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(6, "\0\0\0t\3\0\0\0intt\n\0\0\0ValueErrort\23\0\0\0_extension_registryR2\0\0\0t\22\0\0\0_inverted_registry(\4\0\0\0t\6\0\0\0moduleR:\0\0\0t\4\0\0\0codet\3\0\0\0key(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/copy_reg.pyR\3\0\0\0\235\0\0\0s\36\0\0\0\0\2\f\1\34\1\f\1\f\1\25\1\25\1\4\1\f\1\6\1\27\1\f\1\6\1\27\1\n\1c\3\0\0\0\4\0\0\0\4\0\0\0C\0\0\0sw\0\0\0|\0\0|\1\0f\2\0}\3\0t\0\0j\1\0|\3\0\203\1\0|\2\0k\3\0s6\0t\2\0j\1\0|\2\0\203\1\0|\3\0k\3\0rO\0t\3\0d\1\0|\3\0|\2\0f\2\0\26\203\1\0\202\1\0n\0\0t\0\0|\3\0=t\2\0|\2\0=|\2\0t\4\0k\6\0rs\0t\4\0|\2\0=n\0\0d\2\0S(\3\0\0\0s0\0\0\0Unregister an extension code.  For testing only.s%\0\0\0key %s is not registered with code %sN(\5\0\0\0R>\0\0\0R2\0\0\0R?\0\0\0R=\0\0\0t\20\0\0\0_extension_cache(\4\0\0\0R@\0\0\0R:\0\0\0RA\0\0\0RB\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/copy_reg.pyR\4\0\0\0\257\0\0\0s\22\0\0\0\0\2\f\1\25\1\25\1\6\1\23\1\7\1\7\1\f\1c\0\0\0\0\0\0\0\0\1\0\0\0C\0\0\0s\16\0\0\0t\0\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\2\0\0\0RC\0\0\0t\5\0\0\0clear(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/copy_reg.pyR\5\0\0\0\273\0\0\0s\2\0\0\0\0\1Ni\0\2\0\0(\27\0\0\0t\7\0\0\0__doc__t\5\0\0\0typesR\0\0\0\0R\10\0\0\0t\7\0\0\0__all__R\v\0\0\0R\f\0\0\0R\1\0\0\0R\2\0\0\0R\21\0\0\0t\t\0\0\0NameErrorR\25\0\0\0R\34\0\0\0R\"\0\0\0R-\0\0\0R.\0\0\0R;\0\0\0R>\0\0\0R?\0\0\0RC\0\0\0R\3\0\0\0R\4\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/copy_reg.pyt\10\0\0\0<module>\5\0\0\0s.\0\0\0\6\2\20\2\6\1\17\2\6\2\f\r\t\6\3\1\10\1\r\1\4\3\t\3\20\4\t\t\6\4\t!\t\3\t8\6\1\6\1\6\4\t\22\t\f", 4096) = 995
27308 read(6, "", 4096)                 = 0
27308 close(6)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 close(5)                          = 0
27308 close(4)                          = 0
27308 stat64("/usr/lib/python2.7/traceback", 0xbfffddec) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/traceback.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/traceback.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/tracebackmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/traceback.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661612, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=11285, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/traceback.pyc", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669324, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=11639, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(5, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\16\0\0\0@\0\0\0sB\1\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0d\1\0d\2\0l\3\0Z\3\0d\3\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0d\v\0d\f\0d\r\0d\16\0d\17\0d\20\0g\16\0Z\4\0d\21\0d\22\0d\23\0\204\2\0Z\5\0d\2\0d\24\0\204\1\0Z\7\0d\25\0\204\0\0Z\10\0d\2\0d\2\0d\26\0\204\2\0Z\t\0d\2\0d\27\0\204\1\0Z\n\0d\2\0d\30\0\204\1\0Z\v\0d\2\0d\2\0d\31\0\204\2\0Z\f\0d\2\0d\32\0\204\1\0Z\r\0d\33\0\204\0\0Z\16\0d\34\0\204\0\0Z\17\0d\35\0\204\0\0Z\20\0d\2\0d\2\0d\36\0\204\2\0Z\21\0d\2\0d\37\0\204\1\0Z\22\0d\2\0d\2\0d \0\204\2\0Z\23\0d\2\0d\2\0d\2\0d!\0\204\3\0Z\24\0d\2\0d\2\0d\"\0\204\2\0Z\25\0d\2\0d\2\0d#\0\204\2\0Z\26\0d$\0\204\0\0Z\27\0d\2\0S(%\0\0\0s@\0\0\0Extract, format and print information about Python stack traces.i\377\377\377\377Nt\r\0\0\0extract_stackt\n\0\0\0extract_tbt\20\0\0\0format_exceptiont\25\0\0\0format_exception_onlyt\v\0\0\0format_listt\f\0\0\0format_stackt\t\0\0\0format_tbt\t\0\0\0print_exct\n\0\0\0format_exct\17\0\0\0print_exceptiont\n\0\0\0print_lastt\v\0\0\0print_stackt\10\0\0\0print_tbt\t\0\0\0tb_linenot\0\0\0\0s\1\0\0\0\nc\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\25\0\0\0|\0\0j\0\0|\1\0|\2\0\27\203\1\0\1d\0\0S(\1\0\0\0N(\1\0\0\0t\5\0\0\0write(\3\0\0\0t\4\0\0\0filet\3\0\0\0strt\n\0\0\0terminator(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyt\6\0\0\0_print\f\0\0\0s\2\0\0\0\0\1c\2\0\0\0\6\0\0\0\7\0\0\0C\0\0\0ss\0\0\0|\1\0d\3\0k\10\0r\30\0t\1\0j\2\0}\1\0n\0\0xT\0|\0\0D]L\0\\\4\0}\2\0}\3\0}\4\0}\5\0t\3\0|\1\0d\1\0|\2\0|\3\0|\4\0f\3\0\26\203\2\0\1|\5\0r\37\0t\3\0|\1\0d\2\0|\5\0j\4\0\203\0\0\26\203\2\0\1q\37\0q\37\0Wd\3\0S(\4\0\0\0sy\0\0\0Print the list of tuples as returned by extract_tb() or\n    extract_stack() as a formatted stack trace to the given file.s\33\0\0\0  File \"%s\", line %d, in %ss\6\0\0\0    %sN(\5\0\0\0t\4\0\0\0Nonet\3\0\0\0syst\6\0\0\0stderrR\23\0\0\0t\5\0\0\0strip(\6\0\0\0t\16\0\0\0extracted_listR\20\0\0\0t\10\0\0\0filenamet\6\0\0\0linenot\4\0\0\0namet\4\0\0\0line(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyt\n\0\0\0print_list\20\0\0\0s\16\0\0\0\0\3\f\1\f\1\31\1\6\1\24\1\6\1c\1\0\0\0\7\0\0\0\5\0\0\0C\0\0\0sd\0\0\0g\0\0}\1\0xW\0|\0\0D]O\0\\\4\0}\2\0}\3\0}\4\0}\5\0d\1\0|\2\0|\3\0|\4\0f\3\0\26}\6\0|\5\0rO\0|\6\0d\2\0|\5\0j\0\0\203\0\0\26\27}\6\0n\0\0|\1\0j\1\0|\6\0\203\1\0\1q\r\0W|\1\0S(\3\0\0\0s\262\1\0\0Format a list of traceback entry tuples for printing.\n\n    Given a list of tuples as returned by extract_tb() or\n    extract_stack(), return a list of strings ready for printing.\n    Each string in the resulting list corresponds to the item with the\n    same index in the argument list.  Each string ends in a newline;\n    the strings may contain internal newlines as well, for those items\n    whose source text line is not None.\n    s\34\0\0\0  File \"%s\", line %d, in %s\ns\7\0\0\0    %s\n(\2\0\0\0R\27\0\0\0t\6\0\0\0append(\7\0\0\0R\30\0\0\0t\4\0\0\0listR\31\0\0\0R\32\0\0\0R\33\0\0\0R\34\0\0\0t\4\0\0\0item(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\4\0\0\0\33\0\0\0s\16\0\0\0\0\n\6\1\31\1\23\1\6\1\27\1\21\1c\3\0\0\0\n\0\0\0\6\0\0\0C\0\0\0s\26\1\0\0|\2\0d\6\0k\10\0r\30\0t\1\0j\2\0}\2\0n\0\0|\1\0d\6\0k\10\0rB\0t\3\0t\1\0d\1\0\203\2\0rB\0t\1\0j\4\0}\1\0qB\0n\0\0d\2\0}\3\0x\307\0|\0\0d\6\0k\t\0r\21\1|\1\0d\6\0k\10\0so\0|\3\0|\1\0k\0\0r\21\1|\0\0j\5\0}\4\0|\0\0j\6\0}\5\0|\4\0j\7\0}\6\0|\6\0j\10\0}\7\0|\6\0j\t\0}\10\0t\n\0|\2\0d\3\0|\7\0|\5\0|\10\0f\3\0\26\203\2\0\1t\v\0j\f\0|\7\0\203\1\0\1t\v\0j\r\0|\7\0|\5\0|\4\0j\16\0\203\3\0}\t\0|\t\0r\373\0t\n\0|\2\0d\4\0|\t\0j\17\0\203\0\0\27\203\2\0\1n\0\0|\0\0j\20\0}\0\0|\3\0d\5\0\27}\3\0qK\0Wd\6\0S(\7\0\0\0s\37\1\0\0Print up to 'limit' stack trace entries from the traceback 'tb'.\n\n    If 'limit' is omitted or None, all entries are printed.  If 'file'\n    is omitted or None, the output goes to sys.stderr; otherwise\n    'file' should be an open file or file-like object with a write()\n    method.\n    t\16\0\0\0tracebacklimiti\0\0\0\0s\33\0\0\0  File \"%s\", line %d, in %ss\4\0\0\0    i\1\0\0\0N(\21\0\0\0R\24\0\0\0R\25\0\0\0R\26\0\0\0t\7\0\0\0hasattrR!\0\0\0t\10\0\0\0tb_frameR\r\0\0\0t\6\0\0\0f_codet\v\0\0\0co_filenamet\7\0\0\0co_nameR\23\0\0\0t\t\0\0\0linecachet\n\0\0\0checkcachet\7\0\0\0getlinet\t\0\0\0f_globalsR\27\0\0\0t\7\0\0\0tb_next(\n\0\0\0t\2\0\0\0tbt\5\0\0\0limitR\20\0\0\0t\1\0\0\0nt\1\0\0\0fR\32\0\0\0t\2\0\0\0coR\31\0\0\0R\33\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\f\0\0\0.\0\0\0s(\0\0\0\0\10\f\1\f\1\f\1\17\1\17\1\6\1'\1\t\1\t\1\t\1\t\1\t\1\6\1\24\1\r\1\30\1\6\0\32\1\t\1c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s\23\0\0\0t\0\0t\1\0|\0\0|\1\0\203\2\0\203\1\0S(\1\0\0\0s5\0\0\0A shorthand for 'format_list(extract_tb(tb, limit))'.(\2\0\0\0R\4\0\0\0R\1\0\0\0(\2\0\0\0R,\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\6\0\0\0J\0\0\0s\2\0\0\0\0\2c\2\0\0\0\n\0\0\0\5\0\0\0C\0\0\0s\376\0\0\0|\1\0d\4\0k\10\0r*\0t\1\0t\2\0d\1\0\203\2\0r*\0t\2\0j\3\0}\1\0q*\0n\0\0g\0\0}\2\0d\2\0}\3\0x\301\0|\0\0d\4\0k\t\0r\371\0|\1\0d\4\0k\10\0s]\0|\3\0|\1\0k\0\0r\371\0|\0\0j\4\0}\4\0|\0\0j\5\0}\5\0|\4\0j\6\0}\6\0|\6\0j\7\0}\7\0|\6\0j\10\0}\10\0t\t\0j\n\0|\7\0\203\1\0\1t\t\0j\v\0|\7\0|\5\0|\4\0j\f\0\203\3\0}\t\0|\t\0r\304\0|\t\0j\r\0\203\0\0}\t\0n\6\0d\4\0}\t\0|\2\0j\16\0|\7\0|\5\0|\10\0|\t\0f\4\0\203\1\0\1|\0\0j\17\0}\0\0|\3\0d\3\0\27}\3\0q9\0W|\2\0S(\5\0\0\0s\355\1\0\0Return list of up to limit pre-processed entries from traceback.\n\n    This is useful for alternate formatting of stack traces.  If\n    'limit' is omitted or None, all entries are extracted.  A\n    pre-processed stack trace entry is a quadruple (filename, line\n    number, function name, text) representing the information that is\n    usually printed for a stack trace.  The text is a string with\n    leading and trailing whitespace stripped; if the source is not\n    available it is None.\n    R", 4096) = 4096
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669324, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=11639, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(5, "!\0\0\0i\0\0\0\0i\1\0\0\0N(\20\0\0\0R\24\0\0\0R\"\0\0\0R\25\0\0\0R!\0\0\0R#\0\0\0R\r\0\0\0R$\0\0\0R%\0\0\0R&\0\0\0R'\0\0\0R(\0\0\0R)\0\0\0R*\0\0\0R\27\0\0\0R\36\0\0\0R+\0\0\0(\n\0\0\0R,\0\0\0R-\0\0\0R\37\0\0\0R.\0\0\0R/\0\0\0R\32\0\0\0R0\0\0\0R\31\0\0\0R\33\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\1\0\0\0N\0\0\0s(\0\0\0\0\v\f\1\17\1\17\1\6\1\6\1'\1\t\1\t\1\t\1\t\1\t\1\r\1\30\1\6\0\17\1\6\1\31\1\t\1\16\1c\5\0\0\0\7\0\0\0\5\0\0\0C\0\0\0sr\0\0\0|\4\0d\3\0k\10\0r\30\0t\1\0j\2\0}\4\0n\0\0|\2\0r>\0t\3\0|\4\0d\1\0\203\2\0\1t\4\0|\2\0|\3\0|\4\0\203\3\0\1n\0\0t\5\0|\0\0|\1\0\203\2\0}\5\0x\36\0|\5\0D]\26\0}\6\0t\3\0|\4\0|\6\0d\2\0\203\3\0\1qT\0Wd\3\0S(\4\0\0\0s\371\1\0\0Print exception up to 'limit' stack trace entries from 'tb' to 'file'.\n\n    This differs from print_tb() in the following ways: (1) if\n    traceback is not None, it prints a header \"Traceback (most recent\n    call last):\"; (2) it prints the exception type and value after the\n    stack trace; (3) if type is SyntaxError and value has the\n    appropriate format, it prints the line where the syntax error\n    occurred with a caret on the next line indicating the approximate\n    position of the error.\n    s\"\0\0\0Traceback (most recent call last):R\16\0\0\0N(\6\0\0\0R\24\0\0\0R\25\0\0\0R\26\0\0\0R\23\0\0\0R\f\0\0\0R\3\0\0\0(\7\0\0\0t\5\0\0\0etypet\5\0\0\0valueR,\0\0\0R-\0\0\0R\20\0\0\0t\5\0\0\0linesR\34\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\t\0\0\0n\0\0\0s\20\0\0\0\0\v\f\1\f\1\6\1\r\1\23\1\17\1\r\1c\4\0\0\0\5\0\0\0\4\0\0\0C\0\0\0sB\0\0\0|\2\0r%\0d\1\0g\1\0}\4\0|\4\0t\0\0|\2\0|\3\0\203\2\0\27}\4\0n\6\0g\0\0}\4\0|\4\0t\1\0|\0\0|\1\0\203\2\0\27}\4\0|\4\0S(\2\0\0\0sz\1\0\0Format a stack trace and the exception information.\n\n    The arguments have the same meaning as the corresponding arguments\n    to print_exception().  The return value is a list of strings, each\n    ending in a newline and some containing internal newlines.  When\n    these lines are concatenated and printed, exactly the same text is\n    printed as does print_exception().\n    s#\0\0\0Traceback (most recent call last):\n(\2\0\0\0R\6\0\0\0R\3\0\0\0(\5\0\0\0R1\0\0\0R2\0\0\0R,\0\0\0R-\0\0\0R\37\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\2\0\0\0\202\0\0\0s\f\0\0\0\0\t\6\1\t\1\26\2\6\1\23\1c\2\0\0\0\n\0\0\0\5\0\0\0C\0\0\0s\212\1\0\0t\0\0|\0\0t\1\0\203\2\0s?\0t\0\0|\0\0t\2\0j\3\0\203\2\0s?\0|\0\0d\t\0k\10\0s?\0t\5\0|\0\0\203\1\0t\6\0k\10\0rO\0t\7\0|\0\0|\1\0\203\2\0g\1\0S|\0\0j\10\0}\2\0t\t\0|\0\0t\n\0\203\2\0sw\0t\7\0|\2\0|\1\0\203\2\0g\1\0Sg\0\0}\3\0y\37\0|\1\0j\v\0\\\2\0}\4\0\\\4\0}\5\0}\6\0}\7\0}\10\0Wn\21\0\4t\f\0k\n\0r\257\0\1\1\1n\301\0X|\5\0p\271\0d\1\0}\5\0|\3\0j\r\0d\2\0|\5\0|\6\0f\2\0\26\203\1\0\1|\10\0d\t\0k\t\0rj\1|\3\0j\r\0d\3\0|\10\0j\16\0\203\0\0\26\203\1\0\1|\7\0d\t\0k\t\0rj\1|\10\0j\17\0d\4\0\203\1\0}\t\0t\20\0t\21\0|\t\0\203\1\0|\7\0\203\2\0d\5\0\30}\7\0|\t\0|\7\0 j\22\0\203\0\0}\t\0d\6\0\204\0\0|\t\0D\203\1\0}\t\0|\3\0j\r\0d\7\0d\10\0j\23\0|\t\0\203\1\0\26\203\1\0\1qj\1n\0\0|\4\0}\1\0|\3\0j\r\0t\7\0|\2\0|\1\0\203\2\0\203\1\0\1|\3\0S(\n\0\0\0s\24\2\0\0Format the exception part of a traceback.\n\n    The arguments are the exception type and value such as given by\n    sys.last_type and sys.last_value. The return value is a list of\n    strings, each ending in a newline.\n\n    Normally, the list contains a single string; however, for\n    SyntaxError exceptions, it contains several lines that (when\n    printed) display detailed information about where the syntax\n    error occurred.\n\n    The message indicating which exception occurred is always the last\n    string in the list.\n\n    s\10\0\0\0<string>s\25\0\0\0  File \"%s\", line %d\ns\7\0\0\0    %s\ns\1\0\0\0\ni\1\0\0\0c\1\0\0\0\2\0\0\0\2\0\0\0s\0\0\0s'\0\0\0|\0\0]\35\0}\1\0|\1\0j\0\0\203\0\0r\33\0|\1\0p\36\0d\0\0V\1q\3\0d\1\0S(\2\0\0\0t\1\0\0\0 N(\1\0\0\0t\7\0\0\0isspace(\2\0\0\0t\2\0\0\0.0t\1\0\0\0c(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pys\t\0\0\0<genexpr>\304\0\0\0s\2\0\0\0\6\0s\10\0\0\0    %s^\nR\16\0\0\0N(\24\0\0\0t\n\0\0\0isinstancet\r\0\0\0BaseExceptiont\5\0\0\0typest\f\0\0\0InstanceTypeR\24\0\0\0t\4\0\0\0typeR\21\0\0\0t\26\0\0\0_format_final_exc_linet\10\0\0\0__name__t\n\0\0\0issubclasst\v\0\0\0SyntaxErrort\4\0\0\0argst\t\0\0\0ExceptionR\36\0\0\0R\27\0\0\0t\6\0\0\0rstript\3\0\0\0mint\3\0\0\0lent\6\0\0\0lstript\4\0\0\0join(\n\0\0\0R1\0\0\0R2\0\0\0t\5\0\0\0stypeR3\0\0\0t\3\0\0\0msgR\31\0\0\0R\32\0\0\0t\6\0\0\0offsett\7\0\0\0badlinet\n\0\0\0caretspace(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\3\0\0\0\223\0\0\0s2\0\0\0\0\27\17\1\22\1\36\1\20\2\t\2\17\1\20\3\6\1\3\1\37\1\r\1\4\2\f\1\27\1\f\1\27\1\f\1\17\1\31\1\20\2\20\1 \1\6\2\26\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0s@\0\0\0t\0\0|\1\0\203\1\0}\2\0|\1\0d\3\0k\10\0s\37\0|\2\0\fr,\0d\1\0|\0\0\26}\3\0n\20\0d\2\0|\0\0|\2\0f\2\0\26}\3\0|\3\0S(\4\0\0\0sG\0\0\0Return a list of a single line -- normal case for format_exception_onlys\3\0\0\0%s\ns\7\0\0\0%s: %s\nN(\2\0\0\0t\t\0\0\0_some_strR\24\0\0\0(\4\0\0\0R1\0\0\0R2\0\0\0t\10\0\0\0valuestrR\34\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR=\0\0\0\313\0\0\0s\n\0\0\0\0\2\f\1\23\1\r\2\20\1c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0sg\0\0\0y\16\0t\0\0|\0\0\203\1\0SWn\21\0\4t\1\0k\n\0r!\0\1\1\1n\1\0Xy \0t\2\0|\0\0\203\1\0}\0\0|\0\0j\3\0d\1\0d\2\0\203\2\0SWn\21\0\4t\1\0k\n\0rU\0\1\1\1n\1\0Xd\3\0t\4\0|\0\0\203\1\0j\5\0\26S(\4\0\0\0Nt\5\0\0\0asciit\20\0\0\0backslashreplaces\27\0\0\0<unprintable %s object>(\6\0\0\0R\21\0\0\0RB\0\0\0t\7\0\0\0unicodet\6\0\0\0encodeR<\0\0\0R>\0\0\0(\1\0\0\0R2\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyRM\0\0\0\324\0\0\0s\24\0\0\0\0\1\3\1\16\1\r\1\4\1\3\1\f\1\24\1\r\1\4\1c\2\0\0\0\5\0\0\0\6\0\0\0C\0\0\0s]\0\0\0|\1\0d\1\0k\10\0r\30\0t\1\0j\2\0}\1\0n\0\0z/\0t\1\0j\3", 4096) = 4096
27308 read(5, "\0\203\0\0\\\3\0}\2\0}\3\0}\4\0t\4\0|\2\0|\3\0|\4\0|\0\0|\1\0\203\5\0\1Wd\1\0d\1\0\4}\2\0\4}\3\0}\4\0Xd\1\0S(\2\0\0\0s\276\0\0\0Shorthand for 'print_exception(sys.exc_type, sys.exc_value, sys.exc_traceback, limit, file)'.\n    (In fact, it uses sys.exc_info() to retrieve the same information\n    in a thread-safe way.)N(\5\0\0\0R\24\0\0\0R\25\0\0\0R\26\0\0\0t\10\0\0\0exc_infoR\t\0\0\0(\5\0\0\0R-\0\0\0R\20\0\0\0R1\0\0\0R2\0\0\0R,\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\7\0\0\0\341\0\0\0s\f\0\0\0\0\4\f\1\f\1\3\1\25\1\32\2c\1\0\0\0\4\0\0\0\6\0\0\0C\0\0\0sK\0\0\0z5\0t\0\0j\1\0\203\0\0\\\3\0}\1\0}\2\0}\3\0d\1\0j\2\0t\3\0|\1\0|\2\0|\3\0|\0\0\203\4\0\203\1\0SWd\2\0d\2\0\4}\1\0\4}\2\0}\3\0Xd\2\0S(\3\0\0\0s%\0\0\0Like print_exc() but return a string.R\16\0\0\0N(\5\0\0\0R\25\0\0\0RS\0\0\0RG\0\0\0R\2\0\0\0R\24\0\0\0(\4\0\0\0R-\0\0\0R1\0\0\0R2\0\0\0R,\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\10\0\0\0\356\0\0\0s\10\0\0\0\0\2\3\1\25\1 \2c\2\0\0\0\2\0\0\0\6\0\0\0C\0\0\0sY\0\0\0t\0\0t\1\0d\1\0\203\2\0s\36\0t\2\0d\2\0\203\1\0\202\1\0n\0\0|\1\0d\3\0k\10\0r6\0t\1\0j\4\0}\1\0n\0\0t\5\0t\1\0j\6\0t\1\0j\7\0t\1\0j\10\0|\0\0|\1\0\203\5\0\1d\3\0S(\4\0\0\0sn\0\0\0This is a shorthand for 'print_exception(sys.last_type,\n    sys.last_value, sys.last_traceback, limit, file)'.t\t\0\0\0last_types\21\0\0\0no last exceptionN(\t\0\0\0R\"\0\0\0R\25\0\0\0t\n\0\0\0ValueErrorR\24\0\0\0R\26\0\0\0R\t\0\0\0RT\0\0\0t\n\0\0\0last_valuet\16\0\0\0last_traceback(\2\0\0\0R-\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\n\0\0\0\367\0\0\0s\f\0\0\0\0\3\17\1\17\1\f\1\f\1\25\1c\3\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s]\0\0\0|\0\0d\2\0k\10\0rC\0y\n\0t\1\0\202\1\0WqC\0\4t\1\0k\n\0r?\0\1\1\1t\2\0j\3\0\203\0\0d\1\0\31j\4\0j\5\0}\0\0qC\0Xn\0\0t\6\0t\7\0|\0\0|\1\0\203\2\0|\2\0\203\2\0\1d\2\0S(\3\0\0\0s\367\0\0\0Print a stack trace from its invocation point.\n\n    The optional 'f' argument can be used to specify an alternate\n    stack frame at which to start. The optional 'limit' and 'file'\n    arguments have the same meaning as for print_exception().\n    i\2\0\0\0N(\10\0\0\0R\24\0\0\0t\21\0\0\0ZeroDivisionErrorR\25\0\0\0RS\0\0\0R#\0\0\0t\6\0\0\0f_backR\35\0\0\0R\0\0\0\0(\3\0\0\0R/\0\0\0R-\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\v\0\0\0\2\1\0\0s\f\0\0\0\0\7\f\1\3\1\n\1\r\1\35\1c\2\0\0\0\2\0\0\0\5\0\0\0C\0\0\0sV\0\0\0|\0\0d\2\0k\10\0rC\0y\n\0t\1\0\202\1\0WqC\0\4t\1\0k\n\0r?\0\1\1\1t\2\0j\3\0\203\0\0d\1\0\31j\4\0j\5\0}\0\0qC\0Xn\0\0t\6\0t\7\0|\0\0|\1\0\203\2\0\203\1\0S(\3\0\0\0s5\0\0\0Shorthand for 'format_list(extract_stack(f, limit))'.i\2\0\0\0N(\10\0\0\0R\24\0\0\0RX\0\0\0R\25\0\0\0RS\0\0\0R#\0\0\0RY\0\0\0R\4\0\0\0R\0\0\0\0(\2\0\0\0R/\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\5\0\0\0\20\1\0\0s\f\0\0\0\0\2\f\1\3\1\n\1\r\1\35\1c\2\0\0\0\t\0\0\0\5\0\0\0C\0\0\0sB\1\0\0|\0\0d\5\0k\10\0rC\0y\n\0t\1\0\202\1\0WqC\0\4t\1\0k\n\0r?\0\1\1\1t\2\0j\3\0\203\0\0d\1\0\31j\4\0j\5\0}\0\0qC\0Xn\0\0|\1\0d\5\0k\10\0rm\0t\6\0t\2\0d\2\0\203\2\0rm\0t\2\0j\7\0}\1\0qm\0n\0\0g\0\0}\2\0d\3\0}\3\0x\270\0|\0\0d\5\0k\t\0r3\1|\1\0d\5\0k\10\0s\240\0|\3\0|\1\0k\0\0r3\1|\0\0j\10\0}\4\0|\0\0j\t\0}\5\0|\5\0j\n\0}\6\0|\5\0j\v\0}\7\0t\f\0j\r\0|\6\0\203\1\0\1t\f\0j\16\0|\6\0|\4\0|\0\0j\17\0\203\3\0}\10\0|\10\0r\376\0|\10\0j\20\0\203\0\0}\10\0n\6\0d\5\0}\10\0|\2\0j\21\0|\6\0|\4\0|\7\0|\10\0f\4\0\203\1\0\1|\0\0j\5\0}\0\0|\3\0d\4\0\27}\3\0q|\0W|\2\0j\22\0\203\0\0\1|\2\0S(\6\0\0\0ss\1\0\0Extract the raw traceback from the current stack frame.\n\n    The return value has the same format as for extract_tb().  The\n    optional 'f' and 'limit' arguments have the same meaning as for\n    print_stack().  Each item in the list is a quadruple (filename,\n    line number, function name, text), and the entries are in order\n    from oldest to newest stack frame.\n    i\2\0\0\0R!\0\0\0i\0\0\0\0i\1\0\0\0N(\23\0\0\0R\24\0\0\0RX\0\0\0R\25\0\0\0RS\0\0\0R#\0\0\0RY\0\0\0R\"\0\0\0R!\0\0\0t\10\0\0\0f_linenoR$\0\0\0R%\0\0\0R&\0\0\0R'\0\0\0R(\0\0\0R)\0\0\0R*\0\0\0R\27\0\0\0R\36\0\0\0t\7\0\0\0reverse(\t\0\0\0R/\0\0\0R-\0\0\0R\37\0\0\0R.\0\0\0R\32\0\0\0R0\0\0\0R\31\0\0\0R\33\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\0\0\0\0\31\1\0\0s2\0\0\0\0\t\f\1\3\1\n\1\r\1\35\1\f\1\17\1\17\1\6\1\6\1'\1\t\1\t\1\t\1\t\1\r\1\30\1\6\0\17\1\6\1\31\1\t\1\16\1\n\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\7\0\0\0|\0\0j\0\0S(\1\0\0\0sR\0\0\0Calculate correct line number of traceback given in tb.\n\n    Obsolete in 2.3.\n    (\1\0\0\0R\r\0\0\0(\1\0\0\0R,\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyR\r\0\0\0;\1\0\0s\2\0\0\0\0\5(\30\0\0\0t\7\0\0\0__doc__R'\0\0\0R\25\0\0\0R:\0\0\0t\7\0\0\0__all__R\23\0\0\0R\24\0\0\0R\35\0\0\0R\4\0\0\0R\f\0\0\0R\6\0\0\0R\1\0\0\0R\t\0\0\0R\2\0\0\0R\3\0\0\0R=\0\0\0RM\0\0\0R\7\0\0\0R\10\0\0\0R\n\0\0\0R\v\0\0\0R\5\0\0\0R\0\0\0\0R\r\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/traceback.pyt\10\0\0\0<module>\1\0\0\0s2\0\0\0\6\2\f\1\f\1\f\2\t\1\t\1\f\1\22\2\17\4\f\v\t\23\17\34\f\4\f \17\24\f\21\t8\t\t\t\r\17\r\f\t\17\v\22\16\17\t\17\"", 4096) = 3447
27308 read(5, "", 4096)                 = 0
27308 close(5)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 close(4)                          = 0
27308 geteuid32()                       = 1000
27308 getuid32()                        = 1000
27308 getegid32()                       = 1000
27308 getgid32()                        = 1000
27308 stat64("/usr/lib/python2.7", {st_dev=makedev(8, 1), st_ino=656757, st_mode=S_IFDIR|0755, st_nlink=27, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=12288, st_atime=2017/04/22-18:29:54, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 stat64("/usr/lib/python2.7", {st_dev=makedev(8, 1), st_ino=656757, st_mode=S_IFDIR|0755, st_nlink=27, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=12288, st_atime=2017/04/22-18:29:54, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 stat64("/usr/lib/python2.7/sysconfig", 0xbfffdaec) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sysconfig.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sysconfig.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sysconfigmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sysconfig.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661599, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=25204, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/sysconfig.pyc", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669325, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=18686, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(5, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\7\0\0\0@\0\0\0s\217\5\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0d\1\0d\3\0l\3\0m\4\0Z\4\0m\5\0Z\5\0\1i\n\0i\10\0d\4\0d\5\0006d\6\0d\7\0006d\10\0d\t\0006d\n\0d\v\0006d\f\0d\r\0006d\16\0d\17\0006d\20\0d\21\0006d\22\0d\23\0006d\24\0006i\10\0d\4\0d\5\0006d\6\0d\7\0006d\25\0d\t\0006d\26\0d\v\0006d\27\0d\r\0006d\30\0d\17\0006d\31\0d\21\0006d\32\0d\23\0006d\33\0006i\10\0d\4\0d\5\0006d\6\0d\7\0006d\34\0d\t\0006d\35\0d\v\0006d\f\0d\r\0006d\16\0d\17\0006d\20\0d\21\0006d\22\0d\23\0006d\36\0006i\10\0d\37\0d\5\0006d\37\0d\7\0006d\37\0d\t\0006d\37\0d\v\0006d \0d\r\0006d \0d\17\0006d\20\0d\21\0006d\22\0d\23\0006d!\0006i\10\0d\"\0d\5\0006d\"\0d\7\0006d#\0d\t\0006d#\0d\v\0006d$\0d\r\0006d$\0d\17\0006d%\0d\21\0006d\22\0d\23\0006d&\0006i\10\0d\"\0d\5\0006d\"\0d\7\0006d#\0d\t\0006d#\0d\v\0006d$\0d\r\0006d$\0d\17\0006d%\0d\21\0006d\22\0d\23\0006d'\0006i\7\0d(\0d\5\0006d(\0d\7\0006d)\0d\t\0006d)\0d\v\0006d*\0d\r\0006d+\0d\21\0006d,\0d\23\0006d-\0006i\7\0d.\0d\5\0006d.\0d\7\0006d/\0d\t\0006d/\0d\v\0006d0\0d\r\0006d1\0d\21\0006d,\0d\23\0006d2\0006i\7\0d(\0d\5\0006d(\0d\7\0006d)\0d\t\0006d)\0d\v\0006d*\0d\r\0006d+\0d\21\0006d,\0d\23\0006d3\0006i\7\0d4\0d\5\0006d4\0d\7\0006d5\0d\t\0006d5\0d\v\0006d6\0d\r\0006d+\0d\21\0006d,\0d\23\0006d7\0006Z\6\0d^\0Z\7\0e\1\0j\10\0j\t\0\203\0\0d8\0\31Z\n\0e\1\0j\10\0d9\0 Z\v\0e\n\0d8\0\31e\n\0d:\0\31\27Z\f\0e\2\0j\r\0j\16\0e\1\0j\17\0\203\1\0Z\20\0e\2\0j\r\0j\16\0e\1\0j\21\0\203\1\0Z\22\0d\2\0a\24\0d\2\0Z\25\0d;\0\204\0\0Z\26\0e\1\0j\27\0r2\3e\2\0j\r\0j\30\0e\26\0e\1\0j\27\0\203\1\0\203\1\0Z\31\0n\22\0e\26\0e\2\0j\32\0\203\0\0\203\1\0Z\31\0e\2\0j\33\0d&\0k\2\0r\207\3d<\0e\31\0d=\0\37j\34\0\203\0\0k\6\0r\207\3e\26\0e\2\0j\r\0j\35\0e\31\0e\4\0\203\2\0\203\1\0Z\31\0n\0\0e\2\0j\33\0d&\0k\2\0r\315\3d>\0e\31\0d?\0\37j\34\0\203\0\0k\6\0r\315\3e\26\0e\2\0j\r\0j\35\0e\31\0e\4\0e\4\0\203\3\0\203\1\0Z\31\0n\0\0e\2\0j\33\0d&\0k\2\0r\23\4d@\0e\31\0dA\0\37j\34\0\203\0\0k\6\0r\23\4e\26\0e\2\0j\r\0j\35\0e\31\0e\4\0e\4\0\203\3\0\203\1\0Z\31\0n\0\0dB\0e\2\0j\36\0k\6\0rC\4e\2\0j\r\0j\16\0e\2\0j\r\0j\37\0dC\0\203\1\0\203\1\0Z\31\0n\0\0dD\0\204\0\0Z \0e \0\203\0\0Z!\0e!\0r\213\4x-\0d_\0D]\"\0Z\"\0dE\0e\6\0e\"\0\31d\r\0<dF\0e\6\0e\"\0\31d\17\0<qb\4Wn\0\0dG\0\204\0\0Z#\0dH\0\204\0\0Z$\0dI\0\204\0\0Z%\0dJ\0\204\0\0Z&\0dK\0\204\0\0Z'\0d\2\0dL\0\204\1\0Z(\0dM\0\204\0\0Z)\0e)\0Z*\0dN\0\204\0\0Z+\0dO\0\204\0\0Z,\0dP\0\204\0\0Z-\0d\2\0dQ\0\204\1\0Z.\0dR\0\204\0\0Z/\0dS\0\204\0\0Z0\0dT\0\204\0\0Z1\0e&\0\203\0\0d\2\0e2\0dU\0\204\3\0Z3\0e&\0\203\0\0d\2\0e2\0dV\0\204\3\0Z4\0dW\0\204\0\0Z5\0dX\0\204\0\0Z6\0dY\0\204\0\0Z7\0dZ\0\204\0\0Z8\0d[\0\204\0\0Z9\0d\\\0\204\0\0Z:\0e;\0d]\0k\2\0r\213\5e:\0\203\0\0\1n\0\0d\2\0S(`\0\0\0s7\0\0\0Provide access to Python's configuration information.\n\ni\377\377\377\377N(\2\0\0\0t\6\0\0\0pardirt\10\0\0\0realpaths#\0\0\0{base}/lib/python{py_version_short}t\6\0\0\0stdlibs'\0\0\0{platbase}/lib/python{py_version_short}t\n\0\0\0platstdlibs1\0\0\0{base}/lib/python{py_version_short}/site-packagest\7\0\0\0purelibs5\0\0\0{platbase}/lib/python{py_version_short}/site-packagest\7\0\0\0platlibs'\0\0\0{base}/include/python{py_version_short}t\7\0\0\0includes+\0\0\0{platbase}/include/python{py_version_short}t\v\0\0\0platincludes\n\0\0\0{base}/bint\7\0\0\0scriptss\6\0\0\0{base}t\4\0\0\0datat\f\0\0\0posix_prefixs7\0\0\0{base}/local/lib/python{py_version_short}/dist-packagess;\0\0\0{platbase}/local/lib/python{py_version_short}/dist-packagess-\0\0\0{base}/local/include/python{py_version_short}s1\0\0\0{platbase}/local/include/python{py_version_short}s\20\0\0\0{base}/local/bins\f\0\0\0{base}/localt\v\0\0\0posix_locals1\0\0\0{base}/lib/python{py_version_short}/dist-packagess5\0\0\0{platbase}/lib/python{py_version_short}/dist-packagest\n\0\0\0deb_systems\21\0\0\0{base}/lib/pythons\25\0\0\0{base}/include/pythont\n\0\0\0posix_homes\n\0\0\0{base}/Libs\30\0\0\0{base}/Lib/site-packagess\16\0\0\0{base}/Includes\16\0\0\0{base}/Scriptst\2\0\0\0ntt\3\0\0\0os2s'\0\0\0{userbase}/lib/python{py_version_short}s5\0\0\0{userbase}/lib/python{py_version_short}/site-packagess+\0\0\0{userbase}/include/python{py_version_short}s\16\0\0\0{userbase}/bins\n\0\0\0{userbase}t\10\0\0\0os2_homes#\0\0\0{userbase}/Python{py_version_nodot}s1\0\0\0{userbase}/Python{py_version_nodot}/site-packagess+\0\0\0{userbase}/Python{py_version_nodot}/Includes\22\0\0\0{userbase}/Scriptst\7\0\0\0nt_usert\n\0\0\0posix_users\25\0\0\0{userbase}/lib/pythons#\0\0\0{userbase}/lib/python/site-packagess\22\0\0\0{userbase}/includet\22\0\0\0osx_framework_useri\0\0\0\0i\3\0\0\0i\2\0\0\0c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0s'\0\0\0y\16\0t\0\0|\0\0\203\1\0SWn\22\0\4t\1\0k\n\0r\"\0\1\1\1|\0\0SXd\0\0S(\1\0\0\0N(\2\0\0\0R\1\0\0\0t\7\0\0\0OSError(\1\0\0\0t\4\0\0\0path(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\16\0\0\0_safe_realpathu\0\0\0s\10\0\0\0\0\1\3\1\16\1\r\1t\7\0\0\0pcbuildi\370\377\377\377s\5\0\0\0\\pc\\vi\366\377\377\377s\16\0\0\0\\pcbuild\\amd64i\362\377\377\377t\24\0\0\0_PYTHON_PROJECT_BASEt\1\0\0\0.c\0\0\0\0\1\0\0\0\6\0\0\0C\0\0\0s=\0\0\0x6\0d\4\0D].\0}\0\0t\0\0j\1\0j\2\0t\0\0j\1\0j\3\0t\4\0d\3\0|\0\0\203\3\0\203\1\0r\7\0t\5\0Sq\7\0Wt\6\0S(\5\0\0\0Ns\n\0\0\0Setup.dists\v\0\0\0Setup.localt\7\0\0\0Modules(\2\0\0\0s\n\0\0\0Setup.dists\v\0\0\0Setup.local(\7\0\0\0t\2\0\0\0osR\25\0\0\0t\6\0\0\0isfilet\4\0\0\0joint\r\0\0\0_PROJECT_BASEt\4\0\0\0Truet\5\0\0\0False(\1\0\0\0t\2\0\0\0fn(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\17\0\0\0is_python_build\217\0\0\0s\10\0\0\0\0\1\r\1$\1\10\1s\25\0\0\0{projectbase}/Includes\10\0\0\0{srcdir}c\2\0\0\0\3\0\0\0\5\0\0\0C\0\0\0sc\0\0\0y\21\0|\0\0j\0\0|\1\0\215\0\0SWnK\0\4t\1\0k\n\0r^\0\1\1\1y\24\0|\0\0j\0\0t\2\0j\3\0\215\0\0SWq_\0\4t\1\0k\n\0rZ\0\1}\2\0\1t\4\0d\1\0|\2\0\26\203\1\0\202\1\0q_\0Xn\1\0Xd\0\0S(\2\0\0\0Ns\4\0\0\0{%s}(\5\0\0\0t\6\0\0\0formatt\10\0\0\0KeyErrorR\33\0\0\0t\7\0\0\0environt\16\0\0\0AttributeError(\3\0\0\0t\1\0\0\0st\n\0\0\0local_varst\3\0\0\0var(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\v\0\0\0_subst_vars\234\0\0\0s\16\0\0\0\0\1\3\1\21\1\r\1\3\1\24\1\17\1c\2\0\0\0\5\0\0\0\4\0\0\0C\0\0\0sI\0\0\0|\0\0j\0\0\203\0\0}\2\0x6\0|\1\0j\1\0\203\0\0D](\0\\\2\0}\3\0}\4\0|", 4096) = 4096
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669325, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=18686, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(5, "\3\0|\2\0k\6\0r7\0q\31\0n\0\0|\4\0|\0\0|\3\0<q\31\0Wd\0\0S(\1\0\0\0N(\2\0\0\0t\4\0\0\0keyst\5\0\0\0items(\5\0\0\0t\v\0\0\0target_dictt\n\0\0\0other_dictt\v\0\0\0target_keyst\3\0\0\0keyt\5\0\0\0value(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\f\0\0\0_extend_dict\245\0\0\0s\n\0\0\0\0\1\f\1\31\1\f\1\6\1c\2\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\223\0\0\0i\0\0}\2\0|\1\0d\0\0k\10\0r\33\0i\0\0}\1\0n\0\0t\1\0|\1\0t\2\0\203\0\0\203\2\0\1xa\0t\3\0|\0\0\31j\4\0\203\0\0D]O\0\\\2\0}\3\0}\4\0t\5\0j\6\0d\3\0k\6\0rl\0t\5\0j\7\0j\10\0|\4\0\203\1\0}\4\0n\0\0t\5\0j\7\0j\t\0t\n\0|\4\0|\1\0\203\2\0\203\1\0|\2\0|\3\0<q<\0W|\2\0S(\4\0\0\0Nt\5\0\0\0posixR\16\0\0\0(\2\0\0\0s\5\0\0\0posixR\16\0\0\0(\v\0\0\0t\4\0\0\0NoneR2\0\0\0t\17\0\0\0get_config_varst\20\0\0\0_INSTALL_SCHEMESR,\0\0\0R\33\0\0\0t\4\0\0\0nameR\25\0\0\0t\n\0\0\0expandusert\10\0\0\0normpathR*\0\0\0(\5\0\0\0t\6\0\0\0schemet\4\0\0\0varst\3\0\0\0resR0\0\0\0R1\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\f\0\0\0_expand_vars\254\0\0\0s\22\0\0\0\0\1\6\1\f\1\t\1\20\2\35\1\17\1\25\1#\1c\0\0\0\0\0\0\0\0\2\0\0\0C\0\0\0s\32\0\0\0t\0\0j\1\0d\1\0k\2\0r\23\0d\2\0St\0\0j\1\0S(\3\0\0\0NR3\0\0\0R\v\0\0\0(\2\0\0\0R\33\0\0\0R7\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\23\0\0\0_get_default_scheme\270\0\0\0s\6\0\0\0\0\1\17\5\4\1c\0\0\0\0\4\0\0\0\7\0\0\0C\0\0\0s\277\0\0\0t\0\0j\1\0j\2\0d\1\0d\0\0\203\2\0}\0\0d\2\0\204\0\0}\1\0t\0\0j\4\0d\3\0k\2\0r\\\0t\0\0j\1\0j\2\0d\4\0\203\1\0pB\0d\5\0}\2\0|\0\0rO\0|\0\0S|\1\0|\2\0d\6\0\203\2\0St\5\0j\6\0d\7\0k\2\0r\250\0t\7\0d\10\0\203\1\0}\3\0|\3\0r\250\0|\0\0r\207\0|\0\0S|\1\0d\5\0d\t\0|\3\0d\n\0t\5\0j\10\0d\v\0 \26\203\4\0Sn\0\0|\0\0r\262\0|\0\0S|\1\0d\5\0d\f\0\203\2\0S(\r\0\0\0Nt\16\0\0\0PYTHONUSERBASEc\0\0\0\0\1\0\0\0\3\0\0\0W\0\0\0s\34\0\0\0t\0\0j\1\0j\2\0t\0\0j\1\0j\3\0|\0\0\214\0\0\203\1\0S(\1\0\0\0N(\4\0\0\0R\33\0\0\0R\25\0\0\0R8\0\0\0R\35\0\0\0(\1\0\0\0t\4\0\0\0args(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\10\0\0\0joinuser\303\0\0\0s\2\0\0\0\0\1R\16\0\0\0t\7\0\0\0APPDATAt\1\0\0\0~t\6\0\0\0Pythont\6\0\0\0darwint\17\0\0\0PYTHONFRAMEWORKt\7\0\0\0Librarys\5\0\0\0%d.%di\2\0\0\0s\6\0\0\0.local(\t\0\0\0R\33\0\0\0R%\0\0\0t\3\0\0\0getR4\0\0\0R7\0\0\0t\3\0\0\0syst\10\0\0\0platformt\16\0\0\0get_config_vart\f\0\0\0version_info(\4\0\0\0t\10\0\0\0env_baseRA\0\0\0t\4\0\0\0baset\t\0\0\0framework(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\f\0\0\0_getuserbase\301\0\0\0s\30\0\0\0\0\1\25\1\t\4\17\1\30\1\27\2\17\1\f\1\6\1\n\1\17\1\22\2c\2\0\0\0\27\0\0\0\7\0\0\0C\0\0\0s\370\3\0\0d\1\0d\2\0l\0\0}\2\0|\2\0j\1\0d\3\0\203\1\0}\3\0|\2\0j\1\0d\4\0\203\1\0}\4\0|\2\0j\1\0d\5\0\203\1\0}\5\0|\1\0d\2\0k\10\0rN\0i\0\0}\1\0n\0\0i\0\0}\6\0i\0\0}\7\0t\3\0|\0\0\203\1\0\217\23\0}\10\0|\10\0j\4\0\203\0\0}\t\0Wd\2\0QXx\340\0|\t\0D]\330\0}\n\0|\n\0j\5\0d\6\0\203\1\0s\202\0|\n\0j\6\0\203\0\0d\7\0k\2\0r\257\0q\202\0n\0\0|\3\0j\7\0|\n\0\203\1\0}\v\0|\v\0r\202\0|\v\0j\10\0d\10\0d\t\0\203\2\0\\\2\0}\f\0}\r\0|\r\0j\6\0\203\0\0}\r\0|\r\0j\t\0d\n\0d\7\0\203\2\0}\16\0d\v\0|\16\0k\6\0r\23\1|\r\0|\7\0|\f\0<qZ\1y\20\0t\n\0|\r\0\203\1\0}\r\0Wn'\0\4t\v\0k\n\0rL\1\1\1\1|\r\0j\t\0d\n\0d\v\0\203\2\0|\6\0|\f\0<qZ\1X|\r\0|\6\0|\f\0<q\202\0q\202\0Wt\f\0|\7\0j\r\0\203\0\0\203\1\0}\17\0d\22\0}\20\0x/\2t\16\0|\17\0\203\1\0d\17\0k\4\0r\247\3x\26\2t\17\0|\17\0\203\1\0D]\10\2}\21\0|\7\0|\21\0\31}\22\0|\4\0j\20\0|\22\0\203\1\0p\303\1|\5\0j\20\0|\22\0\203\1\0}\v\0|\v\0d\2\0k\t\0r\211\3|\v\0j\10\0d\10\0\203\1\0}\f\0t\21\0}\23\0|\f\0|\6\0k\6\0r\6\2t\22\0|\6\0|\f\0\31\203\1\0}\24\0n\246\0|\f\0|\7\0k\6\0r\33\2t\23\0}\23\0n\221\0|\f\0t\24\0j\25\0k\6\0r:\2t\24\0j\25\0|\f\0\31}\24\0nr\0|\f\0|\20\0k\6\0r\236\2|\21\0j\5\0d\20\0\203\1\0rn\2|\21\0d\21\0\37|\20\0k\6\0rn\2d\7\0}\24\0q\254\2d\20\0|\f\0\27|\7\0k\6\0r\207\2t\23\0}\23\0q\254\2t\22\0|\6\0d\20\0|\f\0\27\31\203\1\0}\24\0n\16\0d\7\0\4|\6\0|\f\0<}\24\0|\23\0r\240\3|\22\0|\v\0j\26\0\203\0\0\37}\25\0|\22\0|\v\0j\27\0\203\0\0 |\24\0\27|\25\0\27}\22\0d\v\0|\25\0k\6\0r\363\2|\22\0|\7\0|\21\0<q\206\3y\20\0t\n\0|\22\0\203\1\0}\22\0Wn!\0\4t\v\0k\n\0r&\3\1\1\1|\22\0j\6\0\203\0\0|\6\0|\21\0<n\v\0X|\22\0|\6\0|\21\0<|\17\0j\30\0|\21\0\203\1\0\1|\21\0j\5\0d\20\0\203\1\0r\206\3|\21\0d\21\0\37|\20\0k\6\0r\206\3|\21\0d\21\0\37}\21\0|\21\0|\6\0k\7\0r\203\3|\22\0|\6\0|\21\0<q\203\3q\206\3q\240\3q\230\1|\22\0|\6\0|\21\0<|\17\0j\30\0|\21\0\203\1\0\1q\230\1Wqy\1Wx<\0|\6\0j\31\0\203\0\0D].\0\\\2\0}\26\0}\r\0t\32\0|\r\0t\22\0\203\2\0r\265\3|\r\0j\6\0\203\0\0|\6\0|\26\0<q\265\3q\265\3W|\1\0j\33\0|\6\0\203\1\0\1|\1\0S(\23\0\0\0s\314\0\0\0Parse a Makefile-style file.\n\n    A dictionary containing name/value pairs is returned.  If an\n    optional dictionary is passed in as the second argument, it is\n    used instead of a new dictionary.\n    i\377\377\377\377Ns\"\0\0\0([a-zA-Z][a-zA-Z0-9_]+)\\s*=\\s*(.*)s\35\0\0\0\\$\\(([A-Za-z][A-Za-z0-9_]*)\\)s\33\0\0\0\\${([A-Za-z][A-Za-z0-9_]*)}t\1\0\0\0#t\0\0\0\0i\1\0\0\0i\2\0\0\0s\2\0\0\0$$t\1\0\0\0$t\6\0\0\0CFLAGSt\7\0\0\0LDFLAGSt\10\0\0\0CPPFLAGSi\0\0\0\0t\3\0\0\0PY_i\3\0\0\0(\3\0\0\0RT\0\0\0RU\0\0\0RV\0\0\0(\34\0\0\0t\2\0\0\0ret\7\0\0\0compileR4\0\0\0t\4\0\0\0opent\t\0\0\0readlinest\n\0\0\0startswitht\5\0\0\0stript\5\0\0\0matcht\5\0\0\0groupt\7\0\0\0replacet\3\0\0\0intt\n\0\0\0ValueErrort\4\0\0\0listR+\0\0\0t\3\0\0\0lent\5\0\0\0tuplet\6\0\0\0searchR\37\0\0\0t\3\0\0\0strR \0\0\0R\33\0\0\0R%\0\0\0t\3\0\0\0endt\5\0\0\0startt\6\0\0\0removeR,\0\0\0t\n\0\0\0isinstancet\6\0\0\0update(\27\0\0\0t\10\0\0\0filenameR;\0\0\0RX\0\0\0t\f\0\0\0_variable_rxt\f\0\0\0_findvar1_rxt\f\0\0\0_findvar2_rxt\4\0\0\0donet\7\0\0\0notdonet\1\0\0\0ft\5\0\0\0linest\4\0\0\0linet\1\0\0\0mt\1\0\0\0nt\1\0\0\0vt\4\0\0\0tmpvt\t\0\0\0variablest\21\0\0\0renamed_variablesR7\0\0\0R1\0\0\0t\5\0\0\0foundt\4\0\0\0itemt\5\0\0\0aftert\1\0\0\0k(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\17\0\0\0_parse_makefile\325\0\0\0s\214\0\0\0\0\7\f\3\17\1\17\1\17\2\f\1\t\1\6\1\6\2\17\1\22\2\r\1!\1\6\1\17\1\6\1\30\1\f\2\22\2\f\1\r\2\3\1\20\1\r\2\32\2\21\3\22\6\6\2\25\1\23\1\n\1\36\1\f\1\17\1\6\1\f\1\23\1\f\2\t\1\17\2\20\2\f\1\37\1\t\2\20\1\t\3\27\3\16\2\6\1\20\1\30\1\f\1\r\2\3\1\20\1\r\1\24\2\n\1\r\2\17\1\20\2\n\1\f\1\26\6\n\1\25\3\31\1\17\1\27\3\r\1c\0\0\0\0\0\0\0\0\3\0\0\0C\0\0\0s2\0\0\0t\0\0r\31\0t\1\0j\2\0j\3\0t\4\0d\1\0\203\2\0St\1\0j\2\0j\3\0t\5\0d\2\0\203\1\0d\1\0\203\2\0S(\3\0\0\0s \0\0\0Return the path of the Makefile.t\10\0\0\0Makefilet\5\0\0\0LIBPL(\6\0\0\0t\r\0\0\0_PYTHON_BUILDR\33\0\0\0R\25\0\0\0R\35\0\0\0R\36\0\0\0RK\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\25\0\0\0get_makefile_filenameL\1\0\0s\6\0\0\0\0\2\6\1\23\1c\0\0\0\0\f\0\0\0\t\0\0\0C\0\0\0s;\2\0\0d\1\0d\2\0l\0\0}\0\0i\0\0}\1\0t\1\0\203\0\0}\2\0y\21\0t\2\0|\2\0|\1\0\203\2\0\1WnL\0\4t\3\0k\n\0rz\0\1}\3\0\1d\3\0|\2\0\26}\4\0t\4\0|\3\0d\4\0\203\2\0rk\0|\4\0d\5\0|\3\0j\5\0\26\27}\4\0n\0\0t\3\0|\4\0\203\1\0\202\1\0n\1\0Xt\6\0\203\0\0}\5\0y&\0t\7\0|\5\0\203\1\0\217\24\0}\6\0t\10\0|\6\0|\1\0\203\2\0\1Wd\2\0QXWnL\0\4t\3\0k\n\0r\370\0\1}\3\0\1d\3\0|\5\0\26}\4\0t\4\0|\3\0d\4\0\203\2\0r\351\0|\4\0d\5\0|\3\0j\5\0\26\27}\4\0n\0\0t\3\0|\4\0\203\1\0\202\1\0n\1\0Xt\t\0r\20\1|\1\0d\6\0\31|\1\0d\7\0<n\0\0d\10\0}\7\0d\t\0t\n\0j\v\0k\6\0rY\1d\1\0d\2\0l\f\0}\10\0|\10\0j\r\0|\7\0\203\1\0}\t\0|\1\0|\t\0_\16\0|\t\0t\n\0j\17\0|\7\0<n\0\0d\n\0t\20\0\203\0\0t\n\0j\21\0d\v\0 f\2\0\26}\n\0t\4\0t\n\0d\f\0\203\2\0r\217\1|\n\0d\r\0007}\n\0n\0\0y\21\0t\22\0j\23\0|\n\0\203\1\0\1Wn\21\0\4t\24\0k\n\0r\263\1\1\1\1n\1\0Xt\22\0j\25\0j\26\0|\n\0|\7\0d\16\0\27\203\2\0}\v\0t\7\0|\v\0d\17\0\203\2\0\2174\0}\6\0|\6\0j\27\0d\20\0\203\1\0\1|\6\0j\27\0d\21\0\203\1\0\1|\0\0j\0\0|\1\0d\22\0|\6\0\203\1\1\1Wd\2\0QXt\7\0d\23\0d\24\0\203\2\0\217\24\0}\6\0|\6\0j\27\0|\n\0\203\1\0\1Wd\2\0QXd\2\0S(\25\0\0\0s;\0\0\0Generate the Python module containing build-time variables.i\377\377\377\377Ns.\0\0\0invalid Python installation: unable to open %st\10\0\0\0strerrors\5\0\0\0 (%s)t\t\0\0\0BLDSHAREDt\10\0\0\0LDSHAREDt\16\0\0\0_sysconfigdataRE\0\0\0s\17\0\0\0build/lib.%s-%si\3\0\0\0t\20\0\0\0gettotalrefcounts\10\0\0\0-pydebugs\3\0\0\0.pyt\2\0\0\0wbsB\0\0\0# system configuration generated and used by the sysconfig module\ns\22\0\0\0build_time_vars = t\6\0\0\0streams\16\0\0\0pybuilddir.txtt\1\0\0\0w(\30\0\0\0t\6\0\0\0pprintR\204\0\0\0R\200\0\0\0t\7\0\0\0IOErrort\7\0\0\0hasattrR\205\0\0\0t\25\0\0\0get_config_h_filenameRZ\0\0\0t\16\0\0\0parse_config_hR\203\0\0\0RI\0\0\0RJ\0\0\0t\3\0\0\0impt\n\0\0\0new_modulet\17\0\0\0build_time_varst\7\0\0\0modulest\f\0\0\0get_platformt\7\0\0\0versionR\33\0\0\0t\10\0\0\0makedirsR\24\0\0\0R\25\0\0\0R\35\0\0\0t\5\0\0\0write(\f\0\0\0R\215\0\0\0R;\0\0\0t\10\0\0\0makefilet\1\0\0\0et\3\0\0\0msgt\10\0\0\0config_hRs\0\0\0R7\0\0\0R\222\0\0\0t\6\0\0\0modulet\n\0\0\0pybuilddirt\10\0\0\0destfile(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\24\0\0\0_generate_posix_varsU\1\0\0sR\0\0\0\0\2\f\1\6\2\t\1\3\1\21\1\17\1\n\1\17\1\24\1\20\3\t\1\3\1\17\1\27\1\17\1\n\1\17\1\24\1\20\5\6\1\21\r\6\1\17\1\f\1\17\1\t\1\20\2\32\1\17\1\r\1\3\1\21\1\r\1\4\1\31\2\22\1\r\2\r\1\31\3\22\1c\1\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s!\0\0\0d\1\0d\2\0l\0\0m\1\0}\1\0\1|\0\0j\2\0|\1\0\203\1\0\1d\3\0S(\4\0\0\0s7\0\0\0Initialize the module as appropriate for POSIX systems.i\377\377\377\377(\1\0\0\0R\224\0\0\0N(\3\0\0\0R\210\0\0\0R\224\0\0\0Rl\0\0\0(\2\0\0\0R;\0\0\0R\224\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\v\0\0\0_init_posix\231\1\0\0s\4\0\0\0\0\3\20\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0sq\0\0\0t\0\0d\1\0\203\1\0|\0\0d\2\0<t\0\0d\3\0\203\1\0|\0\0d\4\0<t\0\0d\5\0\203\1\0|\0\0d\6\0<d\7\0|\0\0d\10\0<d\t\0|\0\0d\n\0<t\1\0|\0\0d\v\0<t\2\0j\3\0j\4\0t\5\0t\6\0j\7\0\203\1\0\203\1\0|\0\0d\f\0<d\r\0S(\16\0\0\0s+\0\0\0Initialize the module as appropriate for NTR\2\0\0\0t\7\0\0\0LIBDESTR\3\0\0\0t\n\0\0\0BINLIBDESTR\6\0\0\0t\t\0\0\0INCLUDEPYs\4\0\0\0.pydt\2\0\0\0SOs\4\0\0\0.exet\3\0\0\0EXEt\7\0\0\0VERSIONt\6\0\0\0BINDIRN(\10\0\0\0t\10\0\0\0get_patht\30\0\0\0_PY_VERSION_SHORT_NO_DOTR\33\0\0\0R\25\0\0\0t\7\0\0\0dirnameR\26\0\0\0RI\0\0\0t\n\0\0\0executable(\1\0\0\0R;\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\17\0\0\0_init_non_posix\237\1\0\0s\16\0\0\0\0\3\20\1\20\1\20\1\n\1\n\1\n\1c\2\0\0\0\t\0\0\0\5\0\0\0C\0\0\0s\357\0\0\0d\1\0d\2\0l\0\0}\2\0|\1\0d\2\0k\10\0r!\0i\0\0}\1\0n\0\0|\2\0j\2\0d\3\0\203\1\0}\3\0|\2\0j\2\0d\4\0\203\1\0}\4\0x\251\0t\3\0r\352\0|\0\0j\4\0\203\0\0}\5\0|\5\0s^\0Pn\0\0|\3\0j\5\0|\5\0\203\1\0}\6\0|\6\0r\274\0|\6\0j\6\0d\5\0d\6\0\203\2\0\\\2\0}\7\0}\10\0y\20\0t\7\0|\10\0\203\1\0}\10\0Wn\21\0\4t\10\0k\n\0r\256\0\1\1\1n\1\0X|\10\0|\1\0|\7\0<qB\0|\4\0j\5\0|\5\0\203\1\0}\6\0|\6\0rB\0d\7\0|\1\0|\6\0j\6\0d\5\0\203\1\0<qB\0qB\0W|\1\0S(\10\0\0\0s\314\0\0\0Parse a config.h-style file.\n\n    A dictionary containing name/value pairs is returned.  If an\n    optional dictionary is passed in as the second argument, it is\n    used instead of a new dictionary.\n    i\377\377\377\377Ns\"\0\0\0#define ([A-Z][A-Za-z0-9_]+) (.*)\ns&\0\0\0/[*] #undef ([A-Z][A-Za-z0-9_]+) [*]/\ni\1\0\0\0i\2\0\0\0i\0\0\0\0(\t\0\0\0RX\0\0\0R4\0\0\0RY\0\0\0R\37\0\0\0t\10\0\0\0readlineR^\0\0\0R_\0\0\0Ra\0\0\0Rb\0\0\0(\t\0\0\0t\2\0\0\0fpR;\0\0\0RX\0\0\0t\t\0\0\0define_rxt\10\0\0\0undef_rxRu\0\0\0Rv\0\0\0Rw\0\0\0Rx\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyR\221\0\0\0\257\1\0\0s*\0\0\0\0\7\f\1\f\1\t\1\17\1\17\2\t\1\f\1\6\1\4\1\17\1\6\1\30\1\3\0\20\1\r\0\4\1\r\2\17\1\6\1\32\1c\0\0\0\0\1\0\0\0\4\0\0\0C\0\0\0sw\0\0\0t\0\0r6\0t\1\0j\2\0d\1\0k\2\0r-\0t\1\0j\3\0j\4\0t\5\0d\2\0\203\2\0}\0\0qd\0t\5\0}\0\0n.\0t\6\0d\3\0\203\1\0j\7\0d\4\0d\5\0d\6\0\203\3\0t\10\0j\t\0r]\0d\7\0p`\0d\10\0\27}\0\0t\1\0j\3\0j\4\0|\0\0d\t\0\203\2\0S(\n\0\0\0s\37\0\0\0Returns the path of pyconfig.h.R\16\0\0\0t\2\0\0\0PCR\7\0\0\0s\n\0\0\0/usr/locals\4\0\0\0/usri\1\0\0\0t\2\0\0\0_dRR\0\0\0s\n\0\0\0pyconfig.h(\n\0\0\0R\203\0\0\0R\33\0\0\0R7\0\0\0R\25\0\0\0R\35\0\0\0R\36\0\0\0R\252\0\0\0R`\0\0\0RI\0\0\0t\7\0\0\0pydebug(\1\0\0\0t\7\0\0\0inc_dir(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyR\220\0\0\0\314\1\0\0s\f\0\0\0\0\2\6\1\17\1\30\2\t\2.\1c\0\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s \0\0\0t\0\0j\1\0\203\0\0}\0\0|\0\0j\2\0\203\0\0\1t\3\0|\0\0\203\1\0S(\1\0\0\0s-\0\0\0Returns a tuple containing the schemes names.(\4\0\0\0R6\0\0\0R+\0\0\0t\4\0\0\0sortRe\0\0\0(\1\0\0\0t\7\0\0\0schemes(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\20\0\0\0get_scheme_names\327\1\0\0s\6\0\0\0\0\2\f\1\n\1c\0\0\0\0\0\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0t\0\0S(\1\0\0\0s+\0\0\0Returns a tuple containing the paths names.(\1\0\0\0t\f\0\0\0_SCHEME_KEYS(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\16\0\0\0get_path_names\335\1\0\0s\2\0\0\0\0\2c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\37\0\0\0|\2\0r\23\0t\0\0|\0\0|\1\0\203\2\0St\1\0|\0\0\31Sd\1\0S(\2\0\0\0s\261\0\0\0Returns a mapping containing an install scheme.\n\n    ``scheme`` is the install scheme name. If not provided, it will\n    return the default scheme for the current platform.\n    N(\2\0\0\0R=\0\0\0R6\0\0\0(\3\0\0\0R:\0\0\0R;\0\0\0t\6\0\0\0expand(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\t\0\0\0get_paths\341\1\0\0s\6\0\0\0\0\6\6\1\r\2c\4\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s\24\0\0\0t\0\0|\1\0|\2\0|\3\0\203\3\0|\0\0\31S(\1\0\0\0s\\\0\0\0Returns a path corresponding to the scheme.\n\n    ``scheme`` is the install scheme name.\n    (\1\0\0\0R\275\0\0\0(\4\0\0\0R7\0\0\0R:\0\0\0R;\0\0\0R\274\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyR\252\0\0\0\354\1\0\0s\2\0\0\0\0\5c\0\0\0\0\t\0\0\0\5\0\0\0G\0\0\0s\17\2\0\0d\1\0d\2\0l\0\0}\1\0t\1\0d\2\0k\10\0r\320\1i\0\0a\1\0t\3\0t\1\0d\3\0<t\4\0t\1\0d\4\0<t\5\0t\1\0d\5\0<t\6\0t\1\0d\6\0<t\5\0d\7\0\31t\5\0d\10\0\31\27t\1\0d\t\0<t\3\0t\1\0d\n\0<t\4\0t\1\0d\v\0<t\7\0t\1\0d\f\0<t\10\0j\t\0d\27\0k\6\0r\226\0t\n\0t\1\0\203\1\0\1n\0\0t\10\0j\t\0d\17\0k\2\0r\262\0t\v\0t\1\0\203\1\0\1n\0\0t\f\0\203\0\0t\1\0d\20\0<t\r\0d\21\0\203\1\0}\2\0|\2\0r\342\0d\22\0|\2\0\27t\1\0d\23\0<n\n\0d\24\0t\1\0d\23\0<d\25\0t\1\0k\7\0r\5\1t\7\0t\1\0d\25\0<n\0\0t\16\0r\242\1t\10\0j\t\0d\17\0k\2\0r\242\1t\7\0}\3\0y\20\0t\10\0j\17\0\203\0\0}\4\0Wn\27\0\4t\20\0k\n\0rI\1\1\1\1d\2\0}\4\0n\1\0Xt\10\0j\21\0j\22\0t\1\0d\25\0\31\203\1\0\fr\242\1|\3\0|\4\0k\3\0r\242\1t\10\0j\21\0j\23\0|\3\0t\1\0d\25\0\31\203\2\0}\5\0t\10\0j\21\0j\24\0|\5\0\203\1\0t\1\0d\25\0<q\242\1n\0\0t\25\0j\26\0d\26\0k\2\0r\320\1d\1\0d\2\0l\27\0}\6\0|\6\0j\30\0t\1\0\203\1\0\1q\320\1n\0\0|\0\0r\7\2g\0\0}\7\0x$\0|\0\0D]\34\0}\10\0|\7\0j\31\0t\1\0j\32\0|\10\0\203\1\0\203\1\0\1q\343\1W|\7\0St\1\0Sd\2\0S(\30\0\0\0sy\1\0\0With no arguments, return a dictionary of all configuration\n    variables relevant for the current platform.\n\n    On Unix, this means every variable defined in Python's installed Makefile;\n    On Windows and Mac OS it's a much smaller set.\n\n    With arguments, return a list of values that result from looking up\n    each argument in the configuration variable dictionary.\n    i\377\377\377\377Nt\6\0\0\0prefixt\v\0\0\0exec_prefixt\n\0\0\0py_versiont\20\0\0\0py_version_shorti\0\0\0\0i\2\0\0\0t\20\0\0\0py_version_nodotRN\0\0\0t\10\0\0\0platbaset\v\0\0\0projectbaseR\16\0\0\0R\17\0\0\0R3\0\0\0t\10\0\0\0userbaset\t\0\0\0MULTIARCHt\1\0\0\0/t\17\0\0\0multiarchsubdirRR\0\0\0t\6\0\0\0srcdirRE\0\0\0(\2\0\0\0s\2\0\0\0ntR\17\0\0\0(\33\0\0\0RX\0\0\0t\f\0\0\0_CONFIG_VARSR4\0\0\0t\7\0\0\0_PREFIXt\f\0\0\0_EXEC_PREFIXt\v\0\0\0_PY_VERSIONt\21\0\0\0_PY_VERSION_SHORTR\36\0\0\0R\33\0\0\0R7\0\0\0R\256\0\0\0R\242\0\0\0RP\0\0\0RK\0\0\0R\203\0\0\0t\6\0\0\0getcwdR\24\0\0\0R\25\0\0\0t\5\0\0\0isabsR\35\0\0\0R9\0\0\0RI\0\0\0RJ\0\0\0t\f\0\0\0_osx_supportt\25\0\0\0customize_config_varst\6\0\0\0appendRH\0\0\0(\t\0\0\0R@\0\0\0RX\0\0\0t\t\0\0\0multiarchRN\0\0\0t\3\0\0\0cwdR\311\0\0\0R\321\0\0\0t\4\0\0\0valsR7\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyR5\0\0\0\363\1\0\0sR\0\0\0\0\n\f\2\f\1\6\4\n\1\n\1\n\1\n\1\26\1\n\1\n\1\n\2\17\1\r\1\17\1\r\5\r\2\f\1\6\1\21\2\n\2\f\1\r\6\25\1\6\1\3\1\20\1\r\1\n\1\27\1\f\4\31\1\34\4\17\1\f\1\23\2\6\1\6\1\r\1\32\1\4\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0\203\0\0j\1\0|\0\0\203\1\0S(\1\0\0\0s\223\0\0\0Return the value of a single variable using the dictionary returned by\n    'get_config_vars()'.\n\n    Equivalent to get_config_vars().get(name)\n    (\2\0\0\0R5\0\0\0RH\0\0\0(\1\0\0\0R7\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyRK\0\0\0@\2\0\0s\2\0\0\0\0\6c\0\0\0\0\16\0\0\0\5\0\0\0C\0\0\0s\255\2\0\0d\1\0d\2\0l\0\0}\0\0t\1\0j\2\0d\3\0k\2\0r\242\0d\4\0}\1\0t\3\0j\4\0j\5\0|\1\0\203\1\0}\2\0|\2\0d\1\0k\2\0rF\0t\3\0j\6\0St\3\0j\4\0j\5\0d\5\0|\2\0\203\2\0}\3\0t\3\0j\4\0|\2\0t\7\0|\1\0\203\1\0\27|\3\0!j\10\0\203\0\0}\4\0|\4\0d\6\0k\2\0r\213\0d\7\0S|\4\0d\10\0k\2\0r\233\0d\t\0St\3\0j\6\0Sd\n\0t\1\0j\t\0k\6\0r\274\0t\1\0j\t\0d\n\0\31St\1\0j\2\0d\v\0k\3\0s\333\0t\n\0t\1\0d\f\0\203\2\0\fr\342\0t\3\0j\6\0St\1\0j\v\0\203\0\0\\\5\0}\5\0}\6\0}\7\0}\10\0}\t\0|\5\0j\10\0\203\0\0j\f\0d\r\0d\16\0\203\2\0}\5\0|\t\0j\f\0d\17\0d\20\0\203\2\0}\t\0|\t\0j\f\0d\r\0d\21\0\203\2\0}\t\0|\5\0d\22\0 d\23\0k\2\0rW\1d\24\0|\5\0|\t\0f\2\0\26S|\5\0d\22\0 d\25\0k\2\0r\316\1|\7\0d\26\0\31d\27\0k\5\0r\234\2d\30\0}\5\0d\31\0t\r\0|\7\0d\26\0\31\203\1\0d\32\0\30|\7\0d\33\0\37f\2\0\26}\7\0i\2\0d\34\0d\35\0006d\36\0d\37\0006}\n\0|\t\0d \0|\n\0t\3\0j\16\0\31\0267}\t\0q\234\2n\316\0|\5\0d!\0 d\"\0k\2\0r\354\1d\24\0|\5\0|\7\0f\2\0\26S|\5\0d\32\0 d#\0k\2\0r\r\2d$\0|\5\0|\10\0|\7\0f\3\0\26S|\5\0d%\0 d&\0k\2\0rY\2d&\0}\5\0|\0\0j\17\0d'\0\203\1\0}\v\0|\v\0j\20\0|\7\0\203\1\0}\f\0|\f\0r\234\2|\f\0j\21\0\203\0\0}\7\0q\234\2nC\0|\5\0d%\0 d(\0k\2\0r\234\2d\1\0d\2\0l\22\0}\r\0|\r\0j\23\0t\24\0\203\0\0|\5\0|\7\0|\t\0\203\4\0\\\3\0}\5\0}\7\0}\t\0n\0\0d)\0|\5\0|\7\0|\t\0f\3\0\26S(*\0\0\0s\253\3\0\0Return a string that identifies the current platform.\n\n    This is used mainly to distinguish platform-specific build directories and\n    platform-specific built distributions.  Typically includes the OS name\n    and version and the architecture (as supplied by 'os.uname()'),\n    although the exact information included depends on the OS; eg. for IRIX\n    the architecture isn't particularly important (IRIX only runs on SGI\n    hardware), but for Linux the kernel version isn't particularly\n    important.\n\n    Examples of returned values:\n       linux-i586\n       linux-alpha (?)\n       solaris-2.6-sun4u\n       irix-5.3\n       irix64-6.2\n\n    Windows will return one of:\n       win-amd64 (64bit Windows on AMD64 (aka x86_64, Intel64, EM64T, etc)\n       win-ia64 (64bit Windows on Itanium)\n       win32 (all others - specifically, sys.platform is returned)\n\n    For other non-POSIX platforms, currently just returns 'sys.platform'.\n    i\377\377\377\377NR\16\0\0\0s\6\0\0\0 bit (t\1\0\0\0)t\5\0\0\0amd64s\t\0\0\0win-amd64t\7\0\0\0itaniums\10\0\0\0win-ia64t\25\0\0\0_PYTHON_HOST_PLATFORMR3\0\0\0t\5\0\0\0unameR\307\0\0\0RR\0\0\0t\1\0\0\0 t\1\0\0\0_t\1\0\0\0-i\5\0\0\0t\5\0\0\0linuxs\5\0\0\0%s-%st\5\0\0\0sunosi\0\0\0\0t\1\0", 12288) = 12288
27308 read(5, "\0\0005t\7\0\0\0solariss\5\0\0\0%d.%si\3\0\0\0i\2\0\0\0t\5\0\0\00032biti\377\377\377\177t\5\0\0\00064bitl\5\0\0\0\377\177\377\177\377\177\377\177\7\0s\3\0\0\0.%si\4\0\0\0t\4\0\0\0irixt\3\0\0\0aixs\10\0\0\0%s-%s.%si\6\0\0\0t\6\0\0\0cygwins\6\0\0\0[\\d.]+RE\0\0\0s\10\0\0\0%s-%s-%s(\25\0\0\0RX\0\0\0R\33\0\0\0R7\0\0\0RI\0\0\0R\227\0\0\0t\4\0\0\0findRJ\0\0\0Rd\0\0\0t\5\0\0\0lowerR%\0\0\0R\217\0\0\0R\333\0\0\0R`\0\0\0Ra\0\0\0t\6\0\0\0maxintRY\0\0\0R^\0\0\0R_\0\0\0R\321\0\0\0t\20\0\0\0get_platform_osxR5\0\0\0(\16\0\0\0RX\0\0\0R\276\0\0\0t\1\0\0\0it\1\0\0\0jt\4\0\0\0lookt\6\0\0\0osnamet\4\0\0\0hostt\7\0\0\0releaseR\227\0\0\0t\7\0\0\0machinet\7\0\0\0bitnesst\6\0\0\0rel_reRv\0\0\0R\321\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyR\226\0\0\0H\2\0\0sZ\0\0\0\0\31\f\1\17\2\6\1\22\1\f\1\7\1\25\1 \1\f\1\4\1\f\1\4\1\7\3\17\1\v\2\37\3\7\3\33\4\30\1\22\1\22\2\20\4\16\1\20\1\20\1\6\1\"\4\24\1\33\2\20\1\16\1\20\1\21\1\20\1\6\1\17\1\17\1\6\1\22\1\20\1\f\1\6\1\6\1\33\2c\0\0\0\0\0\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0t\0\0S(\1\0\0\0N(\1\0\0\0R\316\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\22\0\0\0get_python_version\244\2\0\0s\2\0\0\0\0\1c\2\0\0\0\5\0\0\0\4\0\0\0C\0\0\0sZ\0\0\0xS\0t\0\0t\1\0|\1\0j\2\0\203\0\0\203\1\0\203\1\0D]9\0\\\2\0}\2\0\\\2\0}\3\0}\4\0|\2\0d\1\0k\2\0rC\0d\2\0|\0\0\26GHn\0\0d\3\0|\3\0|\4\0f\2\0\26GHq\31\0Wd\0\0S(\4\0\0\0Ni\0\0\0\0s\4\0\0\0%s: s\n\0\0\0\t%s = \"%s\"(\3\0\0\0t\t\0\0\0enumeratet\6\0\0\0sortedR,\0\0\0(\5\0\0\0t\5\0\0\0titleR\t\0\0\0t\5\0\0\0indexR0\0\0\0R1\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\v\0\0\0_print_dict\250\2\0\0s\10\0\0\0\0\1+\1\f\1\f\1c\0\0\0\0\0\0\0\0\3\0\0\0C\0\0\0sd\0\0\0d\1\0t\0\0j\1\0k\6\0r\32\0t\2\0\203\0\0\1d\2\0Sd\3\0t\3\0\203\0\0\26GHd\4\0t\4\0\203\0\0\26GHd\5\0t\5\0\203\0\0\26GHHt\6\0d\6\0t\7\0\203\0\0\203\2\0\1Ht\6\0d\7\0t\10\0\203\0\0\203\2\0\1d\2\0S(\10\0\0\0s*\0\0\0Display all information sysconfig detains.s\25\0\0\0--generate-posix-varsNs\16\0\0\0Platform: \"%s\"s\24\0\0\0Python version: \"%s\"s!\0\0\0Current installation scheme: \"%s\"t\5\0\0\0Pathst\t\0\0\0Variables(\t\0\0\0RI\0\0\0t\4\0\0\0argvR\241\0\0\0R\226\0\0\0R\365\0\0\0R>\0\0\0R\372\0\0\0R\275\0\0\0R5\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\5\0\0\0_main\257\2\0\0s\24\0\0\0\0\2\17\1\7\1\4\1\f\1\f\1\f\1\1\1\20\1\1\1t\10\0\0\0__main__(\7\0\0\0s\6\0\0\0stdlibs\n\0\0\0platstdlibs\7\0\0\0purelibR\5\0\0\0s\7\0\0\0includeR\10\0\0\0s\4\0\0\0data(\4\0\0\0R\n\0\0\0s\v\0\0\0posix_localR\f\0\0\0R\r\0\0\0(<\0\0\0t\7\0\0\0__doc__RI\0\0\0R\33\0\0\0t\7\0\0\0os.pathR\0\0\0\0R\1\0\0\0R6\0\0\0R\272\0\0\0R\227\0\0\0t\5\0\0\0splitR\315\0\0\0R\316\0\0\0R\253\0\0\0R\25\0\0\0R9\0\0\0R\276\0\0\0R\313\0\0\0R\277\0\0\0R\314\0\0\0R4\0\0\0R\312\0\0\0t\n\0\0\0_USER_BASER\26\0\0\0R\255\0\0\0R\254\0\0\0R\36\0\0\0R\317\0\0\0R7\0\0\0R\351\0\0\0R\35\0\0\0R%\0\0\0t\7\0\0\0abspathR\"\0\0\0R\203\0\0\0R:\0\0\0R*\0\0\0R2\0\0\0R=\0\0\0R>\0\0\0RP\0\0\0R\200\0\0\0R\204\0\0\0t\26\0\0\0_get_makefile_filenameR\241\0\0\0R\242\0\0\0R\256\0\0\0R\221\0\0\0R\220\0\0\0R\271\0\0\0R\273\0\0\0R\37\0\0\0R\275\0\0\0R\252\0\0\0R5\0\0\0RK\0\0\0R\226\0\0\0R\365\0\0\0R\372\0\0\0R\376\0\0\0t\10\0\0\0__name__(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sysconfig.pyt\10\0\0\0<module>\3\0\0\0s\34\1\0\0\6\1\f\1\f\1\26\2\3\1\3\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\v\2\3\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\v\2\3\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\v\2\3\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\v\2\3\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\v\2\3\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\v\2\3\1\7\1\7\1\7\1\7\1\7\1\7\1\v\2\3\1\7\1\7\1\7\1\7\1\7\1\7\1\v\2\3\1\7\1\7\1\7\1\7\1\7\1\7\1\v\2\3\1\7\1\7\1\7\1\7\1\7\1\7\1\16\4\0\1\6\1\23\1\r\1\22\1\25\1\25\1\6\1\6\2\t\6\t\1\36\4\22\2%\1\36\2%\1!\2%\1!\3\17\2!\1\t\6\t\2\6\1\r\1\16\1\25\2\t\t\t\7\t\f\t\t\t\24\fw\t\7\6\2\tD\t\6\t\20\f\35\t\v\t\6\t\4\25\v\25\7\tM\t\10\t\\\t\4\t\7\t\16\f\1", 4096) = 2302
27308 read(5, "", 4096)                 = 0
27308 close(5)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 lstat64("/usr", {st_dev=makedev(8, 1), st_ino=655363, st_mode=S_IFDIR|0755, st_nlink=12, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:21:00, st_mtime=2016/11/06-19:43:05, st_ctime=2016/11/06-19:43:05}) = 0
27308 lstat64("/usr/bin", {st_dev=makedev(8, 1), st_ino=655366, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=104, st_size=49152, st_atime=2017/04/26-21:20:07, st_mtime=2017/04/26-21:18:05, st_ctime=2017/04/26-21:18:05}) = 0
27308 lstat64("/usr/bin/python", {st_dev=makedev(8, 1), st_ino=656088, st_mode=S_IFLNK|0777, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=0, st_size=9, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:26:37, st_ctime=2015/09/26-01:26:37}) = 0
27308 readlink("/usr/bin/python", "python2.7", 4096) = 9
27308 lstat64("/usr/bin/python2.7", {st_dev=makedev(8, 1), st_ino=656090, st_mode=S_IFREG|0755, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=7592, st_size=3885384, st_atime=2017/04/26-21:00:29, st_mtime=2015/04/02-16:48:58, st_ctime=2015/09/26-01:26:38}) = 0
27308 stat64("/usr/bin/Modules/Setup.dist", 0xbfffe76c) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/bin/Modules/Setup.local", 0xbfffe76c) = -1 ENOENT (No such file or directory)
27308 close(4)                          = 0
27308 stat64("/usr/lib/python2.7/re", 0xbfffd8dc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/re.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/re.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/remodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/re.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661563, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=13423, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/re.pyc", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669326, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=13371, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(5, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\27\0\0\0@\0\0\0sQ\2\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0d\1\0d\2\0l\3\0Z\3\0y\20\0d\1\0d\2\0l\4\0Z\4\0Wn\27\0\4e\5\0k\n\0rS\0\1\1\1d\2\0Z\4\0n\1\0Xd\3\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0d\v\0d\f\0d\r\0d\16\0d\17\0d\20\0d\21\0d\22\0d\23\0d\24\0d\25\0d\26\0d\27\0d\30\0d\31\0g\27\0Z\7\0d\32\0Z\10\0e\2\0j\t\0\4Z\n\0Z\v\0e\2\0j\f\0\4Z\r\0Z\16\0e\2\0j\17\0\4Z\20\0Z\21\0e\2\0j\22\0\4Z\23\0Z\24\0e\2\0j\25\0\4Z\26\0Z\27\0e\2\0j\30\0\4Z\31\0Z\32\0e\2\0j\33\0\4Z\34\0Z\35\0e\2\0j\36\0Z\37\0e\2\0j \0Z \0d\33\0d\34\0\204\1\0Z!\0d\33\0d\35\0\204\1\0Z\"\0d\33\0d\33\0d\36\0\204\2\0Z#\0d\33\0d\33\0d\37\0\204\2\0Z$\0d\33\0d\33\0d \0\204\2\0Z%\0d\33\0d!\0\204\1\0Z&\0e\1\0j'\0d\"\0k\5\0r\216\1e\7\0j(\0d#\0\203\1\0\1d\33\0d$\0\204\1\0Z)\0n\0\0d\33\0d%\0\204\1\0Z*\0d&\0\204\0\0Z+\0d\33\0d'\0\204\1\0Z,\0e-\0d(\0\203\1\0Z.\0d)\0\204\0\0Z/\0i\0\0Z0\0i\0\0Z1\0e2\0e\2\0j*\0d*\0d\33\0\203\2\0\203\1\0Z3\0d+\0Z4\0d,\0\204\0\0Z5\0d-\0\204\0\0Z6\0d.\0\204\0\0Z7\0d/\0\204\0\0Z8\0d\1\0d\2\0l9\0Z9\0d0\0\204\0\0Z:\0e9\0j;\0e3\0e:\0e5\0\203\3\0\1d1\0d3\0d2\0\204\0\0\203\0\0YZ<\0d\2\0S(4\0\0\0s\342\22\0\0Support for regular expressions (RE).\n\nThis module provides regular expression matching operations similar to\nthose found in Perl.  It supports both 8-bit and Unicode strings; both\nthe pattern and the strings being processed can contain null bytes and\ncharacters outside the US ASCII range.\n\nRegular expressions can contain both special and ordinary characters.\nMost ordinary characters, like \"A\", \"a\", or \"0\", are the simplest\nregular expressions; they simply match themselves.  You can\nconcatenate ordinary characters, so last matches the string 'last'.\n\nThe special characters are:\n    \".\"      Matches any character except a newline.\n    \"^\"      Matches the start of the string.\n    \"$\"      Matches the end of the string or just before the newline at\n             the end of the string.\n    \"*\"      Matches 0 or more (greedy) repetitions of the preceding RE.\n             Greedy means that it will match as many repetitions as possible.\n    \"+\"      Matches 1 or more (greedy) repetitions of the preceding RE.\n    \"?\"      Matches 0 or 1 (greedy) of the preceding RE.\n    *?,+?,?? Non-greedy versions of the previous three special characters.\n    {m,n}    Matches from m to n repetitions of the preceding RE.\n    {m,n}?   Non-greedy version of the above.\n    \"\\\\\"     Either escapes special characters or signals a special sequence.\n    []       Indicates a set of characters.\n             A \"^\" as the first character indicates a complementing set.\n    \"|\"      A|B, creates an RE that will match either A or B.\n    (...)    Matches the RE inside the parentheses.\n             The contents can be retrieved or matched later in the string.\n    (?iLmsux) Set the I, L, M, S, U, or X flag for the RE (see below).\n    (?:...)  Non-grouping version of regular parentheses.\n    (?P<name>...) The substring matched by the group is accessible by name.\n    (?P=name)     Matches the text matched earlier by the group named name.\n    (?#...)  A comment; ignored.\n    (?=...)  Matches if ... matches next, but doesn't consume the string.\n    (?!...)  Matches if ... doesn't match next.\n    (?<=...) Matches if preceded by ... (must be fixed length).\n    (?<!...) Matches if not preceded by ... (must be fixed length).\n    (?(id/name)yes|no) Matches yes pattern if the group with id/name matched,\n                       the (optional) no pattern otherwise.\n\nThe special sequences consist of \"\\\\\" and a character from the list\nbelow.  If the ordinary character is not on the list, then the\nresulting RE will match the second character.\n    \\number  Matches the contents of the group of the same number.\n    \\A       Matches only at the start of the string.\n    \\Z       Matches only at the end of the string.\n    \\b       Matches the empty string, but only at the start or end of a word.\n    \\B       Matches the empty string, but not at the start or end of a word.\n    \\d       Matches any decimal digit; equivalent to the set [0-9].\n    \\D       Matches any non-digit character; equivalent to the set [^0-9].\n    \\s       Matches any whitespace character; equivalent to [ \\t\\n\\r\\f\\v].\n    \\S       Matches any non-whitespace character; equiv. to [^ \\t\\n\\r\\f\\v].\n    \\w       Matches any alphanumeric character; equivalent to [a-zA-Z0-9_].\n             With LOCALE, it will match the set [0-9_] plus characters defined\n             as letters for the current locale.\n    \\W       Matches the complement of \\w.\n    \\\\       Matches a literal backslash.\n\nThis module ex", 4096) = 4096
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669326, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=13371, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(5, "ports the following functions:\n    match    Match a regular expression pattern to the beginning of a string.\n    search   Search a string for the presence of a pattern.\n    sub      Substitute occurrences of a pattern found in a string.\n    subn     Same as sub, but also return the number of substitutions made.\n    split    Split a string by the occurrences of a pattern.\n    findall  Find all occurrences of a pattern in a string.\n    finditer Return an iterator yielding a match object for each match.\n    compile  Compile a pattern into a RegexObject.\n    purge    Clear the regular expression cache.\n    escape   Backslash all non-alphanumerics in a string.\n\nSome of the functions in this module takes flags as optional parameters:\n    I  IGNORECASE  Perform case-insensitive matching.\n    L  LOCALE      Make \\w, \\W, \\b, \\B, dependent on the current locale.\n    M  MULTILINE   \"^\" matches the beginning of lines (after a newline)\n                   as well as the string.\n                   \"$\" matches the end of lines (before a newline) as well\n                   as the end of the string.\n    S  DOTALL      \".\" matches any character at all, including the newline.\n    X  VERBOSE     Ignore whitespace and comments for nicer looking RE's.\n    U  UNICODE     Make \\w, \\W, \\b, \\B, dependent on the Unicode locale.\n\nThis module also defines an exception 'error'.\n\ni\377\377\377\377Nt\5\0\0\0matcht\6\0\0\0searcht\3\0\0\0subt\4\0\0\0subnt\5\0\0\0splitt\7\0\0\0findallt\7\0\0\0compilet\5\0\0\0purget\10\0\0\0templatet\6\0\0\0escapet\1\0\0\0It\1\0\0\0Lt\1\0\0\0Mt\1\0\0\0St\1\0\0\0Xt\1\0\0\0Ut\n\0\0\0IGNORECASEt\6\0\0\0LOCALEt\t\0\0\0MULTILINEt\6\0\0\0DOTALLt\7\0\0\0VERBOSEt\7\0\0\0UNICODEt\5\0\0\0errors\5\0\0\0002.2.1i\0\0\0\0c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\26\0\0\0t\0\0|\0\0|\2\0\203\2\0j\1\0|\1\0\203\1\0S(\1\0\0\0sq\0\0\0Try to apply the pattern at the start of the string, returning\n    a match object, or None if no match was found.(\2\0\0\0t\10\0\0\0_compileR\0\0\0\0(\3\0\0\0t\7\0\0\0patternt\6\0\0\0stringt\5\0\0\0flags(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyR\0\0\0\0\212\0\0\0s\2\0\0\0\0\3c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\26\0\0\0t\0\0|\0\0|\2\0\203\2\0j\1\0|\1\0\203\1\0S(\1\0\0\0st\0\0\0Scan through string looking for a match to the pattern, returning\n    a match object, or None if no match was found.(\2\0\0\0R\27\0\0\0R\1\0\0\0(\3\0\0\0R\30\0\0\0R\31\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyR\1\0\0\0\217\0\0\0s\2\0\0\0\0\3c\5\0\0\0\5\0\0\0\4\0\0\0C\0\0\0s\34\0\0\0t\0\0|\0\0|\4\0\203\2\0j\1\0|\1\0|\2\0|\3\0\203\3\0S(\1\0\0\0sZ\1\0\0Return the string obtained by replacing the leftmost\n    non-overlapping occurrences of the pattern in string by the\n    replacement repl.  repl can be either a string or a callable;\n    if a string, backslash escapes in it are processed.  If it is\n    a callable, it's passed the match object and must return\n    a replacement string to be used.(\2\0\0\0R\27\0\0\0R\2\0\0\0(\5\0\0\0R\30\0\0\0t\4\0\0\0replR\31\0\0\0t\5\0\0\0countR\32\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyR\2\0\0\0\224\0\0\0s\2\0\0\0\0\7c\5\0\0\0\5\0\0\0\4\0\0\0C\0\0\0s\34\0\0\0t\0\0|\0\0|\4\0\203\2\0j\1\0|\1\0|\2\0|\3\0\203\3\0S(\1\0\0\0s\333\1\0\0Return a 2-tuple containing (new_string, number).\n    new_string is the string obtained by replacing the leftmost\n    non-overlapping occurrences of the pattern in the source\n    string by the replacement repl.  number is the number of\n    substitutions that were made. repl can be either a string or a\n    callable; if a string, backslash escapes in it are processed.\n    If it is a callable, it's passed the match object and must\n    return a replacement string to be used.(\2\0\0\0R\27\0\0\0R\3\0\0\0(\5\0\0\0R\30\0\0\0R\33\0\0\0R\31\0\0\0R\34\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyR\3\0\0\0\235\0\0\0s\2\0\0\0\0\tc\4\0\0\0\4\0\0\0\3\0\0\0C\0\0\0s\31\0\0\0t\0\0|\0\0|\3\0\203\2\0j\1\0|\1\0|\2\0\203\2\0S(\1\0\0\0st\0\0\0Split the source string by the occurrences of the pattern,\n    returning a list containing the resulting substrings.(\2\0\0\0R\27\0\0\0R\4\0\0\0(\4\0\0\0R\30\0\0\0R\31\0\0\0t\10\0\0\0maxsplitR\32\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyR\4\0\0\0\250\0\0\0s\2\0\0\0\0\3c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\26\0\0\0t\0\0|\0\0|\2\0\203\2\0j\1\0|\1\0\203\1\0S(\1\0\0\0s\10\1\0\0Return a list of all non-overlapping matches in the string.\n\n    If one or more groups are present in the pattern, return a\n    list of groups; this will be a list of tuples if the pattern\n    has more than one group.\n\n    Empty matches are included in the result.(\2\0\0\0R\27\0\0\0R\5\0\0\0(\3\0\0\0R\30\0\0\0R\31\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyR\5\0\0\0\255\0\0\0s\2\0\0\0\0\10i\0\0\2\2t\10\0\0\0finditerc\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\26\0\0\0t\0\0|\0\0|\2\0\203\2\0j\1\0|\1\0\203\1\0S(\1\0\0\0s\263\0\0\0Return an iterator over all non-overlapping matches in the\n        string.  For each match, the iterator returns a match object.\n\n        Empty matches are included in the result.(\2\0\0\0R\27\0\0\0R\36\0\0\0(\3\0\0\0R\30\0\0\0R\31\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyR\36\0\0\0\271\0\0\0s\2\0\0\0\0\5c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0|\1\0\203\2\0S(\1\0\0\0sA\0\0\0Compile a regular expression pattern, returning a pattern object.(\1\0\0\0R\27\0\0\0(\2\0\0\0R\30\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyR\6\0\0\0\300\0\0\0s\2\0\0\0\0\2c\0\0\0\0\0\0\0\0\1\0\0\0C\0\0\0s\30\0\0\0t\0\0j\1\0\203\0\0\1t\2\0j\1\0\203\0\0\1d\1\0S(\2\0\0\0s\"\0\0\0Clear the regular expression cacheN(\3\0\0\0t\6\0\0\0_cachet\5\0\0\0cleart\v\0\0\0_cache_repl(\0\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyR\7\0\0\0\304\0\0\0s\4\0\0\0\0\2\n\1c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s\21\0\0\0t\0\0|\0\0|\1\0t\1\0B\203\2\0S(\1\0\0\0s6\0\0\0Compile a template pattern, returning a pattern object(\2\0\0\0R\27\0\0\0t\1\0\0\0T(\2\0\0\0R\30\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyR\10\0\0\0\311\0\0\0s\2\0\0\0\0\2t>\0\0\0abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789c\1\0\0\0\5\0\0\0\4\0\0\0C\0\0\0sv\0\0\0t\0\0|\0\0\203\1\0}\1\0t\1\0}\2\0xP\0t\2\0|\0\0\203\1\0D]B\0\\\2\0}\3\0}\4\0|\4\0|\2\0k\7\0r\37\0|\4\0d\1\0k\2\0rP\0d\2\0|\1\0|\3\0<qa\0d\3\0|\4\0\27|\1\0|\3\0<q\37\0q\37\0W|\0\0d\4\0 j\3\0|\1\0\203\1\0S(\5\0\0\0s2\0\0\0Escape all non-alphanumeric characters in pattern.t\1\0\0\0\0s\4\0\0\0\\000s\1\0\0\0\\i\0\0\0\0(\4\0\0\0t\4\0\0\0listt\t\0\0\0_alphanumt\t\0\0\0enumeratet\4\0\0\0join(\5\0\0\0R\30\0\0\0t\1\0\0\0st\10\0\0\0alphanumt\1\0\0\0it\1\0\0\0c(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyR\t\0\0\0\320\0\0\0s\20\0\0\0\0\2\f\1\6\1\31\1\f\1\f\1\r\2\25\1t\0\0\0\0id\0\0\0c\0\0\0\0\10\0\0\0\5\0\0\0G\0\0\0sl\1\0\0|\0\0\\\2\0}\1\0}\2\0|\2\0t\0\0@}\3\0|\3\0s\206\0t\1\0|\0\0d\1\0\31\203\1\0f\1\0|\0\0\27}\4\0y<\0t\2\0|\4\0\31\\\2\0}\5\0}\6\0|\6\0d\0\0k\10\0sj\0|\6\0t\4\0j\5\0t\4\0j\6\0\203\1\0k\2\0rn\0|\5\0SWq\206\0\4t\7\0k\n\0r\202\0\1\1\1q\206\0Xn\0\0t\10\0|\1\0t\t\0\203\2\0r\256\0|\2\0r\252\0t\n\0d\2\0\203\1\0\202\1\0n\0\0|\1\0St\v\0j\f\0|\1\0\203\1\0s\311\0t\r\0d\3\0\202\2\0n\0\0y\26\0t\v\0j\16\0|\1\0|\2\0\203\2\0}\5\0Wn\34\0\4t\17\0k\n\0r\375\0\1}\7\0\1t\17\0|\7\0\202\2\0n\1\0X|\3\0sh\1t\20\0t\2\0\203\1\0t\21\0k\5\0r#\1t\2\0j\22\0\203\0\0\1n\0\0|\5\0j\23\0t\24\0@rO\1t\4\0s:\1|\5\0St\4\0j\5\0t\4\0j\6\0\203\1\0}\6\0n\6\0d\0\0}\6\0|\5\0|\6\0f\2\0t\2\0|\4\0<n\0\0|\5\0S(\4\0\0\0Ni\0\0\0\0s5\0\0\0Cannot process flags argument with a compiled patterns1\0\0\0first argument must be string or compiled pattern(\25\0\0\0t\5\0\0\0DEBUGt\4\0\0\0typeR\37\0\0\0t\4\0\0\0Nonet\7\0\0\0_localet\t\0\0\0setlocalet\10\0\0\0LC_CTYPEt\10\0\0\0KeyErrort\n\0\0\0isinstancet\r\0\0\0_pattern_typet\n\0\0\0ValueErrort\v\0\0\0sre_compilet\10\0\0\0isstringt\t\0\0\0TypeErrorR\6\0\0\0R\26\0\0\0t\3\0\0\0lent\t\0\0\0_MAXCACHER \0\0\0R\32\0\0\0R\21\0\0\0(\10\0\0\0t\3\0\0\0keyR\30\0\0\0R\32\0\0\0t\f\0\0\0bypass_cachet\10\0\0\0cachekeyt\1\0\0\0pt\3\0\0\0loct\1\0\0\0v(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyR\27\0\0\0\346\0\0\0s<\0\0\0\0\2\f\1\n\1\6\1\27\1\3\1\20\1$\1\10\1\r\1\7\1\17\1\6\1\17\1\4\1\17\1\f\1\3\1\26\1\17\1\r\1\6\1\22\1\r\1\r\1\6\1\4\1\25\2\6\1\23\1c\0\0\0\0\5\0\0\0\5\0\0\0G\0\0\0s\215\0\0\0t\0\0j\1\0|\0\0\203\1\0}\1\0|\1\0d\0\0k\t\0r\37\0|\1\0S|\0\0\\\2\0}\2\0}\3\0y\26\0t\3\0j\4\0|\2\0|\3\0\203\2\0}\1\0Wn\34\0\4t\5\0k\n\0r_\0\1}\4\0\1t\5\0|\4\0\202\2\0n\1\0Xt\6\0t\0\0\203\1\0t\7\0k\5\0r\177\0t\0\0j\10\0\203\0\0\1n\0\0|\1\0t\0\0|\0\0<|\1\0S(\1\0\0\0N(\t\0\0\0R!\0\0\0t\3\0\0\0getR0\0\0\0t\t\0\0\0sre_parset\16\0\0\0parse_templateR\26\0\0\0R;\0\0\0R<\0\0\0R \0\0\0(\5\0\0\0R=\0\0\0R@\0\0\0R\33\0\0\0R\30\0\0\0RB\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyt\r\0\0\0_compile_repl\10\1\0\0s\30\0\0\0\0\2\17\1\f\1\4\1\f\1\3\1\26\1\17\1\r\1\22\1\r\1\n\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\"\0\0\0t\0\0j\1\0|\2\0|\0\0\203\2\0}\2\0t\0\0j\2\0|\2\0|\1\0\203\2\0S(\1\0\0\0N(\3\0\0\0RD\0\0\0RE\0\0\0t\17\0\0\0expand_template(\3\0\0\0R\30\0\0\0R\0\0\0\0R\10\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyt\7\0\0\0_expand\27\1\0\0s\4\0\0\0\0\2\22\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sL\0\0\0t\0\0|\1\0|\0\0\203\2\0}\1\0|\1\0d\1\0\31\fr<\0t\1\0|\1\0d\2\0\31\203\1\0d\2\0k\2\0r<\0|\1\0d\2\0\31d\1\0\31S|\1\0d\3\0\204\1\0}\2\0|\2\0S(\4\0\0\0Ni\0\0\0\0i\1\0\0\0c\2\0\0\0\2\0\0\0\3\0\0\0S\0\0\0s\20\0\0\0t\0\0j\1\0|\1\0|\0\0\203\2\0S(\1\0\0\0N(\2\0\0\0RD\0\0\0RG\0\0\0(\2\0\0\0R\0\0\0\0R\10\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyt\6\0\0\0filter\"\1\0\0s\2\0\0\0\0\1(\2\0\0\0RF\0\0\0R;\0\0\0(\3\0\0\0R\30\0\0\0R\10\0\0\0RI\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyt\5\0\0\0_subx\34\1\0\0s\n\0\0\0\0\2\17\1!\2\f\1\f\2c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\26\0\0\0t\0\0|\0\0j\1\0|\0\0j\2\0f\2\0f\2\0S(\1\0\0\0N(\3\0\0\0R\27\0\0\0R\30\0\0\0R\32\0\0\0(\1\0\0\0R@\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyt\7\0\0\0_pickle*\1\0\0s\2\0\0\0\0\1t\7\0\0\0Scannerc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s\35\0\0\0e\0\0Z\1\0d\0\0d\1\0\204\1\0Z\2\0d\2\0\204\0\0Z\3\0RS(\3\0\0\0i\0\0\0\0c\3\0\0\0\t\0\0\0\t\0\0\0C\0\0\0s\331\0\0\0d\1\0d\2\0l\0\0m\1\0}\3\0m\2\0}\4\0\1|\1\0|\0\0_\3\0g\0\0}\5\0t\4\0j\5\0\203\0\0}\6\0|\2\0|\6\0_\6\0xR\0|\1\0D]J\0\\\2\0}\7\0}\10\0|\5\0j\7\0t\4\0j\10\0|\6\0|\4\0t\t\0|\5\0\203\1\0d\3\0\27t\4\0j\n\0|\7\0|\2\0\203\2\0f\2\0f\2\0g\1\0\203\2\0\203\1\0\1qA\0Wt\t\0|\5\0\203\1\0d\3\0\27|\6\0_\v\0t\4\0j\10\0|\6\0|\3\0d\0\0|\5\0f\2\0f\2\0g\1\0\203\2\0}\5\0t\r\0j\16\0|\5\0\203\1\0|\0\0_\17\0d\0\0S(\4\0\0\0Ni\377\377\377\377(\2\0\0\0t\6\0\0\0BRANCHt\n\0\0\0SUBPATTERNi\1\0\0\0(\20\0\0\0t\r\0\0\0sre_constantsRM\0\0\0RN\0\0\0t\7\0\0\0lexiconRD\0\0\0t\7\0\0\0PatternR\32\0\0\0t\6\0\0\0appendt\n\0\0\0SubPatternR;\0\0\0t\5\0\0\0parset\6\0\0\0groupsR0\0\0\0R8\0\0\0R\6\0\0\0t\7\0\0\0scanner(\t\0\0\0t\4\0\0\0selfRP\0\0\0R\32\0\0\0RM\0\0\0RN\0\0\0R@\0\0\0R)\0\0\0t\6\0\0\0phraset\6\0\0\0action(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyt\10\0\0\0__init__3\1\0\0s\26\0\0\0\0\1\26\1\t\2\6\1\f\1\t\1\23\1\17\0013\2\23\1!\1c\2\0\0\0\t\0\0\0\3\0\0\0C\0\0\0s\325\0\0\0g\0\0}\2\0|\2\0j\0\0}\3\0|\0\0j\1\0j\1\0|\1\0\203\1\0j\2\0}\4\0d\1\0}\5\0x\232\0|\4\0\203\0\0}\6\0|\6\0s@\0Pn\0\0|\6\0j\3\0\203\0\0}\7\0|\5\0|\7\0k\2\0r\\\0Pn\0\0|\0\0j\4\0|\6\0j\5\0d\2\0\30\31d\2\0\31}\10\0t\6\0|\10\0d\3\0\203\2\0r\244\0|\6\0|\0\0_\2\0|\10\0|\0\0|\6\0j\7\0\203\0\0\203\2\0}\10\0n\0\0|\10\0d\0\0k\t\0r\275\0|\3", 8192) = 8192
27308 read(5, "\0|\10\0\203\1\0\1n\0\0|\7\0}\5\0q-\0W|\2\0|\1\0|\5\0\37f\2\0S(\4\0\0\0Ni\0\0\0\0i\1\0\0\0t\10\0\0\0__call__(\t\0\0\0RR\0\0\0RV\0\0\0R\0\0\0\0t\3\0\0\0endRP\0\0\0t\t\0\0\0lastindext\7\0\0\0hasattrt\5\0\0\0groupR0\0\0\0(\t\0\0\0RW\0\0\0R\31\0\0\0t\6\0\0\0resultRR\0\0\0R\0\0\0\0R+\0\0\0t\1\0\0\0mt\1\0\0\0jRY\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyt\4\0\0\0scanA\1\0\0s&\0\0\0\0\1\6\1\t\1\25\1\6\1\3\1\t\1\6\1\4\1\f\1\f\1\4\1\30\1\17\1\t\1\30\1\f\1\r\1\n\1(\4\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__RZ\0\0\0Rc\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyRL\0\0\0002\1\0\0s\4\0\0\0\6\1\f\16(\0\0\0\0(=\0\0\0t\7\0\0\0__doc__t\3\0\0\0sysR8\0\0\0RD\0\0\0R1\0\0\0t\v\0\0\0ImportErrorR0\0\0\0t\7\0\0\0__all__t\v\0\0\0__version__t\23\0\0\0SRE_FLAG_IGNORECASER\n\0\0\0R\20\0\0\0t\17\0\0\0SRE_FLAG_LOCALER\v\0\0\0R\21\0\0\0t\20\0\0\0SRE_FLAG_UNICODER\17\0\0\0R\25\0\0\0t\22\0\0\0SRE_FLAG_MULTILINER\f\0\0\0R\22\0\0\0t\17\0\0\0SRE_FLAG_DOTALLR\r\0\0\0R\23\0\0\0t\20\0\0\0SRE_FLAG_VERBOSER\16\0\0\0R\24\0\0\0t\21\0\0\0SRE_FLAG_TEMPLATER\"\0\0\0t\10\0\0\0TEMPLATEt\16\0\0\0SRE_FLAG_DEBUGR.\0\0\0R\26\0\0\0R\0\0\0\0R\1\0\0\0R\2\0\0\0R\3\0\0\0R\4\0\0\0R\5\0\0\0t\n\0\0\0hexversionRR\0\0\0R\36\0\0\0R\6\0\0\0R\7\0\0\0R\10\0\0\0t\t\0\0\0frozensetR&\0\0\0R\t\0\0\0R\37\0\0\0R!\0\0\0R/\0\0\0R6\0\0\0R<\0\0\0R\27\0\0\0RF\0\0\0RH\0\0\0RJ\0\0\0t\10\0\0\0copy_regRK\0\0\0t\6\0\0\0pickleRL\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/re.pyt\10\0\0\0<module>f\0\0\0s`\0\0\0\6\2\f\1\f\1\f\1\3\1\20\1\r\1\n\3\22\1\33\1\22\1\f\2\6\3\r\1\r\1\r\1\r\1\r\1\r\3\r\1\t\3\t\5\f\5\f\5\17\t\17\v\17\5\f\n\17\1\r\1\17\7\f\4\t\5\f\4\3\1\t\2\t\17\6\1\6\2\30\2\6\2\t\"\t\17\t\5\t\f\f\2\t\3\23\5", 4096) = 1083
27308 read(5, "", 4096)                 = 0
27308 close(5)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/sre_compile", 0xbfffd52c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sre_compile.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sre_compile.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sre_compilemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sre_compile.py", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=661584, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=19817, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/sre_compile.pyc", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669327, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=12529, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(6, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\16\0\0\0@\0\0\0s\317\1\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0d\1\0d\2\0l\3\0Z\3\0d\1\0d\3\0l\4\0Te\1\0j\5\0e\5\0k\2\0sO\0t\6\0d\4\0\203\1\0\202\1\0e\1\0j\7\0d\5\0k\2\0rg\0d\6\0Z\10\0n\6\0d\7\0Z\10\0e\t\0e\n\0e\v\0g\2\0\203\1\0Z\f\0e\t\0e\r\0e\16\0e\17\0g\3\0\203\1\0Z\20\0e\t\0e\21\0e\22\0g\2\0\203\1\0Z\23\0e\t\0e\24\0e\25\0g\2\0\203\1\0Z\26\0d5\0d6\0d7\0d8\0d9\0d:\0d;\0d<\0d=\0d>\0d?\0d@\0dA\0f\r\0Z\27\0d#\0\204\0\0e\27\0D\203\1\0Z\30\0d$\0\204\0\0Z\31\0d\2\0d\2\0d%\0\204\2\0Z\33\0d&\0\204\0\0Z\34\0d'\0\204\0\0Z\35\0e\1\0j\7\0d(\0\24Z\36\0d)\0d*\0d+\0\24\27Z\37\0e\36\0e \0d,\0\204\2\0Z!\0d-\0\204\0\0Z\"\0d.\0\204\0\0Z#\0d/\0\204\0\0Z$\0y\10\0e%\0\1Wn \0\4e&\0k\n\0r\216\1\1\1\1e'\0d0\0\203\1\0f\1\0Z(\0n\37\0Xe'\0d0\0\203\1\0e'\0e%\0d0\0\203\1\0\203\1\0f\2\0Z(\0d1\0\204\0\0Z)\0d2\0\204\0\0Z*\0d3\0d4\0\204\1\0Z+\0d\2\0S(B\0\0\0s\37\0\0\0Internal support module for srei\377\377\377\377N(\1\0\0\0t\1\0\0\0*s\23\0\0\0SRE module mismatchi\2\0\0\0i\377\377\0\0l\3\0\0\0\377\177\377\177\3\0ii\0\0\0i1\1\0\0is\0\0\0i\177\1\0\0i\265\0\0\0i\274\3\0\0iE\3\0\0i\271\3\0\0i\276\37\0\0i\262\3\0\0i\320\3\0\0i\265\3\0\0i\365\3\0\0i\270\3\0\0i\321\3\0\0i\272\3\0\0i\360\3\0\0i\300\3\0\0i\326\3\0\0i\301\3\0\0i\361\3\0\0i\302\3\0\0i\303\3\0\0i\306\3\0\0i\325\3\0\0ia\36\0\0i\233\36\0\0c\1\0\0\0\2\0\0\0\6\0\0\0\3\0\0\0s<\0\0\0i\0\0|\0\0]2\0}\1\0|\1\0D]%\0\211\0\0t\0\0\207\0\0f\1\0d\0\0\206\0\0|\1\0D\203\1\0\203\1\0\210\0\0\223\3\0q\20\0q\6\0S(\1\0\0\0c\1\0\0\0\2\0\0\0\3\0\0\0003\0\0\0s!\0\0\0|\0\0]\27\0}\1\0\210\0\0|\1\0k\3\0r\3\0|\1\0V\1q\3\0d\0\0S(\1\0\0\0N(\0\0\0\0(\2\0\0\0t\2\0\0\0.0t\1\0\0\0j(\1\0\0\0t\1\0\0\0i(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pys\t\0\0\0<genexpr>=\0\0\0s\2\0\0\0\6\0(\1\0\0\0t\5\0\0\0tuple(\2\0\0\0R\1\0\0\0t\1\0\0\0t(\0\0\0\0(\1\0\0\0R\3\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pys\n\0\0\0<dictcomp>=\0\0\0s\2\0\0\0\t\1c\3\0\0\0\25\0\0\0\7\0\0\0C\0\0\0s\327\10\0\0|\0\0j\0\0}\3\0t\1\0}\4\0t\2\0}\5\0t\3\0}\6\0t\4\0}\7\0t\5\0}\10\0|\2\0t\6\0@rO\0|\2\0t\7\0@\frO\0|\2\0t\10\0@rO\0t\t\0}\t\0n\6\0d\0\0}\t\0x{\10|\1\0D]s\10\\\2\0}\n\0}\v\0|\n\0|\5\0k\6\0rv\1|\2\0t\6\0@r[\1t\v\0j\f\0|\v\0|\2\0\203\2\0}\f\0|\t\0r<\1|\f\0|\t\0k\6\0r<\1|\3\0t\r\0t\16\0\31\203\1\0\1|\4\0|\0\0\203\1\0}\r\0|\3\0d\1\0\203\1\0\1|\n\0t\17\0k\10\0r\343\0|\3\0t\r\0t\20\0\31\203\1\0\1n\0\0x1\0|\f\0f\1\0|\t\0|\f\0\31\27D]\36\0}\16\0|\3\0t\r\0t\21\0\31\203\1\0\1|\3\0|\16\0\203\1\0\1q\365\0W|\3\0t\r\0t\22\0\31\203\1\0\1|\4\0|\0\0\203\1\0|\r\0\30|\0\0|\r\0<qs\1|\3\0t\r\0t\23\0|\n\0\31\31\203\1\0\1|\3\0|\f\0\203\1\0\1q\317\10|\3\0t\r\0|\n\0\31\203\1\0\1|\3\0|\v\0\203\1\0\1q\\\0|\n\0t\24\0k\10\0r\4\2|\2\0t\6\0@r\255\1|\3\0t\r\0t\23\0|\n\0\31\31\203\1\0\1|\2\0d\2\0\204\1\0}\17\0n\24\0|\3\0t\r\0|\n\0\31\203\1\0\1d\0\0}\17\0|\4\0|\0\0\203\1\0}\r\0|\3\0d\1\0\203\1\0\1t\25\0|\v\0|\2\0|\0\0|\17\0|\t\0\203\5\0\1|\4\0|\0\0\203\1\0|\r\0\30|\0\0|\r\0<q\\\0|\n\0t\26\0k\10\0r<\2|\2\0t\27\0@r+\2|\3\0t\r\0t\30\0\31\203\1\0\1q\317\10|\3\0t\r\0t\26\0\31\203\1\0\1q\\\0|\n\0|\6\0k\6\0r\30\4|\2\0t\31\0@r\324\2t\32\0d\3\0\202\2\0|\3\0t\r\0t\33\0\31\203\1\0\1|\4\0|\0\0\203\1\0}\r\0|\3\0d\1\0\203\1\0\1|\3\0|\v\0d\1\0\31\203\1\0\1|\3\0|\v\0d\4\0\31\203\1\0\1t\34\0|\0\0|\v\0d\5\0\31|\2\0\203\3\0\1|\3\0t\r\0t\35\0\31\203\1\0\1|\4\0|\0\0\203\1\0|\r\0\30|\0\0|\r\0<q\317\10t\36\0|\v\0\203\1\0r\202\3|\n\0t\33\0k\t\0r\202\3|\n\0t\37\0k\10\0r\t\3|\3\0t\r\0t \0\31\203\1\0\1n\16\0|\3\0t\r\0t!\0\31\203\1\0\1|\4\0|\0\0\203\1\0}\r\0|\3\0d\1\0\203\1\0\1|\3\0|\v\0d\1\0\31\203\1\0\1|\3\0|\v\0d\4\0\31\203\1\0\1t\34\0|\0\0|\v\0d\5\0\31|\2\0\203\3\0\1|\3\0t\r\0t\35\0\31\203\1\0\1|\4\0|\0\0\203\1\0|\r\0\30|\0\0|\r\0<q\317\10|\3\0t\r\0t\33\0\31\203\1\0\1|\4\0|\0\0\203\1\0}\r\0|\3\0d\1\0\203\1\0\1|\3\0|\v\0d\1\0\31\203\1\0\1|\3\0|\v\0d\4\0\31\203\1\0\1t\34\0|\0\0|\v\0d\5\0\31|\2\0\203\3\0\1|\4\0|\0\0\203\1\0|\r\0\30|\0\0|\r\0<|\n\0t\37\0k\10\0r\7\4|\3\0t\r\0t\"\0\31\203\1\0\1q\317\10|\3\0t\r\0t#\0\31\203\1\0\1q\\\0|\n\0t$\0k\10\0r\241\4|\v\0d\1\0\31rU\4|\3\0t\r\0t%\0\31\203\1\0\1|\3\0|\v\0d\1\0\31d\4\0\30d\5\0\24\203\1\0\1n\0\0t\34\0|\0\0|\v\0d\4\0\31|\2\0\203\3\0\1|\v\0d\1\0\31r\317\10|\3\0t\r\0t%\0\31\203\1\0\1|\3\0|\v\0d\1\0\31d\4\0\30d\5\0\24d\4\0\27\203\1\0\1q\317\10q\\\0|\n\0|\7\0k\6\0r\276\4|\3\0t\r\0|\n\0\31\203\1\0\1q\\\0|\n\0|\10\0k\6\0r|\5|\3\0t\r\0|\n\0\31\203\1\0\1|\4\0|\0\0\203\1\0}\r\0|\3\0d\1\0\203\1\0\1|\v\0d\1\0\31d\1\0k\5\0r\v\5|\3\0d\1\0\203\1\0\1n8\0|\v\0d\4\0\31j&\0\203\0\0\\\2\0}\f\0}\20\0|\f\0|\20\0k\3\0r9\5t\32\0d\6\0\202\2\0n\0\0|\3\0|\f\0\203\1\0\1t\34\0|\0\0|\v\0d\4\0\31|\2\0\203\3\0\1|\3\0t\r\0t\35\0\31\203\1\0\1|\4\0|\0\0\203\1\0|\r\0\30|\0\0|\r\0<q\\\0|\n\0t'\0k\10\0r\341\5|\3\0t\r\0|\n\0\31\203\1\0\1|\4\0|\0\0\203\1\0}\r\0|\3\0d\1\0\203\1\0\1t\34\0|\0\0|\v\0|\2\0\203\3\0\1|\3\0t\r\0t\35\0\31\203\1\0\1|\4\0|\0\0\203\1\0|\r\0\30|\0\0|\r\0<q\\\0|\n\0t(\0k\10\0ri\6|\3\0t\r\0|\n\0\31\203\1\0\1|\2\0t)\0@r\32\6t*\0j+\0|\v\0|\v\0\203\2\0}\v\0n\0\0|\2\0t\7\0@r9\6t,\0j+\0|\v\0|\v\0\203\2\0}\v\0n\37\0|\2\0t\10\0@rX\6t-\0j+\0|\v\0|\v\0\203\2\0}\v\0n\0\0|\3\0t.\0|\v\0\31\203\1\0\1q\\\0|\n\0t/\0k\10\0r;\7|\3\0t\r\0|\n\0\31\203\1\0\1g\0\0}\21\0|\21\0j\0\0}\22\0xt\0|\v\0d\4\0\31D]h\0}\v\0|\4\0|\0\0\203\1\0}\r\0|\3\0d\1\0\203\1\0\1t\34\0|\0\0|\v\0|\2\0\203\3\0\1|\3\0t\r\0t0\0\31\203\1\0\1|\22\0|\4\0|\0\0\203\1\0\203\1\0\1|\3\0d\1\0\203\1\0\1|\4\0|\0\0\203\1\0|\r\0\30|\0\0|\r\0<q\235\6W|\3\0d\1\0\203\1\0\1x\271\1|\21\0D]\32\0}\21\0|\4\0|\0\0\203\1\0|\21\0\30|\0\0|\21\0<q\32\7Wq\\\0|\n\0t1\0k\10\0r\224\7|\3\0t\r\0|\n\0\31\203\1\0\1|\2\0t\7\0@rl\7t2\0|\v\0\31}\v\0n\27\0|\2\0t\10\0@r\203\7t3\0|\v\0\31}\v\0n\0\0|\3\0t4\0|\v\0\31\203\1\0\1q\\\0|\n\0t5\0k\10\0r\336\7|\2\0t\6\0@r\277\7|\3\0t\r\0t\23\0|\n\0\31\31\203\1\0\1n\16\0|\3\0t\r\0|\n\0\31\203\1\0\1|\3\0|\v\0d\4\0\30\203\1\0\1q\\\0|\n\0t6\0k\10\0r\300\10|\3\0t\r\0|\n\0\31\203\1\0\1|\3\0|\v\0d\1\0\31d\4\0\30\203\1\0\1|\4\0|\0\0\203\1\0}\23\0|\3\0d\1\0\203\1\0\1t\34\0|\0\0|\v\0d\4\0\31|\2\0\203\3\0\1|\v\0d\5\0\31r\245\10|\3\0t\r\0t0\0\31\203\1\0\1|\4\0|\0\0\203\1\0}\24\0|\3\0d\1\0\203\1\0\1|\4\0|\0\0\203\1\0|\23\0\30d\4\0\27|\0\0|\23\0<t\34\0|\0\0|\v\0d\5\0\31|\2\0\203\3\0\1|\4\0|\0\0\203\1\0|\24\0\30|\0\0|\24\0<q\317\10|\4\0|\0\0\203\1\0|\23\0\30d\4\0\27|\0\0|\23\0<q\\\0t7\0d\7\0|\n\0f\2\0\202\2\0q\\\0Wd\0\0S(\10\0\0\0Ni\0\0\0\0c\2\0\0\0\2\0\0\0\3\0\0\0S\0\0\0s\20\0\0\0t\0\0j\1\0|\0\0|\1\0\203\2\0S(\1\0\0\0N(\2\0\0\0t\4\0\0\0_sret\10\0\0\0getlower(\2\0\0\0t\7\0\0\0literalt\5\0\0\0flags(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyt\5\0\0\0fixupe\0\0\0s\2\0\0\0\0\1s'\0\0\0internal: unsupported template operatori\1\0\0\0i\2\0\0\0s(\0\0\0look-behind requires fixed-width patterns\30\0\0\0unsupported operand type(8\0\0\0t\6\0\0\0appendt\3\0\0\0lent\16\0\0\0_LITERAL_CODESt\20\0\0\0_REPEATING_CODESt\16\0\0\0_SUCCESS_CODESt\r\0\0\0_ASSERT_CODESt\23\0\0\0SRE_FLAG_IGNORECASEt\17\0\0\0SRE_FLAG_LOCALEt\20\0\0\0SRE_FLAG_UNICODEt\21\0\0\0_ignorecase_fixest\4\0\0\0NoneR\6\0\0\0R\7\0\0\0t\7\0\0\0OPCODESt\t\0\0\0IN_IGNOREt\v\0\0\0NOT_LITERALt\6\0\0\0NEGATEt\7\0\0\0LITERALt\7\0\0\0FAILUREt\t\0\0\0OP_IGNOREt\2\0\0\0INt\20\0\0\0_compile_charsett\3\0\0\0ANYt\17\0\0\0SRE_FLAG_DOTALLt\7\0\0\0ANY_ALLt\21\0\0\0SRE_FLAG_TEMPLATEt\5\0\0\0errort\6\0\0\0REPEATt\10\0\0\0", 4096) = 4096
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669327, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=12529, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(6, "_compilet\7\0\0\0SUCCESSt\7\0\0\0_simplet\n\0\0\0MAX_REPEATt\n\0\0\0REPEAT_ONEt\16\0\0\0MIN_REPEAT_ONEt\t\0\0\0MAX_UNTILt\t\0\0\0MIN_UNTILt\n\0\0\0SUBPATTERNt\4\0\0\0MARKt\10\0\0\0getwidtht\4\0\0\0CALLt\2\0\0\0ATt\22\0\0\0SRE_FLAG_MULTILINEt\f\0\0\0AT_MULTILINEt\3\0\0\0gett\t\0\0\0AT_LOCALEt\n\0\0\0AT_UNICODEt\7\0\0\0ATCODESt\6\0\0\0BRANCHt\4\0\0\0JUMPt\10\0\0\0CATEGORYt\t\0\0\0CH_LOCALEt\n\0\0\0CH_UNICODEt\7\0\0\0CHCODESt\10\0\0\0GROUPREFt\17\0\0\0GROUPREF_EXISTSt\n\0\0\0ValueError(\25\0\0\0t\4\0\0\0codet\7\0\0\0patternR\t\0\0\0t\4\0\0\0emitt\4\0\0\0_lent\r\0\0\0LITERAL_CODESt\17\0\0\0REPEATING_CODESt\r\0\0\0SUCCESS_CODESt\f\0\0\0ASSERT_CODESt\5\0\0\0fixest\2\0\0\0opt\2\0\0\0avt\2\0\0\0lot\4\0\0\0skipt\1\0\0\0kR\n\0\0\0t\2\0\0\0hit\4\0\0\0tailt\n\0\0\0tailappendt\7\0\0\0skipyest\6\0\0\0skipno(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyR%\0\0\0@\0\0\0s:\1\0\0\0\2\t\1\6\1\6\1\6\1\6\1\6\1\n\1\v\1\n\1\t\2\6\1\23\1\f\1\n\1\22\1\22\1\16\1\f\0\n\1\f\1\21\1\30\1\16\1\16\1\16\1\27\2\22\1\r\2\16\1\r\1\f\1\n\1\22\1\17\3\16\1\6\1\f\0\n\1\26\1\27\1\f\1\n\1\21\2\21\1\f\1\n\1\t\1\16\1\f\0\n\1\16\1\16\1\24\1\16\1\27\1\30\1\f\1\21\2\16\1\f\0\n\1\16\1\16\1\24\1\16\1\27\2\16\1\f\0\n\1\16\1\16\1\24\1\24\1\f\1\21\2\21\1\f\1\n\1\16\1\31\2\24\1\n\1\16\1 \1\f\1\21\1\f\1\16\1\f\0\n\1\20\1\r\2\26\1\f\1\f\1\n\1\24\1\16\1\27\1\f\1\16\1\f\0\n\1\20\1\16\1\27\1\f\1\16\1\n\1\25\1\n\1\25\1\n\1\25\1\21\1\f\1\16\1\6\1\t\1\21\1\f\0\n\2\20\1\16\1\20\0\n\1\30\1\n\1\r\1\33\1\f\1\16\1\n\1\r\1\n\1\r\1\21\1\f\1\n\1\25\2\16\1\21\1\f\1\16\1\22\1\f\0\n\1\24\1\n\1\16\1\f\0\n\1\30\1\24\1\27\2\33\2c\5\0\0\0\10\0\0\0\6\0\0\0C\0\0\0sB\1\0\0|\2\0j\0\0}\5\0x$\1t\1\0|\0\0|\3\0|\4\0|\1\0t\2\0@\203\4\0D]\t\1\\\2\0}\6\0}\7\0|\5\0t\3\0|\6\0\31\203\1\0\1|\6\0t\4\0k\10\0rL\0q#\0|\6\0t\5\0k\10\0re\0|\5\0|\7\0\203\1\0\1q#\0|\6\0t\6\0k\10\0r\220\0|\5\0|\7\0d\1\0\31\203\1\0\1|\5\0|\7\0d\2\0\31\203\1\0\1q#\0|\6\0t\7\0k\10\0r\254\0|\2\0j\10\0|\7\0\203\1\0\1q#\0|\6\0t\t\0k\10\0r\310\0|\2\0j\10\0|\7\0\203\1\0\1q#\0|\6\0t\n\0k\10\0r#\1|\1\0t\v\0@r\363\0|\5\0t\f\0t\r\0|\7\0\31\31\203\1\0\1q,\1|\1\0t\2\0@r\22\1|\5\0t\f\0t\16\0|\7\0\31\31\203\1\0\1q,\1|\5\0t\f\0|\7\0\31\203\1\0\1q#\0t\17\0d\3\0\202\2\0q#\0W|\5\0t\3\0t\20\0\31\203\1\0\1d\0\0S(\4\0\0\0Ni\0\0\0\0i\1\0\0\0s\"\0\0\0internal: unsupported set operator(\21\0\0\0R\v\0\0\0t\21\0\0\0_optimize_charsetR\23\0\0\0R\26\0\0\0R\31\0\0\0R\32\0\0\0t\5\0\0\0RANGEt\7\0\0\0CHARSETt\6\0\0\0extendt\n\0\0\0BIGCHARSETR:\0\0\0R\22\0\0\0R=\0\0\0R;\0\0\0R<\0\0\0R#\0\0\0R\33\0\0\0(\10\0\0\0t\7\0\0\0charsetR\t\0\0\0RA\0\0\0R\n\0\0\0RI\0\0\0RC\0\0\0RJ\0\0\0RK\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyR\36\0\0\0\344\0\0\0s.\0\0\0\0\2\t\1\17\1\27\1\16\1\f\1\3\1\f\1\r\1\f\1\16\1\21\1\f\1\20\1\f\1\20\1\f\1\n\1\25\1\n\1\25\2\21\2\r\1c\4\0\0\0\27\0\0\0\6\0\0\0C\0\0\0s\362\4\0\0g\0\0}\4\0g\0\0}\5\0t\0\0d\1\0\203\1\0}\6\0xp\2|\0\0D]h\2\\\2\0}\7\0}\10\0xY\2t\1\0r\206\2yZ\1|\7\0t\2\0k\10\0r\243\0|\1\0r\226\0|\1\0|\10\0\203\1\0}\t\0d\2\0|\6\0|\t\0<|\2\0r\240\0|\t\0|\2\0k\6\0r\240\0x\37\0|\2\0|\t\0\31D]\20\0}\n\0d\2\0|\6\0|\n\0<q|\0Wq\240\0q\215\1d\2\0|\6\0|\10\0<n\352\0|\7\0t\3\0k\10\0rX\1t\4\0|\10\0d\3\0\31|\10\0d\2\0\31d\2\0\27\203\2\0}\v\0|\1\0r\342\0t\5\0|\1\0|\v\0\203\2\0}\v\0n\0\0|\1\0r:\1|\2\0r:\1xd\0|\v\0D]>\0}\t\0d\2\0|\6\0|\t\0<|\t\0|\2\0k\6\0r\365\0x\37\0|\2\0|\t\0\31D]\20\0}\n\0d\2\0|\6\0|\n\0<q\34\1Wq\365\0q\365\0Wq\215\1xP\0|\v\0D]\20\0}\t\0d\2\0|\6\0|\t\0<qA\1Wn5\0|\7\0t\6\0k\10\0rz\1|\4\0j\7\0|\7\0|\10\0f\2\0\203\1\0\1n\23\0|\5\0j\7\0|\7\0|\10\0f\2\0\203\1\0\1Wn\361\0\4t\10\0k\n\0r\201\2\1\1\1t\t\0|\6\0\203\1\0d\1\0k\2\0r\304\1|\6\0d\4\0d\5\0\0247}\6\0q.\0n\0\0|\1\0rk\2|\3\0rk\2|\7\0t\3\0k\10\0rk\2|\10\0\\\2\0}\f\0}\r\0|\10\0g\1\0}\16\0t\n\0t\v\0d\6\0|\f\0\203\2\0t\f\0d\7\0|\r\0\203\2\0|\16\0|\1\0\203\4\0\1xe\0|\16\0D]G\0\\\2\0}\f\0}\r\0|\f\0|\r\0k\2\0rK\2|\5\0j\7\0t\2\0|\r\0f\2\0\203\1\0\1q\35\2|\5\0j\7\0t\3\0|\f\0|\r\0f\2\0f\2\0\203\1\0\1q\35\2Wq\202\2|\5\0j\7\0|\7\0|\10\0f\2\0\203\1\0\1n\1\0XPq.\0Wq\37\0Wg\0\0}\17\0d\3\0}\20\0x\226\0t\1\0r/\3|\6\0j\r\0d\10\0|\20\0\203\2\0}\21\0|\21\0d\3\0k\0\0r\302\2Pn\0\0t\t\0|\17\0\203\1\0d\t\0k\5\0r\336\2d\0\0}\17\0Pn\0\0|\6\0j\r\0d\4\0|\21\0\203\2\0}\20\0|\20\0d\3\0k\0\0r\31\3|\17\0j\7\0|\21\0t\t\0|\6\0\203\1\0f\2\0\203\1\0\1Pn\0\0|\17\0j\7\0|\21\0|\20\0f\2\0\203\1\0\1q\232\2W|\17\0d\0\0k\t\0r\306\3xW\0|\17\0D]O\0\\\2\0}\21\0}\20\0|\20\0|\21\0\30d\2\0k\2\0ru\3|\4\0j\7\0t\2\0|\21\0f\2\0\203\1\0\1qC\3|\4\0j\7\0t\3\0|\21\0|\20\0d\2\0\30f\2\0f\2\0\203\1\0\1qC\3W|\4\0|\5\0007}\4\0|\1\0s\276\3t\t\0|\4\0\203\1\0t\t\0|\0\0\203\1\0k\0\0r\302\3|\4\0S|\0\0St\t\0|\6\0\203\1\0d\1\0k\2\0r\5\4t\17\0|\6\0\203\1\0}\22\0|\4\0j\7\0t\20\0|\22\0f\2\0\203\1\0\1|\4\0|\5\0007}\4\0|\4\0St\21\0|\6\0\203\1\0}\6\0i\0\0}\23\0t\0\0d\1\0\203\1\0}\24\0d\3\0}\25\0t\0\0\203\0\0}\22\0xv\0t\4\0d\3\0d\6\0d\1\0\203\3\0D]b\0}\t\0|\6\0|\t\0|\t\0d\1\0\27!}\26\0|\26\0|\23\0k\6\0r}\4|\23\0|\26\0\31|\24\0|\t\0d\1\0\32<qE\4|\25\0\4|\24\0|\t\0d\1\0\32<|\23\0|\26\0<|\25\0d\2\0007}\25\0|\22\0|\26\0007}\22\0qE\4Wt\17\0|\22\0\203\1\0}\22\0|\25\0g\1\0t\22\0|\24\0\203\1\0\27|\22\0d\3\0d\3\0+|\4\0j\7\0t\23\0|\22\0f\2\0\203\1\0\1|\4\0|\5\0007}\4\0|\4\0S(\n\0\0\0Ni\0\1\0\0i\1\0\0\0i\0\0\0\0t\1\0\0\0\0i\0\377\0\0i\0\0\1\0i\377\37\1\0s\1\0\0\0\1i\2\0\0\0(\24\0\0\0t\t\0\0\0bytearrayt\4\0\0\0TrueR\32\0\0\0RU\0\0\0t\5\0\0\0ranget\3\0\0\0mapR\31\0\0\0R\v\0\0\0t\n\0\0\0IndexErrorR\f\0\0\0t\f\0\0\0_fixup_ranget\3\0\0\0maxt\3\0\0\0mint\4\0\0\0findR\25\0\0\0t\n\0\0\0_mk_bitmapRV\0\0\0t\5\0\0\0bytest\17\0\0\0_bytes_to_codesRX\0\0\0(\27\0\0\0RY\0\0\0R\n\0\0\0RI\0\0\0t\t\0\0\0isunicodet\3\0\0\0outRP\0\0\0t\7\0\0\0charmapRJ\0\0\0RK\0\0\0R\3\0\0\0RN\0\0\0t\1\0\0\0rRL\0\0\0RO\0\0\0t\6\0\0\0rangest\4\0\0\0runst\1\0\0\0qt\1\0\0\0pt\4\0\0\0datat\5\0\0\0compst\7\0\0\0mappingt\5\0\0\0blockt\5\0\0\0chunk(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyRT\0\0\0\0\1\0\0s\262\0\0\0\0\2\6\1\6\1\f\1\23\1\t\1\3\1\f\1\6\1\f\1\n\1\22\1\21\1\24\2\r\1\f\1\33\1\6\1\22\1\f\1\r\1\n\1\f\1\21\1\30\2\r\1\21\1\f\1\26\2\27\1\r\1\22\2\16\1\6\2\30\1\f\1\t\3\33\1\n\1\23\1\f\1\26\2 \2\27\1\t\3\6\1\6\1\t\1\22\1\f\1\4\1\22\1\6\1\4\1\22\1\f\1\31\1\4\1\27\1\f\2\23\1\20\1\26\2!\1\n\2\36\1\4\2\4\3\22\1\f\1\23\1\n\1\4\32\f\1\6\1\f\1\6\1\t\1\31\1\21\1\f\1\25\2\26\1\n\1\16\1\f\1\32\1\23\1\n\1c\4\0\0\0\6\0\0\0\6\0\0\0C\0\0\0s\336\0\0\0x\327\0t\0\0|\3\0t\1\0|\0\0|\1\0d\1\0\27\203\2\0\203\2\0D]\271\0}\4\0x\260\0t\2\0|\2\0\203\1\0D]\217\0\\\2\0}\5\0\\\2\0}\0\0}\1\0|\4\0|\0\0k\0\0r\213\0t\3\0|\0\0d\1\0\30k\2\0rq\0|\4\0|\1\0f\2\0|\2\0|\5\0<n\26\0|\2\0j\4\0|\5\0|\4\0|\4\0f\2\0\203\2\0\1Pq0\0|\4\0|\1\0k\4\0r\276\0|\4\0|\1\0d\1\0\27k\2\0r\277\0|\0\0|\4\0f\2\0|\2\0|\5\0<Pq\277\0q0\0Pq0\0W|\2\0j\5\0|\4\0|\4\0f\2\0\203\1\0\1q\35\0Wd\0\0S(\2\0\0\0Ni\1\0\0\0(\6\0\0\0R^\0\0\0R]\0\0\0t\t\0\0\0enumeratet\1\0\0\0lt\6\0\0\0insertR\v\0\0\0(\6\0\0\0RL\0\0\0RO\0\0\0Rk\0\0\0R\n\0\0\0R\3\0\0\0RN\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyR`\0\0\0\207\1\0\0s\32\0\0\0\0\1#\1\37\1\f\1\20\1\23\2\26\1\4\1\f\1\20\1\20\1\7\2\5\2i\10\0\0\0t\1\0\0\0000t\1\0\0\0001i\377\0\0\0c\3\0\0\0\5\0\0\0\6\0\0\0C\0\0\0s`\0\0\0t\0\0|\0\0\203\1\0j\1\0t\2\0\203\1\0d\0\0d\0\0d\1\0\205\3\0\31}\3\0g\0\0t\3\0t\4\0|\3\0\203\1\0d\2\0|\1\0\v\203\3\0D] \0}\4\0|\2\0|\3\0|\4\0|\1\0\30|\4\0!d\3\0\203\2\0^\2\0q<\0S(\4\0\0\0Ni\377\377\377\377i\0\0\0\0i\2\0\0\0(\5\0\0\0Re\0\0\0t\t\0\0\0translatet\v\0\0\0_BITS_TRANSR]\0\0\0R\f\0\0\0(\5\0\0\0t\4\0\0\0bitst\t\0\0\0_CODEBITSt\4\0\0\0_intt\1\0\0\0sR\3\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyRd\0\0\0\233\1\0\0s\6\0\0\0\0\1\"\1\3\1c\1\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s\211\0\0\0d\1\0d\0\0l\0\0}\1\0t\1\0j\2\0d\2\0k\2\0r$\0d\3\0}\2\0n\6\0d\4\0}\2\0|\1\0j\0\0|\2\0t\3\0|\0\0\203\1\0\203\2\0}\3\0|\3\0j\4\0t\1\0j\2\0k\2\0sZ\0t\5\0\202\1\0t\6\0|\3\0\203\1\0|\3\0j\4\0\24t\6\0|\0\0\203\1\0k\2\0s\177\0t\5\0\202\1\0|\3\0j\7\0\203\0\0S(\5\0\0\0Ni\377\377\377\377i\2\0\0\0t\1\0\0\0Ht\1\0\0\0I(\10\0\0\0t\5\0\0\0arrayR\6\0\0\0t\10\0\0\0CODESIZERe\0\0\0t\10\0\0\0itemsizet\16\0\0\0AssertionErrorR\f\0\0\0t\6\0\0\0tolist(\4\0\0\0t\1\0\0\0bR\201\0\0\0RA\0\0\0t\1\0\0\0a(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyRf\0\0\0\240\1\0\0s\20\0\0\0\0\2\f\1\17\1\t\2\6\1\30\1\30\1%\1c\1\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sH\0\0\0|\0\0d\1\0\31j\0\0\203\0\0\\\2\0}\1\0}\2\0|\1\0|\2\0\4\3k\2\0o-\0d\2\0k\2\0n\2\0\2\1oG\0|\0\0d\1\0\31d\3\0\31d\3\0\31t\1\0k\3\0S(\4\0\0\0Ni\2\0\0\0i\1\0\0\0i\0\0\0\0(\2\0\0\0R/\0\0\0R-\0\0\0(\3\0\0\0RK\0\0\0RL\0\0\0RO\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyR'\0\0\0\254\1\0\0s\4\0\0\0\0\2\26\1c\3\0\0\0\24\0\0\0\6\0\0\0C\0\0\0si\4\0\0|\1\0j\0\0\203\0\0\\\2\0}\3\0}\4\0|\3\0d\1\0k\2\0r\"\0d\0\0Sg\0\0}\5\0|\5\0j\1\0}\6\0d\1\0}\7\0g\0\0}\10\0|\10\0j\1\0}\t\0|\2\0t\2\0@sf\2x\243\0|\1\0j\3\0D]\230\0\\\2\0}\n\0}\v\0|\n\0t\4\0k\10\0r\236\0t\5\0|\5\0\203\1\0|\7\0k\2\0r\221\0|\7\0d\2\0\27}\7\0n\0\0|\6\0|\v\0\203\1\0\1qZ\0|\n\0t\6\0k\10\0r\361\0t\5\0|\v\0d\2\0\31\203\1\0d\2\0k\2\0r\361\0|\v\0d\2\0\31d\1\0\31\\\2\0}\n\0}\v\0|\n\0t\4\0k\10\0r\355\0|\6\0|\v\0\203\1\0\1q\362\0PqZ\0PqZ\0W|\5\0\frf\2|\1\0j\3\0rf\2|\1\0j\3\0d\1\0\31\\\2\0}\n\0}\v\0|\n\0t\6\0k\10\0r\330\1|\v\0d\2\0\31r\330\1|\v\0d\2\0\31d\1\0\31\\\2\0}\n\0}\v\0|\n\0t\4\0k\10\0rb\1|\t\0|\n\0|\v\0f\2\0\203\1\0\1q`\2|\n\0t\7\0k\10\0r`\2g\0\0}\f\0|\f\0j\1\0}\r\0xU\0|\v\0d\2\0\31D]@\0}\16\0|\16\0s\230\1Pn\0\0|\16\0d\1\0\31\\\2\0}\n\0}\v\0|\n\0t\4\0k\10\0r\307\1|\r\0|\n\0|\v\0f\2\0\203\1\0\1q\210\1Pq\210\1W|\f\0}\10\0q`\2qc\2|\n\0t\7\0k\10\0rK\2g\0\0}\f\0|\f\0j\1\0}\r\0xj\0|\v\0d\2\0\31D]@\0}\16\0|\16\0s\16\2Pn\0\0|\16\0d\1\0\31\\\2\0}\n\0}\v\0|\n\0t\4\0k\10\0r=\2|\r\0|\n\0|\v\0f\2\0\203\1\0\1q\376\1Pq\376\1W|\f\0}\10\0qc\2|\n\0t\10\0k\10\0rc\2|\v\0}\10\0qc\2qf\2n\0\0|\0\0j\1\0}\17\0|\17\0t\t\0t\n\0\31\203\1\0\1t\5\0|\0\0\203\1\0}\20\0|\17\0d\1\0\203\1\0\1d\1\0}\21\0|\5\0r\340\2t\v\0}\21\0t\5\0|\5\0\203\1\0|\7\0\4\3k\2\0o\313\2t\5\0|\1\0j\3\0\203\1\0k\2\0n\2\0\2\1r\363\2|\21\0t\f\0\27}\21\0q\363\2n\23\0|\10\0r\363\2|\21\0t\r\0\27}\21\0n\0\0|\17\0|\21\0\203\1\0\1|\3\0t\16\0k\0\0r\26\3|\17\0|\3\0\203\1\0\1n\24\0|\17\0t\16\0\203\1\0\1|\5\0t\16\0 }\5\0|\4\0t\16\0k\0\0rC\3|\17\0|\4\0\203\1\0\1n\n\0|\17\0d\1\0\203\1\0\1|\5\0r8\4|\17\0t\5\0|\5\0\203\1\0\203\1\0\1|\17\0|\7\0\203\1\0\1|\0\0j\17\0|\5\0\203\1\0\1d\3\0g\1\0d\1\0g\1\0t\5\0|\5\0\203\1\0\24\27}\22\0x\215\0t\20\0t\5\0|\5\0\203\1\0\203\1\0D]y\0}\23\0|\22\0|\23\0\31d\2\0\27|\22\0|\23\0d\2\0\27<xZ\0|\22\0|\23\0d\2\0\27\31d\1\0k\4\0r\37\4|\5\0|\23\0\31|\5\0|\22\0|\23\0d\2\0\27\31d\2\0\30\31k\3\0r\37\4|\22\0|\22\0|\23\0d\2\0\27\31d\2\0\30\31d\2\0\27|\22\0|\23\0d\2\0\27<q\306\3Wq\247\3W|\0\0j\17\0|\22\0d\2\0\37\203\1\0\1n\31\0|\10\0rQ\4t\21\0|\10\0|\2\0|\0\0\203\3\0\1n\0\0t\5\0|\0\0\203\1\0|\20\0\30|\0\0|\20\0<d\0\0S(\4\0\0\0Ni\0\0\0\0i\1\0\0\0i\377\377\377\377(\22\0\0\0R/\0\0\0R\v\0\0\0R\21\0\0\0Ro\0\0\0R\32\0\0\0R\f\0\0\0R-\0\0\0R8\0\0\0R\35\0\0\0R\26\0\0\0t\4\0\0\0INFOt\17\0\0\0SRE_INFO_PREFIXt\20\0\0\0SRE_INFO_LITERALt\20\0\0\0SRE_INFO_CHARSETt\7\0\0\0MAXCODERW\0\0\0t\6\0\0\0xrangeR\36\0\0\0(\24\0\0\0RA\0\0\0RB\0\0\0R\t\0\0\0RL\0\0\0RO\0\0\0t\6\0\0\0prefixt\f\0\0\0prefixappendt\v\0\0\0prefix_skipRY\0\0\0t\r\0\0\0charsetappendRJ\0\0\0RK\0\0\0t\1\0\0\0ct\7\0\0\0cappendRn\0\0\0RC\0\0\0RM\0\0\0t\4\0\0\0maskt\5\0\0\0tableR\3\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyt\r\0\0\0_compile_info\261\1\0\0s\244\0\0\0\0\4\22\1\f\1\4\2\6\1\t\1\6\1\6\1\t\1\n\2\26\1\f\1\22\1\r\1\r\1\"\1\24\1\f\1\r\2\4\2\5\2\20\1\23\1\26\1\24\1\f\1\23\1\f\1\6\1\t\1\21\1\6\1\4\1\20\1\f\1\23\2\5\2\f\1\f\1\6\1\t\1\21\1\6\1\4\1\20\1\f\1\23\2\5\2\t\1\f\1\17\6\t\1\16\1\f\0\n\2\6\1\6\1\6\1+\1\20\1\6\1\r\1\n\2\f\1\r\2\n\1\n\1\f\1\r\2\n\2\6\1\20\1\n\1\r\2\32\1\31\1\26\0017\1*\1\24\1\6\1\23\1t\0\0\0\0c\1\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s(\0\0\0x!\0t\0\0D]\31\0}\1\0t\1\0|\0\0|\1\0\203\2\0r\7\0d\1\0Sq\7\0Wd\2\0S(\3\0\0\0Ni\1\0\0\0i\0\0\0\0(\2\0\0\0t\f\0\0\0STRING_TYPESt\n\0\0\0isinstance(\2\0\0\0t\3\0\0\0objt\2\0\0\0tp(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyt\10\0\0\0isstring\"\2\0\0s\10\0\0\0\0\1\r\1\17\1\10\1c\2\0\0\0\3\0\0\0\4\0\0\0C\0\0\0sN\0\0\0|\0\0j\0\0j\1\0|\1\0B}\1\0g\0\0}\2\0t\2\0|\2\0|\0\0|\1\0\203\3\0\1t\3\0|\2\0|\0\0j\4\0|\1\0\203\3\0\1|\2\0j\5\0t\6\0t\7\0\31\203\1\0\1|\2\0S(\1\0\0\0N(\10\0\0\0RB\0\0\0R\t\0\0\0R\226\0\0\0R%\0\0\0Ro\0\0\0R\v\0\0\0R\26\0\0\0R&\0\0\0(\3\0\0\0Rn\0\0\0R\t\0\0\0RA\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyt\5\0\0\0_code(\2\0\0s\f\0\0\0\0\2\20\1\6\3\20\3\23\2\21\2i\0\0\0\0c\2\0\0\0\10\0\0\0\7\0\0\0C\0\0\0s\323\0\0\0t\0\0|\0\0\203\1\0r'\0|\0\0}\2\0t\1\0j\2\0|\0\0|\1\0\203\2\0}\0\0n\6\0d\0\0}\2\0t\4\0|\0\0|\1\0\203\2\0}\3\0|\0\0j\5\0j\6\0d\1\0k\4\0r]\0t\7\0d\2\0\203\1\0\202\1\0n\0\0|\0\0j\5\0j\10\0}\4\0d\0\0g\1\0|\0\0j\5\0j\6\0\24}\5\0x$\0|\4\0j\t\0\203\0\0D]\26\0\\\2\0}\6\0}\7\0|\6\0|\5\0|\7\0<q\211\0Wt\n\0j\v\0|\2\0|\1\0|\0\0j\5\0j\f\0B|\3\0|\0\0j\5\0j\6\0d\3\0\30|\4\0|\5\0\203\6\0S(\4\0\0\0Nid\0\0\0s6\0\0\0sorry, but this version only supports 100 named groupsi\1\0\0\0(\r\0\0\0R\234\0\0\0t\t\0\0\0sre_parset\5\0\0\0parseR\25\0\0\0R\235\0\0\0RB\0\0\0t\6\0\0\0groupsR\204\0\0\0t\t\0\0\0groupdictt\5\0\0\0itemsR\6\0\0\0t\7\0\0\0compileR\t\0\0\0(\10\0\0\0Rn\0\0\0R\t\0\0\0RB\0\0\0RA\0\0\0t\n\0\0\0groupindext\n\0\0\0indexgroupRN\0\0\0R\3\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyR\243\0\0\0007\2\0\0s \0\0\0\0\3\f\1\6\1\25\2\6\2\17\5\22\1\3\1\f\4\f\1\23\1\31\1\16\2\6\1\23\1\r\1(\2\0\0\0ii\0\0\0i1\1\0\0(\2\0\0\0is\0\0\0i\177\1\0\0(\2\0\0\0i\265\0\0\0i\274\3\0\0(\3\0\0\0iE\3\0\0i\271\3\0\0i\276\37\0\0(\2\0\0\0i\262\3\0\0i\320\3\0\0(\2\0\0\0i\265\3\0\0i\365\3\0\0(\2\0\0\0i\270\3\0\0i\321\3\0\0(\2\0\0\0i\272\3\0\0i\360\3\0\0(\2\0\0\0i\300\3\0\0i\326\3\0\0(\2\0\0\0i\301\3\0\0i\361\3\0\0(\2\0\0\0i\302\3\0\0i\303\3\0\0(\2\0\0\0i\306\3\0\0i\325\3\0\0(\2\0\0\0ia\36\0\0i\233\36\0\0(,\0\0\0t\7\0\0\0__doc__R\6\0\0\0t\3\0\0\0sysR\236\0\0\0t\r\0\0\0sre_constantst\5\0\0\0MAGICR\204\0\0\0R\202\0\0\0R\214\0\0\0t\3\0\0\0setR\32\0\0\0R\30\0\0\0R\r\0\0\0R$\0\0\0t\n\0\0\0MIN_REPEATR(\0\0\0R\16\0\0\0R&\0\0\0R\33\0\0\0R\17\0\0\0t\6\0\0\0ASSERTt\n\0\0\0ASSERT_NOTR\20\0\0\0t\r\0\0\0_equivalencesR\24\0\0\0R%\0\0\0R\25\0\0\0R\36\0\0\0RT\0\0\0R`\0\0\0R|\0\0\0Rz\0\0\0t\3\0\0\0", 8192) = 8192
27308 read(6, "intRd\0\0\0Rf\0\0\0R'\0\0\0R\226\0\0\0t\7\0\0\0unicodet\t\0\0\0NameErrort\4\0\0\0typeR\230\0\0\0R\234\0\0\0R\235\0\0\0R\243\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/sre_compile.pyt\10\0\0\0<module>\f\0\0\0sX\0\0\0\6\2\30\1\f\1\n\2\33\2\17\1\t\2\6\2\22\1\25\1\22\1\22\5\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\t\4\6\1\n\2\t\244\17\34\t\207\t\22\r\1\16\1\17\5\t\f\t\5\tj\3\1\10\1\r\1\23\2\36\2\t\6\t\17", 4096) = 241
27308 read(6, "", 4096)                 = 0
27308 close(6)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/sre_parse", 0xbfffd17c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sre_parse.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sre_parse.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sre_parsemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sre_parse.py", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=661586, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=64, st_size=28911, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/sre_parse.pyc", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669328, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=19945, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(7, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\4\0\0\0@\0\0\0s\312\2\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\3\0l\2\0Td\4\0Z\3\0d\5\0Z\4\0e\5\0d\6\0\203\1\0Z\6\0e\5\0d\7\0\203\1\0Z\7\0e\5\0d\10\0\203\1\0Z\10\0e\5\0d\t\0\203\1\0Z\t\0i\10\0e\n\0e\v\0d\n\0\203\1\0f\2\0d\v\0006e\n\0e\v\0d\f\0\203\1\0f\2\0d\r\0006e\n\0e\v\0d\16\0\203\1\0f\2\0d\17\0006e\n\0e\v\0d\20\0\203\1\0f\2\0d\21\0006e\n\0e\v\0d\22\0\203\1\0f\2\0d\23\0006e\n\0e\v\0d\24\0\203\1\0f\2\0d\25\0006e\n\0e\v\0d\26\0\203\1\0f\2\0d\27\0006e\n\0e\v\0d\30\0\203\1\0f\2\0d\31\0006Z\f\0i\n\0e\r\0e\16\0f\2\0d\32\0006e\r\0e\17\0f\2\0d\r\0006e\r\0e\20\0f\2\0d\33\0006e\21\0e\22\0e\23\0f\2\0g\1\0f\2\0d\34\0006e\21\0e\22\0e\24\0f\2\0g\1\0f\2\0d\35\0006e\21\0e\22\0e\25\0f\2\0g\1\0f\2\0d\36\0006e\21\0e\22\0e\26\0f\2\0g\1\0f\2\0d\37\0006e\21\0e\22\0e\27\0f\2\0g\1\0f\2\0d \0006e\21\0e\22\0e\30\0f\2\0g\1\0f\2\0d!\0006e\r\0e\31\0f\2\0d\"\0006Z\32\0i\7\0e\33\0d#\0006e\34\0d$\0006e\35\0d%\0006e\36\0d&\0006e\37\0d'\0006e \0d(\0006e!\0d)\0006Z\"\0d*\0f\0\0d+\0\204\0\0\203\0\0YZ#\0d,\0f\0\0d-\0\204\0\0\203\0\0YZ$\0d.\0f\0\0d/\0\204\0\0\203\0\0YZ%\0d0\0\204\0\0Z&\0d1\0\204\0\0Z'\0d2\0\204\0\0Z(\0d3\0\204\0\0Z)\0d4\0\204\0\0Z*\0d5\0d6\0\204\1\0Z+\0d7\0\204\0\0Z,\0e\5\0d8\0\203\1\0Z-\0e\5\0d9\0\203\1\0Z.\0e\5\0d:\0\203\1\0Z/\0e\5\0e0\0e1\0g\2\0\203\1\0Z2\0d;\0\204\0\0Z3\0d<\0e4\0d=\0\204\2\0Z5\0d>\0\204\0\0Z6\0d?\0\204\0\0Z7\0d\2\0S(@\0\0\0s\37\0\0\0Internal support module for srei\377\377\377\377N(\1\0\0\0t\1\0\0\0*s\f\0\0\0.\\[{()*+?^$|s\4\0\0\0*+?{t\n\0\0\0000123456789t\10\0\0\00001234567t\26\0\0\0000123456789abcdefABCDEFs\6\0\0\0 \t\n\r\v\fs\1\0\0\0\7s\2\0\0\0\\as\1\0\0\0\10s\2\0\0\0\\bs\1\0\0\0\fs\2\0\0\0\\fs\1\0\0\0\ns\2\0\0\0\\ns\1\0\0\0\rs\2\0\0\0\\rs\1\0\0\0\ts\2\0\0\0\\ts\1\0\0\0\vs\2\0\0\0\\vs\1\0\0\0\\s\2\0\0\0\\\\s\2\0\0\0\\As\2\0\0\0\\Bs\2\0\0\0\\ds\2\0\0\0\\Ds\2\0\0\0\\ss\2\0\0\0\\Ss\2\0\0\0\\ws\2\0\0\0\\Ws\2\0\0\0\\Zt\1\0\0\0it\1\0\0\0Lt\1\0\0\0mt\1\0\0\0st\1\0\0\0xt\1\0\0\0tt\1\0\0\0ut\7\0\0\0Patternc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s/\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0d\4\0d\1\0\204\1\0Z\4\0d\2\0\204\0\0Z\5\0d\3\0\204\0\0Z\6\0RS(\5\0\0\0c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s1\0\0\0d\1\0|\0\0_\0\0g\0\0|\0\0_\1\0d\2\0|\0\0_\2\0i\0\0|\0\0_\3\0d\1\0|\0\0_\4\0d\0\0S(\3\0\0\0Ni\0\0\0\0i\1\0\0\0(\5\0\0\0t\5\0\0\0flagst\4\0\0\0opent\6\0\0\0groupst\t\0\0\0groupdictt\n\0\0\0lookbehind(\1\0\0\0t\4\0\0\0self(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\10\0\0\0__init__C\0\0\0s\n\0\0\0\0\1\t\1\t\1\t\1\t\1c\2\0\0\0\4\0\0\0\5\0\0\0C\0\0\0s\206\0\0\0|\0\0j\0\0}\2\0|\2\0d\1\0\27|\0\0_\0\0|\1\0d\0\0k\t\0rr\0|\0\0j\2\0j\3\0|\1\0d\0\0\203\2\0}\3\0|\3\0d\0\0k\t\0rb\0t\4\0d\2\0t\5\0|\1\0\203\1\0|\2\0|\3\0f\3\0\26\202\2\0n\0\0|\2\0|\0\0j\2\0|\1\0<n\0\0|\0\0j\6\0j\7\0|\2\0\203\1\0\1|\2\0S(\3\0\0\0Ni\1\0\0\0s7\0\0\0redefinition of group name %s as group %d; was group %d(\10\0\0\0R\16\0\0\0t\4\0\0\0NoneR\17\0\0\0t\3\0\0\0gett\5\0\0\0errort\4\0\0\0reprR\r\0\0\0t\6\0\0\0append(\4\0\0\0R\21\0\0\0t\4\0\0\0namet\3\0\0\0gidt\4\0\0\0ogid(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\t\0\0\0opengroupJ\0\0\0s\24\0\0\0\0\1\t\1\r\1\f\1\25\1\f\1\6\1\31\1\20\1\20\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\24\0\0\0|\0\0j\0\0j\1\0|\1\0\203\1\0\1d\0\0S(\1\0\0\0N(\2\0\0\0R\r\0\0\0t\6\0\0\0remove(\2\0\0\0R\21\0\0\0R\31\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\n\0\0\0closegroupU\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\34\0\0\0|\1\0|\0\0j\0\0k\0\0o\33\0|\1\0|\0\0j\1\0k\7\0S(\1\0\0\0N(\2\0\0\0R\16\0\0\0R\r\0\0\0(\2\0\0\0R\21\0\0\0R\31\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\n\0\0\0checkgroupW\0\0\0s\2\0\0\0\0\1N(\7\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__R\22\0\0\0R\23\0\0\0R\33\0\0\0R\35\0\0\0R\36\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyR\v\0\0\0A\0\0\0s\10\0\0\0\6\2\t\7\f\v\t\2t\n\0\0\0SubPatternc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sh\0\0\0e\0\0Z\1\0d\v\0d\0\0\204\1\0Z\3\0d\1\0d\2\0\204\1\0Z\4\0d\3\0\204\0\0Z\5\0d\4\0\204\0\0Z\6\0d\5\0\204\0\0Z\7\0d\6\0\204\0\0Z\10\0d\7\0\204\0\0Z\t\0d\10\0\204\0\0Z\n\0d\t\0\204\0\0Z\v\0d\n\0\204\0\0Z\f\0RS(\f\0\0\0c\3\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s4\0\0\0|\1\0|\0\0_\0\0|\2\0d\0\0k\10\0r\36\0g\0\0}\2\0n\0\0|\2\0|\0\0_\2\0d\0\0|\0\0_\3\0d\0\0S(\1\0\0\0N(\4\0\0\0t\7\0\0\0patternR\23\0\0\0t\4\0\0\0datat\5\0\0\0width(\3\0\0\0R\21\0\0\0R\"\0\0\0R#\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyR\22\0\0\0\\\0\0\0s\n\0\0\0\0\1\t\1\f\1\t\1\t\1i\0\0\0\0c\2\0\0\0\v\0\0\0\5\0\0\0C\0\0\0s\232\1\0\0t\0\0t\1\0f\2\0}\2\0x\207\1|\0\0j\2\0D]|\1\\\2\0}\3\0}\4\0|\1\0d\1\0\24|\3\0\27G|\3\0t\3\0k\2\0rj\0HxT\1|\4\0D]!\0\\\2\0}\3\0}\5\0|\1\0d\2\0\27d\1\0\24|\3\0\27G|\5\0GHqB\0Wq\26\0|\3\0t\4\0k\2\0r\302\0Hx\30\1t\5\0|\4\0d\2\0\31\203\1\0D]3\0\\\2\0}\6\0}\5\0|\6\0r\252\0|\1\0d\1\0\24d\3\0\27GHn\0\0|\5\0j\6\0|\1\0d\2\0\27\203\1\0\1q\210\0Wq\26\0|\3\0t\7\0k\2\0r\35\1|\4\0\\\3\0}\7\0}\10\0}\t\0|\7\0GH|\10\0j\6\0|\1\0d\2\0\27\203\1\0\1|\t\0r\222\1|\1\0d\1\0\24d\4\0\27GH|\t\0j\6\0|\1\0d\2\0\27\203\1\0\1q\222\1q\26\0t\10\0|\4\0|\2\0\203\2\0r\215\1d\5\0}\n\0xK\0|\4\0D]C\0}\5\0t\10\0|\5\0t\t\0\203\2\0rr\1|\n\0sX\1Hn\0\0|\5\0j\6\0|\1\0d\2\0\27\203\1\0\1d\2\0}\n\0q9\1|\5\0Gd\5\0}\n\0q9\1W|\n\0s\222\1Hq\222\1q\26\0|\4\0GHq\26\0Wd\0\0S(\6\0\0\0Ns\2\0\0\0  i\1\0\0\0t\2\0\0\0ort\4\0\0\0elsei\0\0\0\0(\n\0\0\0t\5\0\0\0tuplet\4\0\0\0listR#\0\0\0t\2\0\0\0INt\6\0\0\0BRANCHt\t\0\0\0enumeratet\4\0\0\0dumpt\17\0\0\0GROUPREF_EXISTSt\n\0\0\0isinstanceR!\0\0\0(\v\0\0\0R\21\0\0\0t\5\0\0\0levelt\10\0\0\0seqtypest\2\0\0\0opt\2\0\0\0avt\1\0\0\0aR\4\0\0\0t\t\0\0\0condgroupt\10\0\0\0item_yest\7\0\0\0item_not\2\0\0\0nl(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyR,\0\0\0b\0\0\0sB\0\0\0\0\1\f\1\26\1\f\1\f\2\1\1\23\1\34\1\f\1\1\1\35\1\6\1\20\1\30\1\f\1\17\1\5\1\21\1\6\1\r\1\27\1\17\1\6\1\r\1\17\1\6\1\4\1\21\1\t\2\4\1\n\1\6\1\7\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0j\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0R\26\0\0\0R#\0\0\0(\1\0\0\0R\21\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\10\0\0\0__repr__\207\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0j\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0t\3\0\0\0lenR#\0\0\0(\1\0\0\0R\21\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\7\0\0\0__len__\211\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\16\0\0\0|\0\0j\0\0|\1\0=d\0\0S(\1\0\0\0N(\1\0\0\0R#\0\0\0(\2\0\0\0R\21\0\0\0t\5\0\0\0index(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\v\0\0\0__delitem__\213\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s1\0\0\0t\0\0|\1\0t\1\0\203\2\0r&\0t\2\0|\0\0j\3\0|\0\0j\4\0|\1\0\31\203\2\0S|\0\0j\4\0|\1\0\31S(\1\0\0\0N(\5\0\0\0R.\0\0\0t\5\0\0\0sliceR!\0\0\0R\"\0\0\0R#\0\0\0(\2\0\0\0R\21\0\0\0R;\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\v\0\0\0__getitem__\215\0\0\0s\6\0\0\0\0\1\17\1\27\1c\3\0", 4096) = 4096
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669328, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=19945, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(7, "\0\0\3\0\0\0\3\0\0\0C\0\0\0s\21\0\0\0|\2\0|\0\0j\0\0|\1\0<d\0\0S(\1\0\0\0N(\1\0\0\0R#\0\0\0(\3\0\0\0R\21\0\0\0R;\0\0\0t\4\0\0\0code(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\v\0\0\0__setitem__\221\0\0\0s\2\0\0\0\0\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\27\0\0\0|\0\0j\0\0j\1\0|\1\0|\2\0\203\2\0\1d\0\0S(\1\0\0\0N(\2\0\0\0R#\0\0\0t\6\0\0\0insert(\3\0\0\0R\21\0\0\0R;\0\0\0R?\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyRA\0\0\0\223\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\24\0\0\0|\0\0j\0\0j\1\0|\1\0\203\1\0\1d\0\0S(\1\0\0\0N(\2\0\0\0R#\0\0\0R\27\0\0\0(\2\0\0\0R\21\0\0\0R?\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyR\27\0\0\0\225\0\0\0s\2\0\0\0\0\1c\1\0\0\0\v\0\0\0\6\0\0\0C\0\0\0s\346\1\0\0|\0\0j\0\0r\20\0|\0\0j\0\0Sd\1\0\4}\1\0}\2\0t\1\0t\2\0t\3\0t\4\0t\5\0t\6\0f\6\0}\3\0t\7\0t\10\0f\2\0}\4\0xy\1|\0\0j\t\0D]n\1\\\2\0}\5\0}\6\0|\5\0t\n\0k\10\0r\314\0t\v\0d\2\0\30}\7\0d\1\0}\10\0xB\0|\6\0d\2\0\31D]6\0}\6\0|\6\0j\f\0\203\0\0\\\2\0}\t\0}\n\0t\r\0|\7\0|\t\0\203\2\0}\7\0t\16\0|\10\0|\n\0\203\2\0}\10\0q{\0W|\1\0|\7\0\27}\1\0|\2\0|\10\0\27}\2\0qH\0|\5\0t\17\0k\10\0r\1\1|\6\0j\f\0\203\0\0\\\2\0}\7\0}\10\0|\1\0|\7\0\27}\1\0|\2\0|\10\0\27}\2\0qH\0|\5\0t\20\0k\10\0r:\1|\6\0d\2\0\31j\f\0\203\0\0\\\2\0}\7\0}\10\0|\1\0|\7\0\27}\1\0|\2\0|\10\0\27}\2\0qH\0|\5\0|\4\0k\6\0r\203\1|\6\0d\3\0\31j\f\0\203\0\0\\\2\0}\7\0}\10\0|\1\0|\7\0|\6\0d\1\0\31\24\27}\1\0|\2\0|\10\0|\6\0d\2\0\31\24\27}\2\0qH\0|\5\0|\3\0k\6\0r\246\1|\1\0d\2\0\27}\1\0|\2\0d\2\0\27}\2\0qH\0|\5\0t\21\0k\2\0rH\0PqH\0qH\0Wt\r\0|\1\0t\v\0d\2\0\30\203\2\0t\r\0|\2\0t\v\0\203\2\0f\2\0|\0\0_\0\0|\0\0j\0\0S(\4\0\0\0Ni\0\0\0\0i\1\0\0\0i\2\0\0\0(\22\0\0\0R$\0\0\0t\3\0\0\0ANYt\5\0\0\0RANGER)\0\0\0t\7\0\0\0LITERALt\v\0\0\0NOT_LITERALt\10\0\0\0CATEGORYt\n\0\0\0MIN_REPEATt\n\0\0\0MAX_REPEATR#\0\0\0R*\0\0\0t\t\0\0\0MAXREPEATt\10\0\0\0getwidtht\3\0\0\0mint\3\0\0\0maxt\4\0\0\0CALLt\n\0\0\0SUBPATTERNt\7\0\0\0SUCCESS(\v\0\0\0R\21\0\0\0t\2\0\0\0lot\2\0\0\0hit\t\0\0\0UNITCODESt\v\0\0\0REPEATCODESR1\0\0\0R2\0\0\0R\4\0\0\0t\1\0\0\0jt\1\0\0\0lt\1\0\0\0h(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyRJ\0\0\0\227\0\0\0sD\0\0\0\0\2\t\1\7\1\n\1\30\1\f\1\26\1\f\1\n\1\6\1\21\1\22\1\17\1\23\1\n\1\r\1\f\1\22\1\n\1\r\1\f\1\26\1\n\1\r\1\f\1\26\1\22\1\25\1\f\1\n\1\r\1\f\1\10\1%\1N(\r\0\0\0R\37\0\0\0R \0\0\0R\23\0\0\0R\22\0\0\0R,\0\0\0R8\0\0\0R:\0\0\0R<\0\0\0R>\0\0\0R@\0\0\0RA\0\0\0R\27\0\0\0RJ\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyR!\0\0\0Z\0\0\0s\24\0\0\0\6\2\f\6\f%\t\2\t\2\t\2\t\4\t\2\t\2\t\2t\t\0\0\0Tokenizerc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sA\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0d\3\0\204\1\0Z\4\0d\4\0\204\0\0Z\5\0d\5\0\204\0\0Z\6\0d\6\0\204\0\0Z\7\0RS(\7\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s \0\0\0|\1\0|\0\0_\0\0d\1\0|\0\0_\1\0|\0\0j\2\0\203\0\0\1d\0\0S(\2\0\0\0Ni\0\0\0\0(\3\0\0\0t\6\0\0\0stringR;\0\0\0t\20\0\0\0_Tokenizer__next(\2\0\0\0R\21\0\0\0RX\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyR\22\0\0\0\275\0\0\0s\6\0\0\0\0\1\t\1\t\1c\1\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s\252\0\0\0|\0\0j\0\0t\1\0|\0\0j\2\0\203\1\0k\5\0r%\0d\0\0|\0\0_\4\0d\0\0S|\0\0j\2\0|\0\0j\0\0\31}\1\0|\1\0d\1\0\31d\2\0k\2\0r\207\0y\30\0|\0\0j\2\0|\0\0j\0\0d\3\0\27\31}\2\0Wn\32\0\4t\5\0k\n\0ry\0\1\1\1t\6\0d\4\0\202\2\0n\1\0X|\1\0|\2\0\27}\1\0n\0\0|\0\0j\0\0t\1\0|\1\0\203\1\0\27|\0\0_\0\0|\1\0|\0\0_\4\0d\0\0S(\5\0\0\0Ni\0\0\0\0s\1\0\0\0\\i\1\0\0\0s\32\0\0\0bogus escape (end of line)(\7\0\0\0R;\0\0\0R9\0\0\0RX\0\0\0R\23\0\0\0t\4\0\0\0nextt\n\0\0\0IndexErrorR\25\0\0\0(\3\0\0\0R\21\0\0\0t\4\0\0\0chart\1\0\0\0c(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\6\0\0\0__next\301\0\0\0s\30\0\0\0\0\1\30\1\t\1\4\1\20\1\20\1\3\1\30\1\r\1\r\1\r\1\26\1i\1\0\0\0c\3\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s*\0\0\0|\1\0|\0\0j\0\0k\2\0r&\0|\2\0r\"\0|\0\0j\1\0\203\0\0\1n\0\0d\1\0Sd\2\0S(\3\0\0\0Ni\1\0\0\0i\0\0\0\0(\2\0\0\0RZ\0\0\0RY\0\0\0(\3\0\0\0R\21\0\0\0R\\\0\0\0t\4\0\0\0skip(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\5\0\0\0match\316\0\0\0s\n\0\0\0\0\1\17\1\6\1\r\1\4\1c\1\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\27\0\0\0|\0\0j\0\0}\1\0|\0\0j\1\0\203\0\0\1|\1\0S(\1\0\0\0N(\2\0\0\0RZ\0\0\0RY\0\0\0(\2\0\0\0R\21\0\0\0t\4\0\0\0this(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyR\24\0\0\0\324\0\0\0s\6\0\0\0\0\1\t\1\n\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0|\0\0j\0\0|\0\0j\1\0f\2\0S(\1\0\0\0N(\2\0\0\0R;\0\0\0RZ\0\0\0(\1\0\0\0R\21\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\4\0\0\0tell\330\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\26\0\0\0|\1\0\\\2\0|\0\0_\0\0|\0\0_\1\0d\0\0S(\1\0\0\0N(\2\0\0\0R;\0\0\0RZ\0\0\0(\2\0\0\0R\21\0\0\0R;\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\4\0\0\0seek\332\0\0\0s\2\0\0\0\0\1(\10\0\0\0R\37\0\0\0R \0\0\0R\22\0\0\0RY\0\0\0R`\0\0\0R\24\0\0\0Rb\0\0\0Rc\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyRW\0\0\0\274\0\0\0s\f\0\0\0\6\1\t\4\t\r\f\6\t\4\t\2c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0sB\0\0\0d\1\0|\0\0\4\3k\1\0o\27\0d\2\0k\1\0n\2\0\2\1pA\0d\3\0|\0\0\4\3k\1\0o3\0d\4\0k\1\0n\2\0\2\1pA\0|\0\0d\5\0k\2\0S(\6\0\0\0NR3\0\0\0t\1\0\0\0zt\1\0\0\0At\1\0\0\0Zt\1\0\0\0_(\0\0\0\0(\1\0\0\0R\\\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\7\0\0\0isident\335\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\30\0\0\0d\1\0|\0\0\4\3k\1\0o\25\0d\2\0k\1\0S\2\1S(\3\0\0\0Nt\1\0\0\0000t\1\0\0\0009(\0\0\0\0(\1\0\0\0R\\\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\7\0\0\0isdigit\340\0\0\0s\2\0\0\0\0\1c\1\0\0\0\2\0\0\0\3\0\0\0C\0\0\0sK\0\0\0t\0\0|\0\0d\1\0\31\203\1\0s\24\0t\1\0Sx0\0|\0\0d\2\0\37D]$\0}\1\0t\0\0|\1\0\203\1\0\fr\37\0t\2\0|\1\0\203\1\0\fr\37\0t\1\0Sq\37\0Wt\3\0S(\3\0\0\0Ni\0\0\0\0i\1\0\0\0(\4\0\0\0Rh\0\0\0t\5\0\0\0FalseRk\0\0\0t\4\0\0\0True(\2\0\0\0R\30\0\0\0R\\\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\6\0\0\0isname\343\0\0\0s\f\0\0\0\0\2\20\1\4\1\21\1\32\1\10\1c\2\0\0\0\4\0\0\0\5\0\0\0C\0\0\0s\274\1\0\0t\0\0j\1\0|\1\0\203\1\0}\2\0|\2\0r\31\0|\2\0St\2\0j\1\0|\1\0\203\1\0}\2\0|\2\0rB\0|\2\0d\1\0\31t\3\0k\2\0rB\0|\2\0SyO\1|\1\0d\2\0d\3\0!}\3\0|\3\0d\4\0k\2\0r\343\0x5\0|\0\0j\4\0t\5\0k\6\0r\225\0t\6\0|\1\0\203\1\0d\5\0k\0\0r\225\0|\1\0|\0\0j\1\0\203\0\0\27}\1\0qa\0W|\1\0d\3\0\37}\1\0t\6\0|\1\0\203\1\0d\3\0k\3\0r\314\0t\7\0d\6\0t\10\0d\7\0|\1\0\27\203\1\0\26\202\2\0n\0\0t\t\0t\n\0|\1\0d\10\0\203\2\0d\t\0@f\2\0S|\3\0t\v\0k\6\0rH\1x5\0|\0\0j\4\0t\v\0k\6\0r&\1t\6\0|\1\0\203\1\0d\5\0k\0\0r&\1|\1\0|\0\0j\1\0\203\0\0\27}\1\0q\362\0W|\1\0d\2\0\37}\1\0t\t\0t\n\0|\1\0d\n\0\203\2\0d\t\0@f\2\0S|\3\0t\f\0k\6\0rj\1t\7\0d\6\0t\10\0|\1\0\203\1\0\26\202\2\0n\0\0t\6\0|\1\0\203\1\0d\3\0k\2\0r\220\1t\t\0t\r\0|\1\0d\2\0\31\203\1\0f\2\0SWn\21\0\4t\16\0k\n\0r\244\1\1\1\1n\1\0Xt\7\0d\6\0t\10\0|\1\0\203\1\0\26\202\2\0d\0\0S(\v\0\0\0Ni\0\0\0\0i\1\0\0\0i\2\0\0\0R\10\0\0\0i\4\0\0\0s\20\0\0\0bogus escape: %ss\1\0\0\0\\i\20\0\0\0i\377\0\0\0i\10\0\0\0(\17\0\0\0t\7\0\0\0ESCAPESR\24\0\0\0t\n\0\0\0CATEGORIESR)\0\0\0RZ\0\0\0t\t\0\0\0HEXDIGITSR9\0\0\0R\25\0\0\0R\26\0\0\0RD\0\0\0t\3\0\0\0intt\t\0\0\0OCTDIGITSt\6\0\0\0DIGITSt\3\0\0\0ordt\n\0\0\0ValueError(\4\0\0\0t\6\0\0\0sourcet\6\0\0\0escapeR?\0\0\0R]\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\r\0\0\0_class_escape\354\0\0\0s6\0\0\0\0\2\17\1\6\1\4\1\17\1\26\1\4\1\3\1\r\1\f\2$\1\24\1\n\1\22\1\32\1\27\1\f\2$\1\24\1\n\1\27\1\f\1\26\1\22\1\30\1\r\1\4\1c\3\0\0\0\7\0\0\0\5\0\0\0C\0\0\0sj\2\0\0t\0\0j\1\0|\1\0\203\1\0}\3\0|\3\0r\31\0|\3\0St\2\0j\1\0|\1\0\203\1\0}\3\0|\3\0r2\0|\3\0Sy\r\2|\1\0d\1\0d\2\0!}\4\0|\4\0d\3\0k\2\0r\274\0x5\0|\0\0j\3\0t\4\0k\6\0r\205\0t\5\0|\1\0\203\1\0d\4\0k\0\0r\205\0|\1\0|\0\0j\1\0\203\0\0\27}\1\0qQ\0Wt\5\0|\1\0\203\1\0d\4\0k\3\0r\241\0t\6\0\202\1\0n\0\0t\7\0t\10\0|\1\0d\2\0\37d\5\0\203\2\0d\6\0@f\2\0S|\4\0d\7\0k\2\0r\33\1x5\0|\0\0j\3\0t\t\0k\6\0r\377\0t\5\0|\1\0\203\1\0d\4\0k\0\0r\377\0|\1\0|\0\0j\1\0\203\0\0\27}\1\0q\313\0Wt\7\0t\10\0|\1\0d\1\0\37d\10\0\203\2\0d\6\0@f\2\0S|\4\0t\n\0k\6\0r\30\2|\0\0j\3\0t\n\0k\6\0r\243\1|\1\0|\0\0j\1\0\203\0\0\27}\1\0|\1\0d\1\0\31t\t\0k\6\0r\243\1|\1\0d\2\0\31t\t\0k\6\0r\243\1|\0\0j\3\0t\t\0k\6\0r\243\1|\1\0|\0\0j\1\0\203\0\0\27}\1\0t\7\0t\10\0|\1\0d\1\0\37d\10\0\203\2\0d\6\0@f\2\0Sn\0\0t\10\0|\1\0d\1\0\37\203\1\0}\5\0|\5\0|\2\0j\v\0k\0\0r\17\2|\2\0j\f\0|\5\0\203\1\0s\335\1t\r\0d\t\0\202\2\0n\0\0|\2\0j\16\0r\5\2d\n\0d\0\0l\17\0}\6\0|\6\0j\20\0d\v\0t\21\0\203\2\0\1n\0\0t\22\0|\5\0f\2\0St\6\0\202\1\0n\0\0t\5\0|\1\0\203\1\0d\2\0k\2\0r>\2t\7\0t\23\0|\1\0d\1\0\31\203\1\0f\2\0SWn\21\0\4t\6\0k\n\0rR\2\1\1\1n\1\0Xt\r\0d\f\0t\24\0|\1\0\203\1\0\26\202\2\0d\0\0S(\r\0\0\0Ni\1\0\0\0i\2\0\0\0R\10\0\0\0i\4\0\0\0i\20\0\0\0i\377\0\0\0Ri\0\0\0i\10\0\0\0s\32\0\0\0cannot refer to open groupi\377\377\377\377s;\0\0\0group references in lookbehind assertions are not supporteds\20\0\0\0bogus escape: %s(\25\0\0\0Rp\0\0\0R\24\0\0\0Ro\0\0\0RZ\0\0\0Rq\0\0\0R9\0\0\0Rv\0\0\0RD\0\0\0Rr\0\0\0Rs\0\0\0Rt\0\0\0R\16\0\0\0R\36\0\0\0R\25\0\0\0R\20\0\0\0t\10\0\0\0warningst\4\0\0\0warnt\16\0\0\0RuntimeWarningt\10\0\0\0GROUPREFRu\0\0\0R\26\0\0\0(\7\0\0\0Rw\0\0\0Rx\0\0\0t\5\0\0\0stateR?\0\0\0R]\0\0\0t\5\0\0\0groupRz\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\7\0\0\0_escape\f\1\0\0sP\0\0\0\0\2\17\1\6\1\4\1\17\1\6\1\4\1\3\1\r\1\f\2$\1\24\1\22\1\t\1\33\1\f\2$\1\24\1\33\1\f\2\17\1\20\1 \1\17\2\20\1\36\2\20\1\17\1\17\1\f\1\t\1\f\1\t\2\n\1\n\1\t\1\22\1\30\1\r\1\4\1i\1\0\0\0c\3\0\0\0\f\0\0\0\4\0\0\0C\0\0\0s\270\1\0\0g\0\0}\3\0|\3\0j\0\0}\4\0|\0\0j\1\0}\5\0xY\0|\4\0t\2\0|\0\0|\1\0\203\2\0\203\1\0\1|\5\0d\1\0\203\1\0r@\0q\33\0n\0\0|\2\0sJ\0Pn\0\0|\0\0j\3\0\fsc\0|\5\0d\2\0d\3\0\203\2\0rg\0Pq\33\0t\4\0d\4\0\202\2\0q\33\0Wt\5\0|\3\0\203\1\0d\5\0k\2\0r\216\0|\3\0d\3\0\31St\6\0|\1\0\203\1\0}\6\0|\6\0j\0\0}\7\0xx\0d\0\0}\10\0xj\0|\3\0D]=\0}\t\0|\t\0s\303\0Pn\0\0|\10\0d\0\0k\10\0r\334\0|\t\0d\3\0\31}\10\0q\263\0|\t\0d\3\0\31|\10\0k\3\0r\263\0Pq\263\0q\263\0Wx\25\0|\3\0D]\r\0}\t\0|\t\0d\3\0=q\373\0W|\7\0|\10\0\203\1\0\1q\246\0Pq\246\0Wxz\0|\3\0D]0\0}\t\0t\5\0|\t\0\203\1\0d\5\0k\3\0sQ\1|\t\0d\3\0\31d\3\0\31t\10\0k\3\0r%\1Pq%\1q%\1Wg\0\0}\n\0|\n\0j\0\0}\v\0x\34\0|\3\0D]\24\0}\t\0|\v\0|\t\0d\3\0\31\203\1\0\1qo\1W|\7\0t\t\0|\n\0f\2\0\203\1\0\1|\6\0S|\6\0j\0\0t\n\0d\0\0|\3\0f\2\0f\2\0\203\1\0\1|\6\0S(\6\0\0\0Nt\1\0\0\0|t\1\0\0\0)i\0\0\0\0s\33\0\0\0pattern not properly closedi\1\0\0\0(\v\0\0\0R\27\0\0\0R`\0\0\0t\6\0\0\0_parseRZ\0\0\0R\25\0\0\0R9\0\0\0R!\0\0\0R\23\0\0\0RD\0\0\0R)\0\0\0R*\0\0\0(\f\0\0\0Rw\0\0\0R~\0\0\0t\6\0\0\0nestedt\5\0\0\0itemst\v\0\0\0itemsappendt\v\0\0\0sourcematcht\n\0\0\0subpatternt\20\0\0\0subpatternappendt\6\0\0\0prefixt\4\0\0\0itemt\3\0\0\0sett\t\0\0\0setappend(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\n\0\0\0_parse_sub=\1\0\0sR\0\0\0\0\3\6\1\t\1\t\1\3\1\23\1\f\1\6\1\6\1\4\1\31\1\4\2\r\2\22\1\10\2\f\1\t\3\3\1\6\1\r\1\6\1\4\1\f\1\r\1\20\1\10\4\r\1\v\1\n\1\3\1\5\3\r\1&\1\10\4\6\1\t\1\r\1\22\1\20\1\4\2\31\1c\3\0\0\0\6\0\0\0\5\0\0\0C\0\0\0s\245\0\0\0t\0\0|\0\0|\1\0\203\2\0}\3\0|\0\0j\1\0d\1\0\203\1\0rK\0t\0\0|\0\0|\1\0\203\2\0}\4\0|\0\0j\1\0d\1\0\203\1\0rQ\0t\2\0d\2\0\202\2\0qQ\0n\6\0d\0\0}\4\0|\0\0j\4\0ry\0|\0\0j\1\0d\3\0d\4\0\203\2\0\fry\0t\2\0d\5\0\202\2\0n\0\0t\5\0|\1\0\203\1\0}\5\0|\5\0j\6\0t\7\0|\2\0|\3\0|\4\0f\3\0f\2\0\203\1\0\1|\5\0S(\6\0\0\0NR\201\0\0\0s/\0\0\0conditional backref with more than two branchesR\202\0\0\0i\0\0\0\0s\33\0\0\0pattern not properly closed(\10\0\0\0R\203\0\0\0R`\0\0\0R\25\0\0\0R\23\0\0\0RZ\0\0\0R!\0\0\0R\27\0\0\0R-\0\0\0(\6\0\0\0Rw\0\0\0R~\0\0\0R4\0\0\0R5\0\0\0R6\0\0\0R\210\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\17\0\0\0_parse_sub_condx\1\0\0s\26\0\0\0\0\1\17\1\17\1\17\1\17\1\17\2\6\1\34\1\f\1\f\1\34\1s\2\0\0\0|)s\3\0\0\0=!<s\2\0\0\0=!c\2\0\0\0\"\0\0\0\5\0\0\0C\0\0\0sm\f\0\0t\0\0|\1\0\203\1\0}\2\0|\2\0j\1\0}\3\0|\0\0j\2\0}\4\0|\0\0j\3\0}\5\0t\4\0}\6\0t\5\0}\7\0t\6\0}\10\0t\7\0}\t\0t\10\0}\n\0x!\f|\0\0j\t\0|\7\0k\6\0r[\0Pn\0\0|\4\0\203\0\0}\v\0|\v\0d\0\0k\10\0rt\0Pn\0\0|\1\0j\v\0t\f\0@r\310\0|\v\0t\r\0k\6\0r\223\0qH\0n\0\0|\v\0d\1\0k\2\0r\310\0x\35\0|\4\0\203\0\0}\v\0|\v\0d0\0k\6\0r\242\0Pq\242\0q\242\0WqH\0q\310\0n\0\0|\v\0r\367\0|\v\0d\3\0\31t\16\0k\7\0r\367\0|\3\0t\17\0t\20\0|\v\0\203\1\0f\2\0\203\1\0\1qH\0|\v\0d\4\0k\2\0r\227\3g\0\0}\f\0|\f\0j\1\0}\r\0|\5\0d\5\0\203\1\0r1\1|\r\0t\21\0d\0\0f\2\0\203\1\0\1n\0\0|\f\0\36}\16\0x\275\1|\4\0\203\0\0}\v\0|\v\0d\6\0k\2\0r`\1|\f\0|\16\0k\3\0r`\1PnL\0|\v\0r\210\1|\v\0d\3\0\31d\7\0k\2\0r\210\1t\22\0|\0\0|\v\0\203\2\0}\17\0n$\0|\v\0r\243\1t\17\0t\20\0|\v\0\203\1\0f\2\0}\17\0n\t\0t\23\0d\10\0\202\2\0|\5\0d\t\0\203\1\0r\311\2|\4\0\203\0\0}\v\0|\v\0d\6\0k\2\0r\22\2|\17\0d\3\0\31t\24\0k\10\0r\356\1|\17\0d\n\0\31d\3\0\31}\17\0n\0\0|\r\0|\17\0\203\1\0\1|\r\0t\17\0t\20\0d\t\0\203\1\0f\2\0\203\1\0\1Pq\364\2|\v\0r\275\2|\v\0d\3\0\31d\7\0k\2\0r:\2t\22\0|\0\0|\v\0\203\2\0}\20\0n\22\0t\17\0t\20\0|\v\0\203\1\0f\2\0}\20\0|\17\0d\3\0\31t\17\0k\3\0sl\2|\20\0d\3\0\31t\17\0k\3\0rx\2t\23\0d\v\0\202\2\0n\0\0|\17\0d\n\0\31}\21\0|\20\0d\n\0\31}\22\0|\22\0|\21\0k\0\0r\244\2t\23\0d\v\0\202\2\0n\0\0|\r\0t\25\0|\21\0|\22\0f\2\0f\2\0\203\1\0\1q\364\2t\23\0d\10\0\202\2\0q;\1|\17\0d\3\0\31t\24\0k\10\0r\352\2|\17\0d\n\0\31d\3\0\31}\17\0n\0\0|\r\0|\17\0\203\1\0\1q;\1W|\6\0|\f\0\203\1\0d\n\0k\2\0r/\3|\f\0d\3\0\31d\3\0\31t\17\0k\10\0r/\3|\3\0|\f\0d\3\0\31\203\1\0\1qe\f|\6\0|\f\0\203\1\0d\f\0k\2\0r\204\3|\f\0d\3\0\31d\3\0\31t\21\0k\10\0r\204\3|\f\0d\n\0\31d\3\0\31t\17\0k\10\0r\204\3|\3\0t\26\0|\f\0d\n\0\31d\n\0\31f\2\0\203\1\0\1qe\f|\3\0t\24\0|\f\0f\2\0\203\1\0\1qH\0|\v\0r*\6|\v\0d\3\0\31t\27\0k\6\0r*\6|\v\0d\r\0k\2\0r\310\3d1\0\\\2\0}\23\0}\24\0n\254\1|\v\0d\16\0k\2\0r\344\3d\3\0t\30\0\2}\23\0}\24\0n\220\1|\v\0d\17\0k\2\0r\0\4d\n\0t\30\0\2}\23\0}\24\0nt\1|\v\0d\20\0k\2\0rk\5|\0\0j\t\0d\21\0k\2\0r7\4|\3\0t\17\0t\20\0|\v\0\203\1\0f\2\0\203\1\0\1qH\0n\0\0|\0\0j\31\0\203\0\0}\25\0d\3\0t\30\0\2}\23\0}\24\0d\22\0\4}\21\0}\22\0x#\0|\0\0j\t\0t\32\0k\6\0r\177\4|\21\0|\0\0j\2\0\203\0\0\27}\21\0q]\4W|\5\0d\23\0\203\1\0r\262\4x)\0|\0\0j\t\0t\32\0k\6\0r\256\4|\22\0|\4\0\203\0\0\27}\22\0q\217\4Wn\6\0|\21\0}\22\0|\5\0d\21\0\203\1\0s\355\4|\3\0t\17\0t\20\0|\v\0\203\1\0f\2\0\203\1\0\1|\0\0j\33\0|\25\0\203\1\0\1qH\0n\0\0|\21\0r\35\5t\34\0|\21\0\203\1\0}\23\0|\23\0t\30\0k\5\0r\35\5t\35\0d\24\0\203\1\0\202\1\0q\35\5n\0\0|\22\0rt\5t\34\0|\22\0\203\1\0}\24\0|\24\0t\30\0k\5\0rJ\5t\35\0d\24\0\203\1\0\202\1\0n\0\0|\24\0|\23\0k\0\0rh\5t\23\0d\25\0\203\1\0\202\1\0qh\5qt\5n\t\0t\23\0d\26\0\202\2\0|\2\0r\207\5|\2\0d\27\0\37}\26\0n\6\0d\0\0}\26\0|\26\0\fs\272\5|\6\0|\26\0\203\1\0d\n\0k\2\0r\306\5|\26\0d\3\0\31d\3\0\31t\36\0k\2\0r\306\5t\23\0d\30\0\202\2\0n\0\0|\26\0d\3\0\31d\3\0\31|\n\0k\6\0r\346\5t\23\0d\31\0\202\2\0n\0\0|\5\0d\r\0\203\1\0r\16\6t\37\0|\23\0|\24\0|\26\0f\3\0f\2\0|\2\0d\27\0<qe\ft \0|\23\0|\24\0|\26\0f\3\0f\2\0|\2\0d\27\0<qH\0|\v\0d\32\0k\2\0rI\6|\3\0t!\0d\0\0f\2\0\203\1\0\1qH\0|\v\0d\33\0k\2\0r\346\vd\n\0}\27\0d\0\0}\30\0d\0\0}\31\0|\5\0d\r\0\203\1\0r\1\vd\3\0}\27\0|\5\0d\34\0\203\1\0rI\10|\5\0d\35\0\203\1\0r\26\7d\22\0}\30\0x?\0|\4\0\203\0\0}\32\0|\32\0d\0\0k\10\0r\273\6t\23\0d\36\0\202\2\0n\0\0|\32\0d\37\0k\2\0r\313\6Pn\0\0|\30\0|\32\0\27}\30\0q\232\6Wd\n\0}\27\0|\30\0s\364\6t\23\0d \0\203\1\0\202\1\0n\0\0t\"\0|\30\0\203\1\0sF\10t\23\0d!\0|\30\0\26\203\1\0\202\1\0qF\10q\376\n|\5\0d\"\0\203\1\0r\30\10d\22\0}\30\0x?\0|\4\0\203\0\0}\32\0|\32\0d\0\0k\10\0rL\7t\23\0d\36\0\202\2\0n\0\0|\32\0d#\0k\2\0r\\\7Pn\0\0|\30\0|\32\0\27}\30\0q+\7W|\30\0s\177\7t\23\0d \0\203\1\0\202\1\0n\0\0t\"\0|\30\0\203\1\0s\236\7t\23\0d$\0|\30\0\26\203\1\0\202\1\0n\0\0|\1\0j#\0j\2\0|\30\0\203\1\0}\33\0|\33\0d\0\0k\10\0r\332\7d%\0j$\0|\30\0\203\1\0}\34\0t\23\0|\34\0\203\1\0\202\1\0n\0\0|\1\0j%\0r\2\10d\27\0d\0\0l&\0}\35\0|\35\0j'\0d&\0t(\0\203\2\0\1n\0\0|\3\0t)\0|\33\0f\2\0\203\1\0\1qH\0q\376\n|\4\0\203\0\0}\32\0|\32\0d\0\0k\10\0r9\10t\23\0d'\0\202\2\0n\0\0t\23\0d(\0|\32\0\26\202\2\0q\1\v|\5\0d)\0\203\1\0r^\10d\f\0}\27\0q\1\v|\5\0d\1\0\203\1\0r\270\10x-\0|\0\0j\t\0d\0\0k\10\0s\213\10|\0\0j\t\0d#\0k\2\0r\217\10Pn\0\0|\4\0\203\0\0\1qm\10W|\5\0d#\0\203\1\0sH\0t\23\0d*\0\202\2\0qH\0qH\0q\1\v|\0\0j\t\0|\10\0k\6\0r\244\t|\4\0\203\0\0}\32\0d\n\0}\36\0|\32\0d\35\0k\2\0r\36\t|\0\0j\t\0|\t\0k\7\0r\375\10t\23\0d+\0\202\2\0n\0\0d\27\0}\36\0|\4\0\203\0\0}\32\0|\1\0\4j%\0d\n\0007\2_%\0n\0\0t*\0|\0\0|\1\0\203\2\0}\37\0|\36\0d\3\0k\0\0rK\t|\1\0\4j%\0d\n\0008\2_%\0n\0\0|\5\0d#\0\203\1\0sc\tt\23\0d*\0\202\2\0n\0\0|\32\0d\"\0k\2\0r\210\t|\3\0t+\0|\36\0|\37\0f\2\0f\2\0\203\1\0\1qH\0|\3\0t,\0|\36\0|\37\0f\2\0f\2\0\203\1\0\1qH\0q\1\v|\5\0d\33\0\203\1\0r\266\nd\22\0} \0x?\0|\4\0\203\0\0}\32\0|\32\0d\0\0k\10\0r\332\tt\23\0d\36\0\202\2\0n\0\0|\32\0d#\0k\2\0r\352\tPn\0\0| \0|\32\0\27} \0q\271\tWd\f\0}\27\0| \0s\23\nt\23\0d \0\203\1\0\202\1\0n\0\0t\"\0| \0\203\1\0r^\n|\1\0j#\0j\2\0| \0\203\1\0}\31\0|\31\0d\0\0k\10\0r\213\nd%\0j$\0| \0\203\1\0}\34\0t\23\0|\34\0\203\1\0\202\1\0q\213\nn-\0y\20\0t\34\0| \0\203\1\0}\31\0Wn\32\0\4t-\0k\n\0r\212\n\1\1\1t\23\0d,\0\202\2\0n\1\0X|\1\0j%\0r\376\nd\27\0d\0\0l&\0}\35\0|\35\0j'\0d&\0t(\0\203\2\0\1q\376\nq\1\v|\0\0j\t\0t.\0k\7\0r\321\nt\23\0d'\0\202\2\0n\0\0x-\0|\0\0j\t\0t.\0k\6\0r\375\n|\1\0j\v\0t.\0|\4\0\203\0\0\31B|\1\0_\v\0q\324\nWn\0\0|\27\0r\242\v|\27\0d\f\0k\2\0r\34\vd\0\0}\27\0n\17\0|\1\0j/\0|\30\0\203\1\0}\27\0|\31\0rF\vt0\0|\0\0|\1\0|\31\0\203\3\0}\37\0n\17\0t*\0|\0\0|\1\0\203\2\0}\37\0|\5\0d#\0\203\1\0sm\vt\23\0d*\0\202\2\0n\0\0|\27\0d\0\0k\t\0r\211\v|\1\0j1\0|\27\0\203\1\0\1n\0\0|\3\0t2\0|\27\0|\37\0f\2\0f\2\0\203\1\0\1qe\fx\300\0|\4\0\203\0\0}\32\0|\32\0d\0\0k\10\0r\306\vt\23\0d'\0\202\2\0n\0\0|\32\0d#\0k\2\0r\326\vPn\0\0t\23\0d-\0\202\2\0q\245\vWqH\0|\v\0d\5\0k\2\0r\5\f|\3\0t\36\0t3\0f\2\0\203\1\0\1qH\0|\v\0d.\0k\2\0r'\f|\2\0j\1\0t\36\0t4\0f\2\0\203\1\0\1qH\0|\v\0r\\\f|\v\0d\3\0\31d\7\0k\2\0r\\\ft5\0|\0\0|\v\0|\1\0\203\3\0}!\0|\3\0|!\0\203\1\0\1qH\0t\23\0d/\0\202\2\0qH\0W|\2\0S(2\0\0\0Nt\1\0\0\0#s\1\0\0\0\ni\0\0\0\0t\1\0\0\0[t\1\0\0\0^t\1\0\0\0]s\1\0\0\0\\s$\0\0\0unexpected end of regular expressiont\1\0\0\0-i\1\0\0\0s\23\0\0\0bad character rangei\2\0\0\0t\1\0\0\0?R\0\0\0\0t\1\0\0\0+t\1\0\0\0{t\1\0\0\0}t\0\0\0\0t\1\0\0\0,s\"\0\0\0the repetition number is too larges\23\0\0\0bad repeat intervals\r\0\0\0not supportedi\377\377\377\377s\21\0\0\0nothing to repeats\17\0\0\0multiple repeatt\1\0\0\0.t\1\0\0\0(t\1\0\0\0Pt\1\0\0\0<s\21\0\0\0unterminated namet\1\0\0\0>s\22\0\0\0missing group names\36\0\0\0bad character in group name %rt\1\0\0\0=R\202\0\0\0s&\0\0\0bad character in backref group name %rs\31\0\0\0unknown group name: {0!r}s;\0\0\0group references in lookbehind assertions are not supporteds\31\0\0\0unexpected end of patterns\27\0\0\0unknown specifier: ?P%st\1\0\0\0:s\26\0\0\0unbalanced parenthesiss\f\0\0\0syntax errors\33\0\0\0bad character in group names\21\0\0\0unknown extensiont\1\0\0\0$s\f\0\0\0parser error(\2\0\0\0Ns\1\0\0\0\n(\2\0\0\0i\0\0\0\0i\1\0\0\0(6\0\0\0R!\0\0\0R\27\0\0\0R\24\0\0\0R`\0\0\0R9\0\0\0t\16\0\0\0_PATTERNENDERSt\f\0\0\0_ASSERTCHARSt\26\0\0\0_LOOKBEHINDASSERTCHARSt\f\0\0\0_REPEATCODESRZ\0\0\0R\23\0\0\0R\f\0\0\0t\20\0\0\0SRE_FLAG_VERBOSEt\n\0\0\0WHITESPACEt\r\0\0\0SPECIAL_CHARSRD\0\0\0Ru\0\0\0t\6\0\0\0NEGATERy\0\0\0R\25\0\0\0R)\0\0\0RC\0\0\0RE\0\0\0t\f\0\0\0REPEAT_CHARSRI\0\0\0Rb\0\0\0Rt\0\0\0Rc\0\0\0Rr\0\0\0t\r\0\0\0OverflowErrort\2\0\0\0ATRG\0\0\0RH\0\0\0RB\0\0\0Rn\0\0\0R\17\0\0\0t\6\0\0\0formatR\20\0\0\0Rz\0\0\0R{\0\0\0R|\0\0\0R}\0\0\0R\216\0\0\0t\6\0\0\0ASSERTt\n\0\0\0ASSERT_NOTRv\0\0\0t\5\0\0\0FLAGSR\33\0\0\0R\217\0\0\0R\35\0\0\0RN\0\0\0t\f\0\0\0AT_BEGINNINGt\6\0\0\0AT_ENDR\200\0\0\0(\"\0\0\0Rw\0\0\0R~\0\0\0R\210\0\0\0R\211\0\0\0t\t\0\0\0sourcegetR\207\0\0\0t\4\0\0\0_lent\r\0\0\0PATTERNENDERSt\v\0\0\0ASSERTCHARSt\25\0\0\0LOOKBEHINDASSERTCHARSRS\0\0\0Ra\0\0\0R\214\0\0\0R\215\0\0\0t\5\0\0\0startt\5\0\0\0code1t\5\0\0\0code2RP\0\0\0RQ\0\0\0RK\0\0\0RL\0\0\0t\4\0\0\0hereR\213\0\0\0R\177\0\0\0R\30\0\0\0R4\0\0\0R\\\0\0\0R\31\0\0\0t\3\0\0\0msgRz\0\0\0t\3\0\0\0dirt\1\0\0\0pt\10\0\0\0condnameR?\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyR\203\0\0\0\213\1\0\0s\366\1\0\0\0\2\f\3\t\1\t\1\t\1\6\1\6\1\6\1\6\1\6\2\3\2\17\1\4\1\t\1\f\1\4\2\r\2\f\1\6\1\f\1\3\1\t\1\f\1\10\1\t\2\26\1\31\2\f\2\6\1\t\3\f\1\23\2\7\1\3\1\t\1\30\1\4\1\26\1\22\1\6\1\25\2\t\1\f\2\t\1\f\1\20\1\21\1\n\1\26\1\4\1\6\1\20\1\22\2\22\1 \1\f\1\n\1\n\1\f\1\f\1\31\2\f\2\20\1\21\1\16\3&\1\21\1:\1\33\3\23\2\26\2\f\1\17\1\f\1\20\2\f\1\20\1\f\1\17\1\26\1\6\1\f\1\r\1\n\1\22\1\24\1\f\1\22\1\24\2\6\1\f\1\26\1\r\1\6\1\6\1\f\1\f\1\22\1\6\1\f\1\f\1\17\1\f\1\25\2\t\2\6\1\r\2\6\1-\1\f\1\24\1\f\1\f\1\34\2\34\2\f\1\23\2\f\1\6\1\6\1\6\1\f\1\6\2\f\2\f\2\6\1\3\1\t\1\f\1\f\1\f\1\4\1\16\1\6\1\6\1\17\1\f\1\6\1\20\1\f\2\6\1\3\1\t\1\f\1\f\1\f\1\4\1\16\1\6\1\17\1\f\1\6\1\r\1\22\1\f\1\17\1\17\1\t\1\f\1\t\2\n\1\20\1\6\2\t\1\f\1\f\1\20\1\f\2\t\1\f\2\3\1\36\1\4\1\v\1\f\1\f\1\6\1\17\2\t\1\6\1\f\1\17\1\f\1\6\1\t\1\22\1\17\1\f\1\22\1\f\1\f\1\f\1\31\2\26\1\6\1\f\2\6\1\3\1\t\1\f\1\f\1\f\1\4\1\16\1\6\1\6\1\17\1\f\1\22\1\f\1\17\1\22\2\3\1\20\1\r\1\r\1\t\1\f\1\t\2\r\3\17\1\f\1\22\1\36\1\6\2\f\2\t\2\17\1\6\1\25\2\17\1\f\1\f\1\f\1\20\1\31\2\3\1\t\1\f\1\f\1\f\1\4\1\20\2\f\1\23\2\f\1\26\2\26\1\22\1\r\3\r\2i\0\0\0\0c\3\0\0\0\6\0\0\0\4\0\0\0C\0\0\0s\307\0\0\0t\0\0|\0\0\203\1\0}\3\0|\2\0d\0\0k\10\0r$\0t\2\0\203\0\0}\2\0n\0\0|\1\0|\2\0_\3\0|\0\0|", 12288) = 12288
27308 read(7, "\2\0_\4\0t\5\0|\3\0|\2\0d\1\0\203\3\0}\4\0|\3\0j\6\0\203\0\0}\5\0|\5\0d\2\0k\2\0rl\0t\7\0d\3\0\202\2\0n\22\0|\5\0r~\0t\7\0d\4\0\202\2\0n\0\0|\1\0t\10\0@r\225\0|\4\0j\t\0\203\0\0\1n\0\0|\1\0t\n\0@\fr\303\0|\4\0j\v\0j\3\0t\n\0@r\303\0t\f\0|\0\0|\4\0j\v\0j\3\0\203\2\0S|\4\0S(\5\0\0\0Ni\0\0\0\0R\202\0\0\0s\26\0\0\0unbalanced parenthesiss-\0\0\0bogus characters at end of regular expression(\r\0\0\0RW\0\0\0R\23\0\0\0R\v\0\0\0R\f\0\0\0t\3\0\0\0strR\216\0\0\0R\24\0\0\0R\25\0\0\0t\16\0\0\0SRE_FLAG_DEBUGR,\0\0\0R\247\0\0\0R\"\0\0\0t\5\0\0\0parse(\6\0\0\0R\301\0\0\0R\f\0\0\0R\"\0\0\0Rw\0\0\0R\277\0\0\0t\4\0\0\0tail(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyR\303\0\0\0\302\2\0\0s \0\0\0\0\3\f\2\f\1\f\1\t\1\t\2\22\2\f\1\f\1\f\1\6\1\f\2\n\1\r\2\33\3\23\2c\2\0\0\0\24\0\0\0\5\0\0\0C\0\0\0s\254\3\0\0t\0\0|\0\0\203\1\0}\2\0|\2\0j\1\0}\3\0g\0\0}\4\0|\4\0j\2\0}\5\0|\4\0|\5\0d\1\0\204\2\0}\6\0|\0\0d\2\0 }\7\0t\3\0|\7\0\203\1\0t\3\0d\3\0\203\1\0k\10\0r^\0t\4\0}\10\0n\6\0t\5\0}\10\0x\311\2|\3\0\203\0\0}\t\0|\t\0d\0\0k\10\0r\200\0Pn\0\0|\t\0r\"\3|\t\0d\2\0\31d\4\0k\2\0r\"\3|\t\0d\5\0d\6\0!}\n\0|\n\0d\7\0k\2\0r\302\1d\3\0}\v\0|\2\0j\7\0d\10\0\203\1\0r\t\1xB\0|\3\0\203\0\0}\f\0|\f\0d\0\0k\10\0r\350\0t\10\0d\t\0\202\2\0n\0\0|\f\0d\n\0k\2\0r\370\0Pn\0\0|\v\0|\f\0\27}\v\0q\307\0Wn\0\0|\v\0s\33\1t\10\0d\v\0\202\2\0n\0\0y(\0t\t\0|\v\0\203\1\0}\r\0|\r\0d\2\0k\0\0rB\1t\10\0d\f\0\202\2\0n\0\0Wni\0\4t\n\0k\n\0r\256\1\1\1\1t\v\0|\v\0\203\1\0sk\1t\10\0d\r\0\202\2\0n\0\0y\21\0|\1\0j\f\0|\v\0\31}\r\0Wq\257\1\4t\r\0k\n\0r\252\1\1\1\1d\16\0j\16\0|\v\0\203\1\0}\16\0t\17\0|\16\0\203\1\0\202\1\0q\257\1Xn\1\0X|\5\0t\20\0|\r\0f\2\0\203\1\0\1q,\3|\n\0d\17\0k\2\0r0\2|\2\0j\21\0t\22\0k\6\0r\f\2|\t\0|\3\0\203\0\0\27}\t\0|\2\0j\21\0t\22\0k\6\0r\f\2|\t\0|\3\0\203\0\0\27}\t\0q\f\2n\0\0|\6\0|\10\0t\t\0|\t\0d\5\0\37d\20\0\203\2\0d\21\0@\203\1\0\203\1\0\1q,\3|\n\0t\23\0k\6\0r\351\2t\24\0}\17\0|\2\0j\21\0t\23\0k\6\0r\303\2|\t\0|\3\0\203\0\0\27}\t\0|\n\0t\22\0k\6\0r\303\2|\t\0d\6\0\31t\22\0k\6\0r\303\2|\2\0j\21\0t\22\0k\6\0r\303\2|\t\0|\3\0\203\0\0\27}\t\0t\25\0}\17\0|\6\0|\10\0t\t\0|\t\0d\5\0\37d\20\0\203\2\0d\21\0@\203\1\0\203\1\0\1q\303\2n\0\0|\17\0s\37\3|\5\0t\20\0t\t\0|\t\0d\5\0\37\203\1\0f\2\0\203\1\0\1q\37\3q,\3y\30\0|\10\0t\26\0|\t\0\31d\5\0\31\203\1\0}\t\0Wn\21\0\4t\r\0k\n\0r\24\3\1\1\1n\1\0X|\6\0|\t\0\203\1\0\1qg\0|\6\0|\t\0\203\1\0\1qg\0Wd\2\0}\20\0g\0\0}\21\0|\21\0j\2\0}\22\0d\0\0g\1\0t\27\0|\4\0\203\1\0\24}\23\0xG\0|\4\0D]?\0\\\2\0}\n\0}\2\0|\n\0t\20\0k\10\0r\212\3|\22\0|\20\0|\2\0f\2\0\203\1\0\1n\n\0|\2\0|\23\0|\20\0<|\20\0d\5\0\27}\20\0q_\3W|\21\0|\23\0f\2\0S(\22\0\0\0Nc\3\0\0\0\3\0\0\0\3\0\0\0S\0\0\0sM\0\0\0|\1\0r9\0|\1\0d\1\0\31d\2\0\31t\0\0k\10\0r9\0t\0\0|\1\0d\1\0\31d\3\0\31|\0\0\27f\2\0|\1\0d\1\0<n\20\0|\2\0t\0\0|\0\0f\2\0\203\1\0\1d\0\0S(\4\0\0\0Ni\377\377\377\377i\0\0\0\0i\1\0\0\0(\1\0\0\0RD\0\0\0(\3\0\0\0t\7\0\0\0literalR\277\0\0\0t\7\0\0\0pappend(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyR\305\0\0\0\345\2\0\0s\6\0\0\0\0\1\32\1\37\2i\0\0\0\0R\231\0\0\0s\1\0\0\0\\i\1\0\0\0i\2\0\0\0t\1\0\0\0gR\236\0\0\0s\27\0\0\0unterminated group nameR\237\0\0\0s\22\0\0\0missing group names\25\0\0\0negative group numbers\33\0\0\0bad character in group names\31\0\0\0unknown group name: {0!r}Ri\0\0\0i\10\0\0\0i\377\0\0\0(\30\0\0\0RW\0\0\0R\24\0\0\0R\27\0\0\0t\4\0\0\0typet\3\0\0\0chrt\6\0\0\0unichrR\23\0\0\0R`\0\0\0R\25\0\0\0Rr\0\0\0Rv\0\0\0Rn\0\0\0t\n\0\0\0groupindext\10\0\0\0KeyErrorR\256\0\0\0R[\0\0\0t\4\0\0\0MARKRZ\0\0\0Rs\0\0\0Rt\0\0\0Rl\0\0\0Rm\0\0\0Ro\0\0\0R9\0\0\0(\24\0\0\0Rw\0\0\0R\"\0\0\0R\7\0\0\0t\4\0\0\0sgetR\277\0\0\0R3\0\0\0R\305\0\0\0t\3\0\0\0sept\10\0\0\0makecharRa\0\0\0R]\0\0\0R\30\0\0\0R\\\0\0\0R;\0\0\0R\275\0\0\0t\7\0\0\0isoctalR\4\0\0\0R\16\0\0\0t\f\0\0\0groupsappendt\10\0\0\0literals(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\16\0\0\0parse_template\336\2\0\0s\222\0\0\0\0\3\f\1\t\1\6\1\t\1\17\5\n\1\30\1\t\2\6\1\3\1\t\1\f\1\4\1\26\2\r\1\f\1\6\1\17\1\3\1\t\1\f\1\f\1\f\1\4\1\21\1\6\1\f\1\3\1\f\1\f\1\20\1\r\1\f\1\f\1\3\1\21\1\r\1\17\1\24\1\23\1\f\1\17\1\r\1\17\1\23\1$\1\f\1\6\1\17\1\r\1\34\1\17\1\r\1\6\1'\1\6\1 \2\3\1\30\1\r\1\4\1\r\2\16\2\6\1\6\1\t\1\23\1\23\1\f\1\23\3\n\1\16\1c\2\0\0\0\t\0\0\0\5\0\0\0C\0\0\0s\232\0\0\0|\1\0j\0\0}\2\0|\1\0j\1\0d\1\0 }\3\0|\0\0\\\2\0}\4\0}\5\0|\5\0\36}\5\0yG\0x@\0|\4\0D]8\0\\\2\0}\6\0}\7\0|\2\0|\7\0\203\1\0\4|\5\0|\6\0<}\10\0|\10\0d\0\0k\10\0r3\0t\3\0d\2\0\202\2\0q3\0q3\0WWn\32\0\4t\4\0k\n\0r\214\0\1\1\1t\3\0d\3\0\202\2\0n\1\0X|\3\0j\5\0|\5\0\203\1\0S(\4\0\0\0Ni\0\0\0\0s\17\0\0\0unmatched groups\27\0\0\0invalid group reference(\6\0\0\0R\177\0\0\0RX\0\0\0R\23\0\0\0R\25\0\0\0R[\0\0\0t\4\0\0\0join(\t\0\0\0t\10\0\0\0templateR`\0\0\0R\307\0\0\0R\317\0\0\0R\16\0\0\0R\323\0\0\0R;\0\0\0R\177\0\0\0R\7\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\17\0\0\0expand_template6\3\0\0s\30\0\0\0\0\1\t\1\r\1\f\1\7\1\3\1\23\1\24\1\f\1\24\1\r\1\r\1(8\0\0\0t\7\0\0\0__doc__t\3\0\0\0syst\r\0\0\0sre_constantsR\251\0\0\0R\253\0\0\0R\214\0\0\0Rt\0\0\0Rs\0\0\0Rq\0\0\0R\250\0\0\0RD\0\0\0Ru\0\0\0Ro\0\0\0R\255\0\0\0t\23\0\0\0AT_BEGINNING_STRINGt\v\0\0\0AT_BOUNDARYt\17\0\0\0AT_NON_BOUNDARYR)\0\0\0RF\0\0\0t\16\0\0\0CATEGORY_DIGITt\22\0\0\0CATEGORY_NOT_DIGITt\16\0\0\0CATEGORY_SPACEt\22\0\0\0CATEGORY_NOT_SPACEt\r\0\0\0CATEGORY_WORDt\21\0\0\0CATEGORY_NOT_WORDt\r\0\0\0AT_END_STRINGRp\0\0\0t\23\0\0\0SRE_FLAG_IGNORECASEt\17\0\0\0SRE_FLAG_LOCALEt\22\0\0\0SRE_FLAG_MULTILINEt\17\0\0\0SRE_FLAG_DOTALLR\247\0\0\0t\21\0\0\0SRE_FLAG_TEMPLATEt\20\0\0\0SRE_FLAG_UNICODER\261\0\0\0R\v\0\0\0R!\0\0\0RW\0\0\0Rh\0\0\0Rk\0\0\0Rn\0\0\0Ry\0\0\0R\200\0\0\0R\216\0\0\0R\217\0\0\0R\243\0\0\0R\244\0\0\0R\245\0\0\0RG\0\0\0RH\0\0\0R\246\0\0\0R\203\0\0\0R\23\0\0\0R\303\0\0\0R\324\0\0\0R\327\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/sre_parse.pyt\10\0\0\0<module>\v\0\0\0sn\0\0\0\6\4\f\2\n\2\6\1\6\2\f\2\f\1\f\2\f\2\3\1\23\1\23\1\23\1\23\1\23\1\23\1\23\1\26\3\3\1\r\1\r\1\r\1\26\1\26\1\26\1\26\1\26\1\26\1\20\3\3\2\7\1\7\1\7\1\7\1\7\2\7\1\n\3\23\31\23b\23!\t\3\t\3\t\t\t \t1\f;\t\16\f\1\f\1\f\1\22\2\t\377\0008\17\34\tX", 4096) = 3561
27308 read(7, "", 4096)                 = 0
27308 close(7)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/sre_constants", 0xbfffcdcc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sre_constants.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sre_constants.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sre_constantsmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sre_constants.py", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=661585, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=7197, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/sre_constants.pyc", O_RDONLY|O_LARGEFILE) = 8
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669329, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=6185, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(8, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0 \0\0\0@\0\0\0s*\5\0\0d\0\0Z\0\0d\1\0Z\1\0y\24\0d\2\0d\3\0l\2\0m\3\0Z\3\0\1Wn*\0\4e\4\0k\n\0rL\0\1\1\1d\2\0d\4\0l\2\0Z\2\0d\5\0\4Z\3\0e\2\0_\3\0n\1\0Xd\6\0e\5\0f\1\0d\7\0\204\0\0\203\0\0YZ\6\0d\10\0Z\7\0d\t\0Z\10\0d\n\0Z\t\0d\v\0Z\n\0d\f\0Z\v\0d\r\0Z\f\0d\16\0Z\r\0d\17\0Z\16\0d\20\0Z\17\0d\21\0Z\20\0d\22\0Z\21\0d\23\0Z\22\0d\24\0Z\23\0d\25\0Z\24\0d\26\0Z\25\0d\27\0Z\26\0d\30\0Z\27\0d\31\0Z\30\0d\32\0Z\31\0d\33\0Z\32\0d\34\0Z\33\0d\35\0Z\34\0d\36\0Z\35\0d\37\0Z\36\0d \0Z\37\0d!\0Z \0d\"\0Z!\0d#\0Z\"\0d$\0Z#\0d%\0Z$\0d&\0Z%\0d'\0Z&\0d(\0Z'\0d)\0Z(\0d*\0Z)\0d+\0Z*\0d,\0Z+\0d-\0Z,\0d.\0Z-\0d/\0Z.\0d0\0Z/\0d1\0Z0\0d2\0Z1\0d3\0Z2\0d4\0Z3\0d5\0Z4\0d6\0Z5\0d7\0Z6\0d8\0Z7\0d9\0Z8\0d:\0Z9\0d;\0Z:\0d<\0Z;\0d=\0Z<\0d>\0Z=\0d?\0Z>\0d@\0Z?\0dA\0Z@\0dB\0ZA\0dC\0ZB\0dD\0ZC\0dE\0ZD\0dF\0ZE\0dG\0ZF\0e\7\0e\10\0e\t\0e\n\0e\v\0e\f\0e\r\0e\17\0e\20\0e\21\0e\22\0e\16\0e\23\0e\25\0e\24\0e\26\0e\27\0e\30\0e\31\0e\32\0e\33\0e\34\0e\36\0e \0e\"\0e#\0e!\0e$\0e%\0e&\0e'\0e(\0g \0ZG\0e)\0e*\0e+\0e,\0e-\0e.\0e/\0e0\0e1\0e2\0e3\0e4\0g\f\0ZH\0e5\0e6\0e7\0e8\0e9\0e:\0e;\0e<\0e=\0e>\0e?\0e@\0eA\0eB\0eC\0eD\0eE\0eF\0g\22\0ZI\0dH\0\204\0\0ZJ\0eJ\0eG\0\203\1\0ZG\0eJ\0eH\0\203\1\0ZH\0eJ\0eI\0\203\1\0ZI\0i\4\0e\24\0e\23\0006e\27\0e\26\0006e\33\0e\32\0006e#\0e\"\0006ZK\0i\2\0e*\0e)\0006e/\0e.\0006ZL\0i\2\0e1\0e,\0006e2\0e-\0006ZM\0i\2\0e3\0e,\0006e4\0e-\0006ZN\0i\10\0e5\0e5\0006e6\0e6\0006e7\0e7\0006e8\0e8\0006e=\0e9\0006e>\0e:\0006e;\0e;\0006e<\0e<\0006ZO\0i\10\0e?\0e5\0006e@\0e6\0006eA\0e7\0006eB\0e8\0006eC\0e9\0006eD\0e:\0006eE\0e;\0006eF\0e<\0006ZP\0dI\0ZQ\0dJ\0ZR\0dK\0ZS\0dL\0ZT\0dM\0ZU\0dN\0ZV\0dO\0ZW\0dP\0ZX\0dI\0ZY\0dJ\0ZZ\0dK\0Z[\0e\\\0dQ\0k\2\0r&\5dR\0\204\0\0Z]\0e^\0dS\0dT\0\203\2\0Z_\0e_\0j`\0dU\0\203\1\0\1e_\0j`\0dV\0e\1\0\26\203\1\0\1e]\0e_\0eG\0dW\0\203\3\0\1e]\0e_\0eH\0dX\0\203\3\0\1e]\0e_\0eI\0dX\0\203\3\0\1e_\0j`\0dY\0eQ\0\26\203\1\0\1e_\0j`\0dZ\0eR\0\26\203\1\0\1e_\0j`\0d[\0eS\0\26\203\1\0\1e_\0j`\0d\\\0eT\0\26\203\1\0\1e_\0j`\0d]\0eU\0\26\203\1\0\1e_\0j`\0d^\0eV\0\26\203\1\0\1e_\0j`\0d_\0eW\0\26\203\1\0\1e_\0j`\0d`\0eY\0\26\203\1\0\1e_\0j`\0da\0eZ\0\26\203\1\0\1e_\0j`\0db\0e[\0\26\203\1\0\1e_\0ja\0\203\0\0\1dc\0GHn\0\0d\4\0S(d\0\0\0s\37\0\0\0Internal support module for srei)\2461\1i\377\377\377\377(\1\0\0\0t\t\0\0\0MAXREPEATNi\377\377\0\0t\5\0\0\0errorc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__(\0\0\0\0(\0\0\0\0(\0\0\0\0s#\0\0\0/usr/lib/python2.7/sre_constants.pyR\1\0\0\0\33\0\0\0s\2\0\0\0\6\1t\7\0\0\0failuret\7\0\0\0successt\3\0\0\0anyt\7\0\0\0any_allt\6\0\0\0assertt\n\0\0\0assert_nott\2\0\0\0att\n\0\0\0bigcharsett\6\0\0\0brancht\4\0\0\0callt\10\0\0\0categoryt\7\0\0\0charsett\10\0\0\0groupreft\17\0\0\0groupref_ignoret\17\0\0\0groupref_existst\2\0\0\0int\t\0\0\0in_ignoret\4\0\0\0infot\4\0\0\0jumpt\7\0\0\0literalt\16\0\0\0literal_ignoret\4\0\0\0markt\n\0\0\0max_repeatt\t\0\0\0max_untilt\n\0\0\0min_repeatt\t\0\0\0min_untilt\6\0\0\0negatet\v\0\0\0not_literalt\22\0\0\0not_literal_ignoret\5\0\0\0ranget\6\0\0\0repeatt\n\0\0\0repeat_onet\n\0\0\0subpatternt\16\0\0\0min_repeat_onet\f\0\0\0at_beginningt\21\0\0\0at_beginning_linet\23\0\0\0at_beginning_stringt\v\0\0\0at_boundaryt\17\0\0\0at_non_boundaryt\6\0\0\0at_endt\v\0\0\0at_end_linet\r\0\0\0at_end_stringt\17\0\0\0at_loc_boundaryt\23\0\0\0at_loc_non_boundaryt\17\0\0\0at_uni_boundaryt\23\0\0\0at_uni_non_boundaryt\16\0\0\0category_digitt\22\0\0\0category_not_digitt\16\0\0\0category_spacet\22\0\0\0category_not_spacet\r\0\0\0category_wordt\21\0\0\0category_not_wordt\22\0\0\0category_linebreakt\26\0\0\0category_not_linebreakt\21\0\0\0category_loc_wordt\25\0\0\0category_loc_not_wordt\22\0\0\0category_uni_digitt\26\0\0\0category_uni_not_digitt\22\0\0\0category_uni_spacet\26\0\0\0category_uni_not_spacet\21\0\0\0category_uni_wordt\25\0\0\0category_uni_not_wordt\26\0\0\0category_uni_linebreakt\32\0\0\0category_uni_not_linebreakc\1\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s5\0\0\0i\0\0}\1\0d\1\0}\2\0x\"\0|\0\0D]\32\0}\3\0|\2\0|\1\0|\3\0<|\2\0d\2\0\27}\2\0q\23\0W|\1\0S(\3\0\0\0Ni\0\0\0\0i\1\0\0\0(\0\0\0\0(\4\0\0\0t\4\0\0\0listt\1\0\0\0dt\1\0\0\0it\4\0\0\0item(\0\0\0\0(\0\0\0\0s#\0\0\0/usr/lib/python2.7/sre_constants.pyt\10\0\0\0makedict\225\0\0\0s\f\0\0\0\0\1\6\1\6\1\r\1\n\1\16\1i\1\0\0\0i\2\0\0\0i\4\0\0\0i\10\0\0\0i\20\0\0\0i \0\0\0i@\0\0\0i\200\0\0\0t\10\0\0\0__main__c\3\0\0\0\6\0\0\0\6\0\0\0C\0\0\0sZ\0\0\0|\1\0j\0\0\203\0\0}\3\0|\3\0j\1\0d\1\0d\2\0\204\0\0\203\0\1\1x4\0|\3\0D],\0\\\2\0}\4\0}\5\0|\0\0j\2\0d\3\0|\2\0|\4\0j\3\0\203\0\0|\5\0f\3\0\26\203\1\0\1q&\0Wd\0\0S(\4\0\0\0Nt\3\0\0\0keyc\1\0\0\0\1\0\0\0\2\0\0\0S\0\0\0s\10\0\0\0|\0\0d\1\0\31S(\2\0\0\0Ni\1\0\0\0(\0\0\0\0(\1\0\0\0t\1\0\0\0a(\0\0\0\0(\0\0\0\0s#\0\0\0/usr/lib/python2.7/sre_constants.pyt\10\0\0\0<lambda>\340\0\0\0s\0\0\0\0s\21\0\0\0#define %s_%s %s\n(\4\0\0\0t\5\0\0\0itemst\4\0\0\0sortt\5\0\0\0writet\5\0\0\0upper(\6\0\0\0t\1\0\0\0fRE\0\0\0t\6\0\0\0prefixRM\0\0\0t\1\0\0\0kt\1\0\0\0v(\0\0\0\0(\0\0\0\0s#\0\0\0/usr/lib/python2.7/sre_constants.pyt\4\0\0\0dump\336\0\0\0s\10\0\0\0\0\1\f\1\23\1\23\1s\17\0\0\0sre_constants.ht\1\0\0\0wso\1\0\0/*\n * Secret Labs' Regular Expression Engine\n *\n * regular expression matching engine\n *\n * NOTE: This file is generated by sre_constants.py.  If you need\n * to change anything in here, edit sre_constants.py and run it.\n *\n * Copyright (c) 1997-2001 by Secret Labs AB.  All rights reserved.\n *\n * See the _sre.c file for information on usage and redistribution.\n */\n\ns\25\0\0\0#define SRE_MAGIC %d\nt\6\0\0\0SRE_OPt\3\0\0\0SREs\35\0\0\0#define SRE_FLAG_TEMPLATE %d\ns\37\0\0\0#define SRE_FLAG_IGNORECASE %d\ns\33\0\0\0#define SRE_FLAG_LOCALE %d\ns\36\0\0\0#define SRE_FLAG_MULTILINE %d\ns\33\0\0\0#define SRE_FLAG_DOTALL %d\ns\34\0\0\0#define SRE_FLAG_UNICODE %d\ns\34\0\0\0#define SRE_FLAG_VERBOSE %d\ns\33\0\0\0#define SRE_INFO_PRE", 4096) = 4096
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669329, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=6185, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(8, "FIX %d\ns\34\0\0\0#define SRE_INFO_LITERAL %d\ns\34\0\0\0#define SRE_INFO_CHARSET %d\nt\4\0\0\0done(b\0\0\0t\7\0\0\0__doc__t\5\0\0\0MAGICt\4\0\0\0_sreR\0\0\0\0t\v\0\0\0ImportErrort\t\0\0\0ExceptionR\1\0\0\0t\7\0\0\0FAILUREt\7\0\0\0SUCCESSt\3\0\0\0ANYt\7\0\0\0ANY_ALLt\6\0\0\0ASSERTt\n\0\0\0ASSERT_NOTt\2\0\0\0ATt\n\0\0\0BIGCHARSETt\6\0\0\0BRANCHt\4\0\0\0CALLt\10\0\0\0CATEGORYt\7\0\0\0CHARSETt\10\0\0\0GROUPREFt\17\0\0\0GROUPREF_IGNOREt\17\0\0\0GROUPREF_EXISTSt\2\0\0\0INt\t\0\0\0IN_IGNOREt\4\0\0\0INFOt\4\0\0\0JUMPt\7\0\0\0LITERALt\16\0\0\0LITERAL_IGNOREt\4\0\0\0MARKt\n\0\0\0MAX_REPEATt\t\0\0\0MAX_UNTILt\n\0\0\0MIN_REPEATt\t\0\0\0MIN_UNTILt\6\0\0\0NEGATEt\v\0\0\0NOT_LITERALt\22\0\0\0NOT_LITERAL_IGNOREt\5\0\0\0RANGEt\6\0\0\0REPEATt\n\0\0\0REPEAT_ONEt\n\0\0\0SUBPATTERNt\16\0\0\0MIN_REPEAT_ONEt\f\0\0\0AT_BEGINNINGt\21\0\0\0AT_BEGINNING_LINEt\23\0\0\0AT_BEGINNING_STRINGt\v\0\0\0AT_BOUNDARYt\17\0\0\0AT_NON_BOUNDARYt\6\0\0\0AT_ENDt\v\0\0\0AT_END_LINEt\r\0\0\0AT_END_STRINGt\17\0\0\0AT_LOC_BOUNDARYt\23\0\0\0AT_LOC_NON_BOUNDARYt\17\0\0\0AT_UNI_BOUNDARYt\23\0\0\0AT_UNI_NON_BOUNDARYt\16\0\0\0CATEGORY_DIGITt\22\0\0\0CATEGORY_NOT_DIGITt\16\0\0\0CATEGORY_SPACEt\22\0\0\0CATEGORY_NOT_SPACEt\r\0\0\0CATEGORY_WORDt\21\0\0\0CATEGORY_NOT_WORDt\22\0\0\0CATEGORY_LINEBREAKt\26\0\0\0CATEGORY_NOT_LINEBREAKt\21\0\0\0CATEGORY_LOC_WORDt\25\0\0\0CATEGORY_LOC_NOT_WORDt\22\0\0\0CATEGORY_UNI_DIGITt\26\0\0\0CATEGORY_UNI_NOT_DIGITt\22\0\0\0CATEGORY_UNI_SPACEt\26\0\0\0CATEGORY_UNI_NOT_SPACEt\21\0\0\0CATEGORY_UNI_WORDt\25\0\0\0CATEGORY_UNI_NOT_WORDt\26\0\0\0CATEGORY_UNI_LINEBREAKt\32\0\0\0CATEGORY_UNI_NOT_LINEBREAKt\7\0\0\0OPCODESt\7\0\0\0ATCODESt\7\0\0\0CHCODESRH\0\0\0t\t\0\0\0OP_IGNOREt\f\0\0\0AT_MULTILINEt\t\0\0\0AT_LOCALEt\n\0\0\0AT_UNICODEt\t\0\0\0CH_LOCALEt\n\0\0\0CH_UNICODEt\21\0\0\0SRE_FLAG_TEMPLATEt\23\0\0\0SRE_FLAG_IGNORECASEt\17\0\0\0SRE_FLAG_LOCALEt\22\0\0\0SRE_FLAG_MULTILINEt\17\0\0\0SRE_FLAG_DOTALLt\20\0\0\0SRE_FLAG_UNICODEt\20\0\0\0SRE_FLAG_VERBOSEt\16\0\0\0SRE_FLAG_DEBUGt\17\0\0\0SRE_INFO_PREFIXt\20\0\0\0SRE_INFO_LITERALt\20\0\0\0SRE_INFO_CHARSETR\2\0\0\0RU\0\0\0t\4\0\0\0openRQ\0\0\0RO\0\0\0t\5\0\0\0close(\0\0\0\0(\0\0\0\0(\0\0\0\0s#\0\0\0/usr/lib/python2.7/sre_constants.pyt\10\0\0\0<module>\f\0\0\0sZ\1\0\0\6\4\6\2\3\1\24\1\r\1\f\1\21\5\26\5\6\1\6\2\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\3\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\3\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\5\6\2\6\1\6\1\3\1\3\1\3\1\3\1\6\1\t\1\6\1\3\1\3\1\6\1\3\1\3\1\3\1\6\1\3\1\3\1\3\1\3\1\3\1\t\5\f\1\f\1\t\1\t\4\t\1\t\1\t\1\t\1\t\1\6\1\t\3\t\10\f\1\f\1\f\3\3\1\7\1\7\1\7\1\n\3\3\1\7\1\n\3\3\1\7\1\n\3\3\1\7\1\n\3\3\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\n\3\3\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\n\4\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\3\6\1\6\1\6\2\f\1\t\5\17\1\6\16\7\2\21\2\20\1\20\1\20\2\21\1\21\1\21\1\21\1\21\1\21\1\21\2\21\1\21\1\21\2\n\1", 4096) = 2089
27308 read(8, "", 4096)                 = 0
27308 close(8)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 close(7)                          = 0
27308 close(6)                          = 0
27308 close(5)                          = 0
27308 close(4)                          = 0
27308 stat64("/usr/lib/python2.7/_sysconfigdata", 0xbfffd81c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_sysconfigdata.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_sysconfigdata.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_sysconfigdatamodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_sysconfigdata.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661445, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=126, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-15:21:59, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/_sysconfigdata.pyc", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669330, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=279, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(5, "\3\363\r\n\227^\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0s6\0\0\0d\0\0d\1\0l\0\0Z\0\0e\1\0e\0\0d\2\0\203\2\0r(\0d\0\0d\3\0l\2\0Tn\n\0d\0\0d\3\0l\3\0Td\1\0S(\4\0\0\0i\377\377\377\377Nt\20\0\0\0gettotalrefcount(\1\0\0\0t\1\0\0\0*(\4\0\0\0t\3\0\0\0syst\7\0\0\0hasattrt\20\0\0\0_sysconfigdata_dt\21\0\0\0_sysconfigdata_nd(\0\0\0\0(\0\0\0\0(\0\0\0\0s$\0\0\0/usr/lib/python2.7/_sysconfigdata.pyt\10\0\0\0<module>\1\0\0\0s\6\0\0\0\f\2\17\1\r\2", 4096) = 279
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669330, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=279, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(5, "", 4096)                 = 0
27308 close(5)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/_sysconfigdata_nd", 0xbfffd46c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_sysconfigdata_nd.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_sysconfigdata_nd.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_sysconfigdata_ndmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_sysconfigdata_nd.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_sysconfigdata_nd.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/plat-i386-linux-gnu", {st_dev=makedev(8, 1), st_ino=661413, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/22-18:29:54, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 stat64("/usr/lib/python2.7/plat-i386-linux-gnu", {st_dev=makedev(8, 1), st_ino=661413, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/22-18:29:54, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 stat64("/usr/lib/python2.7/plat-i386-linux-gnu/_sysconfigdata_nd", 0xbfffd46c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_sysconfigdata_nd.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_sysconfigdata_nd.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_sysconfigdata_ndmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_sysconfigdata_nd.py", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=662438, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=17156, st_atime=2016/11/27-18:46:42, st_mtime=2015/04/02-16:47:13, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_sysconfigdata_nd.pyc", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669331, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=19985, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(6, "\3\363\r\n\221r\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0s\307\16\0\0i\33\2d\0\0d\1\0006d\0\0d\2\0006d\3\0d\4\0006d\5\0d\6\0006d\7\0d\10\0006d\t\0d\n\0006d\v\0d\f\0006d\r\0d\16\0006d\17\0d\20\0006d\21\0d\22\0006d\23\0d\24\0006d\0\0d\25\0006d\26\0d\27\0006d\30\0d\31\0006d\0\0d\32\0006d\33\0d\34\0006d\35\0d\36\0006d\37\0d \0006d!\0d\"\0006d\30\0d#\0006d$\0d%\0006d&\0d'\0006d(\0d)\0006d*\0d+\0006d(\0d,\0006d-\0d.\0006d/\0d0\0006d\30\0d1\0006d2\0d3\0006d4\0d5\0006d6\0d7\0006d8\0d9\0006d:\0d;\0006d<\0d=\0006d>\0d?\0006d\0\0d@\0006d\30\0dA\0006dB\0dC\0006d\35\0dD\0006d\30\0dE\0006dF\0dG\0006dH\0dI\0006dJ\0dK\0006dL\0dM\0006dN\0dO\0006dP\0dQ\0006d\30\0dR\0006d\0\0dS\0006d\0\0dT\0006dU\0dV\0006dW\0dX\0006dU\0dY\0006dZ\0d[\0006d\30\0d\\\0006dH\0d]\0006d\30\0d^\0006d\30\0d_\0006d\30\0d`\0006da\0db\0006d\0\0dc\0006d\0\0dd\0006d\0\0de\0006df\0dg\0006dh\0di\0006dj\0dk\0006dl\0dm\0006dn\0do\0006dU\0dp\0006dU\0dq\0006dU\0dr\0006dU\0ds\0006d\0\0dt\0006dU\0du\0006dU\0dv\0006dU\0dw\0006d\0\0dx\0006dU\0dy\0006dU\0dz\0006d\0\0d{\0006d\0\0d|\0006d\0\0d}\0006d\0\0d~\0006d\0\0d\177\0006d\0\0d\200\0006d\0\0d\201\0006d\0\0d\202\0006dU\0d\203\0006d\0\0d\204\0006dU\0d\205\0006dU\0d\206\0006dU\0d\207\0006dU\0d\210\0006d\0\0d\211\0006dU\0d\212\0006dU\0d\213\0006d\0\0d\214\0006dU\0d\215\0006dU\0d\216\0006dU\0d\217\0006dU\0d\220\0006dU\0d\221\0006dU\0d\222\0006dU\0d\223\0006d\0\0d\224\0006dU\0d\225\0006d\0\0d\226\0006dU\0d\227\0006d\0\0d\230\0006dU\0d\231\0006dU\0d\232\0006dU\0d\233\0006dU\0d\234\0006dU\0d\235\0006dU\0d\236\0006dU\0d\237\0006dU\0d\240\0006dU\0d\241\0006dU\0d\242\0006dU\0d\243\0006dU\0d\244\0006dU\0d\245\0006dU\0d\246\0006dU\0d\247\0006dU\0d\250\0006dU\0d\251\0006dU\0d\252\0006dU\0d\253\0006dU\0d\254\0006dU\0d\255\0006d\0\0d\256\0006dU\0d\257\0006dU\0d\260\0006dU\0d\261\0006d\0\0d\262\0006dU\0d\263\0006dU\0d\264\0006dU\0d\265\0006dU\0d\266\0006dU\0d\267\0006dU\0d\270\0006dU\0d\271\0006dU\0d\272\0006dU\0d\273\0006d\0\0d\274\0006dU\0d\275\0006d\0\0d\276\0006dU\0d\277\0006d\0\0d\300\0006d\0\0d\301\0006dU\0d\302\0006dU\0d\303\0006dU\0d\304\0006dU\0d\305\0006dU\0d\306\0006dU\0d\307\0006dU\0d\310\0006dU\0d\311\0006dU\0d\312\0006dU\0d\313\0006dU\0d\314\0006dU\0d\315\0006dU\0d\316\0006dU\0d\317\0006dU\0d\320\0006dU\0d\321\0006dU\0d\322\0006dU\0d\323\0006dU\0d\324\0006dU\0d\325\0006dU\0d\326\0006dU\0d\327\0006d\0\0d\330\0006dU\0d\331\0006dU\0d\332\0006dU\0d\333\0006dU\0d\334\0006dU\0d\335\0006dU\0d\336\0006d\0\0d\337\0006dU\0d\340\0006dU\0d\341\0006d\0\0d\342\0006dU\0d\343\0006dU\0d\344\0006d\0\0d\345\0006d\0\0d\346\0006dU\0d\347\0006dU\0d\350\0006dU\0d\351\0006d\0\0d\352\0006d\0\0d\353\0006dU\0d\354\0006dU\0d\355\0006d\0\0d\356\0006d\0\0d\357\0006dU\0d\360\0006dU\0d\361\0006dU\0d\362\0006dU\0d\363\0006dU\0d\364\0006dU\0d\365\0006dU\0d\366\0006dU\0d\367\0006dU\0d\370\0006dU\0d\371\0006dU\0d\372\0006dU\0d\373\0006dU\0d\374\0006dU\0d\375\0006dU\0d\376\0006dU\0d\377\0006d\0\0d\0\0016dU\0d\1\0016dU\0d\2\0016dU\0d\3\0016d\0\0d\4\0016dU\0d\5\0016dU\0d\6\0016d\0\0d\7\0016dU\0d\10\0016dU\0d\t\0016d\0\0d\n\0016dU\0d\v\0016d\0\0d\f\0016dU\0d\r\0016d\0\0d\16\0016dU\0d\17\0016d\0\0d\20\0016dU\0d\21\0016dU\0d\22\0016dU\0d\23\0016dU\0d\24\0016dU\0d\25\0016dU\0d\26\0016dU\0d\27\0016dU\0d\30\0016dU\0d\31\0016dU\0d\32\0016dU\0d\33\0016dU\0d\34\0016dU\0d\35\0016dU\0d\36\0016dU\0d\37\0016dU\0d \0016dU\0d!\0016dU\0d\"\0016dU\0d#\0016dU\0d$\0016dU\0d%\0016dU\0d&\0016dU\0d'\0016dU\0d(\0016dU\0d)\0016dU\0d*\0016dU\0d+\0016dU\0d,\0016dU\0d-\0016dU\0d.\0016dU\0d/\0016dU\0d0\0016dU\0d1\0016dU\0d2\0016dU\0d3\0016dU\0d4\0016dU\0d5\0016dU\0d6\0016dU\0d7\0016dU\0d8\0016d\0\0d9\0016dU\0d:\0016dU\0d;\0016dU\0d<\0016dU\0d=\0016dU\0d>\0016dU\0d?\0016d\0\0d@\0016dU\0dA\0016dU\0dB\0016dU\0dC\0016dU\0dD\0016dU\0dE\0016dU\0dF\0016dU\0dG\0016dU\0dH\0016d\0\0dI\0016dU\0dJ\0016dU\0dK\0016d\0\0dL\0016d\0\0dM\0016dU\0dN\0016dU\0dO\0016dU\0dP\0016dU\0dQ\0016dU\0dR\0016dU\0dS\0016d\0\0dT\0016d\0\0dU\0016d\0\0dV\0016dU\0dW\0016d\0\0dX\0016dU\0dY\0016d\0\0dZ\0016d\0\0d[\0016d\0\0d\\\0016d\0\0d]\0016d\0\0d^\0016dU\0d_\0016dU\0d`\0016dU\0da\0016dU\0db\0016dU\0dc\0016dU\0dd\0016dU\0de\0016d\0\0df\0016dU\0dg\0016dU\0dh\0016dU\0di\0016dU\0dj\0016dU\0dk\0016dU\0dl\0016dU\0dm\0016dU\0dn\0016dU\0do\0016dU\0dp\0016dU\0dq\0016dU\0dr\0016d\0\0ds\0016dU\0dt\0016dU\0du\0016dU\0dv\0016dU\0dw\0016dU\0dx\0016dU\0dy\0016dU\0dz\0016d\0\0d{\0016d\0\0d|\0016dU\0d}\0016dU\0d~\0016dU\0d\177\0016dU\0d\200\0016dU\0d\201\0016dU\0d\202\0016d\0\0d\203\0016d\0\0d\204\0016dU\0d\205\0016dU\0d\206\0016dU\0d\207\0016dU\0d\210\0016dU\0d\211\0016dU\0d\212\0016dU\0d\213\0016dU\0d\214\0016dU\0d\215\0016d\0\0d\216\0016d\30\0d\217\0016d\30\0d\220\0016d\30\0d\221\0016d\222\1d\223\0016d\0\0d\224\0016d\225\1d\226\0016d6\0d\227\0016d8\0d\230\0016d\231\1d\232\0016d\233\1d\234\0016d\231\1d\235\0016d\231\1d\236\0016d\237\1d\240\0016d\241\1d\242\0016d\243\1d\244\0016d2\0d\245\0016d\30\0d\246\0016d\247\1d\250\0016d\30\0d\251\0016d!\0d\252\0016d\30\0d\253\0016d\35\0d\254\0016d\255\1d\256\0016d\30\0d\257\0016d\260\1d\261\0016d\262\1d\263\0016d\30\0d\264\0016d\35\0d\265\0016d\266\1d\267\0016d\270\1d\271\0016d\272\1d\273\0016d\274\1d\275\0016d\276\1d\277\0016d\300\1d\301\0016d&\0d\302\0016d\303\1d\304\0016d\305\1d\306\0016d\307\1d\310\0016d\311\1d\312\0016d\313\1d\314\0016d\315\1d\316\0016d\30\0d\317\0016d\35\0d\320\0016d\0\0d\321\0016d\30\0d\322\0016d&\0d\323\0016d\0\0d\324\0016d\0\0d\325\0016d\326\1d\327\0016d\330\1d\331\0016d\332\1d\333\0016d\334\1d\335\0016d\307\1d\336\0016d\337\1d\340\0016d\274\1d\341\0016d\342\1d\343\0016dU\0d\344\0016d\274\1d\345\0016d\346\1d\347\0016d\350\1d\351\0016d\30\0d\352\0016d\0\0d\353\0016d\0\0d\354\0016d\0\0d\355\0016d\0\0d\356\0016d\0\0d\357\0016d\0\0d\360\0016d\274\1d\361\0016d\362\1d\363\0016d\364\1d\365\0016d\366\1d\367\0016d\366\1d\370\0016d\274\1d\371\0016d\274\1d\372\0016d\315\1d\373\0016d\374\1d\375\0016d\376\1d\377\0016d\274\1d\0\0026d\0\0d\1\0026d\2\2d\3\0026d\274\1d\4\0026dU\0d\5\0026d\30\0d\6\0026d\0\0d\7\0026d$\0d\10\0026d\30\0d\t\0026d\n\2d\v\0026d\30\0d\f\0026d\30\0d\r\0026d:\0d\16\0026d\17\2d\20\0026d\274\1d\21\0026d\274\1d\22\0026d*\0d\23\0026d\24\2d\25\0026d<\0d\26\0026d\27\2d\30\0026d\31\2d\32\0026d2\0d\33\0026d\34\2d\35\0026d\0\0d\36\0026dU\0d\37\0026d \2d!\0026dU\0d\"\0026d#\2d$\0026d%\2d&\0026d'\2d(\0026d)\2d*\0026d+\2d,\0026d\255\1d-\0026d\0\0d.\0026d\30\0d/\0026d0\2d1\0026d\276\1d2\0026d3\2d4\0026d\30\0d5\0026d\0\0d6\0026d\30\0d7\0026d8\2d9\0026d \2d:\0026d;\2d<\0026d \2d=\0026d \2d>\0026d?\2d@\0026d8\2dA\0026d8\2dB\0026d \2dC\0026d \2dD\0026dE\2dF\0026d \2dG\0026d \2dH\0026d \2dI\0026d \2dJ\0026d \2dK\0026dU\0dL\0026dM\2dN\0026dO\2dP\0026dQ\2dR\0026dU\0dS\0026dT\2dU\0026d\274\1dV\0026d\30\0dW\0026dX\2dY\0026dZ\2d[\0026d\260\1d\\\0026dU\0d]\0026dU\0d^\0026d\30\0d_\0026d\30\0d`\0026da\2db\0026d\30\0dc\0026dd\2de\0026df\2dg\0026d\30\0dh\0026di\2dj\0026dU\0dk\0026dl\2dm\0026d\0\0dn\0026do\2dp\0026d\30\0dq\0026d\0\0dr\0026d\0\0ds\0026dt\2du\0026dv\2dw\0026dU\0dx\0026d\0\0dy\0026dU\0dz\0026dU\0d{\0026d\0\0d|\0026d\0\0d}\0026d\0\0d~\0026dU\0d\177\0026dU\0d\200\0026d\0\0d\201\0026d\0\0d\202\0026dU\0d\203\0026d\204\2d\205\0026d\206\2d\207\0026d\210\2d\211\0026d\222\1d\212\0026d\213\2d\214\0026d\215\2d\216\0026d\222\1d\217\0026d\215\2d\220\0026dv\2d\221\0026Z\0\0d\222\2S(\223\2\0\0i\0\0\0\0t\30\0\0\0AC_APPLE_UNIVERSAL_BUILDt\25\0\0\0AIX_GENUINE_CPLUSPLUSs\25\0\0\0i686-linux-gnu-gcc-art\2\0\0\0ARt\2\0\0\0rct\7\0\0\0ARFLAGSs\23\0\0\0../Parser/asdl_c.pyt\7\0\0\0ASDLGENs%\0\0\0../Parser/asdl.py ../Parser/asdl_c.pyt\r\0\0\0ASDLGEN_FILESs\25\0\0\0../Parser/Python.asdlt\10\0\0\0AST_ASDLs\23\0\0\0Python/Python-ast.ct\5\0\0\0AS", 4096) = 4096
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669331, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=19985, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(6, "T_Ct\6\0\0\0Pythont\t\0\0\0AST_C_DIRs\24\0\0\0Include/Python-ast.ht\5\0\0\0AST_Ht\7\0\0\0Includet\t\0\0\0AST_H_DIRt\16\0\0\0ATHEOS_THREADSs\24\0\0\0-fno-strict-aliasingt\n\0\0\0BASECFLAGSt\0\0\0\0t\v\0\0\0BASEMODLIBSt\f\0\0\0BEOS_THREADSs\10\0\0\0/usr/bint\6\0\0\0BINDIRs\22\0\0\0/usr/lib/python2.7t\n\0\0\0BINLIBDESTs\17\0\0\0-L. -lpython2.7t\n\0\0\0BLDLIBRARYs\4\1\0\0i686-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-security  t\t\0\0\0BLDSHAREDt\10\0\0\0BUILDEXEt\6\0\0\0pythont\v\0\0\0BUILDPYTHONs\33\0\0\0i686-linux-gnu-gcc -pthreadt\2\0\0\0CCs\5\0\0\0-fPICt\10\0\0\0CCSHAREDs\231\0\0\0-fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-security  t\6\0\0\0CFLAGSt\17\0\0\0CFLAGSFORSHAREDs?\0\0\0configure configure.ac acconfig.h pyconfig.h.in Makefile.pre.int\v\0\0\0CONFIGFILESsP\0\0\0-D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-securityt\20\0\0\0CONFIGURE_CFLAGSt\22\0\0\0CONFIGURE_CPPFLAGSs%\0\0\0-Wl,-Bsymbolic-functions -Wl,-z,relrot\21\0\0\0CONFIGURE_LDFLAGSsD\1\0\0'--enable-shared' '--prefix=/usr' '--enable-ipv6' '--enable-unicode=ucs4' '--with-dbmliborder=bdb:gdbm' '--with-system-expat' '--with-system-ffi' '--with-fpectl' 'CC=i686-linux-gnu-gcc' 'CFLAGS=-D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-security ' 'LDFLAGS=-Wl,-Bsymbolic-functions -Wl,-z,relro't\v\0\0\0CONFIG_ARGSs\f\0\0\0/usr/includet\16\0\0\0CONFINCLUDEDIRs\26\0\0\0/usr/include/python2.7t\r\0\0\0CONFINCLUDEPYs#\0\0\0:plat-i386-linux-gnu:lib-tk:lib-oldt\16\0\0\0COREPYTHONPATHs\32\0\0\0-I. -IInclude -I../Includet\10\0\0\0CPPFLAGSs\f\0\0\0c++ -pthreadt\3\0\0\0CXXt\t\0\0\0C_THREADSt\t\0\0\0DEBUG_EXTs?\0\0\0/usr /usr/lib /usr/lib/python2.7 /usr/lib/python2.7/lib-dynloadt\10\0\0\0DESTDIRSt\7\0\0\0DESTLIBt\10\0\0\0DESTPATHs\36\0\0\0/usr/lib/python2.7/lib-dynloadt\n\0\0\0DESTSHAREDi\363\2\0\0t\7\0\0\0DIRMODEsp\0\0\0README ChangeLog configure configure.ac acconfig.h pyconfig.h.in Makefile.pre.in Include Lib Misc Demo Ext-dummyt\4\0\0\0DISTs\37\0\0\0Include Lib Misc Demo Ext-dummyt\10\0\0\0DISTDIRSsP\0\0\0README ChangeLog configure configure.ac acconfig.h pyconfig.h.in Makefile.pre.int\t\0\0\0DISTFILESt\1\0\0\0.t\t\0\0\0DLINCLDIRt\n\0\0\0DLLLIBRARYt\"\0\0\0DOUBLE_IS_ARM_MIXED_ENDIAN_IEEE754t\34\0\0\0DOUBLE_IS_BIG_ENDIAN_IEEE754i\1\0\0\0t\37\0\0\0DOUBLE_IS_LITTLE_ENDIAN_IEEE754s\17\0\0\0dynload_shlib.ot\v\0\0\0DYNLOADFILEt\v\0\0\0ENABLE_IPV6t\2\0\0\0not\t\0\0\0ENSUREPIPt\3\0\0\0EXEt\7\0\0\0EXEMODEt\20\0\0\0EXTRAMACHDEPPATHt\f\0\0\0EXTRAPLATDIRt\r\0\0\0EXTRATESTOPTSi\204\2\0\0t\10\0\0\0FILEMODEt\22\0\0\0FLOCK_NEEDS_LIBBSDt\20\0\0\0GETPGRP_HAVE_ARGt\22\0\0\0GETTIMEOFDAY_NO_TZs\21\0\0\0-Dclear=__GLcleart\6\0\0\0GLHACKt\3\0\0\0yest\5\0\0\0GNULDs\21\0\0\0Python/graminit.ct\t\0\0\0GRAMMAR_Cs\22\0\0\0Include/graminit.ht\t\0\0\0GRAMMAR_Hs\22\0\0\0../Grammar/Grammart\r\0\0\0GRAMMAR_INPUTt\n\0\0\0HAVE_ACOSHt\r\0\0\0HAVE_ADDRINFOt\n\0\0\0HAVE_ALARMt\r\0\0\0HAVE_ALLOCA_Ht\f\0\0\0HAVE_ALTZONEt\n\0\0\0HAVE_ASINHt\20\0\0\0HAVE_ASM_TYPES_Ht\n\0\0\0HAVE_ATANHt \0\0\0HAVE_ATTRIBUTE_FORMAT_PARSETUPLEt\34\0\0\0HAVE_BIND_TEXTDOMAIN_CODESETt\32\0\0\0HAVE_BLUETOOTH_BLUETOOTH_Ht\20\0\0\0HAVE_BLUETOOTH_Ht\20\0\0\0HAVE_BROKEN_NICEt\24\0\0\0HAVE_BROKEN_PIPE_BUFt\20\0\0\0HAVE_BROKEN_POLLt\34\0\0\0HAVE_BROKEN_POSIX_SEMAPHORESt\33\0\0\0HAVE_BROKEN_PTHREAD_SIGMASKt\30\0\0\0HAVE_BROKEN_SEM_GETVALUEt\24\0\0\0HAVE_BROKEN_UNSETENVt\r\0\0\0HAVE_C99_BOOLt\f\0\0\0HAVE_CHFLAGSt\n\0\0\0HAVE_CHOWNt\v\0\0\0HAVE_CHROOTt\n\0\0\0HAVE_CLOCKt\f\0\0\0HAVE_CONFSTRt\f\0\0\0HAVE_CONIO_Ht\r\0\0\0HAVE_COPYSIGNt\f\0\0\0HAVE_CTERMIDt\16\0\0\0HAVE_CTERMID_Rt\r\0\0\0HAVE_CURSES_Ht\33\0\0\0HAVE_CURSES_IS_TERM_RESIZEDt\26\0\0\0HAVE_CURSES_RESIZETERMt\27\0\0\0HAVE_CURSES_RESIZE_TERMt\22\0\0\0HAVE_DECL_ISFINITEt\17\0\0\0HAVE_DECL_ISINFt\17\0\0\0HAVE_DECL_ISNANt\20\0\0\0HAVE_DECL_TZNAMEt\22\0\0\0HAVE_DEVICE_MACROSt\f\0\0\0HAVE_DEV_PTCt\r\0\0\0HAVE_DEV_PTMXt\r\0\0\0HAVE_DIRECT_Ht\r\0\0\0HAVE_DIRENT_Ht\f\0\0\0HAVE_DLFCN_Ht\v\0\0\0HAVE_DLOPENt\t\0\0\0HAVE_DUP2t\24\0\0\0HAVE_DYNAMIC_LOADINGt\n\0\0\0HAVE_EPOLLt\10\0\0\0HAVE_ERFt\t\0\0\0HAVE_ERFCt\f\0\0\0HAVE_ERRNO_Ht\n\0\0\0HAVE_EXECVt\n\0\0\0HAVE_EXPM1t\v\0\0\0HAVE_FCHDIRt\v\0\0\0HAVE_FCHMODt\v\0\0\0HAVE_FCHOWNt\f\0\0\0HAVE_FCNTL_Ht\16\0\0\0HAVE_FDATASYNCt\v\0\0\0HAVE_FINITEt\n\0\0\0HAVE_FLOCKt\t\0\0\0HAVE_FORKt\f\0\0\0HAVE_FORKPTYt\16\0\0\0HAVE_FPATHCONFt\f\0\0\0HAVE_FSEEK64t\v\0\0\0HAVE_FSEEKOt\r\0\0\0HAVE_FSTATVFSt\n\0\0\0HAVE_FSYNCt\f\0\0\0HAVE_FTELL64t\v\0\0\0HAVE_FTELLOt\n\0\0\0HAVE_FTIMEt\16\0\0\0HAVE_FTRUNCATEt\21\0\0\0HAVE_GAI_STRERRORt\n\0\0\0HAVE_GAMMAt\24\0\0\0HAVE_GCC_ASM_FOR_X87t\20\0\0\0HAVE_GETADDRINFOt\v\0\0\0HAVE_GETCWDt\22\0\0\0HAVE_GETC_UNLOCKEDt\17\0\0\0HAVE_GETENTROPYt\16\0\0\0HAVE_GETGROUPSt\22\0\0\0HAVE_GETHOSTBYNAMEt\24\0\0\0HAVE_GETHOSTBYNAME_Rt\32\0\0\0HAVE_GETHOSTBYNAME_R_3_ARGt\32\0\0\0HAVE_GETHOSTBYNAME_R_5_ARGt\32\0\0\0HAVE_GETHOSTBYNAME_R_6_ARGt\16\0\0\0HAVE_GETITIMERt\17\0\0\0HAVE_GETLOADAVGt\r\0\0\0HAVE_GETLOGINt\20\0\0\0HAVE_GETNAMEINFOt\20\0\0\0HAVE_GETPAGESIZEt\20\0\0\0HAVE_GETPEERNAMEt\f\0\0\0HAVE_GETPGIDt\f\0\0\0HAVE_GETPGRPt\v\0\0\0HAVE_GETPIDt\20\0\0\0HAVE_GETPRIORITYt\r\0\0\0HAVE_GETPWENTt\16\0\0\0HAVE_GETRESGIDt\16\0\0\0HAVE_GETRESUIDt\v\0\0\0HAVE_GETSIDt\r\0\0\0HAVE_GETSPENTt\r\0\0\0HAVE_GETSPNAMt\21\0\0\0HAVE_GETTIMEOFDAYt\n\0\0\0HAVE_GETWDt\n\0\0\0HAVE_GRP_Ht\16\0\0\0HAVE_HSTRERRORt\n\0\0\0HAVE_HYPOTt\r\0\0\0HAVE_IEEEFP_Ht\16\0\0\0HAVE_INET_ATONt\16\0\0\0HAVE_INET_PTONt\17\0\0\0HAVE_INITGROUPSt\f\0\0\0HAVE_INT32_Tt\f\0\0\0HAVE_INT64_Tt\17\0\0\0HAVE_INTTYPES_Ht\t\0\0\0HAVE_IO_Ht\t\0\0\0HAVE_KILLt\v\0\0\0HAVE_KILLPGt\v\0\0\0HAVE_KQUEUEt\17\0\0\0HAVE_LANGINFO_Ht\26\0\0\0HAVE_LARGEFILE_SUPPORTt\r\0\0\0HAVE_LCHFLAGSt\v\0\0\0HAVE_LCHMODt\v\0\0\0HAVE_LCHOWNt\v\0\0\0HAVE_LGAMMAt\n\0\0\0HAVE_LIBDLt\v\0\0\0HAVE_LIBDLDt\f\0\0\0HAVE_LIBIEEEt\16\0\0\0HAVE_LIBINTL_Ht\20\0\0\0HAVE_LIBREADLINEt\16\0\0\0HAVE_LIBRESOLVt\16\0\0\0HAVE_LIBUTIL_Ht\t\0\0\0HAVE_LINKt\24\0\0\0HAVE_LINUX_NETLINK_Ht\21\0\0\0HAVE_LINUX_TIPC_Ht\n\0\0\0HAVE_LOG1Pt\20\0\0\0HAVE_LONG_DOUBLEt\16\0\0\0HAVE_LONG_LONGt\n\0\0\0HAVE_LSTATt\f\0\0\0HAVE_MAKEDEVt\f\0\0\0HAVE_MEMMOVEt\r\0\0\0HAVE_MEMORY_Ht\v\0\0\0HAVE_MKFIFOt\n\0\0\0HAVE_MKNODt\v\0\0\0HAVE_MKTIMEt\t\0\0\0HAVE_MMAPt\v\0\0\0HAVE_MREMAPt\16\0\0\0HAVE_NCURSES_Ht\v\0\0\0HAVE_NDIR_Ht\27\0\0\0HAVE_NETPACKET_PACKET_Ht\t\0\0\0HAVE_NICEt\f\0\0\0HAVE_OPENPTYt\17\0\0\0HAVE_OSX105_SDKt\r\0\0\0HAVE_PATHCONFt\n\0\0\0HAVE_PAUSEt\n\0\0\0HAVE_PLOCKt\t\0\0\0HAVE_POLLt\v\0\0\0HAVE_POLL_Ht\16\0\0\0HAVE_PROCESS_Ht\17\0\0\0HAVE_PROTOTYPESt\10\0\0\0HAVE_PTHt\23\0\0\0HAVE_PTHREAD_ATFORKt\27\0\0\0HAVE_PTHREAD_DESTRUCTORt\16\0\0\0HAVE_PTHREAD_Ht\21\0\0\0HAVE_PTHREAD_INITt\24\0\0\0HAVE_PTHREAD_SIGMASKt\n\0\0\0HAVE_PTY_Ht\v\0\0\0HAVE_PUTENVt\r\0\0\0HAVE_RAND_EGDt\r\0\0\0HAVE_READLINKt\r\0\0\0HAVE_REALPATHt\20\0\0\0HAVE_RL_CALLBACKt\24\0\0\0HAVE_RL_CATCH_SIGNALt#\0\0\0HAVE_RL_COMPLETION_APPEND_CHARACTERt'\0\0\0HAVE_RL_COMPLETION_DISPLAY_MATCHES_HOOKt\32\0\0\0HAVE_RL_COMPLETION_MATCHESt\"\0\0\0HAVE_RL_COMPLETION_SUPPRESS_APPENDt\26\0\0\0HAVE_RL_PRE_INPUT_HOOKt\n\0\0\0HAVE_ROUNDt\v\0\0\0HAVE_SELECTt\21\0\0\0HAVE_SEM_GETVALUEt\r\0\0\0HAVE_SEM_OPENt\22\0\0\0HAVE_SEM_TIMEDWAITt\17\0\0\0HAVE_SEM_UNLINKt\f\0\0\0HAVE_SETEGIDt\f\0\0\0HAVE_SETEUIDt\v\0\0\0HAVE_SETGIDt\16\0\0\0HAVE_SETGROUPSt\16\0\0\0HAVE_SETITIMERt\16\0\0\0HAVE_SETLOCALEt\f\0\0\0HAVE_SETPGIDt\f\0\0\0HAVE_SETPGRPt\r\0\0\0HAVE_SETREGIDt\16\0\0\0HAVE_SETRESGIDt\16\0\0\0HAVE_SETRESUIDt\r\0\0\0HAVE_SETREUIDt\v\0\0\0HAVE_SETSIDt\v\0\0\0HAVE_SETUIDt\f\0\0\0HAVE_SETVBUFt\r\0\0\0HAVE_SHADOW_Ht\16\0\0\0HAVE_SIGACTIONt\21\0\0\0HAVE_SIGINTERRUPTt\r\0\0\0HAVE_SIGNAL_Ht\r\0\0\0HAVE_SIGRELSEt\r\0\0\0HAVE_SNPRINTFt\24\0\0\0HAVE_SOCKADDR_SA_LENt\25\0\0\0HAVE_SOCKADDR_STORAGEt\17\0\0\0HAVE_SOCKETPAIRt\f\0\0\0HAVE_SPAWN_Ht\f\0\0\0HAVE_SSIZE_Tt\f\0\0\0HAVE_STATVFSt\21\0\0\0HAVE_STAT_TV_NSECt\22\0\0\0HAVE_STAT_TV_NSEC2t\26\0\0\0HAVE_STDARG_PROTOTYPESt\r\0\0\0HAVE_STDINT_Ht\r\0\0\0HAVE_STDLIB_Ht\v\0\0\0HAVE_STRDUPt\r\0\0\0HAVE_STRFTIMEt\16\0\0\0HAVE_STRINGS_Ht\r\0\0\0HAVE_STRING_Ht\16\0\0\0HAVE_STROPTS_Ht\35\0\0\0HAVE_STRUCT_STAT_ST_BIRTHTIMEt\33\0\0\0HAVE_STRUCT_STAT_ST_BLKSIZEt\32\0\0\0HAVE_STRUCT_STAT_ST_BLOCKSt\31\0\0\0HAVE_STRUCT_STAT_ST_FLAGSt\27\0\0\0HAVE_STRUCT_STAT_ST_GENt\30\0\0\0HAVE_STRUCT_STAT_ST_RDEVt\26\0\0\0HAVE_STRUCT_TM_TM_ZONEt\16\0\0\0HAVE_ST_BLOCKSt\f\0\0\0HAVE_SYMLINKt\f\0\0\0HAVE_SYSCONFt\17\0\0\0HAVE_SYSEXITS_Ht\22\0\0\0HAVE_SYS_AUDIOIO_Ht\21\0\0\0HAVE_SYS_BSDTTY_Ht\16\0\0\0HAVE_SYS_DIR_Ht\20\0\0\0HAVE_SYS_EPOLL_Ht\20\0\0\0HAVE_SYS_EVENT_Ht\17\0\0\0HAVE_SYS_FILE_Ht\22\0\0\0HAVE_SYS_LOADAVG_Ht\17\0\0\0HAVE_SYS_LOCK_Ht\20\0\0\0HAVE_SYS_MKDEV_Ht\20\0\0\0HAVE_SYS_MODEM_Ht\17\0\0\0HAVE_SYS_NDIR_Ht\20\0\0\0HAVE_SYS_PARAM_Ht\17\0\0\0HAVE_SYS_POLL_Ht\23\0\0\0HAVE_SYS_RESOURCE_Ht\21\0\0\0HAVE_SYS_SELECT_Ht\21\0\0\0HAVE_SYS_SOCKET_Ht\22\0\0\0HAVE_SYS_STATVFS_Ht\17\0\0\0HAVE_SYS_STAT_Ht\21\0\0\0HAVE_SYS_TERMIO_Ht\20\0\0\0HAVE_SYS_TIMES_Ht\17\0\0\0HAVE_SYS_TIME_Ht\20\0\0\0HAVE_SYS_TYPES_Ht\r\0\0\0HAVE_SYS_UN_Ht\22\0\0\0HAVE_SYS_UTSNAME_Ht\17\0\0\0HAVE_SYS_WAIT_Ht\16\0\0\0HAVE_TCGETPGRPt\16\0\0\0HAVE_TCSETPGRPt\f\0\0\0HAVE_TEMPNAMt\16\0\0\0HAVE_TERMIOS_Ht\v\0\0\0HAVE_TERM_Ht\v\0\0\0HAVE_TGAMMAt\r\0\0\0HAVE_THREAD_Ht\v\0\0\0HAVE_TIMEGMt\n\0\0\0HAVE_TIMESt\f\0\0\0HAVE_TMPFILEt\v\0\0\0HAVE_TMPNAMt\r\0\0\0HAVE_TMPNAM_Rt\f\0\0\0HAVE_TM_ZONEt\r\0\0\0HAVE_TRUNCATEt\v\0\0\0HAVE_TZNAMEt\r\0\0\0HAVE_UCS4_TCLt\r\0\0\0HAVE_UINT32_Tt\r\0\0\0HAVE_UINT64_Tt\16\0\0\0HAVE_UINTPTR_Tt\n\0\0\0HAVE_UNAMEt\r\0\0\0HAVE_UNISTD_Ht\r\0\0\0HAVE_UNSETENVt\23\0\0\0HAVE_USABLE_WCHAR_Tt\v\0\0\0HAVE_UTIL_Ht\v\0\0\0HAVE_UTIMESt\f\0\0\0HAVE_UTIME_Ht\n\0\0\0HAVE_WAIT3t\n\0\0\0HAVE_WAIT4t\f\0\0\0HAVE_WAITPIDt\f\0\0\0HAVE_WCHAR_Ht\f\0\0\0HAVE_WCSCOLLt\22\0\0\0HAVE_WORKING_TZSETt\16\0\0\0HAVE_ZLIB_COPYt\f\0\0\0HAVE__GETPTYt\10\0\0\0HGBRANCHt\5\0\0\0HGTAGt\t\0\0\0HGVERSIONs\21\0\0\0i686-pc-linux-gnut\r\0\0\0HOST_GNU_TYPEt\16\0\0\0HURD_C_THREADSsG\0\0\0/usr/include /usr/include /usr/include/python2.7 /usr/include/python2.7t\16\0\0\0INCLDIRSTOMAKEt\n\0\0\0INCLUDEDIRt\t\0\0\0INCLUDEPYs\23\0\0\0/usr/bin/install -ct\7\0\0\0INSTALLs\32\0\0\0/usr/bin/install -c -m 644t\f\0\0\0INSTALL_DATAt\17\0\0\0INSTALL_PROGRAMt\16\0\0\0INSTALL_SCRIPTs\32\0\0\0/usr/bin/install -c -m 555t\16\0\0\0INSTALL_SHAREDs\23\0\0\0libpython2.7.so.1.0t\n\0\0\0INSTSONAMEs5\0\0\0c++ -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functionst\v\0\0\0LDCXXSHAREDt\7\0\0\0LDFLAGSt\6\0\0\0LDLASTs\17\0\0\0libpython2.7.sot\t\0\0\0LDLIBRARYt\f\0\0\0LDLIBRARYDIRt\10\0\0\0LDSHAREDt\4\0\0\0LIBCt\7\0\0\0LIBDESTs\10\0\0\0/usr/libt\6\0\0\0LIBDIRt\21\0\0\0LIBFFI_INCLUDEDIRs\3\0\0\0-lmt\4\0\0\0LIBMs\7\0\0\0Python/t\t\0\0\0LIBOBJDIRt\7\0\0\0LIBOBJSt\4\0\0\0LIBPs!\0\0\0/usr/lib/i386-linux-gnu/pkgconfigt\5\0\0\0LIBPCs(\0\0\0/usr/lib/python2.7/config-i386-linux-gnut\5\0\0\0LIBPLs\16\0\0\0libpython2.7.at\7\0\0\0LIBRARYs\1\0\0\0\\t\f\0\0\0LIBRARY_OBJSs\26\0\0\0-lpthread -ldl  -lutilt\4\0\0\0LIBSs-\0\0\0lib-tk lib-tk/test lib-tk/test/test_tkinter \\t\n\0\0\0LIBSUBDIRSt\6\0\0\0LINKCCs9\0\0\0-Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functionst\r\0\0\0LINKFORSHAREDt\2\0\0\0lnt\2\0\0\0LNs\16\0\0\0-L/usr/lib -lzt\f\0\0\0LOCALMODLIBSt\6\0\0\0linux2t\7\0\0\0MACHDEPs\24\0\0\0:plat-i386-linux-gnut\v\0\0\0MACHDEPPATHs\23\0\0\0plat-i386-linux-gnut\10\0\0\0MACHDEPSt\f\0\0\0MACHDEP_OBJSt\v\0\0\0MACHDESTLIBt\16\0\0\0MACH_C_THREADSt\30\0\0\0MACOSX_DEPLOYMENT_TARGETt\6\0\0\0MAINCCt\16\0\0\0MAJOR_IN_MKDEVt\22\0\0\0MAJOR_IN_SYSMACROSs\24\0\0\0../Modules/makesetupt\t\0\0\0MAKESETUPs\16\0\0\0/usr/share/mant\6\0\0\0MANDIRsQ\0\0\0-l -x test_subprocess test_io test_lib2to3 \\ -x test_dl test___all__ test_fork1 \\t\v\0\0\0MEMTESTOPTSs\r\0\0\0/bin/mkdir -pt\7\0\0\0MKDIR_Pt\7\0\0\0MODLIBSs^\4\0\0Modules/threadmodule.o  Modules/signalmodule.o  Modules/arraymodule.o  Modules/cmathmodule.o  Modules/mathmodule.o Modules/_math.o  Modules/_struct.o  Modules/timemodule.o  Modules/operator.o  Modules/_randommodule.o  Modules/_collectionsmodule.o  Modules/_heapqmodule.o  Modules/itertoolsmodule.o  Modules/stropmodule.o  Modules/_functoolsmodule.o  Modules/datetimemodule.o  Modules/_bisectmodule.o  Modules/unicodedata.o  Modules/_localemodule.o  Modules/bufferedio.o Modules/bytesio.o Modules/fileio.o Modules/iobase.o Modules/_iomodule.o Modules/stringio.o Modules/textio.o  Modules/fcntlmodule.o  Modules/spwdmodule.o  Modules/grpmodule.o  Modules/selectmodule.o  Modules/socketmodule.o Modules/timemodule.o  Modules/md5module.o Modules/md5.o  Modules/shamodule.o  Modules/sha256module.o  Modules/sha512module.o  Modules/syslogmodule.o  Modules/binascii.o  Modules/cStringIO.o  Modules/cPickle.o  Modules/zlibmodule.o  Modules/posixmodule.o  Modules/errnomodule.o  Modules/pwdmodule.o  Modules/_sre.o  Modules/_codecsmodule.o  Modules/_weakref.o  Modules/zipimport.o  Modules/symtablemodule.o  Modules/xxsubtype.ot\7\0\0\0MODOBJSt\v\0\0\0MODULE_OBJSs\16\0\0\0i386-linux-gnut\t\0\0\0MULTIARCHt\26\0\0\0MVWDELCH_IS_EXPRESSIONt\v\0\0\0OBJECT_OBJSs\10\0\0\0:lib-oldt\7\0\0\0OLDPATHs1\0\0\0-DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypest\3\0\0\0OPTt\21\0\0\0OTHER_LIBTOOL_OPTt\21\0\0\0PACKAGE_BUGREPORTt\f\0\0\0PACKAGE_NAMEt\16\0\0\0PACKAGE_STRINGt\17\0\0\0PACKAGE_TARNAMEt\v\0\0\0PACKAGE_URLt\17\0\0\0PACKAGE_VERSIONt\16\0\0\0PARSER_HEADERSs(\0\0\0\\ Parser/myreadline.o Parser/tokenizer.ot\v\0\0\0PARSER_OBJSs\v\0\0\0Parser/pgent\4\0\0\0PGENs\3\0\0\0\\ \\t\10\0\0\0PGENOBJSt\10\0\0\0PGENSRCSt\6\0\0\0PGOBJSt\6\0\0\0PGSRCSt\7\0\0\0PLATDIRs6\0\0\0plat-mac plat-mac/Carbon plat-mac/lib-scriptpackages \\t\v\0\0\0PLATMACDIRSs%\0\0\0:plat-mac:plat-mac/lib-scriptpackagest\v\0\0\0PLATMACPATHt\5\0\0\0POBJSt\34\0\0\0POSIX_SEMAPHORES_NOT_ENABLEDs:\0\0\0../Tools/pybench/pybench.py -n 2 --with-gc --with-syscheckt\f\0\0\0PROFILE_TASKt\5\0\0\0PSRCSt\36\0\0\0PTHREAD_SYSTEM_SCHED_SUPPORTEDt\6\0\0\0PURIFYt\24\0\0\0PYLONG_BITS_IN_DIGITt\6\0\0\0PYTHONt\17\0\0\0PYTHONFRAMEWORKs\f\0\0\0no-frameworkt\22\0\0\0PYTHONFRAMEWORKDIRt\31\0\0\0PYTHONFRAMEWORKINSTALLDIRt\25\0\0\0PYTHONFRAMEWORKPREFIXt\n\0\0\0PYTHONPATHs\v\0\0\0./python -Et\20\0\0\0PYTHON_FOR_BUILDt\16\0\0\0PYTHON_HEADERSt\v\0\0\0PYTHON_OBJSt\t\0\0\0PY_CFLAGSs\312\0\0\0-fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-security   -I. -IInclude -I../Include -fPIC -DPy_BUILD_", 12288) = 12288
27308 read(6, "COREt\16\0\0\0PY_CORE_CFLAGSt\v\0\0\0PY_CPPFLAGSs\4\0\0\0\"ll\"t\23\0\0\0PY_FORMAT_LONG_LONGs\3\0\0\0\"z\"t\20\0\0\0PY_FORMAT_SIZE_Tt\n\0\0\0PY_LDFLAGSs\r\0\0\0unsigned longt\17\0\0\0PY_UNICODE_TYPEt\10\0\0\0Py_DEBUGt\20\0\0\0Py_ENABLE_SHAREDi\4\0\0\0t\17\0\0\0Py_UNICODE_SIZEt\20\0\0\0Py_USING_UNICODEs,\0\0\0-l -x test_subprocess test_io test_lib2to3 \\t\r\0\0\0QUICKTESTOPTSs\31\0\0\0i686-linux-gnu-gcc-ranlibt\6\0\0\0RANLIBs\27\0\0\0Mac/Resources/frameworkt\t\0\0\0RESSRCDIRt\4\0\0\0voidt\n\0\0\0RETSIGTYPEs:\0\0\0LD_LIBRARY_PATH=/build/buildd/python2.7-2.7.9/build-sharedt\t\0\0\0RUNSHAREDt\t\0\0\0SCRIPTDIRt\20\0\0\0SETPGRP_HAVE_ARGt\7\0\0\0SGI_ABIs\7\0\0\0/bin/sht\5\0\0\0SHELLt\6\0\0\0SHLIBSs\5\0\0\0\".so\"t\t\0\0\0SHLIB_EXTt\v\0\0\0SIGNAL_OBJSt\35\0\0\0SIGNED_RIGHT_SHIFT_ZERO_FILLSt\10\0\0\0SITEPATHi\10\0\0\0t\r\0\0\0SIZEOF_DOUBLEt\f\0\0\0SIZEOF_FLOATi\20\0\0\0t\r\0\0\0SIZEOF_FPOS_Tt\n\0\0\0SIZEOF_INTt\v\0\0\0SIZEOF_LONGi\f\0\0\0t\22\0\0\0SIZEOF_LONG_DOUBLEt\20\0\0\0SIZEOF_LONG_LONGt\f\0\0\0SIZEOF_OFF_Tt\f\0\0\0SIZEOF_PID_Tt\20\0\0\0SIZEOF_PTHREAD_Ti\2\0\0\0t\f\0\0\0SIZEOF_SHORTt\r\0\0\0SIZEOF_SIZE_Tt\r\0\0\0SIZEOF_TIME_Tt\20\0\0\0SIZEOF_UINTPTR_Tt\r\0\0\0SIZEOF_VOID_Pt\16\0\0\0SIZEOF_WCHAR_Tt\f\0\0\0SIZEOF__BOOLs\3\0\0\0.sot\2\0\0\0SOs)\0\0\0Parser Grammar Objects Python Modules Mact\7\0\0\0SRCDIRSs\31\0\0\0../Tools/gdb/libpython.pyt\r\0\0\0SRC_GDB_HOOKSt\f\0\0\0STDC_HEADERSs\"\0\0\0/* Don't use ncurses extensions */t\22\0\0\0STRICT_SYSV_CURSESt\21\0\0\0STRINGLIB_HEADERSt\7\0\0\0SUBDIRSs\25\0\0\0Include Lib Misc Demot\n\0\0\0SUBDIRSTOOs\32\0\0\0echo Unversioned directoryt\n\0\0\0SVNVERSIONt\7\0\0\0SYSLIBSt\30\0\0\0SYS_SELECT_WITH_SYS_TIMEt\30\0\0\0TANH_PRESERVES_ZERO_SIGNt\16\0\0\0TCLTK_INCLUDESt\n\0\0\0TCLTK_LIBSs\2\0\0\0-lt\10\0\0\0TESTOPTSt\10\0\0\0TESTPATHs\27\0\0\0../Lib/test/regrtest.pyt\10\0\0\0TESTPROGsQ\0\0\0LD_LIBRARY_PATH=/build/buildd/python2.7-2.7.9/build-shared ./python -Wd -3 -E -ttt\n\0\0\0TESTPYTHONt\16\0\0\0TESTPYTHONOPTSs\17\0\0\0Python/thread.ot\t\0\0\0THREADOBJt\22\0\0\0TIME_WITH_SYS_TIMEs\7\0\0\0:lib-tkt\6\0\0\0TKPATHt\16\0\0\0TM_IN_SYS_TIMEs.\0\0\0Objects/unicodeobject.o Objects/unicodectype.ot\f\0\0\0UNICODE_OBJSt\f\0\0\0UNIVERSALSDKt\27\0\0\0USE_TOOLBOX_OBJECT_GLUEt\20\0\0\0VA_LIST_IS_ARRAYs\3\0\0\0002.7t\7\0\0\0VERSIONs\2\0\0\0..t\5\0\0\0VPATHt\23\0\0\0WANT_SIGFPE_HANDLERt\25\0\0\0WANT_WCTYPE_FUNCTIONSt\20\0\0\0WINDOW_HAS_FLAGSt\20\0\0\0WITH_DOC_STRINGSt\t\0\0\0WITH_DYLDt\f\0\0\0WITH_LIBINTLt\23\0\0\0WITH_NEXT_FRAMEWORKt\r\0\0\0WITH_PYMALLOCt\v\0\0\0WITH_THREADt\10\0\0\0WITH_TSCt\r\0\0\0WITH_VALGRINDt\23\0\0\0X87_DOUBLE_ROUNDINGs)\0\0\0xml xml/dom xml/etree xml/parsers xml/saxt\r\0\0\0XMLLIBSUBDIRSs*\0\0\0/build/buildd/python2.7-2.7.9/build-sharedt\f\0\0\0abs_builddirs-\0\0\0/build/buildd/python2.7-2.7.9/build-shared/..t\n\0\0\0abs_srcdirt\5\0\0\0builds\n\0\0\0/usr/sharet\v\0\0\0datarootdirs\4\0\0\0/usrt\v\0\0\0exec_prefixt\4\0\0\0hostt\6\0\0\0prefixt\6\0\0\0srcdirN(\1\0\0\0t\17\0\0\0build_time_vars(\0\0\0\0(\0\0\0\0(\0\0\0\0s;\0\0\0/usr/lib/python2.7/plat-i386-linux-gnu/_sysconfigdata_nd.pyt\10\0\0\0<module>\2\0\0\0s4\4\0\0\n
27308 read(6, "", 4096)                 = 0
27308 close(6)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 close(5)                          = 0
27308 close(4)                          = 0
27308 stat64("/home/preston/.local/lib/python2.7/site-packages", {st_dev=makedev(8, 1), st_ino=932925, st_mode=S_IFDIR|0700, st_nlink=10, st_uid=1000, st_gid=1000, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:00:29, st_mtime=2017/02/23-22:49:12, st_ctime=2017/02/23-22:49:12}) = 0
27308 openat(AT_FDCWD, "/home/preston/.local/lib/python2.7/site-packages", O_RDONLY|O_NONBLOCK|O_LARGEFILE|O_DIRECTORY|O_CLOEXEC) = 4
27308 brk(0x849c000)                    = 0x849c000
27308 getdents64(4, {{d_ino=978453, d_off=350221422, d_type=DT_DIR, d_reclen=48, d_name="Django-1.10.1.dist-info"} {d_ino=932934, d_off=353237706, d_type=DT_DIR, d_reclen=48, d_name="ptrace-1.0.1.egg-info"} {d_ino=979304, d_off=354818650, d_type=DT_DIR, d_reclen=32, d_name="django"} {d_ino=926300, d_off=527109616, d_type=DT_REG, d_reclen=32, d_name="wget.py"} {d_ino=932925, d_off=657884083, d_type=DT_DIR, d_reclen=24, d_name="."} {d_ino=952276, d_off=912301065, d_type=DT_DIR, d_reclen=32, d_name="scapy"} {d_ino=24105, d_off=955664561, d_type=DT_DIR, d_reclen=40, d_name="wget-3.2.egg-info"} {d_ino=934660, d_off=1447412429, d_type=DT_REG, d_reclen=32, d_name="wget.pyc"} {d_ino=919230, d_off=1577260306, d_type=DT_DIR, d_reclen=40, d_name="jedi-0.9.0.dist-info"} {d_ino=933159, d_off=1805430558, d_type=DT_DIR, d_reclen=24, d_name="jedi"} {d_ino=932923, d_off=1880719728, d_type=DT_DIR, d_reclen=24, d_name=".."} {d_ino=964142, d_off=1995586549, d_type=DT_DIR, d_reclen=40, d_name="scapy-2.3.2.egg-info"} {d_ino=932933, d_off=2147483647, d_type=DT_REG, d_reclen=32, d_name="ptrace.so"}}, 32768) = 448
27308 getdents64(4, {}, 32768)          = 0
27308 brk(0x8494000)                    = 0x8494000
27308 close(4)                          = 0
27308 stat64("/home/preston/.local/local/lib/python2.7/dist-packages", 0xbfffed5c) = -1 ENOENT (No such file or directory)
27308 stat64("/home/preston/.local/lib/python2.7/dist-packages", 0xbfffed5c) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/local/lib/python2.7/dist-packages", {st_dev=makedev(8, 1), st_ino=787608, st_mode=S_IFDIR|S_ISGID|0775, st_nlink=3, st_uid=0, st_gid=50, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:00:29, st_mtime=2017/04/17-21:54:05, st_ctime=2017/04/17-21:54:05}) = 0
27308 openat(AT_FDCWD, "/usr/local/lib/python2.7/dist-packages", O_RDONLY|O_NONBLOCK|O_LARGEFILE|O_DIRECTORY|O_CLOEXEC) = 4
27308 getdents64(4, {{d_ino=787608, d_off=553004107, d_type=DT_DIR, d_reclen=24, d_name="."} {d_ino=798612, d_off=1805430558, d_type=DT_REG, d_reclen=48, d_name="tracereplay-0.1.egg-info"} {d_ino=787606, d_off=2097287948, d_type=DT_DIR, d_reclen=24, d_name=".."} {d_ino=924917, d_off=2147483647, d_type=DT_DIR, d_reclen=32, d_name="tracereplay"}}, 32768) = 128
27308 getdents64(4, {}, 32768)          = 0
27308 close(4)                          = 0
27308 stat64("/usr/lib/python2.7/dist-packages", {st_dev=makedev(8, 1), st_ino=661400, st_mode=S_IFDIR|0755, st_nlink=62, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:00:29, st_mtime=2016/09/20-04:13:12, st_ctime=2016/09/20-04:13:12}) = 0
27308 openat(AT_FDCWD, "/usr/lib/python2.7/dist-packages", O_RDONLY|O_NONBLOCK|O_LARGEFILE|O_DIRECTORY|O_CLOEXEC) = 4
27308 getdents64(4, {{d_ino=661677, d_off=81782992, d_type=DT_DIR, d_reclen=48, d_name="lubuntu-software-center"} {d_ino=669418, d_off=94666468, d_type=DT_REG, d_reclen=32, d_name="pygtk.pyc"} {d_ino=679374, d_off=95434595, d_type=DT_REG, d_reclen=48, d_name="pyOpenSSL-0.13.1.egg-info"} {d_ino=661685, d_off=174842121, d_type=DT_REG, d_reclen=32, d_name="README"} {d_ino=661703, d_off=189841338, d_type=DT_REG, d_reclen=56, d_name="python_apt-0.9.3.11build1.egg-info"} {d_ino=661662, d_off=190662336, d_type=DT_DIR, d_reclen=32, d_name="aptdaemon"} {d_ino=699126, d_off=192024771, d_type=DT_DIR, d_reclen=32, d_name="pylint"} {d_ino=661691, d_off=212894978, d_type=DT_REG, d_reclen=32, d_name="apt_inst.so"} {d_ino=679660, d_off=222692502, d_type=DT_DIR, d_reclen=32, d_name="wheel"} {d_ino=656893, d_off=230825679, d_type=DT_REG, d_reclen=56, d_name="logilab_common-0.62.0.egg-info"} {d_ino=699771, d_off=270099983, d_type=DT_REG, d_reclen=32, d_name="ORBit.so"} {d_ino=661693, d_off=283853066, d_type=DT_REG, d_reclen=32, d_name="deb822.py"} {d_ino=841888, d_off=304969569, d_type=DT_DIR, d_reclen=24, d_name="mx"} {d_ino=701746, d_off=311051722, d_type=DT_DIR, d_reclen=48, d_name="mccabe-0.2.1.egg-info"} {d_ino=661692, d_off=360266757, d_type=DT_REG, d_reclen=32, d_name="apt_pkg.so"} {d_ino=679293, d_off=382762049, d_type=DT_DIR, d_reclen=48, d_name="colorama-0.3.2.egg-info"} {d_ino=661675, d_off=398612114, d_type=DT_DIR, d_reclen=32, d_name="gobject"} {d_ino=661676, d_off=399090427, d_type=DT_DIR, d_reclen=32, d_name="gtk-2.0"} {d_ino=701745, d_off=406070332, d_type=DT_REG, d_reclen=32, d_name="mccabe.py"} {d_ino=679425, d_off=431585228, d_type=DT_DIR, d_reclen=32, d_name="urllib3"} {d_ino=661686, d_off=467772439, d_type=DT_REG, d_reclen=32, d_name="_blueman.so"} {d_ino=661667, d_off=527109616, d_type=DT_DIR, d_reclen=48, d_name="chardet-2.3.0.egg-info"} {d_ino=661400, d_off=644035040, d_type=DT_DIR, d_reclen=24, d_name="."} {d_ino=661674, d_off=648958876, d_type=DT_DIR, d_reclen=24, d_name="glib"} {d_ino=679461, d_off=690313496, d_type=DT_DIR, d_reclen=32, d_name="requests"} {d_ino=661663, d_off=718845068, d_type=DT_DIR, d_reclen=32, d_name="aptsources"} {d_ino=661694, d_off=725140968, d_type=DT_REG, d_reclen=32, d_name="debconf.py"} {d_ino=661684, d_off=761678800, d_type=DT_DIR, d_reclen=24, d_name="xdg"} {d_ino=661705, d_off=774869420, d_type=DT_REG, d_reclen=32, d_name="six.py"} {d_ino=679619, d_off=775900286, d_type=DT_DIR, d_reclen=32, d_name="pyasn1"} {d_ino=701773, d_off=783663414, d_type=DT_REG, d_reclen=32, d_name="pep8.pyc"} {d_ino=679567, d_off=814253115, d_type=DT_DIR, d_reclen=24, d_name="pip"} {d_ino=679606, d_off=820336245, d_type=DT_DIR, d_reclen=40, d_name="pip-1.5.6.egg-info"} {d_ino=661680, d_off=828934684, d_type=DT_DIR, d_reclen=32, d_name="pygtkcompat"} {d_ino=701026, d_off=829382976, d_type=DT_DIR, d_reclen=24, d_name="gyp"} {d_ino=701752, d_off=859922936, d_type=DT_DIR, d_reclen=48, d_name="flake8-2.2.2.egg-info"} {d_ino=679326, d_off=873073727, d_type=DT_DIR, d_reclen=48, d_name="html5lib-0.999.egg-info"} {d_ino=679563, d_off=994253279, d_type=DT_REG, d_reclen=40, d_name="easy_install.py"} {d_ino=679298, d_off=1005769456, d_type=DT_DIR, d_reclen=32, d_name="colorama"} {d_ino=679389, d_off=1016349571, d_type=DT_DIR, d_reclen=24, d_name="ndg"} {d_ino=669419, d_off=1017700689, d_type=DT_REG, d_reclen=40, d_name="lsb_release.pyc"} {d_ino=661704, d_off=1065139897, d_type=DT_REG, d_reclen=40, d_name="pyxdg-0.25.egg-info"} {d_ino=661698, d_off=1070047444, d_type=DT_REG, d_reclen=48, d_name="psutil-2.1.1.egg-info"} {d_ino=679653, d_off=1074157116, d_type=DT_DIR, d_reclen=48, d_name="wheel-0.24.0.egg-info"} {d_ino=661689, d_off=1098047001, d_type=DT_REG, d_reclen=56, d_name="_psutil_linux.i386-linux-gnu.so"} {d_ino=661696, d_off=1114281877, d_type=DT_REG, d_reclen=32, d_name="gudev.so"} {d_ino=679482, d_off=1130857503, d_type=DT_DIR, d_reclen=32, d_name="setuptools"} {d_ino=679564, d_off=1160190610, d_type=DT_REG, d_reclen=40, d_name="setuptools.pth"} {d_ino=661682, d_off=1169574940, d_type=DT_DIR, d_reclen=56, d_name="python_debian-0.1.22.egg-info"} {d_ino=661661, d_off=1172627060, d_type=DT_DIR, d_reclen=24, d_name="apt"} {d_ino=679552, d_off=1177829712, d_type=DT_DIR, d_reclen=32, d_name="_markerlib"} {d_ino=699125, d_off=1190519202, d_type=DT_REG, d_reclen=48, d_name="pylint-1.3.1.egg-info"} {d_ino=661702, d_off=1222454204, d_type=DT_LNK, d_reclen=48, d_name="pysqlite-2.6.3.egg-info"} {d_ino=661660, d_off=1231979086, d_type=DT_DIR, d_reclen=24, d_name="LSC"} {d_ino=679305, d_off=1243491892, d_type=DT_DIR, d_reclen=32, d_name="distlib"} {d_ino=661687, d_off=1244804415, d_type=DT_REG, d_reclen=40, d_name="_dbus_bindings.so"} {d_ino=699093, d_off=1269423452, d_type=DT_DIR, d_reclen=32, d_name="astroid"} {d_ino=661700, d_off=1274965461, d_type=DT_REG, d_reclen=32, d_name="pygtk.pth"} {d_ino=701657, d_off=1294381852, d_type=DT_DIR, d_reclen=32, d_name="pyflakes"} {d_ino=669416, d_off=1306413166, d_type=DT_REG, d_reclen=32, d_name="debconf.pyc"} {d_ino=679412, d_off=1323909098, d_type=DT_DIR, d_reclen=56, d_name="ndg_httpsclient-0.3.2.egg-info"} {d_ino=701736, d_off=1373545755, d_type=DT_DIR, d_reclen=40, d_name="pep8-1.5.7.egg-info"} {d_ino=701759, d_off=1376089833, d_type=DT_DIR, d_reclen=32, d_name="flake8"} {d_ino=669417, d_off=1393612260, d_type=DT_REG, d_reclen=32, d_name="six.pyc"} {d_ino=661699, d_off=1412769280, d_type=DT_REG, d_reclen=48, d_name="pygobject-3.14.0.egg-info"} {d_ino=661666, d_off=1435208579, d_type=DT_DIR, d_reclen=32, d_name="chardet"} {d_ino=661681, d_off=1451838449, d_type=DT_DIR, d_reclen=32, d_name="pysqlite2"} {d_ino=679555, d_off=1458702951, d_type=DT_DIR, d_reclen=48, d_name="setuptools-12.2.egg-info"} {d_ino=677808, d_off=1490440319, d_type=DT_REG, d_reclen=48, d_name="python_ptrace-0.7.egg-info"} {d_ino=661670, d_off=1490904061, d_type=DT_DIR, d_reclen=40, d_name="debian_bundle"} {d_ino=1192302, d_off=1492118654, d_type=DT_DIR, d_reclen=32, d_name="keybinder"} {d_ino=679613, d_off=1511042879, d_type=DT_DIR, d_reclen=48, d_name="pyasn1-0.1.7.egg-info"} {d_ino=699092, d_off=1546907723, d_type=DT_REG, d_reclen=48, d_name="astroid-1.2.1.egg-info"} {d_ino=661688, d_off=1549927116, d_type=DT_REG, d_reclen=48, d_name="_dbus_glib_bindings.so"} {d_ino=657882, d_off=1572229587, d_type=DT_DIR, d_reclen=32, d_name="logilab"} {d_ino=661671, d_off=1581019240, d_type=DT_DIR, d_reclen=32, d_name="defer"} {d_ino=679388, d_off=1591302574, d_type=DT_REG, d_reclen=56, d_name="ndg_httpsclient-0.3.2-nspkg.pth"} {d_ino=661664, d_off=1600401845, d_type=DT_DIR, d_reclen=32, d_name="blueman"} {d_ino=679455, d_off=1623217224, d_type=DT_DIR, d_reclen=48, d_name="requests-2.4.3.egg-info"} {d_ino=661701, d_off=1631482501, d_type=DT_REG, d_reclen=32, d_name="pygtk.py"} {d_ino=701774, d_off=1649185883, d_type=DT_REG, d_reclen=32, d_name="mccabe.pyc"} {d_ino=679375, d_off=1650433556, d_type=DT_DIR, d_reclen=32, d_name="OpenSSL"} {d_ino=661697, d_off=1667151365, d_type=DT_REG, d_reclen=40, d_name="lsb_release.py"} {d_ino=661669, d_off=1673926991, d_type=DT_DIR, d_reclen=32, d_name="debian"} {d_ino=661678, d_off=1802256971, d_type=DT_DIR, d_reclen=40, d_name="pkg_resources"} {d_ino=661690, d_off=1805430558, d_type=DT_REG, d_reclen=56, d_name="_psutil_posix.i386-linux-gnu.so"} {d_ino=656757, d_off=1808225547, d_type=DT_DIR, d_reclen=24, d_name=".."} {d_ino=679896, d_off=1811479929, d_type=DT_REG, d_reclen=40, d_name="easy_install.pyc"} {d_ino=701735, d_off=1815513151, d_type=DT_REG, d_reclen=32, d_name="pep8.py"} {d_ino=661673, d_off=1845398479, d_type=DT_DIR, d_reclen=24, d_name="gi"} {d_ino=669415, d_off=1899590698, d_type=DT_REG, d_reclen=32, d_name="deb822.pyc"} {d_ino=661679, d_off=1919902742, d_type=DT_DIR, d_reclen=32, d_name="psutil"} {d_ino=677746, d_off=1943735841, d_type=DT_DIR, d_reclen=32, d_name="ptrace"} {d_ino=701652, d_off=2003448014, d_type=DT_DIR, d_reclen=48, d_name="pyflakes-0.8.1.egg-info"} {d_ino=661706, d_off=2049417150, d_type=DT_REG, d_reclen=32, d_name="talloc.so"} {d_ino=701064, d_off=2050165168, d_type=DT_DIR, d_reclen=40, d_name="gyp-0.1.egg-info"} {d_ino=661672, d_off=2054466090, d_type=DT_DIR, d_reclen=40, d_name="defer-1.0.6.egg-info"} {d_ino=679421, d_off=2077463400, d_type=DT_DIR, d_reclen=48, d_name="urllib3-1.9.1.egg-info"} {d_ino=661683, d_off=2096926000, d_type=DT_DIR, d_reclen=40, d_name="six-1.9.0.egg-info"} {d_ino=661668, d_off=2110707316, d_type=DT_DIR, d_reclen=24, d_name="dbus"} {d_ino=661665, d_off=2116220333, d_type=DT_DIR, d_reclen=32, d_name="cairo"} {d_ino=679331, d_off=2123517534, d_type=DT_DIR, d_reclen=32, d_name="html5lib"} {d_ino=661695, d_off=2147483647, d_type=DT_REG, d_reclen=48, d_name="gtk-2.0-pysupport-compat.pth"}}, 32768) = 3816
27308 getdents64(4, {}, 32768)          = 0
27308 close(4)                          = 0
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0-pysupport-compat.pth", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661695, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=38, st_atime=2017/04/26-21:00:29, st_mtime=2014/02/23-14:48:23, st_ctime=2015/09/26-01:26:48}) = 0
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661695, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=38, st_atime=2017/04/26-21:00:29, st_mtime=2014/02/23-14:48:23, st_ctime=2015/09/26-01:26:48}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(4, "/usr/lib/pymodules/python2.7/gtk-2.0/\n", 8192) = 38
27308 read(4, "", 4096)                 = 0
27308 stat64("/usr/lib/pymodules/python2.7/gtk-2.0", 0xbfffeabc) = -1 ENOENT (No such file or directory)
27308 read(4, "", 8192)                 = 0
27308 close(4)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 open("/usr/lib/python2.7/dist-packages/ndg_httpsclient-0.3.2-nspkg.pth", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=679388, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=296, st_atime=2017/04/26-21:00:29, st_mtime=2015/04/21-14:20:02, st_ctime=2015/09/27-21:12:57}) = 0
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=679388, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=296, st_atime=2017/04/26-21:00:29, st_mtime=2015/04/21-14:20:02, st_ctime=2015/09/27-21:12:57}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(4, "import sys, types, os;p = os.path.join(sys._getframe(1).f_locals['sitedir'], *('ndg',));ie = os.path.exists(os.path.join(p,'__init__.py'));m = not ie and sys.modules.setdefault('ndg', types.ModuleType('ndg'));mp = (m or []) and m.__dict__.setdefault('__path__',[]);(p not in mp) and mp.append(p)\n", 8192) = 296
27308 read(4, "", 4096)                 = 0
27308 stat64("/usr/lib/python2.7/dist-packages/ndg/__init__.py", {st_dev=makedev(8, 1), st_ino=679775, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=0, st_size=0, st_atime=2016/11/27-18:46:45, st_mtime=2015/09/27-21:12:58, st_ctime=2015/09/27-21:12:58}) = 0
27308 read(4, "", 8192)                 = 0
27308 close(4)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 open("/usr/lib/python2.7/dist-packages/pygtk.pth", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661700, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=8, st_atime=2017/04/26-21:00:29, st_mtime=2014/02/23-14:48:23, st_ctime=2015/09/26-01:26:48}) = 0
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661700, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=8, st_atime=2017/04/26-21:00:29, st_mtime=2014/02/23-14:48:23, st_ctime=2015/09/26-01:26:48}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(4, "gtk-2.0\n", 8192)        = 8
27308 read(4, "", 4096)                 = 0
27308 stat64("/usr/lib/python2.7/dist-packages/gtk-2.0", {st_dev=makedev(8, 1), st_ino=661676, st_mode=S_IFDIR|0755, st_nlink=8, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/22-18:29:54, st_mtime=2016/04/12-21:08:53, st_ctime=2016/04/12-21:08:53}) = 0
27308 read(4, "", 8192)                 = 0
27308 close(4)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 open("/usr/lib/python2.7/dist-packages/setuptools.pth", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=679564, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=26, st_atime=2017/04/26-21:00:29, st_mtime=2015/02/27-02:17:06, st_ctime=2015/09/27-21:12:58}) = 0
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=679564, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=26, st_atime=2017/04/26-21:00:29, st_mtime=2015/02/27-02:17:06, st_ctime=2015/09/27-21:12:58}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(4, "setuptools-1.3.2.egg-info\n", 8192) = 26
27308 read(4, "", 4096)                 = 0
27308 stat64("/usr/lib/python2.7/dist-packages/setuptools-1.3.2.egg-info", 0xbfffeabc) = -1 ENOENT (No such file or directory)
27308 read(4, "", 8192)                 = 0
27308 close(4)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/sitecustomize", 0xbfffdc6c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sitecustomize.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sitecustomize.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sitecustomizemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sitecustomize.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=1049807, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=155, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:55, st_ctime=2015/09/26-01:26:30}) = 0
27308 open("/usr/lib/python2.7/sitecustomize.pyc", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669332, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=232, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27308 read(5, "\3\363\r\n\177r\35Uc\0\0\0\0\0\0\0\0\5\0\0\0@\0\0\0s2\0\0\0y\20\0d\0\0d\1\0l\0\0Z\0\0Wn\21\0\4e\1\0k\n\0r#\0\1\1\1n\v\0Xe\0\0j\2\0\203\0\0\1d\1\0S(\2\0\0\0i\377\377\377\377N(\3\0\0\0t\22\0\0\0apport_python_hookt\v\0\0\0ImportErrort\7\0\0\0install(\0\0\0\0(\0\0\0\0(\0\0\0\0s#\0\0\0/usr/lib/python2.7/sitecustomize.pyt\10\0\0\0<module>\2\0\0\0s\10\0\0\0\3\1\20\1\r\1\4\2", 4096) = 232
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669332, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=232, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(5, "", 4096)                 = 0
27308 close(5)                          = 0
27308 munmap(0xb7fd9000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/apport_python_hook", 0xbfffd8bc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/apport_python_hook.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/apport_python_hook.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/apport_python_hookmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/apport_python_hook.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/apport_python_hook.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/plat-i386-linux-gnu/apport_python_hook", 0xbfffd8bc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/apport_python_hook.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/apport_python_hook.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/apport_python_hookmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/apport_python_hook.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/apport_python_hook.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/lib-tk", {st_dev=makedev(8, 1), st_ino=661409, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/22-18:29:54, st_mtime=2015/04/22-12:08:12, st_ctime=2015/09/26-01:27:19}) = 0
27308 stat64("/usr/lib/python2.7/lib-tk", {st_dev=makedev(8, 1), st_ino=661409, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/22-18:29:54, st_mtime=2015/04/22-12:08:12, st_ctime=2015/09/26-01:27:19}) = 0
27308 stat64("/usr/lib/python2.7/lib-tk/apport_python_hook", 0xbfffd8bc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/apport_python_hook.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/apport_python_hook.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/apport_python_hookmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/apport_python_hook.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/apport_python_hook.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/lib-old", 0xbfffa6f0) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7", {st_dev=makedev(8, 1), st_ino=656757, st_mode=S_IFDIR|0755, st_nlink=27, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=12288, st_atime=2017/04/22-18:29:54, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 stat64("/usr/lib/python2.7/lib-old", 0xbfffd70c) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/lib-dynload", {st_dev=makedev(8, 1), st_ino=661408, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/22-18:29:54, st_mtime=2015/10/08-03:49:04, st_ctime=2015/10/08-03:49:04}) = 0
27308 stat64("/usr/lib/python2.7/lib-dynload", {st_dev=makedev(8, 1), st_ino=661408, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/22-18:29:54, st_mtime=2015/10/08-03:49:04, st_ctime=2015/10/08-03:49:04}) = 0
27308 stat64("/usr/lib/python2.7/lib-dynload/apport_python_hook", 0xbfffd8bc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/apport_python_hook.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/apport_python_hook.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/apport_python_hookmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/apport_python_hook.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/apport_python_hook.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/home/preston/.local/lib/python2.7/site-packages", {st_dev=makedev(8, 1), st_ino=932925, st_mode=S_IFDIR|0700, st_nlink=10, st_uid=1000, st_gid=1000, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:00:29, st_mtime=2017/02/23-22:49:12, st_ctime=2017/02/23-22:49:12}) = 0
27308 stat64("/home/preston/.local/lib/python2.7/site-packages", {st_dev=makedev(8, 1), st_ino=932925, st_mode=S_IFDIR|0700, st_nlink=10, st_uid=1000, st_gid=1000, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:00:29, st_mtime=2017/02/23-22:49:12, st_ctime=2017/02/23-22:49:12}) = 0
27308 stat64("/home/preston/.local/lib/python2.7/site-packages/apport_python_hook", 0xbfffd8bc) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/apport_python_hook.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/apport_python_hook.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/apport_python_hookmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/apport_python_hook.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/apport_python_hook.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/local/lib/python2.7/dist-packages", {st_dev=makedev(8, 1), st_ino=787608, st_mode=S_IFDIR|S_ISGID|0775, st_nlink=3, st_uid=0, st_gid=50, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:00:29, st_mtime=2017/04/17-21:54:05, st_ctime=2017/04/17-21:54:05}) = 0
27308 stat64("/usr/local/lib/python2.7/dist-packages", {st_dev=makedev(8, 1), st_ino=787608, st_mode=S_IFDIR|S_ISGID|0775, st_nlink=3, st_uid=0, st_gid=50, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:00:29, st_mtime=2017/04/17-21:54:05, st_ctime=2017/04/17-21:54:05}) = 0
27308 stat64("/usr/local/lib/python2.7/dist-packages/apport_python_hook", 0xbfffd8bc) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/apport_python_hook.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/apport_python_hook.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/apport_python_hookmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/apport_python_hook.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/apport_python_hook.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/dist-packages", {st_dev=makedev(8, 1), st_ino=661400, st_mode=S_IFDIR|0755, st_nlink=62, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:00:29, st_mtime=2016/09/20-04:13:12, st_ctime=2016/09/20-04:13:12}) = 0
27308 stat64("/usr/lib/python2.7/dist-packages", {st_dev=makedev(8, 1), st_ino=661400, st_mode=S_IFDIR|0755, st_nlink=62, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:00:29, st_mtime=2016/09/20-04:13:12, st_ctime=2016/09/20-04:13:12}) = 0
27308 stat64("/usr/lib/python2.7/dist-packages/apport_python_hook", 0xbfffd8bc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/apport_python_hook.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/apport_python_hook.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/apport_python_hookmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/apport_python_hook.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/apport_python_hook.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/dist-packages/gtk-2.0", {st_dev=makedev(8, 1), st_ino=661676, st_mode=S_IFDIR|0755, st_nlink=8, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/22-18:29:54, st_mtime=2016/04/12-21:08:53, st_ctime=2016/04/12-21:08:53}) = 0
27308 stat64("/usr/lib/python2.7/dist-packages/gtk-2.0", {st_dev=makedev(8, 1), st_ino=661676, st_mode=S_IFDIR|0755, st_nlink=8, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/22-18:29:54, st_mtime=2016/04/12-21:08:53, st_ctime=2016/04/12-21:08:53}) = 0
27308 stat64("/usr/lib/python2.7/dist-packages/gtk-2.0/apport_python_hook", 0xbfffd8bc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/apport_python_hook.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/apport_python_hook.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/apport_python_hookmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/apport_python_hook.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/apport_python_hook.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 close(4)                          = 0
27308 stat64("/usr/lib/python2.7/usercustomize", 0xbfffdc6c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/usercustomize.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/usercustomize.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/usercustomizemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/usercustomize.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/usercustomize.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/plat-i386-linux-gnu/usercustomize", 0xbfffdc6c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/usercustomize.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/usercustomize.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/usercustomizemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/usercustomize.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/usercustomize.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/lib-tk/usercustomize", 0xbfffdc6c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/usercustomize.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/usercustomize.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/usercustomizemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/usercustomize.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/usercustomize.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/lib-dynload/usercustomize", 0xbfffdc6c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/usercustomize.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/usercustomize.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/usercustomizemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/usercustomize.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/usercustomize.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/home/preston/.local/lib/python2.7/site-packages/usercustomize", 0xbfffdc6c) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/usercustomize.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/usercustomize.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/usercustomizemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/usercustomize.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/usercustomize.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/local/lib/python2.7/dist-packages/usercustomize", 0xbfffdc6c) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/usercustomize.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/usercustomize.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/usercustomizemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/usercustomize.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/usercustomize.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/dist-packages/usercustomize", 0xbfffdc6c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/usercustomize.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/usercustomize.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/usercustomizemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/usercustomize.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/usercustomize.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/dist-packages/gtk-2.0/usercustomize", 0xbfffdc6c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/usercustomize.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/usercustomize.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/usercustomizemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/usercustomize.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/usercustomize.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 close(3)                          = 0
27308 open("/usr/lib/locale/locale-archive", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=661168, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=5704, st_size=2919792, st_atime=2017/04/26-19:25:17, st_mtime=2015/09/26-01:34:29, st_ctime=2015/09/26-01:34:29}) = 0
27308 mmap2(NULL, 2097152, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7ab5000
27308 mmap2(NULL, 4096, PROT_READ, MAP_PRIVATE, 3, 0x2c5000) = 0xb7fd9000
27308 close(3)                          = 0
27308 stat64("/usr/lib/python2.7/encodings", {st_dev=makedev(8, 1), st_ino=661403, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/01/22-01:28:11, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 stat64("/usr/lib/python2.7/encodings/__init__.py", {st_dev=makedev(8, 1), st_ino=662148, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=5698, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:59, st_ctime=2015/09/26-01:26:48}) = 0
27308 stat64("/usr/lib/python2.7/encodings/__init__", 0xbfffe1cc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/__init__.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/__init__.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/__init__module.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/__init__.py", O_RDONLY|O_LARGEFILE) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=662148, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=5698, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:59, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/encodings/__init__.pyc", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=669333, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=4370, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd8000
27308 read(4, "\3\363\r\n\203r\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0s\216\0\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\3\0l\2\0m\3\0Z\3\0\1d\1\0d\2\0l\4\0Z\4\0i\0\0Z\5\0d\4\0Z\6\0d\5\0g\1\0Z\7\0d\6\0Z\10\0e\3\0j\3\0Z\t\0d\7\0e\n\0e\v\0f\2\0d\10\0\204\0\0\203\0\0YZ\f\0d\t\0\204\0\0Z\r\0d\n\0\204\0\0Z\16\0e\1\0j\17\0e\16\0\203\1\0\1d\2\0S(\v\0\0\0s,\4\0\0 Standard \"encodings\" Package\n\n    Standard Python encoding modules are stored in this package\n    directory.\n\n    Codec modules must have names corresponding to normalized encoding\n    names as defined in the normalize_encoding() function below, e.g.\n    'utf-8' must be implemented by the module 'utf_8.py'.\n\n    Each codec module must export the following interface:\n\n    * getregentry() -> codecs.CodecInfo object\n    The getregentry() API must a CodecInfo object with encoder, decoder,\n    incrementalencoder, incrementaldecoder, streamwriter and streamreader\n    atttributes which adhere to the Python Codec Interface Standard.\n\n    In addition, a module may optionally also define the following\n    APIs which are then used by the package's codec search function:\n\n    * getaliases() -> sequence of encoding name strings to use as aliases\n\n    Alias names returned by getaliases() must be normalized encoding\n    names as defined by normalize_encoding().\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\ni\377\377\377\377N(\1\0\0\0t\7\0\0\0aliasess\v\0\0\0--unknown--t\1\0\0\0*s\0\1\0\0                                              . 0123456789       ABCDEFGHIJKLMNOPQRSTUVWXYZ      abcdefghijklmnopqrstuvwxyz                                                                                                                                     t\22\0\0\0CodecRegistryErrorc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__(\0\0\0\0(\0\0\0\0(\0\0\0\0s(\0\0\0/usr/lib/python2.7/encodings/__init__.pyR\2\0\0\0.\0\0\0s\2\0\0\0\6\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0sL\0\0\0t\0\0t\1\0d\1\0\203\2\0r0\0t\2\0|\0\0t\3\0\203\2\0r0\0|\0\0j\4\0d\2\0\203\1\0}\0\0n\0\0d\3\0j\5\0|\0\0j\6\0t\7\0\203\1\0j\10\0\203\0\0\203\1\0S(\4\0\0\0s\264\1\0\0 Normalize an encoding name.\n\n        Normalization works as follows: all non-alphanumeric\n        characters except the dot used for Python package names are\n        collapsed and replaced with a single underscore, e.g. '  -;#'\n        becomes '_'. Leading and trailing underscores are removed.\n\n        Note that encoding names should be ASCII only; if they do use\n        non-ASCII characters, these must be Latin-1 compatible.\n\n    t\7\0\0\0unicodes\7\0\0\0latin-1t\1\0\0\0_(\t\0\0\0t\7\0\0\0hasattrt\v\0\0\0__builtin__t\n\0\0\0isinstanceR\5\0\0\0t\6\0\0\0encodet\4\0\0\0joint\t\0\0\0translatet\22\0\0\0_norm_encoding_mapt\5\0\0\0split(\1\0\0\0t\10\0\0\0encoding(\0\0\0\0(\0\0\0\0s(\0\0\0/usr/lib/python2.7/encodings/__init__.pyt\22\0\0\0normalize_encoding1\0\0\0s\6\0\0\0\0\17\36\4\22\1c\1\0\0\0\n\0\0\0\7\0\0\0C\0\0\0s8\3\0\0t\0\0j\1\0|\0\0t\2\0\203\2\0}\1\0|\1\0t\2\0k\t\0r\"\0|\1\0St\3\0|\0\0\203\1\0}\2\0t\4\0j\1\0|\2\0\203\1\0pU\0t\4\0j\1\0|\2\0j\5\0d\1\0d\2\0\203\2\0\203\1\0}\3\0|\3\0d\0\0k\t\0rs\0|\3\0|\2\0g\2\0}\4\0n\t\0|\2\0g\1\0}\4\0xb\0|\4\0D]T\0}\5\0|\5\0\fs\203\0d\1\0|\5\0k\6\0r\242\0q\203\0n\0\0y \0t\7\0d\3\0|\5\0\27d\4\0t\10\0d\5\0d\6\0\203\1\2}\6\0Wn\21\0\4t\t\0k\n\0r\325\0\1\1\1q\203\0XPq\203\0Wd\0\0}\6\0y\r\0|\6\0j\n\0}\7\0Wn\27\0\4t\v\0k\n\0r\7\1\1\1\1d\0\0}\6\0n\1\0X|\6\0d\0\0k\10\0r\"\1d\0\0t\0\0|\0\0<d\0\0S|\7\0\203\0\0}\1\0t\f\0|\1\0t\r\0j\16\0\203\2\0s\334\2d\7\0t\17\0|\1\0\203\1\0\4\3k\1\0oZ\1d\10\0k\1\0n\2\0\2\1s{\1t\20\0d\t\0|\6\0j\21\0|\6\0j\22\0f\2\0\26\202\2\0n\0\0t\23\0|\1\0d\6\0\31d\n\0\203\2\0\fsW\2t\23\0|\1\0d\v\0\31d\n\0\203\2\0\fsW\2|\1\0d\f\0\31d\0\0k\t\0r\307\1t\23\0|\1\0d\f\0\31d\n\0\203\2\0\fsW\2|\1\0d\r\0\31d\0\0k\t\0r\353\1t\23\0|\1\0d\r\0\31d\n\0\203\2\0\fsW\2t\17\0|\1\0\203\1\0d\7\0k\4\0r!\2|\1\0d\7\0\31d\0\0k\t\0r!\2t\23\0|\1\0d\7\0\31d\n\0\203\2\0\fsW\2t\17\0|\1\0\203\1\0d\16\0k\4\0rs\2|\1\0d\16\0\31d\0\0k\t\0rs\2t\23\0|\1\0d\16\0\31d\n\0\203\2\0\frs\2t\20\0d\17\0|\6\0j\21\0|\6\0j\22\0f\2\0\26\202\2\0n\0\0t\17\0|\1\0\203\1\0d\10\0k\0\0s\225\2|\1\0d\20\0\31d\0\0k\10\0r\312\2|\1\0d\21\0d\20\0t\17\0|\1\0\203\1\0\30\24|\6\0j\21\0j\24\0d\1\0d\v\0\203\2\0d\v\0\31f\1\0\0277}\1\0n\0\0t\r\0j\16\0|\1\0\214\0\0}\1\0n\0\0|\1\0t\0\0|\0\0<y\20\0|\6\0j\25\0\203\0\0}\10\0Wn\21\0\4t\v\0k\n\0r\t\3\1\1\1n+\0Xx'\0|\10\0D]\37\0}\t\0|\t\0t\4\0k\7\0r\21\3|\5\0t\4\0|\t\0<q\21\3q\21\3W|\1\0S(\22\0\0\0Nt\1\0\0\0.R\6\0\0\0s\n\0\0\0encodings.t\10\0\0\0fromlistt\5\0\0\0leveli\0\0\0\0i\4\0\0\0i\7\0\0\0s#\0\0\0module \"%s\" (%s) failed to registert\10\0\0\0__call__i\1\0\0\0i\2\0\0\0i\3\0\0\0i\5\0\0\0s'\0\0\0incompatible codecs in module \"%s\" (%s)i\6\0\0\0(\1\0\0\0N(\26\0\0\0t\6\0\0\0_cachet\3\0\0\0gett\10\0\0\0_unknownR\20\0\0\0t\10\0\0\0_aliasest\7\0\0\0replacet\4\0\0\0Nonet\n\0\0\0__import__t\f\0\0\0_import_tailt\v\0\0\0ImportErrort\v\0\0\0getregentryt\16\0\0\0AttributeErrorR\t\0\0\0t\6\0\0\0codecst\t\0\0\0CodecInfot\3\0\0\0lenR\2\0\0\0R\3\0\0\0t\10\0\0\0__file__R\7\0\0\0R\16\0\0\0t\n\0\0\0getaliases(\n\0\0\0R\17\0\0\0t\5\0\0\0entryt\r\0\0\0norm_encodingt\20\0\0\0aliased_encodingt\10\0\0\0modnamest\7\0\0\0modnamet\3\0\0\0modR\36\0\0\0t\f\0\0\0codecaliasest\5\0\0\0alias(\0\0\0\0(\0\0\0\0s(\0\0\0/usr/lib/python2.7/encodings/__init__.pyt\17\0\0\0search_functionG\0\0\0sl\0\0\0\0\3\22\1\f\1\4\t\f\1\17\1\33\1\f\1\3\1\f\2\t\1\r\1\23\1\6\1\3\3\23\1\r\1\r\1\4\2\5\2\6\2\3\1\r\1\r\2\n\2\f\2\n\1\4\3\t\1\22\1\"\1\3\1\3\1\26\1\24\1\24", 4096) = 4096
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=669333, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=4370, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(4, "\1$\1$\0016\0016\1\3\1\3\1\26\1\"\0015\1\22\3\n\4\3\1\20\1\r\1\4\2\r\1\f\1\21\3(\20\0\0\0t\7\0\0\0__doc__R \0\0\0t\t\0\0\0encodingsR\0\0\0\0R\10\0\0\0R\25\0\0\0R\27\0\0\0R\34\0\0\0R\r\0\0\0R\30\0\0\0t\v\0\0\0LookupErrort\v\0\0\0SystemErrorR\2\0\0\0R\20\0\0\0R-\0\0\0t\10\0\0\0register(\0\0\0\0(\0\0\0\0(\0\0\0\0s(\0\0\0/usr/lib/python2.7/encodings/__init__.pyt\10\0\0\0<module>\35\0\0\0s\30\0\0\0\6\2\f\1\20\1\f\2\6\1\6\1\t\1\6\6\t\2\31\3\t\26\tV", 4096) = 274
27308 read(4, "", 4096)                 = 0
27308 close(4)                          = 0
27308 munmap(0xb7fd8000, 4096)          = 0
27308 stat64("/usr/lib/python2.7/encodings", {st_dev=makedev(8, 1), st_ino=661403, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/01/22-01:28:11, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 stat64("/usr/lib/python2.7/encodings", {st_dev=makedev(8, 1), st_ino=661403, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/01/22-01:28:11, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 stat64("/usr/lib/python2.7/encodings/codecs", 0xbfffde1c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/codecs.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/codecs.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/codecsmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/codecs.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/codecs.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/codecs", 0xbfffdddc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/codecs.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/codecs.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/codecsmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/codecs.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661470, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=72, st_size=35554, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/codecs.pyc", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669334, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=72, st_size=36521, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd8000
27308 read(5, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0+\0\0\0@\0\0\0sp\3\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0y\16\0d\1\0d\3\0l\3\0TWn#\0\4e\4\0k\n\0rQ\0\1Z\5\0\1e\6\0d\4\0e\5\0\26\203\1\0\202\1\0n\1\0Xd\5\0d\6\0d\7\0d\10\0d\t\0d\n\0d\v\0d\f\0d\r\0d\16\0d\17\0d\20\0d\21\0d\22\0d\23\0d\24\0d\25\0d\26\0d\27\0d\30\0d\31\0d\32\0d\33\0d\34\0d\35\0d\36\0d\37\0d \0d!\0d\"\0d#\0d$\0d%\0d&\0d'\0d(\0d)\0d*\0d+\0d,\0d-\0d.\0d/\0g+\0Z\7\0d0\0Z\10\0d1\0\4Z\t\0Z\n\0d2\0\4Z\v\0Z\f\0d3\0Z\r\0d4\0Z\16\0e\2\0j\17\0d5\0k\2\0r!\1e\n\0\4Z\20\0Z\21\0e\r\0Z\22\0n\20\0e\f\0\4Z\20\0Z\21\0e\16\0Z\22\0e\n\0Z\23\0e\f\0Z\24\0e\r\0Z\25\0e\16\0Z\26\0d\27\0e\27\0f\1\0d6\0\204\0\0\203\0\0YZ\30\0d\30\0dY\0d7\0\204\0\0\203\0\0YZ\31\0d\31\0e\32\0f\1\0d8\0\204\0\0\203\0\0YZ\33\0d9\0e\33\0f\1\0d:\0\204\0\0\203\0\0YZ\34\0d\32\0e\32\0f\1\0d;\0\204\0\0\203\0\0YZ\35\0d<\0e\35\0f\1\0d=\0\204\0\0\203\0\0YZ\36\0d\34\0e\31\0f\1\0d>\0\204\0\0\203\0\0YZ\37\0d\33\0e\31\0f\1\0d?\0\204\0\0\203\0\0YZ \0d\35\0dZ\0d@\0\204\0\0\203\0\0YZ!\0d\36\0d[\0dA\0\204\0\0\203\0\0YZ\"\0dB\0d\2\0dC\0dD\0dE\0\204\4\0Z$\0d\2\0dC\0dF\0\204\2\0Z%\0dG\0\204\0\0Z&\0dH\0\204\0\0Z'\0dI\0\204\0\0Z(\0dJ\0\204\0\0Z)\0dK\0\204\0\0Z*\0dL\0\204\0\0Z+\0dC\0dM\0\204\1\0Z,\0dC\0dN\0\204\1\0Z-\0dO\0\204\0\0Z.\0dP\0\204\0\0Z/\0y@\0e0\0dC\0\203\1\0Z1\0e0\0dQ\0\203\1\0Z2\0e0\0dR\0\203\1\0Z3\0e0\0dS\0\203\1\0Z4\0e0\0dT\0\203\1\0Z5\0Wn/\0\4e6\0k\n\0r\21\3\1\1\1d\2\0Z1\0d\2\0Z2\0d\2\0Z3\0d\2\0Z4\0d\2\0Z5\0n\1\0XdU\0Z7\0e7\0r-\3d\1\0d\2\0l8\0Z8\0n\0\0e9\0dV\0k\2\0rl\3e%\0e\2\0j:\0dW\0dX\0\203\3\0e\2\0_:\0e%\0e\2\0j;\0dX\0dW\0\203\3\0e\2\0_;\0n\0\0d\2\0S(\\\0\0\0s\236\0\0\0 codecs -- Python Codec Registry, API and helpers.\n\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\ni\377\377\377\377N(\1\0\0\0t\1\0\0\0*s%\0\0\0Failed to load the builtin codecs: %st\10\0\0\0registert\6\0\0\0lookupt\4\0\0\0opent\v\0\0\0EncodedFilet\3\0\0\0BOMt\6\0\0\0BOM_BEt\6\0\0\0BOM_LEt\10\0\0\0BOM32_BEt\10\0\0\0BOM32_LEt\10\0\0\0BOM64_BEt\10\0\0\0BOM64_LEt\10\0\0\0BOM_UTF8t\t\0\0\0BOM_UTF16t\f\0\0\0BOM_UTF16_LEt\f\0\0\0BOM_UTF16_BEt\t\0\0\0BOM_UTF32t\f\0\0\0BOM_UTF32_LEt\f\0\0\0BOM_UTF32_BEt\t\0\0\0CodecInfot\5\0\0\0Codect\22\0\0\0IncrementalEncodert\22\0\0\0IncrementalDecodert\f\0\0\0StreamReadert\f\0\0\0StreamWritert\22\0\0\0StreamReaderWritert\r\0\0\0StreamRecodert\n\0\0\0getencodert\n\0\0\0getdecodert\25\0\0\0getincrementalencodert\25\0\0\0getincrementaldecodert\t\0\0\0getreadert\t\0\0\0getwritert\6\0\0\0encodet\6\0\0\0decodet\n\0\0\0iterencodet\n\0\0\0iterdecodet\r\0\0\0strict_errorst\r\0\0\0ignore_errorst\16\0\0\0replace_errorst\30\0\0\0xmlcharrefreplace_errorst\27\0\0\0backslashreplace_errorst\16\0\0\0register_errort\f\0\0\0lookup_errors\3\0\0\0\357\273\277s\2\0\0\0\377\376s\2\0\0\0\376\377s\4\0\0\0\377\376\0\0t\4\0\0\0\0\0\376\377t\6\0\0\0littlec\0\0\0\0\0\0\0\0\6\0\0\0B\0\0\0s)\0\0\0e\0\0Z\1\0d\2\0d\2\0d\2\0d\2\0d\2\0d\0\0\204\5\0Z\3\0d\1\0\204\0\0Z\4\0RS(\3\0\0\0c\10\0\0\0\t\0\0\0\6\0\0\0C\0\0\0sa\0\0\0t\0\0j\1\0|\0\0|\1\0|\2\0|\3\0|\4\0f\4\0\203\2\0}\10\0|\7\0|\10\0_\2\0|\1\0|\10\0_\3\0|\2\0|\10\0_\4\0|\5\0|\10\0_\5\0|\6\0|\10\0_\6\0|\4\0|\10\0_\7\0|\3\0|\10\0_\10\0|\10\0S(\1\0\0\0N(\t\0\0\0t\5\0\0\0tuplet\7\0\0\0__new__t\4\0\0\0nameR!\0\0\0R\"\0\0\0t\22\0\0\0incrementalencodert\22\0\0\0incrementaldecodert\f\0\0\0streamwritert\f\0\0\0streamreader(\t\0\0\0t\3\0\0\0clsR!\0\0\0R\"\0\0\0R4\0\0\0R3\0\0\0R1\0\0\0R2\0\0\0R0\0\0\0t\4\0\0\0self(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR/\0\0\0S\0\0\0s\22\0\0\0\0\2\36\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1c\1\0\0\0\1\0\0\0\6\0\0\0C\0\0\0s)\0\0\0d\1\0|\0\0j\0\0j\1\0|\0\0j\0\0j\2\0|\0\0j\3\0t\4\0|\0\0\203\1\0f\4\0\26S(\2\0\0\0Ns&\0\0\0<%s.%s object for encoding %s at 0x%x>(\5\0\0\0t\t\0\0\0__class__t\n\0\0\0__module__t\10\0\0\0__name__R0\0\0\0t\2\0\0\0id(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\10\0\0\0__repr___\0\0\0s\2\0\0\0\0\1N(\5\0\0\0R9\0\0\0R8\0\0\0t\4\0\0\0NoneR/\0\0\0R;\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\23\0\0\0Q\0\0\0s\6\0\0\0\6\2\6\1\22\vc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s&\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0d\2\0\204\1\0Z\3\0d\1\0d\3\0\204\1\0Z\4\0RS(\4\0\0\0s\255\3\0\0 Defines the interface for stateless encoders/decoders.\n\n        The .encode()/.decode() methods may use different error\n        handling schemes by providing the errors argument. These\n        string values are predefined:\n\n         'strict' - raise a ValueError error (or a subclass)\n         'ignore' - ignore the character and continue with the next\n         'replace' - replace with a suitable replacement character;\n                    Python will use the official U+FFFD REPLACEMENT\n                    CHARACTER for the builtin Unicode codecs on\n                    decoding and '?' on encoding.\n         'xmlcharrefreplace' - Replace with the appropriate XML\n                               character reference (only for encoding).\n         'backslashreplace'  - Replace with backslashed escape sequences\n                               (only for encoding).\n\n        The set of allowed values can be extended via register_error.\n\n    t\6\0\0\0strictc\3\0\0\0\3\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\1\0S(\2\0\0\0s+\2\0\0 Encodes the object input and returns a tuple (output\n            object, length consumed).\n\n            errors defines the error handling to apply. It defaults to\n            'strict' handling.\n\n            The method may not store state in the Codec instance. Use\n            StreamCodec for codecs which have to keep state in order to\n         ", 4096) = 4096
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669334, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=72, st_size=36521, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(5, "   make encoding/decoding efficient.\n\n            The encoder must be able to handle zero length input and\n            return an empty object of the output object type in this\n            situation.\n\n        N(\1\0\0\0t\23\0\0\0NotImplementedError(\3\0\0\0R6\0\0\0t\5\0\0\0inputt\6\0\0\0errors(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR!\0\0\0x\0\0\0s\2\0\0\0\0\21c\3\0\0\0\3\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\1\0S(\2\0\0\0s\372\2\0\0 Decodes the object input and returns a tuple (output\n            object, length consumed).\n\n            input must be an object which provides the bf_getreadbuf\n            buffer slot. Python strings, buffer objects and memory\n            mapped files are examples of objects providing this slot.\n\n            errors defines the error handling to apply. It defaults to\n            'strict' handling.\n\n            The method may not store state in the Codec instance. Use\n            StreamCodec for codecs which have to keep state in order to\n            make encoding/decoding efficient.\n\n            The decoder must be able to handle zero length input and\n            return an empty object of the output object type in this\n            situation.\n\n        N(\1\0\0\0R>\0\0\0(\3\0\0\0R6\0\0\0R?\0\0\0R@\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\"\0\0\0\213\0\0\0s\2\0\0\0\0\25(\5\0\0\0R9\0\0\0R8\0\0\0t\7\0\0\0__doc__R!\0\0\0R\"\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\24\0\0\0b\0\0\0s\6\0\0\0\6\25\6\1\f\23c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sA\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0d\2\0\204\1\0Z\3\0e\4\0d\3\0\204\1\0Z\5\0d\4\0\204\0\0Z\6\0d\5\0\204\0\0Z\7\0d\6\0\204\0\0Z\10\0RS(\7\0\0\0s\350\0\0\0\n    An IncrementalEncoder encodes an input in multiple steps. The input can be\n    passed piece by piece to the encode() method. The IncrementalEncoder remembers\n    the state of the Encoding process between calls to encode().\n    R=\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\26\0\0\0|\1\0|\0\0_\0\0d\1\0|\0\0_\1\0d\2\0S(\3\0\0\0s\364\0\0\0\n        Creates an IncrementalEncoder instance.\n\n        The IncrementalEncoder may use different error handling schemes by\n        providing the errors keyword argument. See the module docstring\n        for a list of possible values.\n        t\0\0\0\0N(\2\0\0\0R@\0\0\0t\6\0\0\0buffer(\2\0\0\0R6\0\0\0R@\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\10\0\0\0__init__\250\0\0\0s\4\0\0\0\0\10\t\1c\3\0\0\0\3\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\1\0S(\2\0\0\0sA\0\0\0\n        Encodes input and returns the resulting object.\n        N(\1\0\0\0R>\0\0\0(\3\0\0\0R6\0\0\0R?\0\0\0t\5\0\0\0final(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR!\0\0\0\263\0\0\0s\2\0\0\0\0\4c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\1\0S(\2\0\0\0s:\0\0\0\n        Resets the encoder to the initial state.\n        N(\0\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\5\0\0\0reset\271\0\0\0s\0\0\0\0c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\1\0S(\2\0\0\0s:\0\0\0\n        Return the current state of the encoder.\n        i\0\0\0\0(\0\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\10\0\0\0getstate\276\0\0\0s\2\0\0\0\0\4c\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\1\0S(\2\0\0\0sl\0\0\0\n        Set the current state of the encoder. state must have been\n        returned by getstate().\n        N(\0\0\0\0(\2\0\0\0R6\0\0\0t\5\0\0\0state(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\10\0\0\0setstate\304\0\0\0s\0\0\0\0(\t\0\0\0R9\0\0\0R8\0\0\0RA\0\0\0RD\0\0\0t\5\0\0\0FalseR!\0\0\0RF\0\0\0RG\0\0\0RI\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\25\0\0\0\242\0\0\0s\f\0\0\0\6\5\6\1\f\v\f\6\t\5\t\6t\32\0\0\0BufferedIncrementalEncoderc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sJ\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0d\2\0\204\1\0Z\3\0d\3\0\204\0\0Z\4\0e\5\0d\4\0\204\1\0Z\6\0d\5\0\204\0\0Z\7\0d\6\0\204\0\0Z\10\0d\7\0\204\0\0Z\t\0RS(\10\0\0\0s\300\0\0\0\n    This subclass of IncrementalEncoder can be used as the baseclass for an\n    incremental encoder if the encoder must keep some of the output in a\n    buffer between calls to encode().\n    R=\0\0\0c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\35\0\0\0t\0\0j\1\0|\0\0|\1\0\203\2\0\1d\1\0|\0\0_\2\0d\0\0S(\2\0\0\0NRB\0\0\0(\3\0\0\0R\25\0\0\0RD\0\0\0RC\0\0\0(\2\0\0\0R6\0\0\0R@\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRD\0\0\0\320\0\0\0s\4\0\0\0\0\1\20\1c\4\0\0\0\4\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\0\0S(\1\0\0\0N(\1\0\0\0R>\0\0\0(\4\0\0\0R6\0\0\0R?\0\0\0R@\0\0\0RE\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\16\0\0\0_buffer_encode\324\0\0\0s\2\0\0\0\0\3c\3\0\0\0\6\0\0\0\4\0\0\0C\0\0\0s<\0\0\0|\0\0j\0\0|\1\0\27}\3\0|\0\0j\1\0|\3\0|\0\0j\2\0|\2\0\203\3\0\\\2\0}\4\0}\5\0|\3\0|\5\0\37|\0\0_\0\0|\4\0S(\1\0\0\0N(\3\0\0\0RC\0\0\0RL\0\0\0R@\0\0\0(\6\0\0\0R6\0\0\0R?\0\0\0RE\0\0\0t\4\0\0\0datat\6\0\0\0resultt\10\0\0\0consumed(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR!\0\0\0\331\0\0\0s\10\0\0\0\0\2\r\1\36\2\r\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\32\0\0\0t\0\0j\1\0|\0\0\203\1\0\1d\1\0|\0\0_\2\0d\0\0S(\2\0\0\0NRB\0\0\0(\3\0\0\0R\25\0\0\0RF\0\0\0RC\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRF\0\0\0\341\0\0\0s\4\0\0\0\0\1\r\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0p\f\0d\1\0S(\2\0\0\0Ni\0\0\0\0(\1\0\0\0RC\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRG\0\0\0\345\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\23\0\0\0|\1\0p\t\0d\1\0|\0\0_\0\0d\0\0S(\2\0\0\0NRB\0\0\0(\1\0\0\0RC\0\0\0(\2\0\0\0R6\0\0\0RH\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRI\0\0\0\350\0\0\0s\2\0\0\0\0\1(\n\0\0\0R9\0\0\0R8\0\0\0RA\0\0\0RD\0\0\0RL\0\0\0RJ\0\0\0R!\0\0\0RF\0\0\0RG\0\0\0RI\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRK\0\0\0\312\0\0\0s\16\0\0\0\6\5\6\1\f\4\t\5\f\10\t\4\t\3c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sA\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0d\2\0\204\1\0Z\3\0e\4\0d\3\0\204\1\0Z\5\0d\4\0\204\0\0Z\6\0d\5\0\204\0\0Z\7\0d\6\0\204\0\0Z\10\0RS(\7\0\0\0s\350\0\0\0\n    An IncrementalDecoder decodes an input in multiple steps. The input can be\n    passed piece by piece to the decode() method. The IncrementalDecoder\n    remembers the state of the decoding process between calls to decode().\n    R=\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\1\0|\0\0_\0\0d\1\0S(\2\0\0\0s\363\0\0\0\n        Creates a IncrementalDecoder instance.\n\n        The IncrementalDecoder may use different error handling schemes by\n        providing the errors keyword argument. See the module docstring\n        for a list of possible values.\n        N(\1\0\0\0R@\0\0\0(\2\0\0\0R6\0\0\0R@\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRD\0\0\0\361\0\0\0s\2\0\0\0\0\10c\3\0\0\0\3\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\1\0S(\2\0\0\0sA\0\0\0\n        Decodes input and returns the resulting object.\n        N(\1\0\0\0R>\0\0\0(\3\0\0\0R6\0\0\0R?\0\0\0RE\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\"\0\0\0\373\0\0\0s\2\0\0\0\0\4c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\1\0S(\2\0\0\0s:\0\0\0\n        Resets the decoder to the initial state.\n        N(\0\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRF\0\0\0\1\1\0\0s\0\0\0\0c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\4\0\0\0d\3\0S(\4\0\0\0s\t\2\0\0\n        Return the current state of the decoder.\n\n        This must be a (buffered_input, additional_state_info) tuple.\n        buffered_input must be a bytes object containing bytes that\n        were passed to decode() that have not yet been converted.\n        additional_state_info must be a non-negative integer\n        representing the state of the decoder WITHOUT yet having\n        processed the contents of buffered_input.  In the initial state\n        and after reset(), getstate() must return (b\"\", 0).\n        RB\0\0\0i\0\0\0\0(\2\0\0\0RB\0\0\0i\0\0\0\0(\0\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRG\0\0\0\6\1\0\0s\2\0\0\0\0\fc\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\1\0S(\2\0\0\0s\266\0\0\0\n        Set the current state of the decoder.\n\n        state must have been returned by getstate().  The effect of\n        setstate((b\"\", 0)) must be equivalent to reset().\n        N(\0\0\0\0(\2\0\0\0R6\0\0\0RH\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRI\0\0\0\24\1\0\0s\0\0\0\0(\t\0\0\0R9\0\0\0R8\0\0\0RA\0\0\0RD\0\0\0RJ\0\0\0R\"\0\0\0RF\0\0\0RG\0\0\0RI\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\26\0\0\0\353\0\0\0s\f\0\0\0\6\5\6\1\f\n\f\6\t\5\t\16t\32\0\0\0BufferedIncrementalDecoderc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sJ\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0d\2\0\204\1\0Z\3\0d\3\0\204\0\0Z\4\0e\5\0d\4\0\204\1\0Z\6\0d\5\0\204\0\0Z\7\0d\6\0\204\0\0Z\10\0d\7\0\204\0\0Z\t\0RS(\10\0\0\0s\256\0\0\0\n    This subclass of IncrementalDecoder can be used as the baseclass for an\n    incremental decoder if the decoder must be able to handle incomplete byte\n    sequences.\n    R=\0\0\0c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\35\0\0\0t\0\0j\1\0|\0\0|\1\0\203\2\0\1d\1\0|\0\0_\2\0d\0\0S(\2\0\0\0NRB\0\0\0(\3\0\0\0R\26\0\0\0RD\0\0\0RC\0\0\0(\2\0\0\0R6\0\0\0R@\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRD\0\0\0\"\1\0\0s\4\0\0\0\0\1\20\1c\4\0\0\0\4\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\0\0S(\1\0\0\0N(\1\0\0\0R>\0\0\0(\4\0\0\0R6\0\0\0R?\0\0\0R@\0\0\0RE\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\16\0\0\0_buffer_decode&\1\0\0s\2\0\0\0\0\3c\3\0\0\0\6\0\0\0\4\0\0\0C\0\0\0s<\0\0\0|\0\0j\0\0|\1\0\27}\3\0|\0\0j\1\0|\3\0|\0\0j\2\0|\2\0\203\3\0\\\2\0}\4\0}\5\0|\3\0|\5\0\37|\0\0_\0\0|\4\0S(\1\0\0\0N(\3\0\0\0RC\0\0\0RQ\0\0\0R@\0\0\0(\6\0\0\0R6\0\0\0R?\0\0\0RE\0\0\0RM\0\0\0RN\0\0\0RO\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\"\0\0\0+\1\0\0s\10\0\0\0\0\2\r\1\36\2\r\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\32\0\0\0t\0\0j\1\0|\0\0\203\1\0\1d\1\0|\0\0_\2\0d\0\0S(\2\0\0\0NRB\0\0\0(\3\0\0\0R\26\0\0\0RF\0\0\0RC\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRF\0\0\0003\1\0\0s\4\0\0\0\0\1\r\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0d\1\0f\2\0S(\2\0\0\0Ni\0\0\0\0(\1\0\0\0RC\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRG\0\0\0007\1\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\21\0\0\0|\1\0d\1\0\31|\0\0_\0\0d\0\0S(\2\0\0\0Ni\0\0\0\0(\1\0\0\0RC\0\0\0(\2\0\0\0R6\0\0\0RH\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRI\0\0\0;\1\0\0s\2\0\0\0\0\2(\n\0\0\0R9\0\0\0R8\0\0\0RA\0\0\0RD\0\0\0RQ\0\0\0RJ\0\0\0R\"\0\0\0RF\0\0\0RG\0\0\0RI\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRP\0\0\0\34\1\0\0s\16\0\0\0\6\5\6\1\f\4\t\5\f\10\t\4\t\4c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sY\0\0\0e\0\0Z\1\0d\0\0d\1\0\204\1\0Z\2\0d\2\0\204\0\0Z\3\0d\3\0\204\0\0Z\4\0d\4\0\204\0\0Z\5\0d\5\0d\6\0\204\1\0Z\6\0e\7\0d\7\0\204\1\0Z\10\0d\10\0\204\0\0Z\t\0d\t\0\204\0\0Z\n\0RS(\n\0\0\0R=\0\0\0c\3\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s\26\0\0\0|\1\0|\0\0_\0\0|\2\0|\0\0_\1\0d\1\0S(\2\0\0\0s[\3\0\0 Creates a StreamWriter instance.\n\n            stream must be a file-like object open for writing\n            (binary) data.\n\n            The StreamWriter may use different error handling\n            schemes by providing the errors keyword argument. These\n            parameters are predefined:\n\n             'strict' - raise a ValueError (or a subclass)\n             'ignore' - ignore the character and continue with the next\n             'replace'- replace with a suitable replacement character\n             'xmlcharrefreplace' - Replace with the appropriate XML\n                                   character reference.\n             'backslashreplace'  - Replace with backslashed escape\n                                   sequences (only for encoding).\n\n            The set of allowed parameter values can be extended via\n            register_error.\n        N(\2\0\0\0t\6\0\0\0streamR@\0\0\0(\3\0\0\0R6\0\0\0RR\0\0\0R@\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRD\0\0\0H\1\0\0s\4\0\0\0\0\26\t\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0s/\0\0\0|\0\0j\0\0|\1\0|\0\0j\1\0\203\2\0\\\2\0}\2\0}\3\0|\0\0j\2\0j\3\0|\2\0\203\1\0\1d\1\0S(\2\0\0\0s>\0\0\0 Writes the object's contents encoded to self.stream.\n        N(\4\0\0\0R!\0\0\0R@\0\0\0RR\0\0\0t\5\0\0\0write(\4\0\0\0R6\0\0\0t\6\0\0\0objectRM\0\0\0RO\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRS\0\0\0a\1\0\0s\4\0\0\0\0\4\33\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\32\0\0\0|\0\0j\0\0d\1\0j\1\0|\1\0\203\1\0\203\1\0\1d\2\0S(\3\0\0\0s[\0\0\0 Writes the concatenated list of strings to the stream\n            using .write().\n        RB\0\0\0N(\2\0\0\0RS\0\0\0t\4\0\0\0join(\2\0\0\0R6\0\0\0t\4\0\0\0list(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\n\0\0\0writelinesh\1\0\0s\2\0\0\0\0\5c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\1\0S(\2\0\0\0s5\1\0\0 Flushes and resets the codec buffers used for keeping state.\n\n            Calling this method should ensure that the data on the\n            output is put into a clean state, that allows appending\n            of new fresh data without having to rescan the whole\n            stream to recover state.\n\n        N(\0\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRF\0\0\0o\1\0\0s\2\0\0\0\0\ni\0\0\0\0c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s<\0\0\0|\0\0j\0\0j\1\0|\1\0|\2\0\203\2\0\1|\2\0d\1\0k\2\0r8\0|\1\0d\1\0k\2\0r8\0|\0\0j\2\0\203\0\0\1n\0\0d\0\0S(\2\0\0\0Ni\0\0\0\0(\3\0\0\0RR\0\0\0t\4\0\0\0seekRF\0\0\0(\3\0\0\0R6\0\0\0t\6\0\0\0offsett\6\0\0\0whence(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRX\0\0\0{\1\0\0s\6\0\0\0\0\1\23\1\30\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\20\0\0\0|\2\0|\0\0j\0\0|\1\0\203\2\0S(\1\0\0\0s?\0\0\0 Inherit all other methods from the underlying stream.\n        (\1\0\0\0RR\0\0\0(\3\0\0\0R6\0\0\0R0\0\0\0t\7\0\0\0getattr(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\v\0\0\0__getattr__\200\1\0\0s\2\0\0\0\0\5c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0|\0\0S(\1\0\0\0N(\0\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\t\0\0\0__enter__\207\1\0\0s\2\0\0\0\0\1c\4\0\0\0\4\0\0\0\1\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\2\0\0\0RR\0\0\0t\5\0\0\0close(\4\0\0\0R6\0\0\0t\4\0\0\0typet\5\0\0\0valuet\2\0\0\0tb(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\10\0\0\0__exit__\212\1\0\0s\2\0\0\0\0\1(\v\0\0\0R9\0\0\0R8\0\0\0RD\0\0\0RS\0\0\0RW\0\0\0RF\0\0\0RX\0\0\0R[\0\0\0R\\\0\0\0R]\0\0\0Rb\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\30\0\0\0F\1\0\0s\20\0\0\0\6\2\f\31\t\7\t\7\t\f\f\6\f\6\t\3c\0\0\0\0\0\0\0\0\4\0\0\0B\0\0\0s\225\0\0\0e\0\0Z\1\0d\0\0d\1\0\204\1\0Z\2\0d\0\0d\2\0\204\1\0Z\3\0d\3\0d\3\0e\4\0d\4\0\204\3\0Z\5\0d\17\0e\7\0d\5\0\204\2\0Z\10\0d\17\0e\7\0d\6\0\204\2\0Z\t\0d\7\0\204\0\0Z\n\0d\10\0d\t\0\204\1\0Z\v\0d\n\0\204\0\0Z\f\0d\v\0\204\0\0Z\r\0e\16\0d\f\0\204\1\0Z\17\0d\r\0\204\0\0Z\20\0d\16\0\204\0\0Z\21\0RS(\20\0\0\0R=\0\0\0c\3\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s1\0\0\0|\1\0|\0\0_\0\0|\2\0|\0\0_\1\0d\1\0|\0\0_\2\0d\1\0|\0\0_\3\0d\2\0|\0\0_\5\0d\2\0S(\3\0\0\0s[\2\0\0 Creates a StreamReader instance.\n\n            stream must be a file-like object open for reading\n            (binary) data.\n\n            The StreamReader may use different error handling\n            schemes by providing the errors keyword argument. These\n            parameters are predefined:\n\n             'strict' - raise a ValueError (or a subclass)\n             'ignore' - ignore the character and continue with the next\n             'replace'- replace with a suitable replacement character;\n\n            The set of allowed parameter values can be extended via\n            register_error.\n        RB\0\0\0N(\6\0\0\0RR\0\0\0R@\0\0\0t\n\0\0\0bytebuffert\n\0\0\0charbufferR<\0\0\0t\n\0\0\0linebuffer(\3\0\0\0R6\0\0\0RR\0\0\0R@\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRD\0\0\0\221\1\0\0s\n\0\0\0\0\22\t\1\t\1\t\3\t\1c\3\0\0\0\3\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0t\0\0\202\1\0d\0\0S(\1\0\0\0N(\1\0\0\0R>\0\0\0(\3\0\0\0R6\0\0\0R?\0\0\0R@\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\"\0\0\0\253\1\0\0s\2\0\0\0\0\1i\377\377\377\377c\4\0\0\0\v\0\0\0\5\0\0\0C\0\0\0s\266\1\0\0|\0\0j\0\0r*\0d\1\0j\1\0|\0\0j\0\0\203\1\0|\0\0_\2\0d\4\0|\0\0_\0\0n\0\0xG\1t\4\0rs\1|\2\0d\2\0k\5\0r[\0t\5\0|\0\0j\2\0\203\1\0|\2\0k\5\0r\203\0Pq\203\0n(\0|\1\0d\2\0k\5\0r\203\0t\5\0|\0\0j\2\0\203\1\0|\1\0k\5\0r\203\0Pq\203\0n\0\0|\1\0d\2\0k\0\0r\241\0|\0\0j\6\0j\7\0\203\0\0}\4\0n\22\0|\0\0j\6\0j\7\0|\1\0\203\1\0}\4\0|\0\0j\10\0|\4\0\27}\5\0y\37\0|\0\0j\t\0|\5\0|\0\0j\n\0\203\2\0\\\2\0}\6\0}\7\0Wnh\0\4t\v\0k\n\0rI\1\1}\10\0\1|\3\0rC\1|\0\0j\t\0|\5\0|\10\0j\f\0 |\0\0j\n\0\203\2\0\\\2\0}\6\0}\7\0|\6\0j\r\0t\4\0\203\1\0}\t\0t\5\0|\t\0\203\1\0d\3\0k\1\0rF\1\202\0\0qF\1qJ\1\202\0\0n\1\0X|\5\0|\7\0\37|\0\0_\10\0|\0\0\4j\2\0|\6\0007\2_\2\0|\4\0s-\0Pq-\0q-\0W|\2\0d\2\0k\0\0r\225\1|\0\0j\2\0}\n\0d\1\0|\0\0_\2\0n\35\0|\0\0j\2\0|\2\0 }\n\0|\0\0j\2\0|\2\0\37|\0\0_\2\0|\n\0S(\5\0\0\0s\3\5\0\0 Decodes data from the stream self.stream and returns the\n            resulting object.\n\n            chars indicates the number of characters to read from the\n            stream. read() will never return more than chars\n            characters, but it might return less, if there are not enough\n            characters available.\n\n            size indicates the approximate maximum number of bytes to\n            read from the stream for decoding purposes. The decoder\n            can modify this setting as appropriate. The default value\n            -1 indicates to read and decode as much as possible.  size\n            is intended to prevent having to decode huge files in one\n            step.\n\n            If firstline is true, and a UnicodeDecodeError happens\n            after the first line terminator in the input only the first line\n            will be returned, the rest of the input will be kept until the\n            next call to read().\n\n            The method should use a greedy read strategy meaning that\n            it should read as much data as is allowed within the\n            definition of the encoding and the given size, e.g.  if\n            optional encoding endings or state markers are available\n            on the stream, these should be read too.\n        RB\0\0\0i\0\0\0\0i\1\0\0\0N(\16\0\0\0Re\0\0\0RU\0\0\0Rd\0\0\0R<\0\0\0t\4\0\0\0Truet\3\0\0\0lenRR\0\0\0t\4\0\0\0readRc\0\0\0R\"\0\0\0R@\0\0\0t\22\0\0\0UnicodeDecodeErrort\5\0\0\0startt\n\0\0\0splitlines(\v\0\0\0R6\0\0\0t\4\0\0\0sizet\5\0\0\0charst\t\0\0\0firstlinet\7\0\0\0newdataRM\0\0\0t\10\0\0\0newcharst\f\0\0\0decodedbytest\3\0\0\0exct\5\0\0\0linesRN\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRh\0\0\0\256\1\0\0sB\0\0\0\0\35\t\1\25\1\f\3\t\2\f\1\25\1\7\1\f\1\25\1\7\2\f\1\22\2\22\2\r\1\3\1\37\1\17\1\6\1\"\1\17\1\22\1\t\2\7\2\r\2\17\2\6\1\10\1\f\2\t\1\f\3\r\1\20\1c\3\0\0\0\t\0\0\0\6\0\0\0C\0\0\0sI\2\0\0|\0\0j\0\0rq\0|\0\0j\0\0d\1\0\31}\3\0|\0\0j\0\0d\1\0=t\1\0|\0\0j\0\0\203\1\0d\2\0k\2\0rQ\0|\0\0j\0\0d\1\0\31|\0\0_\2\0d\f\0|\0\0_\0\0n\0\0|\2\0sm\0|\3\0j\4\0t\5\0\203\1\0d\1\0\31}\3\0n\0\0|\3\0S|\1\0pz\0d\3\0}\4\0d\4\0}\3\0x\277\1t\6\0rD\2|\0\0j\7\0|\4\0d\5\0t\6\0\203\1\1}\5\0|\5\0r\330\0|\5\0j\10\0d\6\0\203\1\0r\330\0|\5\0|\0\0j\7\0d\7\0d\2\0d\10\0d\2\0\203\0\0027}\5\0q\330\0n\0\0|\3\0|\5\0007}\3\0|\3\0j\4\0t\6\0\203\1\0}\6\0|\6\0r\356\1t\1\0|\6\0\203\1\0d\2\0k\4\0r\210\1|\6\0d\1\0\31}\3\0|\6\0d\1\0=t\1\0|\6\0\203\1\0d\2\0k\4\0rT\1|\6\0d\t\0c\2\0\31|\0\0j\2\0007\3<|\6\0|\0\0_\0\0d\f\0|\0\0_\2\0n\24\0|\6\0d\1\0\31|\0\0j\2\0\27|\0\0_\2\0|\2\0s\204\1|\3\0j\4\0t\5\0\203\1\0d\1\0\31}\3\0n\0\0Pn\0\0|\6\0d\1\0\31}\7\0|\6\0d\1\0\31j\4\0t\5\0\203\1\0d\1\0\31}\10\0|\7\0|\10\0k\3\0r\356\1d\4\0j\t\0|\6\0d\2\0\37\203\1\0|\0\0j\2\0\27|\0\0_\2\0|\2\0r\341\1|\7\0}\3\0n\6\0|\10\0}\3\0Pq\356\1n\0\0|\5\0\fs\1\2|\1\0d\f\0k\t\0r(\2|\3\0r$\2|\2\0\fr$\2|\3\0j\4\0t\5\0\203\1\0d\1\0\31}\3\0n\0\0Pn\0\0|\4\0d\n\0k\0\0r\206\0|\4\0d\v\0009}\4\0q\206\0q\206\0W|\3\0S(\r\0\0\0s\261\0\0\0 Read one line from the input stream and return the\n            decoded data.\n\n            size, if given, is passed as size argument to the\n            read() method.\n\n        i\0\0\0\0i\1\0\0\0iH\0\0\0RB\0\0\0Rn\0\0\0s\1\0\0\0\rRl\0\0\0Rm\0\0\0i\377\377\377\377i@\37\0\0i\2\0\0\0N(\n\0\0\0Re\0\0\0Rg\0\0\0Rd\0\0\0R<\0\0\0Rk\0\0\0RJ\0\0\0Rf\0\0\0Rh\0\0\0t\10\0\0\0endswithRU\0\0\0(\t\0\0\0R6\0\0\0Rl\0\0\0t\10\0\0\0keependst\4\0\0\0linet\10\0\0\0readsizeRM\0\0\0Rs\0\0\0t\f\0\0\0line0withendt\17\0\0\0line0withoutend(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\10\0\0\0readline\372\1\0\0sZ\0\0\0\0\v\t\1\r\1\n\1\25\3\20\1\f\1\6\1\26\1\4\2\f\1\6\2\t\1\25\1\6\4\17\1\"\2\n\1\17\1\6\1\22\3\n\1\7\1\22\2\23\1\t\1\f\3\24\1\6\1\26\1\4\1\n\1\27\1\f\2\35\1\6\1\t\2\6\1\7\2\23\1\r\1\26\1\4\1\f\1\21\1c\3\0\0\0\4\0\0\0\2\0\0\0C\0\0\0s\31\0\0\0|\0\0j\0\0\203\0\0}\3\0|\3\0j\1\0|\2\0\203\1\0S(\1\0\0\0sZ\1\0\0 Read all lines available on the input stream\n            and return them as list of lines.\n\n            Line breaks are implemented using the codec's decoder\n            method and are included in the list entries.\n\n            sizehint, if given, is ignored since there is no efficient\n            way to finding the true end-of-line.\n\n        (\2\0\0\0Rh\0\0\0Rk\0\0\0(\4\0\0\0R6\0\0\0t\10\0\0\0sizehintRu\0\0\0RM\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\t\0\0\0readlinesC\2\0\0s\4\0\0\0\0\f\f\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\37\0\0\0d\1\0|\0\0_\0\0d\2\0|\0\0_\1\0d\3\0|\0\0_\3\0d\3\0S(\4\0\0\0s\343\0\0\0 Resets the codec buffers used for keeping state.\n\n            Note that no stream repositioning should take place.\n            This method is primarily intended to be able to recover\n            from decoding errors.\n\n        RB\0\0\0u\0\0\0\0N(\4\0\0\0Rc\0\0\0Rd\0\0\0R<\0\0\0Re\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRF\0\0\0R\2\0\0s\6\0\0\0\0\t\t\1\t\1i\0\0\0\0c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s!\0\0\0|\0\0j\0\0j\1\0|\1\0|\2\0\203\2\0\1|\0\0j\2\0\203\0\0\1d\1\0S(\2\0\0\0sp\0\0\0 Set the input stream's current position.\n\n            Resets the codec buffers used for keeping state.\n        N(\3\0\0\0RR\0\0\0RX\0\0\0RF\0\0\0(\3\0\0\0R6\0\0\0RY\0\0\0RZ\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRX\0\0\0_\2\0\0s\4\0\0\0\0\5\23\1c\1\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s \0\0\0|\0\0j\0\0\203\0\0}\1\0|\1\0r\26\0|\1\0St\1\0\202\1\0d\1\0S(\2\0\0\0s4\0\0\0 Return the next decoded line from the input stream.N(\2\0\0\0Rz\0\0\0t\r\0\0\0StopIteration(\2\0\0\0R6\0\0\0Rv\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\4\0\0\0nextg\2\0\0s\10\0\0\0\0\3\f\1\6\1\4\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0|\0\0S(\1\0\0\0N(\0\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\10\0\0\0__iter__o\2\0\0s\2\0\0\0\0\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\20\0\0\0|\2\0|\0\0j\0\0|\1\0\203\2\0S(\1\0\0\0s?\0\0\0 Inherit all other methods from the underlying stream.\n        (\1\0\0\0RR\0\0\0(\3\0\0\0R6\0\0\0R0\0\0\0R[\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\\\0\0\0r\2\0\0s\2\0\0\0\0\5c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0|\0\0S(\1\0\0\0N(\0\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR]\0\0\0y\2\0\0s\2\0\0\0\0\1c\4\0\0\0\4\0\0\0\1\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\2\0\0\0RR\0\0\0R^\0\0\0(\4\0\0\0R6\0\0\0R_\0\0\0R`\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRb\0\0\0|\2\0\0s\2\0\0\0\0\1N(\22\0\0\0R9\0\0\0R8\0\0\0RD\0\0\0R\"\0\0\0RJ\0\0\0Rh\0\0\0R<\0\0\0Rf\0\0\0Rz\0\0\0R|\0\0\0RF\0\0\0RX\0\0\0R~\0\0\0R\177\0\0\0R[\0\0\0R\\\0\0\0R]\0\0\0Rb\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\27\0\0\0\217\1\0\0s\30\0\0\0\6\2\f\32\f\3\22L\17I\17\17\t\r\f\10\t\10\t\4\f\6\t\3c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s\233\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0Z\3\0d\2\0d\3\0\204\1\0Z\4\0d\4\0d\5\0\204\1\0Z\5\0d\22\0d\6\0\204\1\0Z\7\0d\22\0d\7\0\204\1\0Z\10\0d\10\0\204\0\0Z\t\0d\t\0\204\0\0Z\n\0d\n\0\204\0\0Z\v\0d\v\0\204\0\0Z\f\0d\f\0\204\0\0Z\r\0d\r\0d\16\0\204\1\0Z\16\0e\17\0d\17\0\204\1\0Z\20\0d\20\0\204\0\0Z\21\0d\21\0\204\0\0Z\22\0RS(\23\0\0\0s\1\1\0\0 StreamReaderWriter instances allow wrapping streams which\n        work in both read and write modes.\n\n        The design is such that one can use the factory functions\n        returned by the codec.lookup() function to construct the\n        instance.\n\n    t\7\0\0\0unknownR=\0\0\0c\5\0\0\0\5\0\0\0\3\0\0\0C\0\0\0s:\0\0\0|\1\0|\0\0_\0\0|\2\0|\1\0|\4\0\203\2\0|\0\0_\1\0|\3\0|\1\0|\4\0\203\2\0|\0\0_\2\0|\4\0|\0\0_\3\0d\1\0S(\2\0\0\0sR\1\0\0 Creates a StreamReaderWriter instance.\n\n            stream must be a Stream-like object.\n\n            Reader, Writer must be factory functions or classes\n            providing the StreamReader, StreamWriter interface resp.\n\n            Error handling is done in the same way as defined for the\n            StreamWriter/Readers.\n\n        N(\4\0\0\0RR\0\0\0t\6\0\0\0readert\6\0\0\0writerR@\0\0\0(\5\0\0\0R6\0\0\0RR\0\0\0t\6\0\0\0Readert\6\0\0\0WriterR@\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRD\0\0\0\216\2\0\0s\10\0\0\0\0\r\t\1\22\1\22\1i\377\377\377\377c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0|\0\0j\0\0j\1\0|\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0R\201\0\0\0Rh\0\0\0(\2\0\0\0R6\0\0\0Rl\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRh\0\0\0\240\2\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0|\0\0j\0\0j\1\0|\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0R\201\0\0\0Rz\0\0\0(\2\0\0\0R6\0\0\0Rl\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRz\0\0\0\244\2\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0|\0\0j\0\0j\1\0|\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0R\201\0\0\0R|\0\0\0(\2\0\0\0R6\0\0\0R{\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR|\0\0\0\250\2\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0s4\0\0\0 Return the next decoded line from the input stream.(\2\0\0\0R\201\0\0\0R~\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR~\0\0\0\254\2\0\0s\2\0\0\0\0\3c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0|\0\0S(\1\0\0\0N(\0\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\177\0\0\0\261\2\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0|\0\0j\0\0j\1\0|\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0R\202\0\0\0RS\0\0\0(\2\0\0\0R6\0\0\0RM\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRS\0\0\0\264\2\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0|\0\0j\0\0j\1\0|\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0R\202\0\0\0RW\0\0\0(\2\0\0\0R6\0\0\0RV\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRW\0\0\0\270\2\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\36\0\0\0|\0\0j\0\0j\1\0\203\0\0\1|\0\0j\2\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\3\0\0\0R\201\0\0\0RF\0\0\0R\202\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRF\0\0\0\274\2\0\0s\4\0\0\0\0\2\r\1i\0\0\0\0c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sL\0\0\0|\0\0j\0\0j\1\0|\1\0|\2\0\203\2\0\1|\0\0j\2\0j\3\0\203\0\0\1|\2\0d\1\0k\2\0rH\0|\1\0d\1\0k\2\0rH\0|\0\0j\4\0j\3\0\203\0\0\1n\0\0d\0\0S(\2\0\0\0Ni\0\0\0\0(\5\0\0\0RR\0\0\0RX\0\0\0R\201\0\0\0RF\0\0\0R\202\0\0\0(\3\0\0\0R6\0\0\0RY\0\0\0RZ\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRX\0\0\0\301\2\0\0s\10\0\0\0\0\1\23\1\r\1\30\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\20\0\0\0|\2\0|\0\0j\0\0|\1\0\203\2\0S(\1\0\0\0s?\0\0\0 Inherit all other methods from the underlying stream.\n        (\1\0\0\0RR\0\0\0(\3\0\0\0R6\0\0\0R0\0\0\0R[\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\\\0\0\0\307\2\0\0s\2\0\0\0\0\5c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0|\0\0S(\1\0\0\0N(\0\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR]\0\0\0\320\2\0\0s\2\0\0\0\0\1c\4\0\0\0\4\0\0\0\1\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\2\0\0\0RR\0\0\0R^\0\0\0(\4\0\0\0R6\0\0\0R_\0\0\0R`\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRb\0\0\0\323\2\0\0s\2\0\0\0\0\1N(\23\0\0\0R9\0\0\0R8\0\0\0RA\0\0\0t\10\0\0\0encodingRD\0\0\0Rh\0\0\0R<\0\0\0Rz\0\0\0R|\0\0\0R~\0\0\0R\177\0\0\0RS\0\0\0RW\0\0\0RF\0\0\0RX\0\0\0R[\0\0\0R\\\0\0\0R]\0\0\0Rb\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\31\0\0\0\201\2\0\0s\36\0\0\0\6\t\6\2\6\2\f\22\f\4\f\4\f\4\t\5\t\3\t\4\t\4\t\5\f\7\f\10\t\3c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s\225\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0Z\3\0d\1\0Z\4\0d\2\0d\3\0\204\1\0Z\5\0d\4\0d\5\0\204\1\0Z\6\0d\20\0d\6\0\204\1\0Z\10\0d\20\0d\7\0\204\1\0Z\t\0d\10\0\204\0\0Z\n\0d\t\0\204\0\0Z\v\0d\n\0\204\0\0Z\f\0d\v\0\204\0\0Z\r\0d\f\0\204\0\0Z\16\0e\17\0d\r\0\204\1\0Z\20\0d\16\0\204\0\0Z\21\0d\17\0\204\0\0Z\22\0RS(\21\0\0\0sE\2\0\0 StreamRecoder instances provide a frontend - backend\n        view of encoding data.\n\n        They use the complete set of APIs returned by the\n        codecs.lookup() function to implement their task.\n\n        Data written to the stream is first decoded into an\n        intermediate format (which is dependent on the given codec\n        combination) and then written to the stream using an instance\n        of the provided Writer class.\n\n        In the other direction, data is read from the stream using a\n        Reader instance and then return encoded data to the caller.\n\n    R\200\0\0\0R=\0\0\0c\7\0\0\0\7\0\0\0\3\0\0\0C\0\0\0sL\0\0\0|\1\0|\0\0_\0\0|\2\0|\0\0_\1\0|\3\0|\0\0_\2\0|\4\0|\1\0|\6\0\203\2\0|\0\0_\3\0|\5\0|\1\0|\6\0\203\2\0|\0\0_\4\0|\6\0|\0\0_\5\0d\1\0S(\2\0\0\0s\272\3\0\0 Creates a StreamRecoder instance which implements a two-way\n            conversion: encode and decode work on the frontend (the\n            input to .read() and output of .write()) while\n            Reader and Writer work on the backend (reading and\n            writing to the stream).\n\n            You can use these objects to do transparent direct\n            recodings from e.g. latin-1 to utf-8 and back.\n\n            stream must be a file-like object.\n\n            encode, decode must adhere to the Codec interface, Reader,\n            Writer must be factory functions or classes providing the\n            StreamReader, StreamWriter interface resp.\n\n            encode and decode are needed for the frontend translation,\n            Reader and Writer for the backend translation. Unicode is\n            used as intermediate encoding.\n\n            Error handling is done in the same way as defined for the\n            StreamWriter/Readers.\n\n        N(\6\0\0\0RR\0\0\0R!\0\0\0R\"\0\0\0R\201\0\0\0R\202\0\0\0R@\0\0\0(\7\0\0\0R6\0\0\0RR\0\0\0R!\0\0\0R\"\0\0\0R\203\0\0\0R\204\0\0\0R@\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRD\0\0\0\355\2\0\0s\f\0\0\0\0\32\t\1\t\1\t\1\22\1\22\1i\377\377\377\377c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0s1\0\0\0|\0\0j\0\0j\1\0|\1\0\203\1\0}\2\0|\0\0j\2\0|\2\0|\0\0j\3\0\203\2\0\\\2\0}\2\0}\3\0|\2\0S(\1\0\0\0N(\4\0\0\0R\201\0\0\0Rh\0\0\0R!\0\0\0R@\0\0\0(\4\0\0\0R6\0\0\0Rl\0\0\0RM\0\0\0t\f\0\0\0bytesencoded(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRh\0\0\0\16\3\0\0s\6\0\0\0\0\2\22\1\33\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0sO\0\0\0|\1\0d\0\0k\10\0r\36\0|\0\0j\1\0j\2\0\203\0\0}\2\0n\22\0|\0\0j\1\0j\2\0|\1\0\203\1\0}\2\0|\0\0j\3\0|\2\0|\0\0j\4\0\203\2\0\\\2\0}\2\0}\3\0|\2\0S(\1\0\0\0N(\5\0\0\0R<\0\0\0R\201\0\0\0Rz\0\0\0R!\0\0\0R@\0\0\0(\4\0\0\0R6\0\0\0Rl\0\0\0RM\0\0\0R\206\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRz\0\0\0\24\3\0\0s\n\0\0\0\0\2\f\1\22\2\22\1\33\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0s7\0\0\0|\0\0j\0\0j\1\0\203\0\0}\2\0|\0\0j\2\0|\2\0|\0\0j\3\0\203\2\0\\\2\0}\2\0}\3\0|\2\0j\4\0d\1\0\203\1\0S(\2\0\0\0Ni\1\0\0\0(\5\0\0\0R\201\0\0\0Rh\0\0\0R!\0\0\0R@\0\0\0Rk\0\0\0(\4\0\0\0R6\0\0\0R{\0\0\0RM\0\0\0R\206\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR|\0\0\0\35\3\0\0s\6\0\0\0\0\2\17\1\33\1c\1\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s.\0\0\0|\0\0j\0\0j\1\0\203\0\0}\1\0|\0\0j\2\0|\1\0|\0\0j\3\0\203\2\0\\\2\0}\1\0}\2\0|\1\0S(\1\0\0\0s4\0\0\0 Return the next decoded line from the input stream.(\4\0\0\0R\201\0\0\0R~\0\0\0R!\0\0\0R@\0\0\0(\3\0\0\0R6\0\0\0RM\0\0\0R\206\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR~\0\0\0#\3\0\0s\6\0\0\0\0\3\17\1\33\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0|\0\0S(\1\0\0\0N(\0\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\177\0\0\0*\3\0\0s\2\0\0\0\0\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s+\0\0\0|\0\0j\0\0|\1\0|\0\0j\1\0\203\2\0\\\2\0}\1\0}\2\0|\0\0j\2\0j\3\0|\1\0\203\1\0S(\1\0\0\0N(\4\0\0\0R\"\0\0\0R@\0\0\0R\202\0\0\0RS\0\0\0(\3\0\0\0R6\0\0\0RM\0\0\0t\f\0\0\0bytesdecoded(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRS\0\0\0-\3\0\0s\4\0\0\0\0\2\33\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0s:\0\0\0d\1\0j\0\0|\1\0\203\1\0}\2\0|\0\0j\1\0|\2\0|\0\0j\2\0\203\2\0\\\2\0}\2\0}\3\0|\0\0j\3\0j\4\0|\2\0\203\1\0S(\2\0\0\0NRB\0\0\0(\5\0\0\0RU\0\0\0R\"\0\0\0R@\0\0\0R\202\0\0\0RS\0\0\0(\4\0\0\0R6\0\0\0RV\0\0\0RM\0\0\0R\207\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRW\0\0\0002\3\0\0s\6\0\0\0\0\2\17\1\33\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\36\0\0\0|\0\0j\0\0j\1\0\203\0\0\1|\0\0j\2\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\3\0\0\0R\201\0\0\0RF\0\0\0R\202\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRF\0\0\0008\3\0\0s\4\0\0\0\0\2\r\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\20\0\0\0|\2\0|\0\0j\0\0|\1\0\203\2\0S(\1\0\0\0s?\0\0\0 Inherit all other methods from the underlying stream.\n        (\1\0\0\0RR\0\0\0(\3\0\0\0R6\0\0\0R0\0\0\0R[\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\\\0\0\0=\3\0\0s\2\0\0\0\0\5c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0|\0\0S(\1\0\0\0N(\0\0\0\0(\1\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR]\0\0\0D\3\0\0s\2\0\0\0\0\1c\4\0\0\0\4\0\0\0\1\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\2\0\0\0RR\0\0\0R^\0\0\0(\4\0\0\0R6\0\0\0R_\0\0\0R`\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyRb\0\0\0G\3\0\0s\2\0\0\0\0\1N(\23\0\0\0R9\0\0\0R8\0\0\0RA\0\0\0t\r\0\0\0data_encodingt\r\0\0\0file_encodingRD\0\0\0Rh\0\0\0R<\0\0\0Rz\0\0\0R|\0\0\0R~\0\0\0R\177\0\0\0RS\0\0\0RW\0\0\0RF\0\0\0R[\0\0\0R\\\0\0\0R]\0\0\0Rb\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\32\0\0\0\330\2\0\0s\36\0\0\0\6\20\6\2\6\1\6\3\f \f\6\f\t\f\6\t\7\t\3\t\5\t\6\t\6\f\6\t\3t\2\0\0\0rbR=\0\0\0i\1\0\0\0c\5\0\0\0\10\0\0\0\5\0\0\0C\0\0\0s\313\0\0\0|\2\0d\7\0k\t\0rr\0d\1\0|\1\0k\6\0rV\0|\1\0j\1\0\203\0\0j\2\0d\1\0d\2\0\203\2\0}\1\0|\1\0d\3\0 t\3\0d\4\0\203\1\0k\7\0rV\0d\5\0|\1\0\27}\1\0qV\0n\0\0d\6\0|\1\0k\7\0rr\0|\1\0d\6\0\27}\1\0qr\0n\0\0t\4\0j\5\0|\0\0|\1\0|\4\0\203\3\0}\5\0|\2\0d\7\0k\10\0r\227\0|\5\0St\6\0|\2\0\203\1\0}\6\0t\7\0|\5\0|\6\0j\10\0|\6\0j\t\0|\3\0\203\4\0}\7\0|\2\0|\7\0_\n\0|\7\0S(\10\0\0\0s\255\4\0\0 Open an encoded file using the given mode and return\n        a wrapped version providing transparent encoding/decoding.\n\n        Note: The wrapped version will only accept the object format\n        defined by the codecs, i.e. Unicode objects for most builtin\n        codecs. Output is also codec dependent and will usually be\n        Unicode as well.\n\n        Files are always opened in binary mode, even if no binary mode\n        was specified. This is done to avoid data loss due to encodings\n        using 8-bit values. The default file mode is 'rb' meaning to\n        open the file in binary read mode.\n\n        encoding specifies the encoding which is to be used for the\n        file.\n\n        errors may be given to define the error handling. It defaults\n        to 'strict' which causes ValueErrors to be raised in case an\n        encoding error occurs.\n\n        buffering has the same meaning as for the builtin open() API.\n        It defaults to line buffered.\n\n        The returned wrapped file object provides an extra attribute\n        .encoding which allows querying the used encoding. This\n        attribute is only available if an encoding was specified as\n        parameter.\n\n    t\1\0\0\0URB\0\0\0i\1\0\0\0t\3\0\0\0rwat\1\0\0\0rt\1\0\0\0bN(\v\0\0\0R<\0\0\0t\5\0\0\0stript\7\0\0\0replacet\3\0\0\0sett\v\0\0\0__builtin__R\3\0\0\0R\2\0\0\0R\31\0\0\0R4\0\0\0R3\0\0\0R\205\0\0\0(\10\0\0\0t\10\0\0\0filenamet\4\0\0\0modeR\205\0\0\0R@\0\0\0t\t\0\0\0bufferingt\4\0\0\0filet\4\0\0\0infot\3\0\0\0srw(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\3\0\0\0L\3\0\0s\34\0\0\0\0\37\f\1\f\2\30\1\26\1\20\1\f\2\20\1\25\1\f\1\4\1\f\1\33\2\t\1c\4\0\0\0\7\0\0\0\7\0\0\0C\0\0\0sj\0\0\0|\2\0d\1\0k\10\0r\25\0|\1\0}\2\0n\0\0t\1\0|\1\0\203\1\0}\4\0t\1\0|\2\0\203\1\0}\5\0t\2\0|\0\0|\4\0j\3\0|\4\0j\4\0|\5\0j\5\0|\5\0j\6\0|\3\0\203\6\0}\6\0|\1\0|\6\0_\7\0|\2\0|\6\0_\10\0|\6\0S(\2\0\0\0s\345\3\0\0 Return a wrapped version of file which provides transparent\n        encoding translation.\n\n        Strings written to the wrapped file are interpreted according\n        to the given data_encoding and then written to the original\n        file as string using file_encoding. The intermediate encoding\n        will usually be Unicode but depends on the specified codecs.\n\n        Strings are read from the file using file_encoding and then\n        passed back to the caller as string using data_encoding.\n\n        If file_encoding is not given, it defaults to data_encoding.\n\n        errors may be given to define the error handling. It defaults\n        to 'strict' which causes ValueErrors to be raised in case an\n        encoding error occurs.\n\n        The returned wrapped file object provides two extra attributes\n        .data_encoding and .file_encoding which reflect the given\n        parameters of the same name. The attributes can be used for\n        introspection by Python programs.\n\n    N(\t\0\0\0R<\0\0\0R\2\0\0\0R\32\0\0\0R!\0\0\0R\"\0\0\0R4\0\0\0R3\0\0\0R\210\0\0\0R\211\0\0\0(\7\0\0\0R\226\0\0\0R\210\0\0\0R\211\0\0\0R@\0\0\0t\t\0\0\0data_infot\t\0\0\0file_infot\2\0\0\0sr(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\4\0\0\0}\3\0\0s\22\0\0\0\0\31\f\1\t\1\f\1\f\1\22\1\25\2\t\1\t\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0\203\1\0j\1\0S(\1\0\0\0s\236\0\0\0 Lookup up the codec for the given encoding and return\n        its encoder function.\n\n        Raises a LookupError in case the encoding cannot be found.\n\n    (\2\0\0\0R\2\0\0\0R!\0\0\0(\1\0\0\0R\205\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\33\0\0\0\243\3\0\0s\2\0\0\0\0\10c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0\203\1\0j\1\0S(\1\0\0\0s\236\0\0\0 Lookup up the codec for the given encoding and return\n        its decoder function.\n\n        Raises a LookupError in case the encoding cannot be found.\n\n    (\2\0\0\0R\2\0\0\0R\"\0\0\0(\1\0\0\0R\205\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\34\0\0\0\255\3\0\0s\2\0\0\0\0\10c\1\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s.\0\0\0t\0\0|\0\0\203\1\0j\1\0}\1\0|\1\0d\1\0k\10\0r*\0t\3\0|\0\0\203\1\0\202\1\0n\0\0|\1\0S(\2\0\0\0s\367\0\0\0 Lookup up the codec for the given encoding and return\n        its IncrementalEncoder class or factory function.\n\n        Raises a LookupError in case the encoding cannot be found\n        or the codecs doesn't provide an incremental encoder.\n\n    N(\4\0\0\0R\2\0\0\0R1\0\0\0R<\0\0\0t\v\0\0\0LookupError(\2\0\0\0R\205", 28672) = 28672
27308 read(5, "\0\0\0t\7\0\0\0encoder(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\35\0\0\0\267\3\0\0s\10\0\0\0\0\t\17\1\f\1\17\1c\1\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s.\0\0\0t\0\0|\0\0\203\1\0j\1\0}\1\0|\1\0d\1\0k\10\0r*\0t\3\0|\0\0\203\1\0\202\1\0n\0\0|\1\0S(\2\0\0\0s\367\0\0\0 Lookup up the codec for the given encoding and return\n        its IncrementalDecoder class or factory function.\n\n        Raises a LookupError in case the encoding cannot be found\n        or the codecs doesn't provide an incremental decoder.\n\n    N(\4\0\0\0R\2\0\0\0R2\0\0\0R<\0\0\0R\234\0\0\0(\2\0\0\0R\205\0\0\0t\7\0\0\0decoder(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\36\0\0\0\305\3\0\0s\10\0\0\0\0\t\17\1\f\1\17\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0\203\1\0j\1\0S(\1\0\0\0s\264\0\0\0 Lookup up the codec for the given encoding and return\n        its StreamReader class or factory function.\n\n        Raises a LookupError in case the encoding cannot be found.\n\n    (\2\0\0\0R\2\0\0\0R4\0\0\0(\1\0\0\0R\205\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR\37\0\0\0\323\3\0\0s\2\0\0\0\0\10c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0\203\1\0j\1\0S(\1\0\0\0s\264\0\0\0 Lookup up the codec for the given encoding and return\n        its StreamWriter class or factory function.\n\n        Raises a LookupError in case the encoding cannot be found.\n\n    (\2\0\0\0R\2\0\0\0R3\0\0\0(\1\0\0\0R\205\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR \0\0\0\335\3\0\0s\2\0\0\0\0\10c\3\0\0\0\7\0\0\0\3\0\0\0k\0\0\0sg\0\0\0t\0\0|\1\0\203\1\0|\2\0|\3\0\215\1\0}\4\0x+\0|\0\0D]#\0}\5\0|\4\0j\1\0|\5\0\203\1\0}\6\0|\6\0r\34\0|\6\0V\1q\34\0q\34\0W|\4\0j\1\0d\1\0t\2\0\203\2\0}\6\0|\6\0rc\0|\6\0V\1n\0\0d\2\0S(\3\0\0\0s\276\0\0\0\n    Encoding iterator.\n\n    Encodes the input strings from the iterator using a IncrementalEncoder.\n\n    errors and kwargs are passed through to the IncrementalEncoder\n    constructor.\n    RB\0\0\0N(\3\0\0\0R\35\0\0\0R!\0\0\0Rf\0\0\0(\7\0\0\0t\10\0\0\0iteratorR\205\0\0\0R@\0\0\0t\6\0\0\0kwargsR\235\0\0\0R?\0\0\0t\6\0\0\0output(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR#\0\0\0\347\3\0\0s\20\0\0\0\0\t\25\1\r\1\17\1\6\1\f\1\22\1\6\1c\3\0\0\0\7\0\0\0\3\0\0\0k\0\0\0sg\0\0\0t\0\0|\1\0\203\1\0|\2\0|\3\0\215\1\0}\4\0x+\0|\0\0D]#\0}\5\0|\4\0j\1\0|\5\0\203\1\0}\6\0|\6\0r\34\0|\6\0V\1q\34\0q\34\0W|\4\0j\1\0d\1\0t\2\0\203\2\0}\6\0|\6\0rc\0|\6\0V\1n\0\0d\2\0S(\3\0\0\0s\276\0\0\0\n    Decoding iterator.\n\n    Decodes the input strings from the iterator using a IncrementalDecoder.\n\n    errors and kwargs are passed through to the IncrementalDecoder\n    constructor.\n    RB\0\0\0N(\3\0\0\0R\36\0\0\0R\"\0\0\0Rf\0\0\0(\7\0\0\0R\237\0\0\0R\205\0\0\0R@\0\0\0R\240\0\0\0R\236\0\0\0R?\0\0\0R\241\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyR$\0\0\0\371\3\0\0s\20\0\0\0\0\t\25\1\r\1\17\1\6\1\f\1\22\1\6\1c\1\0\0\0\3\0\0\0\4\0\0\0C\0\0\0s%\0\0\0i\0\0}\1\0x\30\0|\0\0D]\20\0}\2\0|\2\0|\1\0|\2\0<q\r\0W|\1\0S(\1\0\0\0s\210\0\0\0 make_identity_dict(rng) -> dict\n\n        Return a dictionary where elements of the rng sequence are\n        mapped to themselves.\n\n    (\0\0\0\0(\3\0\0\0t\3\0\0\0rngt\3\0\0\0rest\1\0\0\0i(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\22\0\0\0make_identity_dict\r\4\0\0s\10\0\0\0\0\10\6\1\r\1\16\1c\1\0\0\0\4\0\0\0\4\0\0\0C\0\0\0sJ\0\0\0i\0\0}\1\0x=\0|\0\0j\0\0\203\0\0D]/\0\\\2\0}\2\0}\3\0|\3\0|\1\0k\7\0r8\0|\2\0|\1\0|\3\0<q\23\0d\1\0|\1\0|\3\0<q\23\0W|\1\0S(\2\0\0\0s\202\1\0\0 Creates an encoding map from a decoding map.\n\n        If a target mapping in the decoding map occurs multiple\n        times, then that target is mapped to None (undefined mapping),\n        causing an exception when encountered by the charmap codec\n        during translation.\n\n        One example where this happens is cp875.py which decodes\n        multiple character to \\u001a.\n\n    N(\2\0\0\0t\5\0\0\0itemsR<\0\0\0(\4\0\0\0t\f\0\0\0decoding_mapt\1\0\0\0mt\1\0\0\0kt\1\0\0\0v(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\21\0\0\0make_encoding_map\32\4\0\0s\f\0\0\0\0\r\6\1\31\1\f\1\r\2\16\1t\6\0\0\0ignoreR\220\0\0\0t\21\0\0\0xmlcharrefreplacet\20\0\0\0backslashreplacei\0\0\0\0t\10\0\0\0__main__s\7\0\0\0latin-1s\5\0\0\0utf-8(\0\0\0\0(\0\0\0\0(\0\0\0\0(<\0\0\0RA\0\0\0R\222\0\0\0t\3\0\0\0syst\7\0\0\0_codecst\v\0\0\0ImportErrort\3\0\0\0whyt\v\0\0\0SystemErrort\7\0\0\0__all__R\f\0\0\0R\7\0\0\0R\16\0\0\0R\6\0\0\0R\17\0\0\0R\21\0\0\0R\22\0\0\0t\t\0\0\0byteorderR\5\0\0\0R\r\0\0\0R\20\0\0\0R\t\0\0\0R\10\0\0\0R\v\0\0\0R\n\0\0\0R.\0\0\0R\23\0\0\0R\24\0\0\0RT\0\0\0R\25\0\0\0RK\0\0\0R\26\0\0\0RP\0\0\0R\30\0\0\0R\27\0\0\0R\31\0\0\0R\32\0\0\0R<\0\0\0R\3\0\0\0R\4\0\0\0R\33\0\0\0R\34\0\0\0R\35\0\0\0R\36\0\0\0R\37\0\0\0R \0\0\0R#\0\0\0R$\0\0\0R\245\0\0\0R\253\0\0\0R+\0\0\0R%\0\0\0R&\0\0\0R'\0\0\0R(\0\0\0R)\0\0\0R\234\0\0\0t\6\0\0\0_falset\t\0\0\0encodingsR9\0\0\0t\6\0\0\0stdoutt\5\0\0\0stdin(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/codecs.pyt\10\0\0\0<module>\10\0\0\0s\220\0\0\0\6\2\30\4\3\1\16\1\17\1\24\2\22\1\17\1\f\1\t\1\f\1\6\1\6\1\t\1\t\1\f\1\t\1\6\1\f\v\6\3\n\3\n\3\6\3\6\2\17\3\n\3\t\5\n\3\6\3\6\1\6\1\6\1\6\5\26\21\23@\26(\26!\0261\26*\26I\26\362\23W\23t\0251\17&\t\n\t\n\t\16\t\16\t\n\t\n\f\22\f\24\t\r\t\27\3\1\f\1\f\1\f\1\f\1\20\1\r\2\6\1\6\1\6\1\6\1\n\4\6\1\6\1\17\4\f\3\30\3", 4096) = 3753
27308 read(5, "", 4096)                 = 0
27308 mmap2(NULL, 262144, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7a75000
27308 close(5)                          = 0
27308 munmap(0xb7fd8000, 4096)          = 0
27308 close(4)                          = 0
27308 stat64("/usr/lib/python2.7/encodings/encodings", 0xbfffde1c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/encodings.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/encodings.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/encodingsmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/encodings.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/encodings.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/encodings/aliases", 0xbfffddbc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/aliases.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/aliases.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/aliasesmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/aliases.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=662149, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=14848, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:59, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/encodings/aliases.pyc", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669335, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8768, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd8000
27308 read(5, "\3\363\r\n\203r\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0su\10\0\0d\0\0Z\0\0i3\1d\1\0d\2\0006d\1\0d\3\0006d\1\0d\4\0006d\1\0d\5\0006d\1\0d\6\0006d\1\0d\7\0006d\1\0d\10\0006d\1\0d\t\0006d\1\0d\n\0006d\1\0d\v\0006d\1\0d\f\0006d\1\0d\r\0006d\16\0d\17\0006d\16\0d\20\0006d\21\0d\22\0006d\21\0d\23\0006d\24\0d\25\0006d\24\0d\26\0006d\27\0d\30\0006d\31\0d\32\0006d\31\0d\33\0006d\31\0d\34\0006d\31\0d\35\0006d\31\0d\36\0006d\31\0d\37\0006d\31\0d \0006d\31\0d!\0006d\"\0d#\0006d\"\0d$\0006d\"\0d%\0006d&\0d'\0006d&\0d(\0006d)\0d*\0006d)\0d+\0006d,\0d-\0006d,\0d.\0006d/\0d0\0006d/\0d1\0006d2\0d3\0006d2\0d4\0006d5\0d6\0006d5\0d7\0006d8\0d9\0006d8\0d:\0006d;\0d<\0006d;\0d=\0006d>\0d?\0006d>\0d@\0006dA\0dB\0006dA\0dC\0006dD\0dE\0006dD\0dF\0006dD\0dG\0006dD\0dH\0006dI\0dJ\0006dI\0dK\0006dI\0dL\0006dM\0dN\0006dM\0dO\0006dM\0dP\0006dM\0dQ\0006dM\0dR\0006dS\0dT\0006dS\0dU\0006dS\0dV\0006dW\0dX\0006dW\0dY\0006dW\0dZ\0006d[\0d\\\0006d[\0d]\0006d[\0d^\0006d_\0d`\0006d_\0da\0006d_\0db\0006dc\0dd\0006dc\0de\0006dc\0df\0006dg\0dh\0006dg\0di\0006dg\0dj\0006dk\0dl\0006dk\0dm\0006dk\0dn\0006do\0dp\0006do\0dq\0006do\0dr\0006do\0ds\0006dt\0du\0006dt\0dv\0006dt\0dw\0006dx\0dy\0006dx\0dz\0006dx\0d{\0006d|\0d}\0006d|\0d~\0006d|\0d\177\0006d\200\0d\201\0006d\200\0d\202\0006d\200\0d\203\0006d\204\0d\205\0006d\204\0d\206\0006d\204\0d\207\0006d\210\0d\211\0006d\210\0d\212\0006d\210\0d\213\0006d\210\0d\214\0006d\215\0d\216\0006d\215\0d\217\0006d\215\0d\220\0006d\215\0d\221\0006d\222\0d\223\0006d\222\0d\224\0006d\222\0d\225\0006d\226\0d\227\0006d\226\0d\230\0006d\231\0d\232\0006d\231\0d\233\0006d\231\0d\234\0006d\235\0d\236\0006d\237\0d\240\0006d\237\0d\241\0006d\237\0d\242\0006d\243\0d\244\0006d\243\0d\245\0006d\243\0d\246\0006d\243\0d\247\0006d\243\0d\250\0006d\243\0d\251\0006d\243\0d\252\0006d\253\0d\254\0006d\255\0d\256\0006d\255\0d\257\0006d\255\0d\260\0006d\255\0d\261\0006d\255\0d\262\0006d\255\0d\263\0006d\255\0d\264\0006d\255\0d\265\0006d\266\0d\267\0006d\266\0d\270\0006d\266\0d\271\0006d\272\0d\273\0006d\274\0d\275\0006d\274\0d\276\0006d\274\0d\277\0006d\300\0d\301\0006d\300\0d\302\0006d\300\0d\303\0006d\304\0d\305\0006d\304\0d\306\0006d\304\0d\307\0006d\310\0d\311\0006d\310\0d\312\0006d\313\0d\314\0006d\313\0d\315\0006d\316\0d\317\0006d\316\0d\320\0006d\321\0d\322\0006d\321\0d\323\0006d\324\0d\325\0006d\324\0d\326\0006d\327\0d\330\0006d\327\0d\331\0006d\327\0d\332\0006d\333\0d\334\0006d\333\0d\335\0006d\333\0d\336\0006d\333\0d\337\0006d\333\0d\340\0006d\333\0d\341\0006d\342\0d\343\0006d\342\0d\344\0006d\342\0d\345\0006d\346\0d\347\0006d\346\0d\350\0006d\346\0d\351\0006d\352\0d\353\0006d\352\0d\354\0006d\352\0d\355\0006d\352\0d\356\0006d\352\0d\357\0006d\352\0d\360\0006d\361\0d\362\0006d\361\0d\363\0006d\361\0d\364\0006d\365\0d\366\0006d\365\0d\367\0006d\365\0d\370\0006d\365\0d\371\0006d\365\0d\372\0006d\373\0d\374\0006d\373\0d\375\0006d\373\0d\376\0006d\373\0d\377\0006d\373\0d\0\0016d\373\0d\1\0016d\2\1d\3\0016d\2\1d\4\0016d\2\1d\5\0016d\2\1d\6\0016d\2\1d\7\0016d\2\1d\10\0016d\t\1d\n\0016d\t\1d\v\0016d\t\1d\f\0016d\t\1d\r\0016d\t\1d\16\0016d\t\1d\17\0016d\20\1d\21\0016d\20\1d\22\0016d\20\1d\23\0016d\20\1d\24\0016d\20\1d\25\0016d\26\1d\27\0016d\26\1d\30\0016d\26\1d\31\0016d\26\1d\32\0016d\26\1d\33\0016d\26\1d\34\0016d\26\1d\35\0016d\36\1d\37\0016d\36\1d \0016d\36\1d!\0016d\36\1d\"\0016d\36\1d#\0016d\36\1d$\0016d\36\1d%\0016d\36\1d&\0016d'\1d(\0016d'\1d)\0016d'\1d*\0016d'\1d+\0016d'\1d,\0016d-\1d.\0016d-\1d/\0016d-\1d0\0016d-\1d1\0016d-\1d2\0016d-\1d3\0016d4\1d5\0016d4\1d6\0016d7\1d8\0016d9\1d:\0016d9\1d;\0016d9\1d<\0016d9\1d=\0016d9\1d>\0016d9\1d?\0016d9\1d@\0016d9\1dA\0016d9\1dB\0016d9\1dC\0016d9\1dD\0016d9\1dE\0016dF\1dG\0016dH\1dI\0016dJ\1dK\0016dL\1dM\0016dL\1dN\0016dO\1dP\0016dQ\1dR\0016dS\1dT\0016dU\1dV\0016dU\1dW\0016dU\1dX\0016dU\1dY\0016dZ\1d[\0016dZ\1d\\\0016dZ\1d]\0016d^\1d_\0016d`\1da\0016d`\1db\0016d`\1dc\0016d`\1dd\0016de\1df\0016de\1dg\0016de\1dh\0016di\1dj\0016di\1dk\0016di\1dl\0016dm\1dn\0016do\1dp\0016do\1dq\0016do\1dr\0016do\1ds\0016do\1dt\0016du\1dv\0016du\1dw\0016dx\1dy\0016dx\1dz\0016d{\1d|\0016d{\1d}\0016d~\1d\177\0016d~\1d\200\0016d\201\1d\202\0016d\203\1d\204\0016d\205\1d\206\0016d\205\1d\207\0016d\205\1d\210\0016d\211\1d\212\0016d\211\1d\213\0016d\211\1d\214\0016d\211\1d\215\0016d\211\1d\216\0016d\217\1d\220\0016d\221\1d\222\0016d\221\1d\223\0016Z\1\0d\224\1S(\225\1\0\0s<\2\0\0 Encoding Aliases Support\n\n    This module is used by the encodings package search function to\n    map encodings names to module names.\n\n    Note that the search function normalizes the encoding names before\n    doing the lookup, so the mapping will have to map normalized\n    encoding names to module names.\n\n    Contents:\n\n        The following aliases dictionary contains mappings of all IANA\n        character set names for which the Python core library provides\n        codecs. In addition to these, a few Python specific codec\n        aliases have also been added.\n\nt\5\0\0\0asciit\3\0\0\000646s\16\0\0\0ansi_x3.4_1968t\16\0\0\0ansi_x3_4_1968s\16\0\0\0ansi_x3.4_1986t\5\0\0\0cp367t\7\0\0\0csasciit\6\0\0\0ibm367t\t\0\0\0iso646_uss\20\0\0\0iso_646.irv_1991t\10\0\0\0iso_ir_6t\2\0\0\0ust\10\0\0\0us_asciit\f\0\0\0base64_codect\6\0\0\0base64t\7\0\0\0base_64t\4\0\0\0big5t\7\0\0\0big5_twt\6\0\0\0csbig5t\t\0\0\0big5hkscst\n\0\0\0big5_hkscst\5\0\0\0hkscst\t\0\0\0bz2_codect\3\0\0\0bz2t\5\0\0\0cp037t\3\0\0\000037t\10\0\0\0csibm037t\f\0\0\0ebcdic_cp_cat\f\0\0\0ebcdic_cp_nlt\f\0\0\0ebcdic_cp_ust\f\0\0\0ebcdic_cp_wtt\6\0\0\0ibm037t\6\0\0\0ibm039t\6\0\0\0cp1026t\4\0\0\0001026t\t\0\0\0csibm1026t\7\0\0\0ibm1026t\6\0\0\0cp1140t\4\0\0\0001140t\7\0\0\0ibm1140t\6\0\0\0cp1250t\4\0\0\0001250t\f\0\0\0windows_1250t\6\0\0\0cp1251t\4\0\0\0001251t\f\0\0\0windows_1251t\6\0\0\0cp1252t\4\0\0\0001252t\f\0\0\0windows_1252t\6\0\0\0cp1253t\4\0\0\0001253t\f\0\0\0windows_1253t\6\0\0\0cp1254t\4\0\0\0001254t\f\0\0\0windows_1254t\6\0\0\0cp1255t\4\0\0\0001255t\f\0\0\0windows_1255t\6\0\0\0cp1256t\4\0\0\0001256t\f\0\0\0windows_1256t\6\0\0\0cp1257t\4\0\0\0001257t\f\0\0\0windows_1257t\6\0\0\0cp1258t\4\0\0\0001258t\f\0\0\0windows_1258t\5\0\0\0cp424t\3\0\0\000424t\10\0\0\0csibm424t\f\0\0\0ebcdic_cp_het\6\0\0\0ibm424t\5\0\0\0cp437t\3\0\0\000437t\20\0\0\0cspc8codepage437t\6\0\0\0ibm437t\5\0\0\0cp500t\3\0\0\000500t\10\0\0\0csibm500t\f\0\0\0ebcdic_cp_bet\f\0\0\0ebcdic_cp_cht\6\0\0\0ibm500t\5\0\0\0cp775t\3\0\0\000775t\r\0\0\0cspc775baltict\6\0\0\0ibm775t\5\0\0\0cp850t\3\0\0\000850t\23\0\0\0cspc850multilingualt\6\0\0\0ibm850t\5\0\0\0cp852t\3\0\0\000852t\10\0\0\0cspcp852t\6\0\0\0ibm852t\5\0\0\0cp855t\3\0\0\000855t\10\0\0\0csibm855t\6\0\0\0ibm855t\5\0\0\0cp857t\3\0\0\000857t\10\0\0\0csibm857t\6\0\0\0ibm857t\5\0\0\0cp858t\3\0\0\000858t\10\0\0\0csibm858t\6\0\0\0ibm858t\5\0\0\0cp860t\3\0\0\000860t\10\0\0\0cs", 4096) = 4096
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=669335, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8768, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(5, "ibm860t\6\0\0\0ibm860t\5\0\0\0cp861t\3\0\0\000861t\5\0\0\0cp_ist\10\0\0\0csibm861t\6\0\0\0ibm861t\5\0\0\0cp862t\3\0\0\000862t\22\0\0\0cspc862latinhebrewt\6\0\0\0ibm862t\5\0\0\0cp863t\3\0\0\000863t\10\0\0\0csibm863t\6\0\0\0ibm863t\5\0\0\0cp864t\3\0\0\000864t\10\0\0\0csibm864t\6\0\0\0ibm864t\5\0\0\0cp865t\3\0\0\000865t\10\0\0\0csibm865t\6\0\0\0ibm865t\5\0\0\0cp866t\3\0\0\000866t\10\0\0\0csibm866t\6\0\0\0ibm866t\5\0\0\0cp869t\3\0\0\000869t\5\0\0\0cp_grt\10\0\0\0csibm869t\6\0\0\0ibm869t\5\0\0\0cp932t\3\0\0\000932t\5\0\0\0ms932t\7\0\0\0mskanjit\10\0\0\0ms_kanjit\5\0\0\0cp949t\3\0\0\000949t\5\0\0\0ms949t\3\0\0\0uhct\5\0\0\0cp950t\3\0\0\000950t\5\0\0\0ms950t\f\0\0\0euc_jis_2004t\10\0\0\0jisx0213t\n\0\0\0eucjis2004t\v\0\0\0euc_jis2004t\f\0\0\0euc_jisx0213t\v\0\0\0eucjisx0213t\6\0\0\0euc_jpt\5\0\0\0eucjpt\4\0\0\0ujist\5\0\0\0u_jist\6\0\0\0euc_krt\5\0\0\0euckrt\6\0\0\0koreant\7\0\0\0ksc5601t\t\0\0\0ks_c_5601t\16\0\0\0ks_c_5601_1987t\7\0\0\0ksx1001t\t\0\0\0ks_x_1001t\7\0\0\0gb18030t\f\0\0\0gb18030_2000t\6\0\0\0gb2312t\7\0\0\0chineset\17\0\0\0csiso58gb231280t\6\0\0\0euc_cnt\5\0\0\0euccnt\f\0\0\0eucgb2312_cnt\v\0\0\0gb2312_1980t\t\0\0\0gb2312_80t\t\0\0\0iso_ir_58t\3\0\0\0gbkt\3\0\0\000936t\5\0\0\0cp936t\5\0\0\0ms936t\t\0\0\0hex_codect\3\0\0\0hext\t\0\0\0hp_roman8t\6\0\0\0roman8t\2\0\0\0r8t\n\0\0\0csHPRoman8t\2\0\0\0hzt\4\0\0\0hzgbt\5\0\0\0hz_gbt\n\0\0\0hz_gb_2312t\n\0\0\0iso2022_jpt\v\0\0\0csiso2022jpt\t\0\0\0iso2022jpt\v\0\0\0iso_2022_jpt\f\0\0\0iso2022_jp_1t\v\0\0\0iso2022jp_1t\r\0\0\0iso_2022_jp_1t\f\0\0\0iso2022_jp_2t\v\0\0\0iso2022jp_2t\r\0\0\0iso_2022_jp_2t\17\0\0\0iso2022_jp_2004t\20\0\0\0iso_2022_jp_2004t\16\0\0\0iso2022jp_2004t\f\0\0\0iso2022_jp_3t\v\0\0\0iso2022jp_3t\r\0\0\0iso_2022_jp_3t\16\0\0\0iso2022_jp_extt\r\0\0\0iso2022jp_extt\17\0\0\0iso_2022_jp_extt\n\0\0\0iso2022_krt\v\0\0\0csiso2022krt\t\0\0\0iso2022krt\v\0\0\0iso_2022_krt\n\0\0\0iso8859_10t\v\0\0\0csisolatin6t\v\0\0\0iso_8859_10t\20\0\0\0iso_8859_10_1992t\n\0\0\0iso_ir_157t\2\0\0\0l6t\6\0\0\0latin6t\n\0\0\0iso8859_11t\4\0\0\0thait\v\0\0\0iso_8859_11t\20\0\0\0iso_8859_11_2001t\n\0\0\0iso8859_13t\v\0\0\0iso_8859_13t\2\0\0\0l7t\6\0\0\0latin7t\n\0\0\0iso8859_14t\v\0\0\0iso_8859_14t\20\0\0\0iso_8859_14_1998t\n\0\0\0iso_celtict\n\0\0\0iso_ir_199t\2\0\0\0l8t\6\0\0\0latin8t\n\0\0\0iso8859_15t\v\0\0\0iso_8859_15t\2\0\0\0l9t\6\0\0\0latin9t\n\0\0\0iso8859_16t\v\0\0\0iso_8859_16t\20\0\0\0iso_8859_16_2001t\n\0\0\0iso_ir_226t\3\0\0\0l10t\7\0\0\0latin10t\t\0\0\0iso8859_2t\v\0\0\0csisolatin2t\n\0\0\0iso_8859_2t\17\0\0\0iso_8859_2_1987t\n\0\0\0iso_ir_101t\2\0\0\0l2t\6\0\0\0latin2t\t\0\0\0iso8859_3t\v\0\0\0csisolatin3t\n\0\0\0iso_8859_3t\17\0\0\0iso_8859_3_1988t\n\0\0\0iso_ir_109t\2\0\0\0l3t\6\0\0\0latin3t\t\0\0\0iso8859_4t\v\0\0\0csisolatin4t\n\0\0\0iso_8859_4t\17\0\0\0iso_8859_4_1988t\n\0\0\0iso_ir_110t\2\0\0\0l4t\6\0\0\0latin4t\t\0\0\0iso8859_5t\22\0\0\0csisolatincyrillict\10\0\0\0cyrillict\n\0\0\0iso_8859_5t\17\0\0\0iso_8859_5_1988t\n\0\0\0iso_ir_144t\t\0\0\0iso8859_6t\6\0\0\0arabict\10\0\0\0asmo_708t\20\0\0\0csisolatinarabict\10\0\0\0ecma_114t\n\0\0\0iso_8859_6t\17\0\0\0iso_8859_6_1987t\n\0\0\0iso_ir_127t\t\0\0\0iso8859_7t\17\0\0\0csisolatingreekt\10\0\0\0ecma_118t\10\0\0\0elot_928t\5\0\0\0greekt\6\0\0\0greek8t\n\0\0\0iso_8859_7t\17\0\0\0iso_8859_7_1987t\n\0\0\0iso_ir_126t\t\0\0\0iso8859_8t\20\0\0\0csisolatinhebrewt\6\0\0\0hebrewt\n\0\0\0iso_8859_8t\17\0\0\0iso_8859_8_1988t\n\0\0\0iso_ir_138t\t\0\0\0iso8859_9t\v\0\0\0csisolatin5t\n\0\0\0iso_8859_9t\17\0\0\0iso_8859_9_1989t\n\0\0\0iso_ir_148t\2\0\0\0l5t\6\0\0\0latin5t\5\0\0\0johabt\6\0\0\0cp1361t\6\0\0\0ms1361t\6\0\0\0koi8_rt\7\0\0\0cskoi8rt\7\0\0\0latin_1t\4\0\0\0008859t\5\0\0\0cp819t\v\0\0\0csisolatin1t\6\0\0\0ibm819t\7\0\0\0iso8859t\t\0\0\0iso8859_1t\n\0\0\0iso_8859_1t\17\0\0\0iso_8859_1_1987t\n\0\0\0iso_ir_100t\2\0\0\0l1t\5\0\0\0latint\6\0\0\0latin1t\f\0\0\0mac_cyrillict\v\0\0\0maccyrillict\t\0\0\0mac_greekt\10\0\0\0macgreekt\v\0\0\0mac_icelandt\n\0\0\0macicelandt\n\0\0\0mac_latin2t\20\0\0\0maccentraleuropet\t\0\0\0maclatin2t\t\0\0\0mac_romant\10\0\0\0macromant\v\0\0\0mac_turkisht\n\0\0\0macturkisht\4\0\0\0mbcst\4\0\0\0dbcst\7\0\0\0ptcp154t\t\0\0\0csptcp154t\5\0\0\0pt154t\5\0\0\0cp154t\16\0\0\0cyrillic_asiant\f\0\0\0quopri_codect\6\0\0\0quoprit\20\0\0\0quoted_printablet\17\0\0\0quotedprintablet\6\0\0\0rot_13t\5\0\0\0rot13t\t\0\0\0shift_jist\n\0\0\0csshiftjist\10\0\0\0shiftjist\4\0\0\0sjist\5\0\0\0s_jist\16\0\0\0shift_jis_2004t\f\0\0\0shiftjis2004t\t\0\0\0sjis_2004t\n\0\0\0s_jis_2004t\16\0\0\0shift_jisx0213t\r\0\0\0shiftjisx0213t\t\0\0\0sjisx0213t\n\0\0\0s_jisx0213t\6\0\0\0tactist\6\0\0\0tis260t\7\0\0\0tis_620t\6\0\0\0tis620t\t\0\0\0tis_620_0t\16\0\0\0tis_620_2529_0t\16\0\0\0tis_620_2529_1t\n\0\0\0iso_ir_166t\6\0\0\0utf_16t\3\0\0\0u16t\5\0\0\0utf16t\t\0\0\0utf_16_bet\22\0\0\0unicodebigunmarkedt\10\0\0\0utf_16bet\t\0\0\0utf_16_let\25\0\0\0unicodelittleunmarkedt\10\0\0\0utf_16let\6\0\0\0utf_32t\3\0\0\0u32t\5\0\0\0utf32t\t\0\0\0utf_32_bet\10\0\0\0utf_32bet\t\0\0\0utf_32_let\10\0\0\0utf_32let\5\0\0\0utf_7t\2\0\0\0u7t\4\0\0\0utf7t\21\0\0\0unicode_1_1_utf_7t\5\0\0\0utf_8t\2\0\0\0u8t\3\0\0\0utft\4\0\0\0utf8t\t\0\0\0utf8_ucs2t\t\0\0\0utf8_ucs4t\10\0\0\0uu_codect\2\0\0\0uut\n\0\0\0zlib_codect\3\0\0\0zipt\4\0\0\0zlibN(\2\0\0\0t\7\0\0\0__doc__t\7\0\0\0aliases(\0\0\0\0(\0\0\0\0(\0\0\0\0s'\0\0\0/usr/lib/python2.7/encodings/aliases.pyt\10\0\0\0<module>\21\0\0\0sh\2\0\0\6\1\3\5\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\3\7\1\7\3\7\1\7\3\7\1\7\3", 4096) = 4096
27308 readt\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\3\7\3\7\3\7\3\7\1\7\3\7\3\7\3\7\3\7\1\7\1\7\1\7\3\7\1\7\1\7\3\7\3\7\1\7\1\7\1\7\3\7\1\7\1\7\3\7\1\7\1\7\3\7\3\7\1\7\1\7\1\7\1\7\3\7\1\7\3\7\1\7\3\7\1\7\3\7\1\7\3\7\3\7\3\7\1\7\1\7\3\7\1\7\1\7\1\7\1\7\3\7\3\7\1", 4096) = 576
27308 read(5, "", 4096)                 = 0
27308 close(5)                          = 0
27308 munmap(0xb7fd8000, 4096)          = 0
27308 close(4)                          = 0
27308 stat64("/usr/lib/python2.7/encodings/__builtin__", 0xbfffde1c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/__builtin__.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/__builtin__.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/__builtin__module.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/__builtin__.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/__builtin__.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 close(3)                          = 0
27308 stat64("/usr/lib/python2.7/encodings/utf_8", 0xbfffe0bc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/utf_8.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/utf_8.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/utf_8module.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/utf_8.py", O_RDONLY|O_LARGEFILE) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=662264, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1005, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:59, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/encodings/utf_8.pyc", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=669336, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1950, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd8000
27308 read(4, "\3\363\r\n\203r\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0s\230\0\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0e\1\0j\2\0Z\3\0d\3\0d\4\0\204\1\0Z\4\0d\5\0e\1\0j\5\0f\1\0d\6\0\204\0\0\203\0\0YZ\5\0d\7\0e\1\0j\6\0f\1\0d\10\0\204\0\0\203\0\0YZ\7\0d\t\0e\1\0j\10\0f\1\0d\n\0\204\0\0\203\0\0YZ\10\0d\v\0e\1\0j\t\0f\1\0d\f\0\204\0\0\203\0\0YZ\t\0d\r\0\204\0\0Z\n\0d\2\0S(\16\0\0\0s\201\0\0\0 Python 'utf-8' Codec\n\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\ni\377\377\377\377Nt\6\0\0\0strictc\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s\23\0\0\0t\0\0j\1\0|\0\0|\1\0t\2\0\203\3\0S(\1\0\0\0N(\3\0\0\0t\6\0\0\0codecst\f\0\0\0utf_8_decodet\4\0\0\0True(\2\0\0\0t\5\0\0\0inputt\6\0\0\0errors(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/utf_8.pyt\6\0\0\0decode\17\0\0\0s\2\0\0\0\0\1t\22\0\0\0IncrementalEncoderc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s\24\0\0\0e\0\0Z\1\0e\2\0d\0\0\204\1\0Z\3\0RS(\1\0\0\0c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\27\0\0\0t\0\0j\1\0|\1\0|\0\0j\2\0\203\2\0d\1\0\31S(\2\0\0\0Ni\0\0\0\0(\3\0\0\0R\1\0\0\0t\f\0\0\0utf_8_encodeR\5\0\0\0(\3\0\0\0t\4\0\0\0selfR\4\0\0\0t\5\0\0\0final(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/utf_8.pyt\6\0\0\0encode\23\0\0\0s\2\0\0\0\0\1(\4\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__t\5\0\0\0FalseR\v\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/utf_8.pyR\7\0\0\0\22\0\0\0s\2\0\0\0\6\1t\22\0\0\0IncrementalDecoderc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\21\0\0\0e\0\0Z\1\0e\2\0j\3\0Z\4\0RS(\0\0\0\0(\5\0\0\0R\f\0\0\0R\r\0\0\0R\1\0\0\0R\2\0\0\0t\16\0\0\0_buffer_decode(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/utf_8.pyR\17\0\0\0\26\0\0\0s\2\0\0\0\6\1t\f\0\0\0StreamWriterc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\21\0\0\0e\0\0Z\1\0e\2\0j\3\0Z\4\0RS(\0\0\0\0(\5\0\0\0R\f\0\0\0R\r\0\0\0R\1\0\0\0R\10\0\0\0R\v\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/utf_8.pyR\21\0\0\0\31\0\0\0s\2\0\0\0\6\1t\f\0\0\0StreamReaderc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\21\0\0\0e\0\0Z\1\0e\2\0j\3\0Z\4\0RS(\0\0\0\0(\5\0\0\0R\f\0\0\0R\r\0\0\0R\1\0\0\0R\2\0\0\0R\6\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/utf_8.pyR\22\0\0\0\34\0\0\0s\2\0\0\0\6\1c\0\0\0\0\0\0\0\0\17\0\0\0C\0\0\0s4\0\0\0t\0\0j\1\0d\1\0d\2\0d\3\0t\2\0d\4\0t\3\0d\5\0t\4\0d\6\0t\5\0d\7\0t\6\0d\10\0t\7\0\203\0\7S(\t\0\0\0Nt\4\0\0\0names\5\0\0\0utf-8R\v\0\0\0R\6\0\0\0t\22\0\0\0incrementalencodert\22\0\0\0incrementaldecodert\f\0\0\0streamreadert\f\0\0\0streamwriter(\10\0\0\0R\1\0\0\0t\t\0\0\0CodecInfoR\v\0\0\0R\6\0\0\0R\7\0\0\0R\17\0\0\0R\22\0\0\0R\21\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/utf_8.pyt\v\0\0\0getregentry!\0\0\0s\20\0\0\0\0\1\t\1\6\1\6\1\6\1\6\1\6\1\6\1(\v\0\0\0t\7\0\0\0__doc__R\1\0\0\0R\10\0\0\0R\v\0\0\0R\6\0\0\0R\7\0\0\0t\32\0\0\0BufferedIncrementalDecoderR\17\0\0\0R\21\0\0\0R\22\0\0\0R\31\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/utf_8.pyt\10\0\0\0<module>\10\0\0\0s\20\0\0\0\6\1\f\4\t\2\f\3\31\4\31\3\31\3\31\5", 4096) = 1950
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=669336, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1950, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(4, "", 4096)                 = 0
27308 close(4)                          = 0
27308 munmap(0xb7fd8000, 4096)          = 0
27308 close(3)                          = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(2, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 write(2, "Python 2.7.9 (default, Apr  2 2015, 15:34:55) \n[GCC 4.9.2] on linux2\n", 69) = 69
27308 write(2, "Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n", 71) = 71
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 stat64("readline", 0xbfffe20c)    = -1 ENOENT (No such file or directory)
27308 open("readline.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("readline.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("readlinemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("readline.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("readline.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/readline", 0xbfffe20c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/readline.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/readline.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/readlinemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/readline.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/readline.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/plat-i386-linux-gnu/readline", 0xbfffe20c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/readline.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/readline.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/readlinemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/readline.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/readline.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/lib-tk/readline", 0xbfffe20c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/readline.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/readline.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/readlinemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/readline.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/readline.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/lib-dynload/readline", 0xbfffe20c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/readline.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=662318, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=26232, st_atime=2017/04/26-21:27:00, st_mtime=2015/04/02-16:48:58, st_ctime=2015/09/26-01:26:48}) = 0
27308 futex(0xb7de7058, FUTEX_WAKE_PRIVATE, 2147483647) = 0
27308 open("/usr/lib/python2.7/lib-dynload/readline.i386-linux-gnu.so", O_RDONLY|O_CLOEXEC) = 4
27308 read(4, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\320\31\0\0004\0\0\0hb\0\0\0\0\0\0004\0 \0\7\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\254G\0\0\254G\0\0\5\0\0\0\0\20\0\0\1\0\0\0\214N\0\0\214^\0\0\214^\0\0\324\22\0\0\370\22\0\0\6\0\0\0\0\20\0\0\2\0\0\0\230N\0\0\230^\0\0\230^\0\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345tdd9\0\0d9\0\0d9\0\0,\1\0\0,\1\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\214N\0\0\214^\0\0\214^\0\0t\1\0\0t\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\n_7\\\23\0N\211F\200\36\16\212w\230,Rq=C\4\0\0\0`\0\0\0\2\0\0\0\6\0\0\0\211\0 !\0\304@\t`\0\0\0b\0\0\0c\0\0\0d\0\0\0\330qX\34\271\215\361\16\35p\240\250\353\323\357\16BE\325\354\273\343\222|\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0}\1\0\0\0\0\0\0\0\0\0\0\21\0\0\0\263\3\0\0\0\0\0\0\0\0\0\0\20\0\0\0\265\5\0\0\0\0\0\0\0\0\0\0\22\0\0\0\360\0\0\0\0\0\0\0\0\0\0\0\21\0\0\0\353\3\0\0\0\0\0\0\0\0\0\0\22\0\0\0J\6\0\0\0\0\0\0\0\0\0\0\20\0\0\0\272\2\0\0\0\0\0\0\0\0\0\0\22\0\0\0\34\0\0\0\0\0\0\0", 512) = 512
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=662318, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=26232, st_atime=2017/04/26-21:27:00, st_mtime=2015/04/02-16:48:58, st_ctime=2015/09/26-01:26:48}) = 0
27308 mmap2(NULL, 29060, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 4, 0) = 0xb7fd1000
27308 mmap2(0xb7fd6000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 4, 0x4000) = 0xb7fd6000
27308 close(4)                          = 0
27308 open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=1072777, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=200, st_size=101810, st_atime=2017/04/26-21:18:06, st_mtime=2017/04/26-21:18:06, st_ctime=2017/04/26-21:18:06}) = 0
27308 mmap2(NULL, 101810, PROT_READ, MAP_PRIVATE, 4, 0) = 0xb7a5c000
27308 close(4)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libreadline.so.6", O_RDONLY|O_CLOEXEC) = 4
27308 read(4, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@\267\0\0004\0\0\0\314-\4\0\0\0\0\0004\0 \0\7\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\20\325\3\0\20\325\3\0\5\0\0\0\0\20\0\0\1\0\0\0\0\342\3\0\0\342\3\0\0\342\3\0\300J\0\0\214_\0\0\6\0\0\0\0\20\0\0\2\0\0\0h\353\3\0h\353\3\0h\353\3\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345td\324\1\3\0\324\1\3\0\324\1\3\0\204\21\0\0\204\21\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\0\342\3\0\0\342\3\0\0\342\3\0\0\36\0\0\0\36\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0u\r5\234\226\212\361\24&\201U\t\203\246\245\270=&\207\301\t\2\0\0r\0\0\0\200\0\0\0\f\0\0\0(\20!\0% \f@\0101\"(A\1f@r1<\3DS\2029\220a&D\1\4J\200B\240(B\n\10\3024 \210\22\245\"E\216\n\1A\0I\0\2\351\2\201\211\0i\3330\324\25\205/\0\4\10\1\201\r\10\5\2$Z\213\374\214FP\240H\215\306$\236A \21J\2\1&QNh\222\254\30\0\311\3\6\4\221\20\324\23046\20\0\0\n\26B\200\10\0\1,\4!\7,,\4\24j\302\331\r\224\1\0\1\f\323\1\220\0,\4 \0 \23\7\1\0\253)\264\323`p\2\0\0a\301\"\0\10S\r(\0\30*\237\4\222\304\1 D\5\200:\25\1", 512) = 512
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=1052012, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=544, st_size=274948, st_atime=2017/04/26-19:26:28, st_mtime=2014/08/04-07:56:36, st_ctime=2015/09/26-01:26:32}) = 0
27308 mmap2(NULL, 278924, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 4, 0) = 0xb7a17000
27308 mmap2(0xb7a55000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 4, 0x3e000) = 0xb7a55000
27308 mmap2(0xb7a5a000, 4492, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7a5a000
27308 close(4)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libtinfo.so.5", O_RDONLY|O_CLOEXEC) = 4
27308 read(4, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\220X\0\0004\0\0\0004\24\2\0\0\0\0\0004\0 \0\7\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\210\361\1\0\210\361\1\0\5\0\0\0\0\20\0\0\1\0\0\0(\366\1\0(\6\2\0(\6\2\0\4\35\0\0\4\"\0\0\6\0\0\0\0\20\0\0\2\0\0\0t\16\2\0t\36\2\0t\36\2\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345td\10\263\1\0\10\263\1\0\10\263\1\0\254\5\0\0\254\5\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td(\366\1\0(\6\2\0(\6\2\0\330\31\0\0\330\31\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\334\313\346^\251B\277\344\376\24\272\220\206\200ZR\36\n`\324\203\0\0\0:\0\0\0 \0\0\0\n\0\0\0@\20\0\4\2\213\0\224\200\1\220\10\0021\26\270@\0\0 9\20\2448q\262\25}\\\26\244\202\350\3277e:F&\300\212C\6j\0\260H*V$ ,\10\203\1A\20\31\0\21*\200 \24\241\0\fa*(D\10\35\1b!\203\305@\20Y\2\212\20\213\31b@ \200\0\0\206\324\1\25PF\310YI\201. P\201\33\n\241J\2E\272\234\246\n\v \260\351\24$\217)0N\366@:\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0=\0\0\0>\0\0\0@\0\0\0A\0\0\0\0\0\0\0C\0\0\0F\0\0\0H\0\0\0", 512) = 512
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=1052031, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=272, st_size=137324, st_atime=2017/04/26-19:26:28, st_mtime=2015/03/06-14:02:37, st_ctime=2015/09/26-01:26:32}) = 0
27308 mmap2(NULL, 141356, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 4, 0) = 0xb79f4000
27308 mmap2(0xb7a14000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 4, 0x1f000) = 0xb7a14000
27308 close(4)                          = 0
27308 mprotect(0xb7a14000, 8192, PROT_READ) = 0
27308 mprotect(0xb7a55000, 8192, PROT_READ) = 0
27308 mprotect(0xb7fd6000, 4096, PROT_READ) = 0
27308 munmap(0xb7a5c000, 101810)        = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 stat64("/home/preston/.terminfo", 0x8428220) = -1 ENOENT (No such file or directory)
27308 stat64("/etc/terminfo", {st_dev=makedev(8, 1), st_ino=1048689, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2015/04/22-12:02:13, st_mtime=2015/04/22-12:02:13, st_ctime=2015/09/26-01:27:19}) = 0
27308 stat64("/lib/terminfo", {st_dev=makedev(8, 1), st_ino=1050827, st_mode=S_IFDIR|0755, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2015/03/06-14:03:18, st_mtime=2015/03/06-14:03:18, st_ctime=2015/09/26-01:27:19}) = 0
27308 stat64("/usr/share/terminfo", {st_dev=makedev(8, 1), st_ino=674796, st_mode=S_IFDIR|0755, st_nlink=44, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2015/09/26-03:59:43, st_mtime=2015/09/26-03:59:44, st_ctime=2015/09/26-03:59:44}) = 0
27308 time(NULL)                        = 1493242224
27308 access("/etc/terminfo/x/xterm-256color", R_OK) = -1 ENOENT (No such file or directory)
27308 access("/lib/terminfo/x/xterm-256color", R_OK) = 0
27308 open("/lib/terminfo/x/xterm-256color", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=131689, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3417, st_atime=2017/04/26-19:26:28, st_mtime=2015/03/06-14:03:18, st_ctime=2015/09/26-01:26:36}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd0000
27308 read(4, "\32\1%\0&\0\17\0\235\1\262\5xterm-256color|xterm with 256 colors\0\0\1\0\0\1\0\0\0\1\0\0\0\0\1\1\0\0\0\0\0\0\0\1\0\0\1\0\1\1\0\0\0\0\0\0\0\0\1\0P\0\10\0\30\0\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\0\1\377\177\0\0\4\0\6\0\10\0\31\0\36\0&\0*\0.\0\377\3779\0J\0L\0P\0W\0\377\377Y\0f\0\377\377j\0n\0x\0|\0\377\377\377\377\200\0\204\0\211\0\216\0\377\377\227\0\234\0\241\0\377\377\246\0\253\0\260\0\265\0\276\0\302\0\311\0\377\377\322\0\327\0\335\0\343\0\377\377\377\377\377\377\365\0\377\377\377\377\377\377\7\1\377\377\v\1\377\377\377\377\377\377\r\1\377\377\22\1\377\377\377\377\377\377\377\377\26\1\32\1 \1$\1(\1,\0012\0018\1>\1D\1J\1N\1\377\377S\1\377\377W\1\\\1a\1e\1l\1\377\377s\1w\1\177\1\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\207\1\220\1\231\1\242\1\253\1\264\1\275\1\306\1\317\1\330\1\377\377\377\377\377\377\341\1\345\1\352\1\377\377\357\1\362\1\377\377\377\377\4\2\7\2\22\2\25\2\27\2\32\2w\2\377\377z\2\377\377\377\377\377\377\377\377\377\377\377\377|v\3\21\3\30\3\37\3&\3-\0035\3=\3E\3M\3U\3]\3e\3m\3t\3{\3\202\3\211\3\221\3\231\3\241\3\251\3\261\3\271\3\301\3\311\3\320\3\327\3\336\3\345\3\355\3\365\3\375\3\5\4\r\4\25\4\35\4%\4,\0043\4:\4A\4I\4Q\4Y\4a\4i\4q\4yl\5\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\254\5\257\5\33[Z\0\7\0\r\0\33[%i%p1%d;%p2%dr\0\33[3g\0\33[H\33[2J\0\33[K\0\33[J\0\33[%i%p1%dG\0\33[%i%p1%d;%p2%dH\0\n\0\33[H\0\33[?25l\0\10\0\33[?12l\33[?25h\0\33[C\0\33[A\0\33[?12;25h\0\33[P\0\33[M\0\33(0\0\33[5m\0\33[1m\0\33[?1049h\0\33[2m\0\33[4h\0\33[8m\0\33[7m\0\33[7m\0\33[4m\0\33[%p1%dX\0\33(B\0\33(B\33[m\0\33[?1049l\0\33[4l\0\33[27m\0\33[24m\0\33[?5h$<100/>\33[?5l\0\33[!p\33[?3;4l\33[4l\33>\0\33[L\0\177\0\33[3~\0\33OB\0\33OP\0\33[21~\0\33OQ\0\33OR\0\33OS\0\33[15~\0\33[17~\0\33[18~\0\33[19~\0\33[20~\0\33OH\0\33[2~\0\33OD\0\33[6~\0\33[5~\0\33OC\0\33[1;2B\0\33[1;2A\0\33OA\0\33[?1l\33>\0\33[?1h\33=\0\33[%p1%dP\0\33[%p1%dM\0\33[%p1%dB\0\33[%p1%d@\0\33[%p1%dS\0\33[%p1%dL\0\33[%p1%dD\0\33[%p1%dC\0\33[%p1%dT\0\33[%p1%dA\0\33[i\0\33[4i\0\33[5i\0\33c\0\33[!p\33[?3;4l\33[4l\33>\0\0338\0\33[%i%p1%dd\0\0337\0\n\0\33M\0%?%p9%t\33(0%e\33(B%;\33[0%?%p6%t;1%;%?%p5%t;2%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p7%t;8%;m\0\33H\0\t\0\33OE\0``aaffggiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~\0\33[Z\0\33[?7h\0\33[?7l\0\33OF\0\33OM\0\33[3;2~\0\33[1;2F\0\33[1;2H\0\33[2;2~\0\33[1;2D\0\33[6;2~\0\33[5;2~\0\33[1;2C\0\33[23~\0\33[24~\0\33[1;2P\0\33[1;2Q\0\33[1;2R\0\33[1;2S\0\33[15;2~\0\33[17;2~\0\33[18;2~\0\33[19;2~\0\33[20;2~\0\33[21;2~\0\33[23;2~\0\33[24;2~\0\33[1;5P\0\33[1;5Q\0\33[1;5R\0\33[1;5S\0\33[15;5~\0\33[17;5~\0\33[18;5~\0\33[19;5~\0\33[20;5~\0\33[21;5~\0\33[23;5~\0\33[24;5~\0\33[1;6P\0\33[1;6Q\0\33[1;6R\0\33[1;6S\0\33[15;6~\0\33[17;6~\0\33[18;6~\0\33[19;6~\0\33[20;6~\0\33[21;6~\0\33[23;6~\0\33[24;6~\0\33[1;3P\0\33[1;3Q\0\33[1;3R\0\33[1;3S\0\33[15;3~\0\33[17;3~\0\33[18;3~\0\33[19;3~\0\33[20;3~\0\33[21;3~\0\33[23;3~\0\33[24;3~\0\33[1;4P\0\33[1;4Q\0\33[1;4R\0\33[1K\0\33[%i%d;%dR\0\33[6n\0\33[?1;2c\0\33[c\0\33[39;49m\0\33]4;%p1%d;rgb:%p2%{255}%*%{1000}%/%2.2X/%p3%{255}%*%{1000}%/%2.2X/%p4%{255}%*%{1000}%/%2.2X\33\\\0\33[3m\0\33[23m\0\33[M\0\33[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m\0\33[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m\0\33l\0\33m\0\2\0\0\0>\0~\0\357\2\1\1\0\0\7\0\23\0\31\0+\0001\0;\0B\0I\0P\0W\0^\0e\0l\0s\0z\0\201\0\210\0\217\0\226\0\235\0\244\0\253\0\262\0\271\0\300\0\307\0\316\0\325\0\334\0\343\0\352\0\361\0\370\0\377\0\6\1\r\1\24\1\33\1\"\1)\0010\0017\1>\1E\1L\1S\1Z\1a\1h\1o\1v\1}\1\204\1\213\1\222\1\231\1\240\1\377\377\377\377\377\377\377\377\0\0\3\0\6\0\t\0\f\0\17\0\22\0\25\0\30\0\35\0\"\0'\0,\0001\0005\0:\0?\0D\0I\0N\0T\0Z\0`\0f\0l\0r\0x\0~\0\204\0\212\0\217\0\224\0\231\0\236\0\243\0\251\0\257\0\265\0\273\0\301\0\307\0\315\0\323\0\331\0\337\0\345\0\353\0\361\0\367\0\375\0\3\1\t\1\17\1\25\1\33\1\37\1$\1)\1.\0013\0018\1<\1@\1D\1\33]112\7\0\33]12;%p1%s\7\0\33[3;J\0\33]52;%p1%s;%p2%s\7\0\33[2 q\0\33[%p1%d q\0\33[3;3~\0\33[3;4~\0\33[3;5~\0\33[3;6~\0\33[3;7~\0\33[1;2B\0\33[1;3B\0\33[1;4B\0\33[1;5B\0\33[1;6B\0\33[1;7B\0\33[1;3F\0\33[1;4F\0\33[1;5F\0\33[1;6F\0\33[1;7F\0\33[1;3H\0\33[1;4H\0\33[1;5H\0\33[1;6H\0\33[1;7H\0\33[2;3~\0\33[2;4~\0\33[2;5~\0\33[2;6~\0\33[2;7~\0\33[1;3D\0\33[1;4D\0\33[1;5D\0\33[1;6D\0\33[1;7D\0\33[6;3~\0\33[6;4~\0\33[6;5~\0\33[6;6~\0\33[6;7~\0\33[5;3~\0\33[5;4~\0\33[5;5~\0\33[5;6~\0\33[5;7~\0\33[1;3C\0\33[1;4C\0\33[1;5C\0\33[1;6C\0\33[1;7C\0\33[1;2A\0\33[1;3A\0\33[1;4A\0\33[1;5A\0\33[1;6A\0\33[1;7A\0AX\0XT\0Cr\0Cs\0E3\0Ms\0Se\0Ss\0kDC3\0kDC4\0kDC5\0kDC6\0kDC7\0kDN\0kDN3\0kDN4\0kDN5\0kDN6\0kDN7\0kEND3\0kEND4\0kEND5\0kEND6\0kEND7\0kHOM3\0kHOM4\0kHOM5\0kHOM6\0kHOM7\0kIC3\0kIC4\0kIC5\0kIC6\0kIC7\0kLFT3\0kLFT4\0kLFT5\0kLFT6\0kLFT7\0kNXT3\0kNXT4\0kNXT5\0kNXT6\0kNXT7\0kPRV3\0kPRV4\0kPRV5\0kPRV6\0kPRV7\0kRIT3\0kRIT4\0kRIT5\0kRIT6\0kRIT7\0kUP\0kUP3\0kUP4\0kUP5\0kUP6\0kUP7\0ka2\0kb1\0kb3\0kc2\0", 4096) = 3417
27308 read(4, "", 4096)                 = 0
27308 close(4)                          = 0
27308 munmap(0xb7fd0000, 4096)          = 0
27308 time(NULL)                        = 1493242224
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 stat64("/home/preston/.inputrc", 0xbffff1c0) = -1 ENOENT (No such file or directory)
27308 stat64("/etc/inputrc", {st_dev=makedev(8, 1), st_ino=1048727, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1748, st_atime=2017/04/26-21:11:28, st_mtime=2014/08/04-07:56:26, st_ctime=2015/09/26-01:26:30}) = 0
27308 open("/etc/inputrc", O_RDONLY|O_LARGEFILE) = 4
27308 read(4, "# /etc/inputrc - global inputrc for libreadline\n# See readline(3readline) and `info rluserman' for more information.\n\n# Be 8 bit clean.\nset input-meta on\nset output-meta on\n\n# To allow the use of 8bit-characters like the german umlauts, uncomment\n# the line below. However this makes the meta key not work as a meta key,\n# which is annoying to those which don't need to type in 8-bit characters.\n\n# set convert-meta off\n\n# try to enable the application keypad when it is called.  Some systems\n# need this to enable the arrow keys.\n# set enable-keypad on\n\n# see /usr/share/doc/bash/inputrc.arrows for other codes of arrow keys\n\n# do not bell on tab-completion\n# set bell-style none\n# set bell-style visible\n\n# some defaults / modifications for the emacs mode\n$if mode=emacs\n\n# allow the use of the Home/End keys\n\"\\e[1~\": beginning-of-line\n\"\\e[4~\": end-of-line\n\n# allow the use of the Delete/Insert keys\n\"\\e[3~\": delete-char\n\"\\e[2~\": quoted-insert\n\n# mappings for \"page up\" and \"page down\" to step to the beginning/end\n# of the history\n# \"\\e[5~\": beginning-of-history\n# \"\\e[6~\": end-of-history\n\n# alternate mappings for \"page up\" and \"page down\" to search the history\n# \"\\e[5~\": history-search-backward\n# \"\\e[6~\": history-search-forward\n\n# mappings for Ctrl-left-arrow and Ctrl-right-arrow for word moving\n\"\\e[1;5C\": forward-word\n\"\\e[1;5D\": backward-word\n\"\\e[5C\": forward-word\n\"\\e[5D\": backward-word\n\"\\e\\e[C\": forward-word\n\"\\e\\e[D\": backward-word\n\n$if term=rxvt\n\"\\e[7~\": beginning-of-line\n\"\\e[8~\": end-of-line\n\"\\eOc\": forward-word\n\"\\eOd\": backward-word\n$endif\n\n# for non RH/Debian xterm, can't hurt for RH/Debian xterm\n# \"\\eOH\": beginning-of-line\n# \"\\eOF\": end-of-line\n\n# for freebsd console\n# \"\\e[H\": beginning-of-line\n# \"\\e[F\": end-of-line\n\n$endif\n", 1748) = 1748
27308 close(4)                          = 0
27308 brk(0x84b5000)                    = 0x84b5000
27308 close(3)                          = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 open("/usr/lib/i386-linux-gnu/gconv/gconv-modules.cache", O_RDONLY) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=659459, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=26256, st_atime=2017/04/26-19:25:17, st_mtime=2015/03/26-06:58:43, st_ctime=2015/09/26-01:26:46}) = 0
27308 mmap2(NULL, 26256, PROT_READ, MAP_SHARED, 3, 0) = 0xb7fca000
27308 close(3)                          = 0
27308 futex(0xb7fa1148, FUTEX_WAKE_PRIVATE, 2147483647) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 fstat64(1, {st_dev=makedev(0, 13), st_ino=6, st_mode=S_IFCHR|0620, st_nlink=1, st_uid=1000, st_gid=5, st_blksize=1024, st_blocks=0, st_rdev=makedev(136, 3), st_atime=2017/04/26-21:30:19, st_mtime=2017/04/26-21:30:19, st_ctime=2017/04/26-21:03:39}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc9000
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], 0}, 8) = 0
27308 read(0, "i", 1)                   = 1
27308 write(1, "i", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "m", 1)                   = 1
27308 write(1, "m", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "p", 1)                   = 1
27308 write(1, "p", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "o", 1)                   = 1
27308 write(1, "o", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, " ", 1)                   = 1
27308 write(1, " ", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "h", 1)                   = 1
27308 write(1, "h", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "p", 1)                   = 1
27308 write(1, "p", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "l", 1)                   = 1
27308 write(1, "l", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "i", 1)                   = 1
27308 write(1, "i", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "b", 1)                   = 1
27308 write(1, "b", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242230
27308 stat64("httplib", 0xbfffe08c)     = -1 ENOENT (No such file or directory)
27308 open("httplib.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("httplib.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("httplibmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("httplib.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("httplib.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/httplib", 0xbfffe08c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/httplib.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/httplib.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/httplibmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/httplib.py", O_RDONLY|O_LARGEFILE) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=661509, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=104, st_size=50788, st_atime=2017/02/23-18:09:09, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/httplib.pyc", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=707543, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=72, st_size=36631, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(4, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\22\0\0\0@\0\0\0s\271\5\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0m\1\0Z\1\0\1d\1\0d\3\0l\2\0Z\2\0d\1\0d\3\0l\3\0Z\3\0d\1\0d\3\0l\4\0Z\4\0d\1\0d\4\0l\5\0m\6\0Z\6\0\1d\1\0d\5\0l\7\0m\10\0Z\10\0\1d\1\0d\3\0l\t\0Z\t\0e\t\0j\n\0\203\0\0\217-\0\1e\6\0r\217\0e\t\0j\v\0d\6\0d\7\0e\f\0\203\3\0\1n\0\0d\1\0d\3\0l\r\0Z\r\0Wd\3\0QXy\24\0d\1\0d\10\0l\16\0m\17\0Z\17\0\1Wn!\0\4e\20\0k\n\0r\330\0\1\1\1d\1\0d\10\0l\17\0m\17\0Z\17\0\1n\1\0Xd\t\0d\n\0d\v\0d\f\0d\r\0d\16\0d\17\0d\20\0d\21\0d\22\0d\23\0d\24\0d\25\0d\26\0d\27\0d\30\0d\31\0g\21\0Z\21\0d\32\0Z\22\0d\33\0Z\23\0d\34\0Z\24\0d\35\0Z\25\0d\36\0Z\26\0d\37\0Z\27\0d \0Z\30\0d!\0Z\31\0d\"\0Z\32\0d#\0Z\33\0d$\0Z\34\0d%\0Z\35\0d&\0Z\36\0d'\0Z\37\0d(\0Z \0d)\0Z!\0d*\0Z\"\0d+\0Z#\0d,\0Z$\0d-\0Z%\0d.\0Z&\0d/\0Z'\0d0\0Z(\0d1\0Z)\0d2\0Z*\0d3\0Z+\0d4\0Z,\0d5\0Z-\0d6\0Z.\0d7\0Z/\0d8\0Z0\0d9\0Z1\0d:\0Z2\0d;\0Z3\0d<\0Z4\0d=\0Z5\0d>\0Z6\0d?\0Z7\0d@\0Z8\0dA\0Z9\0dB\0Z:\0dC\0Z;\0dD\0Z<\0dE\0Z=\0dF\0Z>\0dG\0Z?\0dH\0Z@\0dI\0ZA\0dJ\0ZB\0dK\0ZC\0dL\0ZD\0dM\0ZE\0dN\0ZF\0dO\0ZG\0dP\0ZH\0i)\0dQ\0d \0006dR\0d!\0006dS\0d#\0006dT\0d$\0006dU\0d%\0006dV\0d&\0006dW\0d'\0006dX\0d(\0006dY\0d)\0006dZ\0d,\0006d[\0d-\0006d\\\0d.\0006d]\0d/\0006d^\0d0\0006d_\0d1\0006d`\0da\0006db\0d2\0006dc\0d3\0006dd\0d4\0006de\0d5\0006df\0d6\0006dg\0d7\0006dh\0d8\0006di\0d9\0006dj\0d:\0006dk\0d;\0006dl\0d<\0006dm\0d=\0006dn\0d>\0006do\0d?\0006dp\0d@\0006dq\0dA\0006dr\0dB\0006ds\0dC\0006dt\0dD\0006du\0dI\0006dv\0dJ\0006dw\0dK\0006dx\0dL\0006dy\0dM\0006dz\0dN\0006ZI\0d{\0ZJ\0d|\0ZK\0d \0ZL\0e\3\0jM\0d}\0\203\1\0jN\0ZO\0e\3\0jM\0d~\0\203\1\0jP\0ZQ\0d\177\0d\200\0d\201\0h\3\0ZR\0d\202\0e\r\0jS\0f\1\0d\203\0\204\0\0\203\0\0YZT\0d\n\0f\0\0d\204\0\204\0\0\203\0\0YZU\0d\v\0f\0\0d\205\0\204\0\0\203\0\0YZV\0d\t\0f\0\0d\206\0\204\0\0\203\0\0YZW\0y\20\0d\1\0d\3\0lX\0ZX\0Wn\21\0\4e\20\0k\n\0r;\4\1\1\1nC\0Xd\207\0eV\0f\1\0d\210\0\204\0\0\203\0\0YZY\0e\21\0jZ\0d\207\0\203\1\0\1d\211\0eW\0f\1\0d\212\0\204\0\0\203\0\0YZ[\0d\213\0\204\0\0Z\\\0d\f\0e]\0f\1\0d\214\0\204\0\0\203\0\0YZ^\0d\r\0e^\0f\1\0d\215\0\204\0\0\203\0\0YZ_\0d\22\0e^\0f\1\0d\216\0\204\0\0\203\0\0YZ`\0d\16\0e^\0f\1\0d\217\0\204\0\0\203\0\0YZa\0d\17\0e^\0f\1\0d\220\0\204\0\0\203\0\0YZb\0d\20\0e^\0f\1\0d\221\0\204\0\0\203\0\0YZc\0d\21\0e^\0f\1\0d\222\0\204\0\0\203\0\0YZd\0d\23\0e^\0f\1\0d\223\0\204\0\0\203\0\0YZe\0d\24\0ee\0f\1\0d\224\0\204\0\0\203\0\0YZf\0d\25\0ee\0f\1\0d\225\0\204\0\0\203\0\0YZg\0d\26\0ee\0f\1\0d\226\0\204\0\0\203\0\0YZh\0d\27\0e^\0f\1\0d\227\0\204\0\0\203\0\0YZi\0d\230\0e^\0f\1\0d\231\0\204\0\0\203\0\0YZj\0e^\0Zk\0d\232\0f\0\0d\233\0\204\0\0\203\0\0YZl\0d\3\0S(\234\0\0\0s\375\t\0\0HTTP/1.1 client library\n\n<intro stuff goes here>\n<other stuff, too>\n\nHTTPConnection goes through a number of \"states\", which define when a client\nmay legally make another request or fetch the response for a particular\nrequest. This diagram details these state transitions:\n\n    (null)\n      |\n      | HTTPConnection()\n      v\n    Idle\n      |\n      | putrequest()\n      v\n    Request-started\n      |\n      | ( putheader() )*  endheaders()\n      v\n    Request-sent\n      |\n      | response = getresponse()\n      v\n    Unread-response   [Response-headers-read]\n      |\\____________________\n      |                     |\n      | response.read()     | putrequest()\n      v                     v\n    Idle                  Req-started-unread-response\n                     ______/|\n                   /        |\n   response.read() |        | ( putheader() )*  endheaders()\n                   v        v\n       Request-started    Req-sent-unread-response\n                            |\n                            | response.read()\n                            v\n                          Request-sent\n\nThis diagram presents the following rules:\n  -- a second request may not be started until {response-headers-read}\n  -- a response [object] cannot be retrieved until {request-sent}\n  -- there is no differentiation between an unread response body and a\n     partially read response body\n\nNote: this enforcement is applied by the HTTPConnection class. The\n      HTTPResponse class does not enforce this state machine, which\n      implies sophisticated clients may accelerate the request/response\n      pipeline. Caution should be taken, though: accelerating the states\n      beyond the above pattern may imply knowledge of the server's\n      connection-close behavior for certain requests. For example, it\n      is impossible to tell whether the server will close the connection\n      UNTIL the response headers have been read; this means that further\n      requests cannot be placed into the pipeline until it is known that\n      the server will NOT be closing the connection.\n\nLogical State                  __state            __response\n-------------                  -------            ----------\nIdle                           _CS_IDLE           None\nRequest-started                _CS_REQ_STARTED    None\nRequest-sent                   _CS_REQ_SENT       None\nUnread-response                _CS_IDLE           <response_class>\nReq-started-unread-response    _CS_REQ_STARTED    <response_class>\nReq-sent-unread-response       _CS_REQ_SENT       <response_class>\ni\377\377\377\377(\1\0\0\0t\5\0\0\0arrayN(\1\0\0\0t\v\0\0\0py3", 4096) = 4096
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=707543, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=72, st_size=36631, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 read(4, "kwarning(\1\0\0\0t\10\0\0\0urlsplitt\6\0\0\0ignores\34\0\0\0.*mimetools has been removed(\1\0\0\0t\10\0\0\0StringIOt\4\0\0\0HTTPt\f\0\0\0HTTPResponset\16\0\0\0HTTPConnectiont\r\0\0\0HTTPExceptiont\f\0\0\0NotConnectedt\17\0\0\0UnknownProtocolt\27\0\0\0UnknownTransferEncodingt\25\0\0\0UnimplementedFileModet\16\0\0\0IncompleteReadt\n\0\0\0InvalidURLt\27\0\0\0ImproperConnectionStatet\21\0\0\0CannotSendRequestt\20\0\0\0CannotSendHeadert\20\0\0\0ResponseNotReadyt\r\0\0\0BadStatusLinet\5\0\0\0errort\t\0\0\0responsesiP\0\0\0i\273\1\0\0t\7\0\0\0UNKNOWNt\4\0\0\0Idles\17\0\0\0Request-starteds\f\0\0\0Request-sentid\0\0\0ie\0\0\0if\0\0\0i\310\0\0\0i\311\0\0\0i\312\0\0\0i\313\0\0\0i\314\0\0\0i\315\0\0\0i\316\0\0\0i\317\0\0\0i\342\0\0\0i,\1\0\0i-\1\0\0i.\1\0\0i/\1\0\0i0\1\0\0i1\1\0\0i3\1\0\0i\220\1\0\0i\221\1\0\0i\222\1\0\0i\223\1\0\0i\224\1\0\0i\225\1\0\0i\226\1\0\0i\227\1\0\0i\230\1\0\0i\231\1\0\0i\232\1\0\0i\233\1\0\0i\234\1\0\0i\235\1\0\0i\236\1\0\0i\237\1\0\0i\240\1\0\0i\241\1\0\0i\246\1\0\0i\247\1\0\0i\250\1\0\0i\252\1\0\0i\364\1\0\0i\365\1\0\0i\366\1\0\0i\367\1\0\0i\370\1\0\0i\371\1\0\0i\373\1\0\0i\376\1\0\0t\10\0\0\0Continues\23\0\0\0Switching Protocolst\2\0\0\0OKt\7\0\0\0Createdt\10\0\0\0Accepteds\35\0\0\0Non-Authoritative Informations\n\0\0\0No Contents\r\0\0\0Reset Contents\17\0\0\0Partial Contents\20\0\0\0Multiple Choicess\21\0\0\0Moved Permanentlyt\5\0\0\0Founds\t\0\0\0See Others\f\0\0\0Not Modifieds\t\0\0\0Use Proxys\10\0\0\0(Unused)i2\1\0\0s\22\0\0\0Temporary Redirects\v\0\0\0Bad Requestt\f\0\0\0Unauthorizeds\20\0\0\0Payment Requiredt\t\0\0\0Forbiddens\t\0\0\0Not Founds\22\0\0\0Method Not Alloweds\16\0\0\0Not Acceptables\35\0\0\0Proxy Authentication Requireds\17\0\0\0Request Timeoutt\10\0\0\0Conflictt\4\0\0\0Gones\17\0\0\0Length Requireds\23\0\0\0Precondition Faileds\30\0\0\0Request Entity Too Larges\24\0\0\0Request-URI Too Longs\26\0\0\0Unsupported Media Types\37\0\0\0Requested Range Not Satisfiables\22\0\0\0Expectation Faileds\25\0\0\0Internal Server Errors\17\0\0\0Not Implementeds\v\0\0\0Bad Gateways\23\0\0\0Service Unavailables\17\0\0\0Gateway Timeouts\32\0\0\0HTTP Version Not Supportedi\0\0\20\0i\0\0\1\0s\23\0\0\0\\A[^:\\s][^:\\r\\n]*\\Zs\31\0\0\0\\n(?![ \\t])|\\r(?![ \\t\\n])t\5\0\0\0PATCHt\4\0\0\0POSTt\3\0\0\0PUTt\v\0\0\0HTTPMessagec\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s#\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0RS(\3\0\0\0c\3\0\0\0\5\0\0\0\3\0\0\0C\0\0\0sT\0\0\0|\0\0j\0\0j\1\0|\1\0\203\1\0}\3\0|\3\0d\2\0k\10\0r.\0|\2\0|\0\0j\0\0|\1\0<n\"\0d\1\0j\3\0|\3\0|\2\0f\2\0\203\1\0}\4\0|\4\0|\0\0j\0\0|\1\0<d\2\0S(\3\0\0\0s*\0\0\0Add header for field key handling repeats.s\2\0\0\0, N(\4\0\0\0t\4\0\0\0dictt\3\0\0\0gett\4\0\0\0Nonet\4\0\0\0join(\5\0\0\0t\4\0\0\0selft\3\0\0\0keyt\5\0\0\0valuet\4\0\0\0prevt\10\0\0\0combined(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\t\0\0\0addheader\1\1\0\0s\n\0\0\0\0\2\22\1\f\1\20\2\25\1c\3\0\0\0\4\0\0\0\3\0\0\0C\0\0\0s&\0\0\0|\0\0j\0\0|\1\0\31}\3\0|\3\0d\1\0\27|\2\0\27|\0\0j\0\0|\1\0<d\2\0S(\3\0\0\0s-\0\0\0Add more field data from a continuation line.s\2\0\0\0\n N(\1\0\0\0R%\0\0\0(\4\0\0\0R)\0\0\0R*\0\0\0t\4\0\0\0moreR,\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\v\0\0\0addcontinue\n\1\0\0s\4\0\0\0\0\2\r\1c\1\0\0\0\10\0\0\0\5\0\0\0C\0\0\0s\211\2\0\0i\0\0|\0\0_\0\0d\1\0|\0\0_\1\0g\0\0\4|\0\0_\2\0}\1\0d\1\0|\0\0_\3\0d\1\0}\2\0d\2\0}\3\0d\r\0\4}\4\0\4}\5\0}\6\0t\5\0|\0\0j\6\0d\3\0\203\2\0rc\0|\0\0j\6\0j\7\0}\5\0n\30\0|\0\0j\10\0r{\0|\0\0j\6\0j\t\0}\6\0n\0\0x\7\2t\n\0r\204\2t\v\0|\1\0\203\1\0t\f\0k\4\0r\251\0t\r\0d\4\0t\f\0\26\203\1\0\202\1\0n\0\0|\6\0r\346\0y\r\0|\6\0\203\0\0}\4\0Wq\346\0\4t\16\0k\n\0r\342\0\1\1\1d\r\0\4}\4\0}\6\0d\5\0|\0\0_\10\0q\346\0Xn\0\0|\0\0j\6\0j\17\0t\20\0d\2\0\27\203\1\0}\7\0t\v\0|\7\0\203\1\0t\20\0k\4\0r\35\1t\21\0d\6\0\203\1\0\202\1\0n\0\0|\7\0s0\1d\7\0|\0\0_\3\0Pn\0\0|\3\0r[\1|\7\0j\22\0d\10\0\203\1\0r[\1|\0\0j\1\0|\7\0\27|\0\0_\1\0q~\0n\0\0d\5\0}\3\0|\2\0r\240\1|\7\0d\5\0\31d\t\0k\6\0r\240\1|\1\0j\23\0|\7\0\203\1\0\1|\0\0j\24\0|\2\0|\7\0j\25\0\203\0\0\203\2\0\1q~\0n(\0|\0\0j\26\0|\7\0\203\1\0r\265\1q~\0n\23\0|\0\0j\27\0|\7\0\203\1\0r\310\1Pn\0\0|\0\0j\30\0|\7\0\203\1\0}\2\0|\2\0r\24\2|\1\0j\23\0|\7\0\203\1\0\1|\0\0j\31\0|\2\0|\7\0t\v\0|\2\0\203\1\0d\2\0\27\37j\25\0\203\0\0\203\2\0\1q~\0q~\0|\2\0d\r\0k\t\0r&\2q~\0q~\0|\0\0j\0\0s;\2d\n\0|\0\0_\3\0n\t\0d\v\0|\0\0_\3\0|\5\0rW\2|\5\0|\7\0\203\1\0\1n)\0|\6\0rp\2|\0\0j\6\0j\32\0|\4\0\203\1\0\1n\20\0|\0\0j\3\0d\f\0\27|\0\0_\3\0Pq~\0Wd\r\0S(\16\0\0\0s:\4\0\0Read header lines.\n\n        Read header lines up to the entirely blank line that terminates them.\n        The (normally blank) line that ends the headers is skipped, but not\n        included in the returned list.  If a non-header line ends the headers,\n        (which is an error), an attempt is made to backspace over it; it is\n        never included in the returned list.\n\n        The variable self.status is set to the empty string if all went well,\n        otherwise it is an error message.  The variable self.headers is a\n        completely uninterpreted list of lines contained in the header (so\n        printing them will reproduce the header exactly as it appears in the\n        file).\n\n        If multiple header fields with the same name occur, they are combined\n        according to the rules in RFC 2616 sec 4.2:\n\n        Appending each subsequent field-value to the first, each separated\n        by a comma. The order in which header fields with the same field-name\n        are received is significant to the interpretation of the combined\n        field value.\n        t\0\0\0\0i\1\0\0\0t\6\0\0\0unreads\30\0\0\0got more than %d headersi\0\0\0\0s\v\0\0\0header lines\16\0\0\0EOF in headerss\5\0\0\0From s\2\0\0\0 \ts\n\0\0\0No headerss%\0\0\0Non-header line where header expecteds\n\0\0\0; bad seekN(\33\0\0\0R%\0\0\0t\10\0\0\0unixfromt\7\0\0\0headerst\6\0\0\0statusR'\0\0\0t\7\0\0\0hasattrt\2\0\0\0fpR2\0\0\0t\10\0\0\0seekablet\4\0\0\0tellt\4\0\0\0Truet\3\0\0\0lent\v\0\0\0_MAXHEADERSR\10\0\0\0t\7\0\0\0IOErrort\10\0\0\0readlinet\10\0\0\0_MAXLINEt\v\0\0\0LineTooLongt\n\0\0\0startswitht\6\0\0\0appendR0\0\0\0t\5\0\0\0stript\t\0\0\0iscommentt\6\0\0\0islastt\10\0\0\0isheaderR.\0\0\0t\4\0\0\0seek(\10\0\0\0R)\0\0\0t\5\0\0\0hlistt\n\0\0\0headerseent\t\0\0\0firstlinet\v\0\0\0startoflineR2\0\0\0R9\0\0\0t\4\0\0\0line(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\v\0\0\0readheaders\17\1\0\0sl\0\0\0\0\34\t\1\t\1\r\1\t\1\6\1\6\1\16\1\22\1\17\1\t\1\17\1\t\1\22\1\23\1\6\1\3\1\r\1\r\1\n\1\20\1\26\1\22\1\17\1\6\1\t\1\4\2\25\1\20\1\6\1\6\1\26\4\r\1\26\1\6\1\17\2\6\1\17\2\4\1\17\1\6\2\r\1$\1\6\1\f\4\6\3\t\1\f\2\t\2\6\1\r\1\6\1\23\2\20\1(\5\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__R.\0\0\0R0\0\0\0RM\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR$\0\0\0\377\0\0\0s\6\0\0\0\6\2\t\t\t\5c\0\0\0\0\0\0\0\0\5\0\0\0B\0\0\0s\206\0\0\0e\0\0Z\1\0d\0\0d\0\0d\r\0e\3\0d\1\0\204\4\0Z\4\0d\2\0\204\0\0Z\5\0d\3\0\204\0\0Z\6\0d\4\0\204\0\0Z\7\0d\5\0\204\0\0Z\10\0d\6\0\204\0\0Z\t\0d\r\0d\7\0\204\1\0Z\n\0d\10\0\204\0\0Z\v\0d\t\0\204\0\0Z\f\0d\n\0\204\0\0Z\r\0d\r\0d\v\0\204\1\0Z\16\0d\f\0\204\0\0Z\17\0RS(\16\0\0\0i\0\0\0\0c\6\0\0\0\6\0\0\0\3\0\0\0C\0\0\0s\227\0\0\0|\5\0r\33\0|\1\0j\0\0d\1\0\203\1\0|\0\0_\1\0n\25\0|\1\0j\0\0d\1\0d\2\0\203\2\0|\0\0_\1\0|\2\0|\0\0_\2\0|\3\0|\0\0_\3\0|\4\0|\0\0_\4\0d\0\0|\0\0_\6\0t\7\0|\0\0_\10\0t\7\0|\0\0_\t\0t\7\0|\0\0_\n\0t\7\0|\0\0_\v\0t\7\0|\0\0_\f\0t\7\0|\0\0_\r\0t\7\0|\0\0_\16\0d\0\0S(\3\0\0\0Nt\2\0\0\0rbi\0\0\0\0(\17\0\0\0t\10\0\0\0makefileR7\0\0\0t\n\0\0\0debuglevelt\6\0\0\0strictt\7\0\0\0_methodR'\0\0\0t\3\0\0\0msgt\10\0\0\0_UNKNOWNt\7\0\0\0versionR5\0\0\0t\6\0\0\0reasont\7\0\0\0chunkedt\n\0\0\0chunk_leftt\6\0\0\0lengtht\n\0\0\0will_close(\6\0\0\0R)\0\0\0t\4\0\0\0sockRR\0\0\0RS\0\0\0t\6\0\0\0methodt\t\0\0\0buffering(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\10\0\0\0__init__{\1\0\0s\34\0\0\0\0\1\6\3\25\7\25\1\t\1\t\1\t\2\t\3\t\1\t\1\t\2\t\1\t\1\t\1c\1\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\215\1\0\0|\0\0j\0\0j\1\0t\2\0d\1\0\27\203\1\0}\1\0t\3\0|\1\0\203\1\0t\2\0k\4\0r7\0t\4\0d\2\0\203\1\0\202\1\0n\0\0|\0\0j\5\0d\3\0k\4\0rX\0d\4\0Gt\6\0|\1\0\203\1\0GHn\0\0|\1\0sm\0t\7\0|\1\0\203\1\0\202\1\0n\0\0y\37\0|\1\0j\10\0d\0\0d\5\0\203\2\0\\\3\0}\2\0}\3\0}\4\0WnM\0\4t\n\0k\n\0r\333\0\1\1\1y\"\0|\1\0j\10\0d\0\0d\1\0\203\2\0\\\2\0}\2\0}\3\0d\6\0}\4\0Wq\334\0\4t\n\0k\n\0r\327\0\1\1\1d\6\0}\2\0q\334\0Xn\1\0X|\2\0j\v\0d\7\0\203\1\0s)\1|\0\0j\f\0r\r\1|\0\0j\r\0\203\0\0\1t\7\0|\1\0\203\1\0\202\1\0q)\1t\16\0|\1\0|\0\0j\0\0\203\2\0|\0\0_\0\0d\f\0Sn\0\0y7\0t\17\0|\3\0\203\1\0}\3\0|\3\0d\n\0k\0\0sP\1|\3\0d\v\0k\4\0r_\1t\7\0|\1\0\203\1\0\202\1\0n\0\0Wn\35\0\4t\n\0k\n\0r\177\1\1\1\1t\7\0|\1\0\203\1\0\202\1\0n\1\0X|\2\0|\3\0|\4\0f\3\0S(\r\0\0\0Ni\1\0\0\0s\v\0\0\0header linei\0\0\0\0s\6\0\0\0reply:i\2\0\0\0R1\0\0\0s\5\0\0\0HTTP/s\10\0\0\0HTTP/0.9i\310\0\0\0id\0\0\0i\347\3\0\0(\3\0\0\0s\10\0\0\0HTTP/0.9i\310\0\0\0R1\0\0\0(\20\0\0\0R7\0\0\0R>\0\0\0R?\0\0\0R;\0\0\0R@\0\0\0RR\0\0\0t\4\0\0\0reprR\23\0\0\0t\5\0\0\0splitR'\0\0\0t\n\0\0\0ValueErrorRA\0\0\0RS\0\0\0t\5\0\0\0closet\22\0\0\0LineAndFileWrappert\3\0\0\0int(\5\0\0\0R)\0\0\0RL\0\0\0RW\0\0\0R5\0\0\0RX\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\f\0\0\0_read_status\227\1\0\0s8\0\0\0\0\2\26\1\22\1\17\1\17\1\22\1\6\3\17\1\3\1\37\1\r\1\3\1\30\1\n\1\r\3\16\1\17\1\t\1\n\1\17\3\25\1\7\3\3\1\f\1\30\1\23\1\r\1\20\1c\1\0\0\0\10\0\0\0\5\0\0\0C\0\0\0s\r\3\0\0|\0\0j\0\0d\0\0k\t\0r\23\0d\0\0Sx\244\0t\2\0r\271\0|\0\0j\3\0\203\0\0\\\3\0}\1\0}\2\0}\3\0|\2\0t\4\0k\3\0rA\0Pn\0\0xr\0t\2\0r\265\0|\0\0j\5\0j\6\0t\7\0d\1\0\27\203\1\0}\4\0t\10\0|\4\0\203\1\0t\7\0k\4\0r\201\0t\t\0d\2\0\203\1\0\202\1\0n\0\0|\4\0j\n\0\203\0\0}\4\0|\4\0s\227\0Pn\0\0|\0\0j\v\0d\3\0k\4\0rD\0d\4\0G|\4\0GHqD\0qD\0Wq\26\0W|\2\0|\0\0_\f\0|\3\0j\n\0\203\0\0|\0\0_\r\0|\1\0d\5\0k\2\0r\352\0d\6\0|\0\0_\16\0n?\0|\1\0j\17\0d\7\0\203\1\0r\5\1d\10\0|\0\0_\16\0n$\0|\1\0d\t\0k\2\0r\35\1d\n\0|\0\0_\16\0n\f\0t\20\0|\1\0\203\1\0\202\1\0|\0\0j\16\0d\n\0k\2\0ri\1d\0\0|\0\0_\21\0d\3\0|\0\0_\22\0d\1\0|\0\0_\23\0t\24\0t\25\0\203\0\0\203\1\0|\0\0_\0\0d\0\0St\24\0|\0\0j\5\0d\3\0\203\2\0|\0\0_\0\0|\0\0j\v\0d\3\0k\4\0r\257\1x\37\0|\0\0j\0\0j\26\0D]\16\0}\5\0d\4\0G|\5\0Gq\232\1Wn\0\0d\0\0|\0\0j\0\0_\5\0|\0\0j\0\0j\27\0d\v\0\203\1\0}\6\0|\6\0r\372\1|\6\0j\30\0\203\0\0d\f\0k\2\0r\372\1d\1\0|\0\0_\22\0d\0\0|\0\0_\31\0n\t\0d\3\0|\0\0_\22\0|\0\0j\32\0\203\0\0|\0\0_\23\0|\0\0j\0\0j\27\0d\r\0\203\1\0}\7\0|\7\0r\202\2|\0\0j\22\0\fr\202\2y\23\0t\33\0|\7\0\203\1\0|\0\0_\21\0Wn\32\0\4t\34\0k\n\0rc\2\1\1\1d\0\0|\0\0_\21\0q\213\2X|\0\0j\21\0d\3\0k\0\0r\213\2d\0\0|\0\0_\21\0q\213\2n\t\0d\0\0|\0\0_\21\0|\2\0t\35\0k\2\0s\316\2|\2\0t\36\0k\2\0s\316\2d\16\0|\2\0\4\3k\1\0o\272\2d\17\0k\0\0n\2\0\2\1s\316\2|\0\0j\37\0d\20\0k\2\0r\332\2d\3\0|\0\0_\21\0n\0\0|\0\0j\23\0\fr\t\3|\0\0j\22\0\fr\t\3|\0\0j\21\0d\0\0k\10\0r\t\3d\1\0|\0\0_\23\0n\0\0d\0\0S(\21\0\0\0Ni\1\0\0\0s\v\0\0\0header linei\0\0\0\0s\7\0\0\0header:s\10\0\0\0HTTP/1.0i\n\0\0\0s\7\0\0\0HTTP/1.i\v\0\0\0s\10\0\0\0HTTP/0.9i\t\0\0\0s\21\0\0\0transfer-encodingRY\0\0\0s\16\0\0\0content-lengthid\0\0\0i\310\0\0\0t\4\0\0\0HEAD( \0\0\0RU\0\0\0R'\0\0\0R:\0\0\0Rg\0\0\0t\10\0\0\0CONTINUER7\0\0\0R>\0\0\0R?\0\0\0R;\0\0\0R@\0\0\0RC\0\0\0RR\0\0\0R5\0\0\0RX\0\0\0RW\0\0\0RA\0\0\0R\n\0\0\0R[\0\0\0RY\0\0\0R\\\0\0\0R$\0\0\0R\4\0\0\0R4\0\0\0t\t\0\0\0getheadert\5\0\0\0lowerRZ\0\0\0t\f\0\0\0_check_closeRf\0\0\0Rc\0\0\0t\n\0\0\0NO_CONTENTt\f\0\0\0NOT_MODIFIEDRT\0\0\0(\10\0\0\0R)\0\0\0RW\0\0\0R5\0\0\0RX\0\0\0t\4\0\0\0skipt\3\0\0\0hdrt\6\0\0\0tr_encR[\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\5\0\0\0begin\276\1\0\0st\0\0\0\0\1\17\2\4\3\t\1\25\1\f\1\4\2\t\1\26\1\22\1\17\1\f\1\6\1\4\1\17\1\24\2\t\1\17\1\f\1\f\1\17\1\f\1\f\1\f\2\f\2\17\1\t\1\t\1\t\1\22\1\4\2\25\1\17\1\23\1\17\3\f\3\22\1\30\1\t\1\f\2\t\3\17\4\22\1\20\1\3\1\23\1\r\1\r\2\17\1\17\2\t\3\30\1\34\1\17\1\f\5\n\1\n\1\17\1c\1\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s\267\0\0\0|\0\0j\0\0j\1\0d\1\0\203\1\0}\1\0|\0\0j\2\0d\2\0k\2\0rS\0|\0\0j\0\0j\1\0d\1\0\203\1\0}\1\0|\1\0rO\0d\3\0|\1\0j\3\0\203\0\0k\6\0rO\0t\4\0St\5\0S|\0\0j\0\0j\1\0d\4\0\203\1\0ri\0t\5\0S|\1\0r\205\0d\4\0|\1\0j\3\0\203\0\0k\6\0r\205\0t\5\0S|\0\0j\0\0j\1\0d\5\0\203\1\0}\2\0|\2\0r\263\0d\4\0|\2\0j\3\0\203\0\0k\6\0r\263\0t\5\0St\4\0S(\6\0\0\0Nt\n\0\0\0connectioni\v\0\0\0Rd\0\0\0s\n\0\0\0keep-alives\20\0\0\0proxy-connection(\6\0\0\0RU\0\0\0Rj\0\0\0RW\0\0\0Rk\0\0\0R:\0\0\0t\5\0\0\0False(\3\0\0\0R)\0\0\0t\4\0\0\0connt\5\0\0\0pconn(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyRl\0\0\0\24\2\0\0s\34\0\0\0\0\1\22\1\17\3\22\1\30\1\4\1\4\6\22\1\4\4\30\1\4\3\22\1\30\1\4\3c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s&\0\0\0|\0\0j\0\0r\"\0|\0\0j\0\0j\1\0\203\0\0\1d\0\0|\0\0_\0\0n\0\0d\0\0S(\1\0\0\0N(\3\0\0\0R7\0\0\0Rd\0\0\0R'\0\0\0(\1\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyRd\0\0\0002\2\0\0s\6\0\0\0\0\1\t\1\r\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0d\0\0k\10\0S(\1\0\0\0N(\2\0\0\0R7\0\0\0R'\0\0\0(\1\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\10\0\0\0isclosed7\2\0\0s\2\0\0\0\0\7c\2\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s[\1\0\0|\0\0j\0\0d\0\0k\10\0r\23\0d\1\0S|\0\0j\2\0d\2\0k\2\0r0\0|\0\0j\3\0\203\0\0\1d\1\0S|\0\0j\4\0rF\0|\0\0j\5\0|\1\0\203\1\0S|\1\0d\0\0k\10\0r\301\0|\0\0j\6\0d\0\0k\10\0rs\0|\0\0j\0\0j\7\0\203\0\0}\2\0n@\0y\26\0|\0\0j\10\0|\0\0j\6\0\203\1\0}\2\0Wn\36\0\4t\t\0k\n\0r\251\0\1\1\1|\0\0j\3\0\203\0\0\1\202\0\0n\1\0Xd\3\0|\0\0_\6\0|\0\0j\3\0\203\0\0\1|\2\0S|\0\0j\6\0d\0\0k\t\0r\356\0|\1\0|\0\0j\6\0k\4\0r\356\0|\0\0j\6\0}\1\0q\356\0n\0\0|\0\0j\0\0j\7\0|\1\0\203\1\0}\2\0|\2\0\fr\32\1|\1\0r\32\1|\0\0j\3\0\203\0\0\1n\0\0|\0\0j\6\0d\0\0k\t\0rW\1|\0\0\4j\6\0t\n\0|\2\0\203\1\0008\2_\6\0|\0\0j\6\0sW\1|\0\0j\3\0\203\0\0\1qW\1n\0\0|\2\0S(\4\0\0\0NR1\0\0\0Rh\0\0\0i\0\0\0\0(\v\0\0\0R7\0\0\0R'\0\0\0RT\0\0\0Rd\0\0\0RY\0\0\0t\r\0\0\0_read_chunkedR[\0\0\0t\4\0\0\0readt\n\0\0\0_safe_readR\r\0\0\0R;\0\0\0(\3\0\0\0R)\0\0\0t\3\0\0\0amtt\1\0\0\0s(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyRy\0\0\0B\2\0\0s:\0\0\0\0\1\17\1\4\2\17\1\n\1\4\2\t\1\r\2\f\2\17\1\22\2\3\1\26\1\r\1\n\1\7\1\t\1\n\1\4\2\17\1\17\2\17\5\22\1\r\3\r\1\17\1\25\1\t\1\20\2c\2\0\0\0\6\0\0\0\5\0\0\0C\0\0\0sC\2\0\0|\0\0j\0\0t\1\0k\3\0s\25\0t\2\0\202\1\0|\0\0j\3\0}\2\0g\0\0}\3\0x\247\1t\4\0r\315\1|\2\0d\0\0k\10\0r\361\0|\0\0j\6\0j\7\0t\10\0d\1\0\27\203\1\0}\4\0t\t\0|\4\0\203\1\0t\10\0k\4\0rp\0t\n\0d\2\0\203\1\0\202\1\0n\0\0|\4\0j\v\0d\3\0\203\1\0}\5\0|\5\0d\4\0k\5\0r\230\0|\4\0|\5\0 }\4\0n\0\0y\23\0t\f\0|\4\0d\5\0\203\2\0}\2\0Wn0\0\4t\r\0k\n\0r\335\0\1\1\1|\0\0j\16\0\203\0\0\1t\17\0d\6\0j\20\0|\3\0\203\1\0\203\1\0\202\1\0n\1\0X|\2\0d\4\0k\2\0r\361\0Pq\361\0n\0\0|\1\0d\0\0k\10\0r\26\1|\3\0j\21\0|\0\0j\22\0|\2\0\203\1\0\203\1\0\1n\241\0|\1\0|\2\0k\0\0rR\1|\3\0j\21\0|\0\0j\22\0|\1\0\203\1\0\203\1\0\1|\2\0|\1\0\30|\0\0_\3\0d\6\0j\20\0|\3\0\203\1\0S|\1\0|\2\0k\2\0r\227\1|\3\0j\21\0|\0\0j\22\0|\1\0\203\1\0\203\1\0\1|\0\0j\22\0d\7\0\203\1\0\1d\0\0|\0\0_\3\0d\6\0j\20\0|\3\0\203\1\0S|\3\0j\21\0|\0\0j\22\0|\2\0\203\1\0\203\1\0\1|\1\0|\2\0008}\1\0|\0\0j\22\0d\7\0\203\1\0\1d\0\0}\2\0q'\0Wx[\0t\4\0r+\2|\0\0j\6\0j\7\0t\10\0d\1\0\27\203\1\0}\4\0t\t\0|\4\0\203\1\0t\10\0k\4\0r\16\2t\n\0d\10\0\203\1\0\202\1\0n\0\0|\4\0s\30\2Pn\0\0|\4\0d\t\0k\2\0r\321\1Pq\321\1q\321\1W|\0\0j\16\0\203\0\0\1d\6\0j\20\0|\3\0\203\1\0S(\n\0\0\0Ni\1\0\0\0s\n\0\0\0chunk sizet\1\0\0\0;i\0\0\0\0i\20\0\0\0R1\0\0\0i\2\0\0\0s\f\0\0\0trailer lines\2\0\0\0\r\n(\23\0\0\0RY\0\0\0RV\0\0\0t\16\0\0\0AssertionErrorRZ\0\0\0R:\0\0\0R'\0\0\0R7\0\0\0R>\0\0\0R?\0\0\0R;\0\0\0R@\0\0\0t\4\0\0\0findRf\0\0\0Rc\0\0\0Rd\0\0\0R\r\0\0\0R(\0\0\0RB\0\0\0Rz\0\0\0(\6\0\0\0R)\0\0\0R{\0\0\0RZ\0\0\0R+\0\0\0RL\0\0\0t\1\0\0\0i(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyRx\0\0\0o\2\0\0sV\0\0\0\0\1\25\1\t\1\6\1\t\1\f\1\26\1\22\1\17\1\17\1\f\1\r\1\3\1\23\1\r\3\n\1\31\1\f\1\7\1\f\1\31\1\f\1\26\1\r\1\r\1\f\1\26\1\r\1\t\1\r\2\26\1\n\3\r\1\n\4\t\1\26\1\22\1\17\1\6\3\4\1\f\1\10\3\n\2c\2\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s\177\0\0\0g\0\0}\2\0xi\0|\1\0d\1\0k\4\0rq\0|\0\0j\0\0j\1\0t\2\0|\1\0t\3\0\203\2\0\203\1\0}\3\0|\3\0sQ\0t\4\0d\2\0j\5\0|\2\0\203\1\0|\1\0\203\2\0\202\1\0n\0\0|\2\0j\6\0|\3\0\203\1\0\1|\1\0t\7\0|\3\0\203\1\0008}\1\0q\t\0Wd\2\0j\5\0|\2\0\203\1\0S(\3\0\0\0sV\2\0\0Read the number of bytes requested, compensating for partial reads.\n\n        Normally, we have a blocking socket, but a read() can be interrupted\n        by a signal (resulting in a partial read).\n\n        Note that we cannot distinguish between EOF and an interrupt when zero\n        bytes have been read. IncompleteRead() will be raised in this\n        situation.\n\n        This function should be used when <amt> bytes \"should\" be present for\n        reading. If the bytes are truly not available (due to EOF), then the\n        IncompleteRead exception can be used to detect the problem.\n        i\0\0\0\0R1\0\0\0(\10\0\0\0R7\0\0\0Ry\0\0\0t\3\0\0\0mint\t\0\0\0MAXAMOUNTR\r\0\0\0R(\0\0\0RB\0\0\0R;\0\0\0(\4\0\0\0R)\0\0\0R{\0\0\0R|\0\0\0t\5\0\0\0chunk(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyRz\0\0\0\251\2\0\0s\20\0\0\0\0\23\6\1\17\1\33\1\6\1\33\1\r\1\24\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0N(\2\0\0\0R7\0\0\0t\6\0\0\0fileno(\1\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\204\0\0\0\305\2\0\0s\2\0\0\0\0\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s.\0\0\0|\0\0j\0\0d\0\0k\10\0r\33\0t\2\0\203\0\0\202\1\0n\0\0|\0\0j\0\0j\3\0|\1\0|\2\0\203\2\0S(\1\0\0\0N(\4\0\0\0RU\0\0\0R'\0\0\0R\22\0\0\0Rj\0\0\0(\3\0\0\0R)\0\0\0t\4\0\0\0namet\7\0\0\0default(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyRj\0\0\0\310\2\0\0s\6\0\0\0\0\1\17\1\f\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s(\0\0\0|\0\0j\0\0d\1\0k\10\0r\33\0t\2\0\203\0\0\202\1\0n\0\0|\0\0j\0\0j\3\0\203\0\0S(\2\0\0\0s&\0\0\0Return list of (header, value) tuples.N(\4\0\0\0RU\0\0\0R'\0\0\0R\22\0\0\0t\5\0\0\0items(\1\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\n\0\0\0getheaders\315\2\0\0s\6\0\0\0\0\2\17\1\f\1N(\20\0\0\0RN\0\0\0RO\0\0\0R'\0\0\0Rt\0\0\0R`\0\0\0Rg\0\0\0Rr\0\0\0Rl\0\0\0Rd\0\0\0Rw\0\0\0Ry\0\0\0Rx\0\0\0Rz\0\0\0R\204\0\0\0Rj\0\0\0R\210\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\6\0\0\0q\1\0\0s\30\0\0\0\6\n\25\34\t'\tV\t\36\t\5\t\v\f-\t:\t\34\t\3\f\5c\0\0\0\0\0\0\0\0\5\0\0\0B\0\0\0s\365\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0Z\3\0e\4\0Z\5\0e\6\0Z\7\0d\2\0Z\10\0d\3\0Z\t\0d\3\0Z\n\0d\25\0d\25\0e\f\0j\r\0d\25\0d\4\0\204\4\0Z\16\0d\25\0d\25\0d\5\0\204\2\0Z\17\0d\6\0\204\0\0Z\20\0d\7\0\204\0\0Z\21\0d\10\0\204\0\0Z\22\0d\t\0\204\0\0Z\23\0d\n\0\204\0\0Z\24\0d\v\0\204\0\0Z\25\0d\f\0\204\0\0Z\26\0d\25\0d\r\0\204\1\0Z\27\0d\3\0d\3\0d\16\0\204\2\0Z\30\0d\17\0\204\0\0Z\31\0d\25\0d\20\0\204\1\0Z\32\0d\25\0i\0\0d\21\0\204\2\0Z\33\0d\22\0\204\0\0Z\34\0d\23\0\204\0\0Z\35\0e\36\0d\24\0\204\1\0Z\37\0RS(\26\0\0\0i\v\0\0\0s\10\0\0\0HTTP/1.1i\1\0\0\0i\0\0\0\0c\6\0\0\0\6\0\0\0\3\0\0\0C\0\0\0s\240\0\0\0|\4\0|\0\0_\0\0|\5\0|\0\0_\1\0d\0\0|\0\0_\3\0g\0\0|\0\0_\4\0d\0\0|\0\0_\5\0t\6\0|\0\0_\7\0d\0\0|\0\0_\10\0d\0\0|\0\0_\t\0d\0\0|\0\0_\n\0i\0\0|\0\0_\v\0|\3\0d\0\0k\t\0rr\0|\3\0|\0\0_\f\0n\0\0|\0\0j\r\0|\1\0|\2\0\203\2\0\\\2\0|\0\0_\16\0|\0\0_\17\0t\20\0j\21\0|\0\0_\22\0d\0\0S(\1\0\0\0N(\23\0\0\0t\7\0\0\0timeoutt\16\0\0\0source_addressR'\0\0\0R]\0\0\0t\7\0\0\0_buffert\31\0\0\0_HTTPConnection__responset\10\0\0\0_CS_IDLEt\26\0\0\0_HTTPConnection__stateRT\0\0\0t\f\0\0\0_tunnel_hostt\f\0\0\0_tunnel_portt\17\0\0\0_tunnel_headersRS\0\0\0t\r\0\0\0_get_hostportt\4\0\0\0hostt\4\0\0\0portt\6\0\0\0sockett\21\0\0\0create_connectiont\22\0\0\0_create_connection(\6\0\0\0R)\0\0\0R\223\0\0\0R\224\0\0\0RS\0\0\0R\211\0\0\0R\212\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR`\0\0\0\337\2\0\0s\34\0\0\0\0\2\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\f\1\f\2\36\4c\4\0\0\0\4\0\0\0\2\0\0\0C\0\0\0sM\0\0\0|\0\0j\0\0r\30\0t\1\0d\1\0\203\1\0\202\1\0n\0\0|\1\0|\0\0_\2\0|\2\0|\0\0_\3\0|\3\0r<\0|\3\0|\0\0_\4\0n\r\0|\0\0j\4\0j\5\0\203\0\0\1d\2\0S(\3\0\0\0sC\2\0\0 Set up host and port for HTTP CONNECT tunnelling.\n\n        In a connection that uses HTTP Connect tunneling, the host passed to the\n        constructor is used as proxy server that relays all communication to the\n        endpoint passed to set_tunnel. This is done by sending a HTTP CONNECT\n        request to the proxy server when the connection is established.\n\n        This method must be called before the HTTP connection has been\n        established.\n\n        The headers argument should be a mapping of extra HTTP headers\n        to send with the CONNECT request.\n        s.\0\0\0Can't setup tunnel for established connection.N(\6\0\0\0R]\0\0\0t\f\0\0\0RuntimeErrorR\217\0\0\0R\220\0\0\0R\221\0\0\0t\5\0\0\0clear(\4\0\0\0R)\0\0\0R\223\0\0\0R\224\0\0\0R4\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\n\0\0\0set_tunnel\364\2\0\0s\16\0\0\0\0\17\t\1\17\2\t\1\t\1\6\1\f\2c\3\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\363\0\0\0|\2\0d\0\0k\10\0r\351\0|\1\0j\1\0d\1\0\203\1\0}\3\0|\1\0j\1\0d\2\0\203\1\0}\4\0|\3\0|\4\0k\4\0r\247\0y\30\0t\2\0|\1\0|\3\0d\3\0\27\37\203\1\0}\2\0WnI\0\4t\3\0k\n\0r\231\0\1\1\1|\1\0|\3\0d\3\0\27\37d\4\0k\2\0r~\0|\0\0j\4\0}\2\0q\232\0t\5\0d\5\0|\1\0|\3\0d\3\0\27\37\26\203\1\0\202\1\0n\1\0X|\1\0|\3\0 }\1\0n\t\0|\0\0j\4\0}\2\0|\1\0r\351\0|\1\0d\6\0\31d\7\0k\2\0r\351\0|\1\0d\10\0\31d\2\0k\2\0r\351\0|\1\0d\3\0d\10\0!}\1\0q\351\0n\0\0|\1\0|\2\0f\2\0S(\t\0\0\0Nt\1\0\0\0:t\1\0\0\0]i\1\0\0\0R1\0\0\0s\25\0\0\0nonnumeric port: '%s'i\0\0\0\0t\1\0\0\0[i\377\377\377\377(\6\0\0\0R'\0\0\0t\5\0\0\0rfindRf\0\0\0Rc\0\0\0t\f\0\0\0default_portR\16\0\0\0(\5\0\0\0R)\0\0\0R\223\0\0\0R\224\0\0\0R\200\0\0\0t\1\0\0\0j(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\222\0\0\0\r\3\0\0s\36\0\0\0\0\1\f\1\17\1\17\1\f\1\3\1\30\1\r\1\24\1\f\2\34\1\r\2\t\1&\1\23\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\1\0|\0\0_\0\0d\0\0S(\1\0\0\0N(\1\0\0\0RR\0\0\0(\2\0\0\0R)\0\0\0t\5\0\0\0level(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\16\0\0\0set_debuglevel \3\0\0s\2\0\0\0\0\1c\1\0\0\0\n\0\0\0\6\0\0\0C\0\0\0sL\1\0\0|\0\0j\0\0|\0\0j\1\0|\0\0j\2\0\203\2\0\\\2\0}\1\0}\2\0|\0\0j\3\0d\1\0|\1\0|\2\0f\2\0\26\203\1\0\1x4\0|\0\0j\4\0j\5\0\203\0\0D]#\0\\\2\0}\3\0}\4\0|\0\0j\3\0d\2\0|\3\0|\4\0f\2\0\26\203\1\0\1qE\0W|\0\0j\3\0d\3\0\203\1\0\1|\0\0j\6\0|\0\0j\7\0d\4\0|\0\0j\10\0d\5\0|\0\0j\t\0\203\1\2}\5\0|\5\0j\n\0\203\0\0\\\3\0}\6\0}\7\0}\10\0|\7\0d\6\0k\3\0r\352\0|\0\0j\v\0\203\0\0\1t\f\0j\r\0d\7\0|\7\0|\10\0j\16\0\203\0\0f\2\0\26\203\1\0\202\1\0n\0\0x[\0t\17\0rG\1|\5\0j\20\0j\21\0t\22\0d\10\0\27\203\1\0}\t\0t\23\0|\t\0\203\1\0t\22\0k\4\0r*\1t\24\0d\t\0\203\1\0\202\1\0n\0\0|\t\0s4\1Pn\0\0|\t\0d\3\0k\2\0r\355\0Pq\355\0q\355\0Wd\0\0S(\n\0\0\0Ns\30\0\0\0CONNECT %s:%d HTTP/1.0\r\ns\10\0\0\0%s: %s\r\ns\2\0\0\0\r\nRS\0\0\0R^\0\0\0i\310\0\0\0s\37\0\0\0Tunnel connection failed: %d %si\1\0\0\0s\v\0\0\0header line(\25\0\0\0R\222\0\0\0R\217\0\0\0R\220\0\0\0t\4\0\0\0sendR\221\0\0\0t\t\0\0\0iteritemst\16\0\0\0response_classR]\0\0\0RS\0\0\0RT\0\0\0Rg\0\0\0Rd\0\0\0R\225\0\0\0R\24\0\0\0RC\0\0\0R:\0\0\0R7\0\0\0R>\0\0\0R?\0\0\0R;\0\0\0R@\0\0\0(\n\0\0\0R)\0\0\0R\223\0\0\0R\224\0\0\0t\6\0\0\0headerR+\0\0\0t\10\0\0\0responseRW\0\0\0t\4\0\0\0codet\7\0\0\0messageRL\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\7\0\0\0_tunnel#\3\0\0s(\0\0\0\0\1\36\1\27\1\34\1\33\1\r\1\30\1\f\1\25\2\f\1\n\1\f\1\26\1\t\1\26\1\22\1\17\1\6\2\4\1\f\1c\1\0\0\0\1\0\0\0\4\0\0\0C\0\0\0sD\0\0\0|\0\0j\0\0|\0\0j\1\0|\0\0j\2\0f\2\0|\0\0j\3\0|\0\0j\4\0\203\3\0|\0\0_\5\0|\0\0j\6\0r@\0|\0\0j\7\0\203\0\0\1n\0\0d\1\0S(\2\0\0\0s3\0\0\0Connect to the host and port specified in __init__.N(\10\0\0\0R\227\0\0\0R\223\0\0\0R\224\0\0\0R\211\0\0\0R\212\0\0\0R]\0\0\0R\217\0\0\0R\252\0\0\0(\1\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\7\0\0\0connect<\3\0\0s\10\0\0\0\0\2\25\1\25\2\t\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0sQ\0\0\0|\0\0j\0\0r\"\0|\0\0j\0\0j\1\0\203\0\0\1d\1\0|\0\0_\0\0n\0\0|\0\0j\3\0rD\0|\0\0j\3\0j\1\0\203\0\0\1d\1\0|\0\0_\3\0n\0\0t\4\0|\0\0_\5\0d\1\0S(\2\0\0\0s(\0\0\0Close the connection to the HTTP server.N(\6\0\0\0R]\0\0\0Rd\0\0\0R'\0\0\0R\214\0\0\0R\215\0\0\0R\216\0\0\0(\1\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyRd\0\0\0D\3\0\0s\16\0\0\0\0\2\t\1\r\1\f\1\t\1\r\1\f\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0s\340\0\0\0|\0\0j\0\0d\6\0k\10\0r1\0|\0\0j\2\0r%\0|\0\0j\3\0\203\0\0\1q1\0t\4\0\203\0\0\202\1\0n\0\0|\0\0j\5\0d\1\0k\4\0rR\0d\2\0Gt\6\0|\1\0\203\1\0GHn\0\0d\3\0}\2\0t\7\0|\1\0d\4\0\203\2\0r\314\0t\10\0|\1\0t\t\0\203\2\0\fr\314\0|\0\0j\5\0d\1\0k\4\0r\216\0d\5\0GHn\0\0|\1\0j\n\0|\2\0\203\1\0}\3\0x<\0|\3\0r\310\0|\0\0j\0\0j\v\0|\3\0\203\1\0\1|\1\0j\n\0|\2\0\203\1\0}\3\0q\240\0Wn\20\0|\0\0j\0\0j\v\0|\1\0\203\1\0\1d\6\0S(\7\0\0\0s\32\0\0\0Send `data' to the server.i\0\0\0\0s\5\0\0\0send:i\0 \0\0Ry\0\0\0s\24\0\0\0sendIng a read()ableN(\f\0\0\0R]\0\0\0R'\0\0\0t\t\0\0\0auto_openR\253\0\0\0R\t\0\0\0RR\0\0\0Ra\0\0\0R6\0\0\0t\n\0\0\0isinstanceR\0\0\0\0Ry\0\0\0t\7\0\0\0sendall(\4\0\0\0R)\0\0\0t\4\0\0\0datat\t\0\0\0blocksizet\t\0\0\0datablock(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\243\0\0\0N\3\0\0s\36\0\0\0\0\2\17\1\t\1\r\2\f\2\17\1\22\1\6\1\37\1\17\0\10\1\17\1\t\1\20\1\26\2c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\24\0\0\0|\0\0j\0\0j\1\0|\1\0\203\1\0\1d\1\0S(\2\0\0\0su\0\0\0Add a line of output to the current request buffer.\n\n        Assumes that the line does *not* end with \\r\\n.\n        N(\2\0\0\0R\213\0\0\0RB\0\0\0(\2\0\0\0R)\0\0\0R|\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\7\0\0\0_outputb\3\0\0s\2\0\0\0\0\5c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sx\0\0\0|\0\0j\0\0j\1\0d\4\0\203\1\0\1d\2\0j\2\0|\0\0j\0\0\203\1\0}\2\0|\0\0j\0\0002t\3\0|\1\0t\4\0\203\2\0rK\0|\2\0|\1\0007}\2\0d\3\0}\1\0n\0\0|\0\0j\6\0|\2\0\203\1\0\1|\1\0d\3\0k\t\0rt\0|\0\0j\6\0|\1\0\203\1\0\1n\0\0d\3\0S(\5\0\0\0s\270\0\0\0Send the currently buffered request and clear the buffer.\n\n        Appends an extra \\r\\n to the buffer.\n        A message_body may be specified, to be appended to the request.\n        R1\0\0\0s\2\0\0\0\r\nN(\2\0\0\0R1\0\0\0R1\0\0\0(\7\0\0\0R\213\0\0\0t\6\0\0\0extendR(\0\0\0R\255\0\0\0t\3\0\0\0strR'\0\0\0R\243\0\0\0(\3\0\0\0R)\0\0\0t\f\0\0\0message_bodyRU\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\f\0\0\0_send_outputi\3\0\0s\22\0\0\0\0\6\20\1\22\1\7\4\17\1\n\1\t\1\r\1\f\3c\5\0\0\0\f\0\0\0\5\0\0\0C\0\0\0s\5\2\0\0|\0\0j\0\0r$\0|\0\0j\0\0j\1\0\203\0\0r$\0d\20\0|\0\0_\0\0n\0\0|\0\0j\3\0t\4\0k\2\0r?\0t\5\0|\0\0_\3\0n\t\0t\6\0\203\0\0\202\1\0|\1\0|\0\0_\7\0|\2\0s`\0d\1\0}\2\0n\0\0d\2\0|\1\0|\2\0|\0\0j\10\0f\3\0\26}\5\0|\0\0j\t\0|\5\0\203\1\0\1|\0\0j\n\0d\3\0k\2\0r\1\2|\3\0s\345\1d\4\0}\6\0|\2\0j\v\0d\5\0\203\1\0r\313\0t\f\0|\2\0\203\1\0\\\5\0}\7\0}\6\0}\7\0}\7\0}\7\0n\0\0|\6\0r\32\1y\23\0|\6\0j\r\0d\6\0\203\1\0}\10\0Wn \0\4t\16\0k\n\0r\6\1\1\1\1|\6\0j\r\0d\7\0\203\1\0}\10\0n\1\0X|\0\0j\17\0d\10\0|\10\0\203\2\0\1q\345\1|\0\0j\20\0r8\1|\0\0j\20\0}\t\0|\0\0j\21\0}\n\0n\22\0|\0\0j\22\0}\t\0|\0\0j\23\0}\n\0y\23\0|\t\0j\r\0d\6\0\203\1\0}\v\0Wn \0\4t\16\0k\n\0r\177\1\1\1\1|\t\0j\r\0d\7\0\203\1\0}\v\0n\1\0X|\v\0j\24\0d\t\0\203\1\0d\n\0k\5\0r\246\1d\v\0|\v\0\27d\f\0\27}\v\0n\0\0|\n\0|\0\0j\25\0k\2\0r\310\1|\0\0j\17\0d\10\0|\v\0\203\2\0\1q\345\1|\0\0j\17\0d\10\0d\r\0|\v\0|\n\0f\2\0\26\203\2\0\1n\0\0|\4\0s\1\2|\0\0j\17\0d\16\0d\17\0\203\2\0\1q\1\2n\0\0d\20\0S(\21\0\0\0s`\1\0\0Send a request to the server.\n\n        `method' specifies an HTTP request method, e.g. 'GET'.\n        `url' specifies the object being requested, e.g. '/index.html'.\n        `skip_host' if True does not add automatically a 'Host:' header\n        `skip_accept_encoding' if True does not add automatically an\n           'Accept-Encoding:' header\n        t\1\0\0\0/s\10\0\0\0%s %s %si\v\0\0\0R1\0\0\0t\4\0\0\0httpt\5\0\0\0asciit\4\0\0\0idnat\4\0\0\0HostR\233\0\0\0i\0\0\0\0R\235\0\0\0R\234\0\0\0s\5\0\0\0%s:%ss\17\0\0\0Accept-Encodingt\10\0\0\0identityN(\26\0\0\0R\214\0\0\0Rw\0\0\0R'\0\0\0R\216\0\0\0R\215\0\0\0t\17\0\0\0_CS_REQ_STARTEDR\20\0\0\0RT\0\0\0t\r\0\0\0_http_vsn_strR\262\0\0\0t\t\0\0\0_http_vsnRA\0\0\0R\2\0\0\0t\6\0\0\0encodet\22\0\0\0UnicodeEncodeErrort\t\0\0\0putheaderR\217\0\0\0R\220\0\0\0R\223\0\0\0R\224\0\0\0R\177\0\0\0R\237\0\0\0(\f\0\0\0R)\0\0\0R^\0\0\0t\3\0\0\0urlt\t\0\0\0skip_hostt\24\0\0\0skip_accept_encodingRp\0\0\0t\6\0\0\0netloct\3\0\0\0nilt\n\0\0\0netloc_encR\223\0\0\0R\224\0\0\0t\10\0\0\0host_enc(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\n\0\0\0putrequest~\3\0\0sL\0\0\0\0\v\30\1\f\25\17\1\f\2\t\3\t\1\6\1\t\1\26\2\r\2\17\3\6\17\6\1\17\1\36\2\6\1\3\1\23\1\r\1\23\1\23\2\t\1\t\1\f\2\t\1\t\2\3\1\23\1\r\1\23\2\25\1\21\1\17\1\23\2\35\n\6\1\26\fc\2\0\0\0\6\0\0\0\4\0\0\0G\0\0\0s\303\0\0\0|\0\0j\0\0t\1\0k\3\0r\33\0t\2\0\203\0\0\202\1\0n\0\0d\1\0|\1\0\26}\1\0t\3\0|\1\0\203\1\0sG\0t\4\0d\2\0|\1\0f\1\0\26\203\1\0\202\1\0n\0\0g\0\0|\2\0D]\22\0}\3\0t\5\0|\3\0\203\1\0^\2\0qN\0}\2\0x0\0|\2\0D](\0}\4\0t\6\0|\4\0\203\1\0rm\0t\4\0d\3\0|\4\0f\1\0\26\203\1\0\202\1\0qm\0qm\0Wd\4\0|\1\0d\5\0j\7\0|\2\0\203\1\0f\2\0\26}\5\0|\0\0j\10\0|\5\0\203\1\0\1d\6\0S(\7\0\0\0sk\0\0\0Send a request header line to the server.\n\n        For example: h.putheader('Accept', 'text/html')\n        s\2\0\0\0%ss\26\0\0\0Invalid header name %rs\27\0\0\0Invalid header value %rs\6\0\0\0%s: %ss\3\0\0\0\r\n\tN(\t\0\0\0R\216\0\0\0R\275\0\0\0R\21\0\0\0t\25\0\0\0_is_legal_header_nameRc\0\0\0R\264\0\0\0t\30\0\0\0_is_illegal_header_valueR(\0\0\0R\262\0\0\0(\6\0\0\0R)\0\0\0R\246\0\0\0t\6\0\0\0valuest\1\0\0\0vt\t\0\0\0one_valueRp\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\302\0\0\0\363\3\0\0s\26\0\0\0\0\5\17\1\f\2\n\1\f\1\26\2\37\1\r\1\f\1\32\2\31\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s5\0\0\0|\0\0j\0\0t\1\0k\2\0r\33\0t\2\0|\0\0_\0\0n\t\0t\3\0\203\0\0\202\1\0|\0\0j\4\0|\1\0\203\1\0\1d\1\0S(\2\0\0\0s\207\1\0\0Indicate that the last header line has been sent to the server.\n\n        This method sends the request to the server.  The optional\n        message_body argument can be used to pass a message body\n        associated with the request.  The message body will be sent in\n        the same packet as the message headers if it is string, otherwise it is\n        sent as a separate packet.\n        N(\5\0\0\0R\216\0\0\0R\275\0\0\0t\f\0\0\0_CS_REQ_SENTR\21\0\0\0R\266\0\0\0(\2\0\0\0R)\0\0\0R\265\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\n\0\0\0endheaders\7\4\0\0s\10\0\0\0\0\t\17\1\f\2\t\1c\5\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\32\0\0\0|\0\0j\0\0|\1\0|\2\0|\3\0|\4\0\203\4\0\1d\1\0S(\2\0\0\0s&\0\0\0Send a complete request to the server.N(\1\0\0\0t\r\0\0\0_send_request(\5\0\0\0R)\0\0\0R^\0\0\0R\303\0\0\0t\4\0\0\0bodyR4\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\7\0\0\0request\26\4\0\0s\2\0\0\0\0\2c\3\0\0\0\4\0\0\0\6\0\0\0C\0\0\0s\334\0\0\0d\0\0}\3\0|\1\0d\0\0k\10\0r-\0|\2\0j\1\0\203\0\0t\2\0k\6\0r-\0d\1\0}\3\0n\214\0|\1\0d\0\0k\t\0r\271\0y\26\0t\3\0t\4\0|\1\0\203\1\0\203\1\0}\3\0Wq\271\0\4t\5\0k\n\0r\265\0\1\1\1y\"\0t\3\0t\6\0j\7\0|\1\0j\10\0\203\0\0\203\1\0j\t\0\203\1\0}\3\0Wq\266\0\4t\n\0t\v\0f\2\0k\n\0r\261\0\1\1\1|\0\0j\f\0d\2\0k\4\0r\262\0d\3\0GHq\262\0q\266\0Xq\271\0Xn\0\0|\3\0d\0\0k\t\0r\330\0|\0\0j\r\0d\4\0|\3\0\203\2\0\1n\0\0d\0\0S(\5\0\0\0Nt\1\0\0\0000i\0\0\0\0s\r\0\0\0Cannot stat!!s\16\0\0\0Content-Length(\16\0\0\0R'\0\0\0t\5\0\0\0uppert\27\0\0\0_METHODS_EXPECTING_BODYR\264\0\0\0R;\0\0\0t\t\0\0\0TypeErrort\2\0\0\0ost\5\0\0\0fstatR\204\0\0\0t\7\0\0\0st_sizet\16\0\0\0AttributeErrort\7\0\0\0OSErrorRR\0\0\0R\302\0\0\0(\4\0\0\0R)\0\0\0R\323\0\0\0R^\0\0\0t\6\0\0\0thelen(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\23\0\0\0_set_content_length\32\4\0\0s\34\0\0\0\0\5\6\1\36\1\t\1\f\1\3\1\26\1\r\3\3\1\"\1\23\2\17\0\23\2\f\1c\5\0\0\0\n\0\0\0\4\0\0\0C\0\0\0s\320\0\0\0t\0\0j\1\0g\0\0|\4\0D]\22\0}\5\0|\5\0j\2\0\203\0\0^\2\0q\r\0\203\1\0}\6\0i\0\0}\7\0d\1\0|\6\0k\6\0rG\0d\2\0|\7\0d\3\0<n\0\0d\4\0|\6\0k\6\0r`\0d\2\0|\7\0d\5\0<n\0\0|\0\0j\3\0|\1\0|\2\0|\7\0\215\2\0\1d\6\0|\6\0k\7\0r\222\0|\0\0j\4\0|\3\0|\1\0\203\2\0\1n\0\0x*\0|\4\0j\5\0\203\0\0D]\34\0\\\2\0}\10\0}\t\0|\0\0j\6\0|\10\0|\t\0\203\2\0\1q\237\0W|\0\0j\7\0|\3\0\203\1\0\1d\0\0S(\7\0\0\0NR\223\0\0\0i\1\0\0\0R\304\0\0\0s\17\0\0\0accept-encodingR\305\0\0\0s\16\0\0\0content-length(\10\0\0\0R%\0\0\0t\10\0\0\0fromkeysRk\0\0\0R\312\0\0\0R\337\0\0\0R\244\0\0\0R\302\0\0\0R\321\0\0\0(\n\0\0\0R)\0\0\0R^\0\0\0R\303\0\0\0R\323\0\0\0R4\0\0\0t\1\0\0\0kt\f\0\0\0header_namest\5\0\0\0skipsRp\0\0\0R+\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\322\0\0\0001\4\0\0s\30\0\0\0\0\2(\1\6\1\f\1\r\1\f\1\r\2\23\2\f\1\23\1\31\1\24\1c\2\0\0\0\5\0\0\0\3\0\0\0C\0\0\0s\37\1\0\0|\0\0j\0\0r$\0|\0\0j\0\0j\1\0\203\0\0r$\0d\5\0|\0\0_\0\0n\0\0|\0\0j\3\0t\4\0k\3\0s<\0|\0\0j\0\0rH\0t\5\0\203\0\0\202\1\0n\0\0|\0\0j\6\0f\1\0}\2\0i\2\0|\0\0j\7\0d\1\0006|\0\0j\10\0d\2\0006}\3\0|\0\0j\t\0d\3\0k\4\0r\220\0|\2\0|\0\0j\t\0f\1\0007}\2\0n\0\0|\1\0r\243\0t\n\0|\3\0d\4\0<n\0\0|\0\0j\v\0|\2\0|\3\0\216\0\0}\4\0yO\0|\4\0j\f\0\203\0\0\1|\4\0j\r\0t\16\0k\3\0s\327\0t\17\0\202\1\0t\20\0|\0\0_\3\0|\4\0j\r\0r\366\0|\0\0j\21\0\203\0\0\1n\t\0|\4\0|\0\0_\0\0|\4\0SWn\24\0\1\1\1|\4\0j\21\0\203\0\0\1\202\0\0n\1\0Xd\5\0S(\6\0\0\0s!\0\0\0Get the response from the server.RS\0\0\0R^\0\0\0i\0\0\0\0R_\0\0\0N(\22\0\0\0R\214\0\0\0Rw\0\0\0R'\0\0\0R\216\0\0\0R\320\0\0\0R\22\0\0\0R]\0\0\0RS\0\0\0RT\0\0\0RR\0\0\0R:\0\0\0R\245\0\0\0Rr\0\0\0R\\\0\0\0RV\0\0\0R~\0\0\0R\215\0\0\0Rd\0\0\0(\5\0\0\0R)\0\0\0R_\0\0\0t\4\0\0\0argst\4\0\0\0kwdsR\247\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\v\0\0\0getresponseB\4\0\0s,\0\0\0\0\4\30\1\f\22\30\1\f\2\f\1\32\1\17\1\23\1\6\3\r\1\22\2\3\1\n\1\25\1\t\2\t\2\r\3\t\2\10\1\3\1\n\1N( \0\0\0RN\0\0\0RO\0\0\0R\277\0\0\0R\276\0\0\0R\6\0\0\0R\245\0\0\0t\t\0\0\0HTTP_PORTR\237\0\0\0R\254\0\0\0RR\0\0\0RS\0\0\0R'\0\0\0R\225\0\0\0t\27\0\0\0_GLOBAL_DEFAULT_TIMEOUTR`\0\0\0R\232\0\0\0R\222\0\0\0R\242\0\0\0R\252\0\0\0R\253\0\0\0Rd\0\0\0R\243\0\0\0R\262\0\0\0R\266\0\0\0R\312\0\0\0R\302\0\0\0R\321\0\0\0R\324\0\0\0R\337\0\0\0R\322\0\0\0Rt\0\0\0R\346\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\7\0\0\0\324\2\0\0s2\0\0\0\6\2\6\1\6\2\6\1\6\1\6\1\6\1\6\2\6\1\22\24\17\31\t\23\t\3\t\31\t\10\t\n\t\24\t\7\f\25\17u\t\24\f\17\17\4\t\27\t\21c\0\0\0\0\0\0\0\0\4\0\0\0B\0\0\0sn\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0Z\3\0d\2\0Z\4\0d\3\0Z\5\0e\6\0Z\7\0d\4\0d\v\0d\v\0d\5\0\204\3\0Z\t\0d\6\0\204\0\0Z\n\0d\v\0d\v\0d\7\0\204\2\0Z\v\0d\10\0\204\0\0Z\f\0e\r\0d\t\0\204\1\0Z\16\0d\n\0\204\0\0Z\17\0RS(\f\0\0\0s-\0\0\0Compatibility class with httplib.py from 1.5.i\n\0\0\0s\10\0\0\0HTTP/1.0i\0\0\0\0R1\0\0\0c\4\0\0\0\4\0\0\0\5\0\0\0C\0\0\0s5\0\0\0|\2\0d\1\0k\2\0r\25\0d\2\0}\2\0n\0\0|\0\0j\1\0|\0\0j\2\0|\1\0|\2\0|\3\0\203\3\0\203\1\0\1d\2\0S(\3\0\0\0s:\0\0\0Provide a default host, since the superclass requires one.i\0\0\0\0N(\3\0\0\0R'\0\0\0t\6\0\0\0_setupt\21\0\0\0_connection_class(\4\0\0\0R)\0\0\0R\223\0\0\0R\224\0\0\0RS\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR`\0\0\0\202\4\0\0s\6\0\0\0\0\4\f\1\t\5c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0sj\0\0\0|\1\0|\0\0_\0\0|\1\0j\1\0|\0\0_\1\0|\1\0j\2\0|\0\0_\2\0|\1\0j\3\0|\0\0_\3\0|\1\0j\4\0|\0\0_\4\0|\1\0j\5\0|\0\0_\5\0|\0\0j\6\0|\1\0_\6\0|\0\0j\7\0|\1\0_\7\0d\0\0|\0\0_\t\0d\0\0S(\1\0\0\0N(\n\0\0\0t\5\0\0\0_connR\243\0\0\0R\312\0\0\0R\302\0\0\0R\321\0\0\0R\242\0\0\0R\277\0\0\0R\276\0\0\0R'\0\0\0t\4\0\0\0file(\2\0\0\0R)\0\0\0Ru\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\351\0\0\0\216\4\0\0s\22\0\0\0\0\1\t\3\f\1\f\1\f\1\f\1\f\2\f\1\f\2c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sG\0\0\0|\1\0d\1\0k\t\0r6\0|\0\0j\1\0j\2\0|\1\0|\2\0\203\2\0\\\2\0|\0\0j\1\0_\3\0|\0\0j\1\0_\4\0n\0\0|\0\0j\1\0j\5\0\203\0\0\1d\1\0S(\2\0\0\0sD\0\0\0Accept arguments to set the host/port, since the superclass doesn't.N(\6\0\0\0R'\0\0\0R\353\0\0\0R\222\0\0\0R\223\0\0\0R\224\0\0\0R\253\0\0\0(\3\0\0\0R)\0\0\0R\223\0\0\0R\224\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\253\0\0\0\235\4\0\0s\6\0\0\0\0\3\f\1*\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\7\0\0\0|\0\0j\0\0S(\1\0\0\0sC\0\0\0Provide a getfile, since the superclass' does not use this concept.(\1\0\0\0R\354\0\0\0(\1\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\7\0\0\0getfile\244\4\0\0s\2\0\0\0\0\2c\2\0\0\0\4\0\0\0\5\0\0\0C\0\0\0s\255\0\0\0y.\0|\1\0s\33\0|\0\0j\0\0j\1\0\203\0\0}\2\0n\22\0|\0\0j\0\0j\1\0|\1\0\203\1\0}\2\0WnN\0\4t\2\0k\n\0r~\0\1}\3\0\1|\0\0j\0\0j\3\0j\4\0d\1\0d\2\0\203\2\0|\0\0_\5\0|\0\0j\6\0\203\0\0\1d\4\0|\0\0_\10\0d\3\0|\3\0j\t\0d\4\0f\3\0SX|\2\0j\n\0|\0\0_\10\0|\2\0j\v\0|\0\0_\5\0|\2\0j\f\0|\2\0j\r\0|\2\0j\n\0f\3\0S(\5\0\0\0s\26\1\0\0Compat definition since superclass does not define it.\n\n        Returns a tuple consisting of:\n        - server status code (e.g. '200' if all goes well)\n        - server \"reason\" corresponding to status code\n        - any RFC822 headers in the response from the server\n        RP\0\0\0i\0\0\0\0i\377\377\377\377N(\16\0\0\0R\353\0\0\0R\346\0\0\0R\23\0\0\0R]\0\0\0RQ\0\0\0R\354\0\0\0Rd\0\0\0R'\0\0\0R4\0\0\0RL\0\0\0RU\0\0\0R7\0\0\0R5\0\0\0RX\0\0\0(\4\0\0\0R)\0\0\0R_\0\0\0R\247\0\0\0t\1\0\0\0e(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\10\0\0\0getreply\250\4\0\0s\30\0\0\0\0\10\3\1\6\1\22\4\26\1\17\6\33\3\n\2\t\1\21\2\f\1\f\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\32\0\0\0|\0\0j\0\0j\1\0\203\0\0\1d\0\0|\0\0_\3\0d\0\0S(\1\0\0\0N(\4\0\0\0R\353\0\0\0Rd\0\0\0R'\0\0\0R\354\0\0\0(\1\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyRd\0\0\0\311\4\0\0s\4\0\0\0\0\1\r\7N(\20\0\0\0RN\0\0\0RO\0\0\0t\7\0\0\0__doc__R\277\0\0\0R\276\0\0\0RR\0\0\0R\7\0\0\0R\352\0\0\0R'\0\0\0R`\0\0\0R\351\0\0\0R\253\0\0\0R\355\0\0\0Rt\0\0\0R\357\0\0\0Rd\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\5\0\0\0x\4\0\0s\26\0\0\0\6\1\6\2\6\1\6\2\6\2\6\2\22\f\t\17\17\7\t\4\f!t\17\0\0\0HTTPSConnectionc\0\0\0\0\0\0\0\0\10\0\0\0B\0\0\0s>\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0Z\4\0d\3\0d\3\0d\3\0d\3\0e\6\0j\7\0d\3\0d\3\0d\1\0\204\7\0Z\10\0d\2\0\204\0\0Z\t\0RS(\4\0\0\0s(\0\0\0This class allows communication via SSL.c\t\0\0\0\t\0\0\0\7\0\0\0C\0\0\0su\0\0\0t\0\0j\1\0|\0\0|\1\0|\2\0|\5\0|\6\0|\7\0\203\6\0\1|\3\0|\0\0_\2\0|\4\0|\0\0_\3\0|\10\0d\0\0k\10\0rI\0t\5\0j\6\0\203\0\0}\10\0n\0\0|\3\0sU\0|\4\0rh\0|\10\0j\7\0|\4\0|\3\0\203\2\0\1n\0\0|\10\0|\0\0_\10\0d\0\0S(\1\0\0\0N(\t\0\0\0R\7\0\0\0R`\0\0\0t\10\0\0\0key_filet\t\0\0\0cert_fileR'\0\0\0t\3\0\0\0sslt\35\0\0\0_create_default_https_contextt\17\0\0\0load_cert_chaint\10\0\0\0_context(\t\0\0\0R)\0\0\0R\223\0\0\0R\224\0\0\0R\362\0\0\0R\363\0\0\0RS\0\0\0R\211\0\0\0R\212\0\0\0t\7\0\0\0context(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR`\0\0\0\335\4\0\0s\22\0\0\0\0\3\25\1\7\1\t\1\t\1\f\1\17\1\f\1\23\1c\1\0\0\0\2\0\0\0\4\0\0\0C\0\0\0sM\0\0\0t\0\0j\1\0|\0\0\203\1\0\1|\0\0j\2\0r\"\0|\0\0j\2\0}\1\0n\t\0|\0\0j\3\0}\1\0|\0\0j\4\0j\5\0|\0\0j\6\0d\1\0|\1\0\203\1\1|\0\0_\6\0d\2\0S(\3\0\0\0s(\0\0\0Connect to a host on a given (SSL) port.t\17\0\0\0server_hostnameN(\7\0\0\0R\7\0\0\0R\253\0\0\0R\217\0\0\0R\223\0\0\0R\367\0\0\0t\v\0\0\0wrap_socketR]\0\0\0(\2\0\0\0R)\0\0\0R\371\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\253\0\0\0\352\4\0\0s\f\0\0\0\0\3\r\2\t\1\f\2\t\2\22\1N(\n\0\0\0RN\0\0\0RO\0\0\0R\360\0\0\0t\n\0\0\0HTTPS_PORTR\237\0\0\0R'\0\0\0R\225\0\0\0R\350\0\0\0R`\0\0\0R\253\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\361\0\0\0\330\4\0\0s\f\0\0\0\6\1\6\2\6\2\t\1\t\1\17\vt\5\0\0\0HTTPSc\0\0\0\0\0\0\0\0\7\0\0\0B\0\0\0s/\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0Z\4\0d\1\0d\3\0d\3\0d\3\0d\3\0d\3\0d\2\0\204\6\0Z\6\0RS(\4\0\0\0s\311\0\0\0Compatibility with 1.5 httplib interface\n\n        Python 1.5.2 did not have an HTTPS class, but it defined an\n        interface for sending http requests that is also useful for\n        https.\n        R1\0\0\0c\7\0\0\0\7\0\0\0\t\0\0\0C\0\0\0sS\0\0\0|\2\0d\1\0k\2\0r\25\0d\0\0}\2\0n\0\0|\0\0j\1\0|\0\0j\2\0|\1\0|\2\0|\3\0|\4\0|\5\0d\2\0|\6\0\203\5\1\203\1\0\1|\3\0|\0\0_\3\0|\4\0|\0\0_\4\0d\0\0S(\3\0\0\0Ni\0\0\0\0R\370\0\0\0(\5\0\0\0R'\0\0\0R\351\0\0\0R\352\0\0\0R\362\0\0\0R\363\0\0\0(\7\0\0\0R)\0\0\0R\223\0\0\0R\224\0\0\0R\362\0\0\0R\363\0\0\0RS\0\0\0R\370\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR`\0\0\0\3\5\0\0s\16\0\0\0\0\5\f\1\t\1\25\1\t\1\n\4\t\1N(\7\0\0\0RN\0\0\0RO\0\0\0R\360\0\0\0R\361\0\0\0R\352\0\0\0R'\0\0\0R`\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\374\0\0\0\371\4\0\0s\10\0\0\0\6\6\6\2\6\2\f\1c\2\0\0\0\2\0\0\0\5\0\0\0C\0\0\0s\36\0\0\0t\0\0j\1\0d\1\0d\2\0\27t\2\0d\3\0d\4\0\203\2\1\1|\1\0S(\5\0\0\0Ns0\0\0\0FakeSocket is deprecated, and won't be in 3.x.  s5\0\0\0Use the result of ssl.wrap_socket() directly instead.t\n\0\0\0stackleveli\2\0\0\0(\3\0\0\0t\10\0\0\0warningst\4\0\0\0warnt\22\0\0\0DeprecationWarning(\2\0\0\0R]\0\0\0t\6\0\0\0sslobj(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\n\0\0\0FakeSocket\24\5\0\0s\10\0\0\0\0\1\t\1\4\1\r\1c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0RN\0\0\0RO\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\10\0\0\0\33\5\0\0s\2\0\0\0\6\3c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0RN\0\0\0RO\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\t\0\0\0 \5\0\0s\2\0\0\0\6\1c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0RN\0\0\0RO\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\16\0\0\0#\5\0\0s\2\0\0\0\6\1c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\21\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0RS(\1\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\31\0\0\0|\1\0f\1\0|\0\0_\0\0|\1\0|\0\0_\1\0d\0\0S(\1\0\0\0N(\2\0\0\0R\344\0\0\0RW\0\0\0(\2\0\0\0R)\0\0\0RW\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR`\0\0\0'\5\0\0s\4\0\0\0\0\1\f\1(\3\0\0\0RN\0\0\0RO\0\0\0R`\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\n\0\0\0&\5\0\0s\2\0\0\0\6\1c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0RN\0\0\0RO\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\v\0\0\0+\5\0\0s\2\0\0\0\6\1c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0RN\0\0\0RO\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\f\0\0\0.\5\0\0s\2\0\0\0\6\1c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s&\0\0\0e\0\0Z\1\0d\3\0d\0\0\204\1\0Z\3\0d\1\0\204\0\0Z\4\0d\2\0\204\0\0Z\5\0RS(\4\0\0\0c\3\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s\"\0\0\0|\1\0f\1\0|\0\0_\0\0|\1\0|\0\0_\1\0|\2\0|\0\0_\2\0d\0\0S(\1\0\0\0N(\3\0\0\0R\344\0\0\0t\7\0\0\0partialt\10\0\0\0expected(\3\0\0\0R)\0\0\0R\3\1\0\0R\4\1\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR`\0\0\0002\5\0\0s\6\0\0\0\0\1\f\1\t\1c\1\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s<\0\0\0|\0\0j\0\0d\0\0k\t\0r\37\0d\1\0|\0\0j\0\0\26}\1\0n\6\0d\2\0}\1\0d\3\0t\2\0|\0\0j\3\0\203\1\0|\1\0f\2\0\26S(\4\0\0\0Ns\22\0\0\0, %i more expectedR1\0\0\0s\37\0\0\0IncompleteRead(%i bytes read%s)(\4\0\0\0R\4\1\0\0R'\0\0\0R;\0\0\0R\3\1\0\0(\2\0\0\0R)\0\0\0R\356\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\10\0\0\0__repr__6\5\0\0s\10\0\0\0\0\1\17\1\20\2\6\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0N(\1\0\0\0Ra\0\0\0(\1\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\7\0\0\0__str__<\5\0\0s\2\0\0\0\0\1N(\6\0\0\0RN\0\0\0RO\0\0\0R'\0\0\0R`\0\0\0R\5\1\0\0R\6\1\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\r\0\0\0001\5\0\0s\6\0\0\0\6\1\f\4\t\6c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0RN\0\0\0RO\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\17\0\0\0?\5\0\0s\2\0\0\0\6\1c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0RN\0\0\0RO\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\20\0\0\0B\5\0\0s\2\0\0\0\6\1c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0RN\0\0\0RO\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\21\0\0\0E\5\0\0s\2\0\0\0\6\1c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0RN\0\0\0RO\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\22\0\0\0H\5\0\0s\2\0\0\0\6\1c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\21\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0RS(\1\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s.\0\0\0|\1\0s\25\0t\0\0|\1\0\203\1\0}\1\0n\0\0|\1\0f\1\0|\0\0_\1\0|\1\0|\0\0_\2\0d\0\0S(\1\0\0\0N(\3\0\0\0Ra\0\0\0R\344\0\0\0RL\0\0\0(\2\0\0\0R)\0\0\0RL\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR`\0\0\0L\5\0\0s\10\0\0\0\0\1\6\1\17\1\f\1(\3\0\0\0RN\0\0\0RO\0\0\0R`\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\23\0\0\0K\5\0\0s\2\0\0\0\6\1R@\0\0\0c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\21\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0RS(\1\0\0\0c\2\0\0\0\2\0\0\0\5\0\0\0C\0\0\0s\36\0\0\0t\0\0j\1\0|\0\0d\1\0t\2\0|\1\0f\2\0\26\203\2\0\1d\0\0S(\2\0\0\0Ns&\0\0\0got more than %d ", 28672) = 28672
27308 read(4, "bytes when reading %s(\3\0\0\0R\10\0\0\0R`\0\0\0R?\0\0\0(\2\0\0\0R)\0\0\0t\t\0\0\0line_type(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR`\0\0\0S\5\0\0s\4\0\0\0\0\1\f\1(\3\0\0\0RN\0\0\0RO\0\0\0R`\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR@\0\0\0R\5\0\0s\2\0\0\0\6\1Re\0\0\0c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sJ\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0d\3\0\204\0\0Z\5\0d\7\0d\4\0\204\1\0Z\7\0d\5\0\204\0\0Z\10\0d\7\0d\6\0\204\1\0Z\t\0RS(\10\0\0\0s2\0\0\0A limited file-like object for HTTP/0.9 responses.c\3\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s7\0\0\0|\1\0|\0\0_\0\0|\2\0|\0\0_\1\0d\1\0|\0\0_\2\0d\1\0|\0\0_\3\0t\4\0|\1\0\203\1\0|\0\0_\5\0d\0\0S(\2\0\0\0Ni\0\0\0\0(\6\0\0\0t\5\0\0\0_linet\5\0\0\0_filet\16\0\0\0_line_consumedt\f\0\0\0_line_offsetR;\0\0\0t\n\0\0\0_line_left(\3\0\0\0R)\0\0\0RL\0\0\0R\354\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR`\0\0\0b\5\0\0s\n\0\0\0\0\1\t\1\t\1\t\1\t\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\20\0\0\0t\0\0|\0\0j\1\0|\1\0\203\2\0S(\1\0\0\0N(\2\0\0\0t\7\0\0\0getattrR\t\1\0\0(\2\0\0\0R)\0\0\0t\4\0\0\0attr(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\v\0\0\0__getattr__i\5\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s:\0\0\0d\1\0|\0\0_\0\0|\0\0j\1\0j\2\0|\0\0_\2\0|\0\0j\1\0j\3\0|\0\0_\3\0|\0\0j\1\0j\4\0|\0\0_\4\0d\0\0S(\2\0\0\0Ni\1\0\0\0(\5\0\0\0R\n\1\0\0R\t\1\0\0Ry\0\0\0R>\0\0\0t\t\0\0\0readlines(\1\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\5\0\0\0_donel\5\0\0s\10\0\0\0\0\4\t\1\17\1\17\1c\2\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\17\1\0\0|\0\0j\0\0r\31\0|\0\0j\1\0j\2\0|\1\0\203\1\0S|\0\0j\3\0s(\0t\4\0\202\1\0|\1\0d\0\0k\10\0sC\0|\1\0|\0\0j\3\0k\4\0r\233\0|\0\0j\6\0|\0\0j\7\0\37}\2\0|\0\0j\10\0\203\0\0\1|\1\0d\0\0k\10\0rz\0|\2\0|\0\0j\1\0j\2\0\203\0\0\27S|\2\0|\0\0j\1\0j\2\0|\1\0t\t\0|\2\0\203\1\0\30\203\1\0\27Snp\0|\1\0|\0\0j\3\0k\1\0s\260\0t\4\0\202\1\0|\0\0j\7\0}\3\0|\3\0|\1\0\27}\4\0|\0\0j\6\0|\3\0|\4\0!}\2\0|\4\0|\0\0_\7\0|\0\0\4j\3\0|\1\0008\2_\3\0|\0\0j\3\0d\1\0k\2\0r\7\1|\0\0j\10\0\203\0\0\1n\0\0|\2\0Sd\0\0S(\2\0\0\0Ni\0\0\0\0(\n\0\0\0R\n\1\0\0R\t\1\0\0Ry\0\0\0R\f\1\0\0R~\0\0\0R'\0\0\0R\10\1\0\0R\v\1\0\0R\21\1\0\0R;\0\0\0(\5\0\0\0R)\0\0\0R{\0\0\0R|\0\0\0R\200\0\0\0R\240\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyRy\0\0\0u\5\0\0s$\0\0\0\0\1\t\1\20\1\17\1\33\1\20\1\n\1\f\1\21\2!\2\25\1\t\1\n\1\20\1\t\1\17\1\17\1\r\1c\1\0\0\0\2\0\0\0\2\0\0\0C\0\0\0sC\0\0\0|\0\0j\0\0r\26\0|\0\0j\1\0j\2\0\203\0\0S|\0\0j\3\0s%\0t\4\0\202\1\0|\0\0j\5\0|\0\0j\6\0\37}\1\0|\0\0j\7\0\203\0\0\1|\1\0S(\1\0\0\0N(\10\0\0\0R\n\1\0\0R\t\1\0\0R>\0\0\0R\f\1\0\0R~\0\0\0R\10\1\0\0R\v\1\0\0R\21\1\0\0(\2\0\0\0R)\0\0\0R|\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR>\0\0\0\213\5\0\0s\f\0\0\0\0\1\t\1\r\1\17\1\20\1\n\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sz\0\0\0|\0\0j\0\0r\31\0|\0\0j\1\0j\2\0|\1\0\203\1\0S|\0\0j\3\0s(\0t\4\0\202\1\0|\0\0j\5\0|\0\0j\6\0\37g\1\0}\2\0|\0\0j\7\0\203\0\0\1|\1\0d\0\0k\10\0rb\0|\2\0|\0\0j\1\0j\2\0\203\0\0\27S|\2\0|\0\0j\1\0j\2\0|\1\0\203\1\0\27Sd\0\0S(\1\0\0\0N(\t\0\0\0R\n\1\0\0R\t\1\0\0R\20\1\0\0R\f\1\0\0R~\0\0\0R\10\1\0\0R\v\1\0\0R\21\1\0\0R'\0\0\0(\3\0\0\0R)\0\0\0t\4\0\0\0sizet\1\0\0\0L(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyR\20\1\0\0\223\5\0\0s\20\0\0\0\0\1\t\1\20\1\17\1\23\1\n\1\f\1\21\2N(\n\0\0\0RN\0\0\0RO\0\0\0R\360\0\0\0R`\0\0\0R\17\1\0\0R\21\1\0\0R'\0\0\0Ry\0\0\0R>\0\0\0R\20\1\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyRe\0\0\0Z\5\0\0s\16\0\0\0\6\1\6\7\t\7\t\3\t\t\f\26\t\10(m\0\0\0R\360\0\0\0R\0\0\0\0R\331\0\0\0t\2\0\0\0reR\225\0\0\0t\3\0\0\0sysR\1\0\0\0t\10\0\0\0urlparseR\2\0\0\0R\376\0\0\0t\16\0\0\0catch_warningst\16\0\0\0filterwarningsR\0\1\0\0t\t\0\0\0mimetoolst\t\0\0\0cStringIOR\4\0\0\0t\v\0\0\0ImportErrort\7\0\0\0__all__R\347\0\0\0R\373\0\0\0RV\0\0\0R\215\0\0\0R\275\0\0\0R\320\0\0\0Ri\0\0\0t\23\0\0\0SWITCHING_PROTOCOLSt\n\0\0\0PROCESSINGR\31\0\0\0t\7\0\0\0CREATEDt\10\0\0\0ACCEPTEDt\35\0\0\0NON_AUTHORITATIVE_INFORMATIONRm\0\0\0t\r\0\0\0RESET_CONTENTt\17\0\0\0PARTIAL_CONTENTt\f\0\0\0MULTI_STATUSt\7\0\0\0IM_USEDt\20\0\0\0MULTIPLE_CHOICESt\21\0\0\0MOVED_PERMANENTLYt\5\0\0\0FOUNDt\t\0\0\0SEE_OTHERRn\0\0\0t\t\0\0\0USE_PROXYt\22\0\0\0TEMPORARY_REDIRECTt\v\0\0\0BAD_REQUESTt\f\0\0\0UNAUTHORIZEDt\20\0\0\0PAYMENT_REQUIREDt\t\0\0\0FORBIDDENt\t\0\0\0NOT_FOUNDt\22\0\0\0METHOD_NOT_ALLOWEDt\16\0\0\0NOT_ACCEPTABLEt\35\0\0\0PROXY_AUTHENTICATION_REQUIREDt\17\0\0\0REQUEST_TIMEOUTt\10\0\0\0CONFLICTt\4\0\0\0GONEt\17\0\0\0LENGTH_REQUIREDt\23\0\0\0PRECONDITION_FAILEDt\30\0\0\0REQUEST_ENTITY_TOO_LARGEt\24\0\0\0REQUEST_URI_TOO_LONGt\26\0\0\0UNSUPPORTED_MEDIA_TYPEt\37\0\0\0REQUESTED_RANGE_NOT_SATISFIABLEt\22\0\0\0EXPECTATION_FAILEDt\24\0\0\0UNPROCESSABLE_ENTITYt\6\0\0\0LOCKEDt\21\0\0\0FAILED_DEPENDENCYt\20\0\0\0UPGRADE_REQUIREDt\25\0\0\0INTERNAL_SERVER_ERRORt\17\0\0\0NOT_IMPLEMENTEDt\v\0\0\0BAD_GATEWAYt\23\0\0\0SERVICE_UNAVAILABLEt\17\0\0\0GATEWAY_TIMEOUTt\32\0\0\0HTTP_VERSION_NOT_SUPPORTEDt\24\0\0\0INSUFFICIENT_STORAGEt\f\0\0\0NOT_EXTENDEDR\25\0\0\0R\202\0\0\0R?\0\0\0R<\0\0\0t\7\0\0\0compilet\5\0\0\0matchR\313\0\0\0t\6\0\0\0searchR\314\0\0\0R\327\0\0\0t\7\0\0\0MessageR$\0\0\0R\6\0\0\0R\7\0\0\0R\5\0\0\0R\364\0\0\0R\361\0\0\0RB\0\0\0R\374\0\0\0R\2\1\0\0t\t\0\0\0ExceptionR\10\0\0\0R\t\0\0\0R\16\0\0\0R\n\0\0\0R\v\0\0\0R\f\0\0\0R\r\0\0\0R\17\0\0\0R\20\0\0\0R\21\0\0\0R\22\0\0\0R\23\0\0\0R@\0\0\0R\24\0\0\0Re\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/httplib.pyt\10\0\0\0<module>C\0\0\0s4\1\0\0\6\2\20\1\f\1\f\1\f\1\20\1\20\1\f\1\r\1\6\1\f\1\n\1\22\2\3\1\24\1\r\1\24\2\t\1\t\1\6\1\t\1\t\1\17\2\6\1\6\2\6\3\6\1\6\1\6\4\6\1\6\1\6\3\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\3\6\1\6\1\6\1\6\1\6\1\6\1\6\3\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\3\6\1\6\1\6\1\6\1\6\1\6\1\6\1\6\3\3\1\7\1\7\2\7\1\7\1\7\1\7\1\7\1\7\1\7\2\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\2\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\1\7\2\7\1\7\1\7\1\7\1\7\1\n\4\6\3\6\3\6\33\22\1\22\4\17\3\31r\23\377\0d\23\377\0\245\23[\3\1\20\1\r\1\4\2\26\37\r\2\26\33\t\7\26\5\26\3\26\3\26\5\26\3\26\3\26\16\26\3\26\3\26\3\26\3\26\7\26\6\6\2", 4096) = 3863
27308 read(4, "", 4096)                 = 0
27308 close(4)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 stat64("socket", 0xbfffdcdc)      = -1 ENOENT (No such file or directory)
27308 open("socket.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("socket.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("socketmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("socket.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("socket.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/socket", 0xbfffdcdc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/socket.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/socket.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/socketmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/socket.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661582, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=48, st_size=20616, st_atime=2017/03/06-06:35:40, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/socket.pyc", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=670433, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=16093, st_atime=2017/04/26-21:00:32, st_mtime=2015/09/26-01:40:03, st_ctime=2015/09/26-01:40:03}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(5, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\16\0\0\0@\0\0\0s\354\3\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\3\0l\1\0Td\1\0d\4\0l\2\0m\3\0Z\3\0\1d\1\0d\5\0l\4\0m\5\0Z\5\0\1y\20\0d\1\0d\2\0l\6\0Z\6\0Wn\21\0\4e\7\0k\n\0r_\0\1\1\1n\224\0Xe\10\0e\10\0d\6\0\204\2\0Z\t\0d\1\0d\7\0l\6\0m\n\0Z\v\0\1d\1\0d\10\0l\6\0m\f\0Z\f\0m\r\0Z\r\0m\16\0Z\16\0m\17\0Z\17\0m\20\0Z\20\0m\21\0Z\21\0m\22\0Z\22\0m\23\0Z\23\0m\24\0Z\24\0m\25\0Z\25\0m\26\0Z\26\0\1y\24\0d\1\0d\t\0l\6\0m\27\0Z\27\0\1Wn\21\0\4e\7\0k\n\0r\362\0\1\1\1n\1\0Xd\1\0d\2\0l\30\0Z\30\0d\1\0d\2\0l\31\0Z\31\0d\1\0d\2\0l\32\0Z\32\0y\24\0d\1\0d\n\0l\33\0m\34\0Z\34\0\1Wn!\0\4e\7\0k\n\0rN\1\1\1\1d\1\0d\n\0l\34\0m\34\0Z\34\0\1n\1\0Xy\20\0d\1\0d\2\0l\35\0Z\35\0Wn\27\0\4e\7\0k\n\0rx\1\1\1\1e\10\0Z\35\0n\1\0Xe\36\0e\35\0d\v\0d\f\0\203\3\0Z\37\0e\36\0e\35\0d\r\0d\16\0\203\3\0Z \0d\17\0d\20\0g\2\0Z!\0e!\0j\"\0e\30\0j#\0e\1\0\203\1\0\203\1\0\1e$\0Z%\0e\31\0j&\0j'\0\203\0\0j(\0d\21\0\203\1\0r\211\2i\0\0Z)\0d\22\0e)\0d\23\0<d\24\0e)\0d\25\0<d\26\0e)\0d\27\0<d\30\0e)\0d\31\0<d\32\0e)\0d\33\0<d\34\0e)\0d\35\0<d\36\0e)\0d\37\0<d \0e)\0d!\0<d\"\0e)\0d#\0<d$\0e)\0d%\0<d&\0e)\0d'\0<d(\0e)\0d)\0<d*\0e)\0d+\0<d,\0e)\0d-\0<d.\0e)\0d/\0<e!\0j*\0d0\0\203\1\0\1n\0\0d1\0d2\0\204\1\0Z+\0d3\0d4\0d5\0d6\0d7\0d8\0d9\0d:\0d;\0d<\0d=\0d>\0d?\0d@\0f\16\0Z,\0e\30\0j-\0dA\0k\2\0r\344\2e,\0dB\0f\1\0\27Z,\0n\0\0e\31\0j&\0dC\0k\2\0r\3\3e,\0dD\0f\1\0\27Z,\0n\0\0dE\0dF\0dG\0dH\0dI\0dJ\0f\6\0Z.\0dK\0e/\0f\1\0dL\0\204\0\0\203\0\0YZ0\0dM\0e/\0f\1\0dN\0\204\0\0\203\0\0YZ1\0dO\0\204\0\0Z2\0x]\0e,\0D]U\0Z3\0e\3\0e2\0e3\0\203\2\0Z4\0e3\0e4\0_5\0e\36\0e%\0e3\0\203\2\0j\0\0e4\0_\0\0e\5\0e4\0e\10\0e1\0\203\3\0Z6\0e7\0e1\0e3\0e6\0\203\3\0\1qW\3We1\0\4Z$\0Z8\0dP\0e/\0f\1\0dQ\0\204\0\0\203\0\0YZ9\0e/\0\203\0\0Z:\0e:\0e\10\0dR\0\204\2\0Z;\0d\2\0S(S\0\0\0s\17\7\0\0This module provides socket operations and some related functions.\nOn Unix, it supports IP (Internet Protocol) and Unix domain sockets.\nOn other systems, it only supports IP. Functions specific for a\nsocket are available as methods of the socket object.\n\nFunctions:\n\nsocket() -- create a new socket object\nsocketpair() -- create a pair of new socket objects [*]\nfromfd() -- create a socket object from an open file descriptor [*]\ngethostname() -- return the current hostname\ngethostbyname() -- map a hostname to its IP number\ngethostbyaddr() -- map an IP number or hostname to DNS info\ngetservbyname() -- map a service name and a protocol name to a port number\ngetprotobyname() -- map a protocol name (e.g. 'tcp') to a number\nntohs(), ntohl() -- convert 16, 32 bit int from network to host byte order\nhtons(), htonl() -- convert 16, 32 bit int from host to network byte order\ninet_aton() -- convert IP addr string (123.45.67.89) to 32-bit packed format\ninet_ntoa() -- convert 32-bit packed format IP to string (123.45.67.89)\nssl() -- secure socket layer support (only available if configured)\nsocket.getdefaulttimeout() -- get the default timeout value\nsocket.setdefaulttimeout() -- set the default timeout value\ncreate_connection() -- connects to an address, with an optional timeout and\n                       optional source address.\n\n [*] not available on all platforms!\n\nSpecial objects:\n\nSocketType -- type object for socket objects\nerror -- exception raised for I/O errors\nhas_ipv6 -- boolean value indicating if IPv6 is supported\n\nInteger constants:\n\nAF_INET, AF_UNIX -- socket domains (first argument to socket() call)\nSOCK_STREAM, SOCK_DGRAM, SOCK_RAW -- socket types (second argument)\n\nMany other constants may be defined; these may be used in calls to\nthe setsockopt() and getsockopt() methods.\ni\377\377\377\377N(\1\0\0\0t\1\0\0\0*(\1\0\0\0t\7\0\0\0partial(\1\0\0\0t\n\0\0\0MethodTypec\3\0\0\0\4\0\0\0\5\0\0\0C\0\0\0s5\0\0\0d\1\0d\0\0l\0\0}\3\0t\1\0j\2\0d\2\0t\3\0d\3\0d\4\0\203\2\1\1|\3\0j\4\0|\0\0|\1\0|\2\0\203\3\0S(\5\0\0\0Ni\377\377\377\377s;\0\0\0socket.ssl() is deprecated.  Use ssl.wrap_socket() instead.t\n\0\0\0stackleveli\2\0\0\0(\5\0\0\0t\3\0\0\0sslt\10\0\0\0warningst\4\0\0\0warnt\22\0\0\0DeprecationWarningt\16\0\0\0sslwrap_simple(\4\0\0\0t\4\0\0\0sockt\7\0\0\0keyfilet\10\0\0\0certfilet\10\0\0\0_realssl(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyR\4\0\0\0:\0\0\0s\10\0\0\0\0\3\f\1\t\1\r\1(\1\0\0\0t\10\0\0\0SSLError(\v\0\0\0t\10\0\0\0RAND_addt\v\0\0\0RAND_statust\25\0\0\0SSL_ERROR_ZERO_RETURNt\23\0\0\0SSL_ERROR_WANT_READt\24\0\0\0SSL_ERROR_WANT_WRITEt\32\0\0\0SSL_ERROR_WANT_X509_LOOKUPt\21\0\0\0SSL_ERROR_SYSCALLt\r\0\0\0SSL_ERROR_SSLt\26\0\0\0SSL_ERROR_WANT_CONNECTt\r\0\0\0SSL_ERROR_EOFt\34\0\0\0SSL_ERROR_INVALID_ERROR_CODE(\1\0\0\0t\10\0\0\0RAND_egd(\1\0\0\0t\10\0\0\0StringIOt\5\0\0\0EBADFi\t\0\0\0t\5\0\0\0EINTRi\4\0\0\0t\7\0\0\0getfqdnt\21\0\0\0create_connectiont\3\0\0\0wins\36\0\0\0The operation was interrupted.i\24'\0\0s\35\0\0\0A bad file handle was passed.i\31'\0\0s\22\0\0\0Permission denied.i\35'\0\0s!\0\0\0A fault occurred on the network??i\36'\0\0s#\0\0\0An invalid operation was attempted.i&'\0\0s \0\0\0The socket operation would blocki3'\0\0s,\0\0\0A blocking operation is already in progress.i4'\0\0s\36\0\0\0The network address is in use.i@'\0\0s\36\0\0\0The connection has been reset.iF'\0\0s\37\0\0\0The network has been shut down.iJ'\0\0s\30\0\0\0The operation timed out.iL", 4096) = 4096
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=670433, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=16093, st_atime=2017/04/26-21:00:32, st_mtime=2015/09/26-01:40:03, st_ctime=2015/09/26-01:40:03}) = 0
27308 read(5, "'\0\0s\23\0\0\0Connection refused.iM'\0\0s\25\0\0\0The name is too long.iO'\0\0s\21\0\0\0The host is down.iP'\0\0s\30\0\0\0The host is unreachable.iQ'\0\0t\10\0\0\0errorTabt\0\0\0\0c\1\0\0\0\4\0\0\0\5\0\0\0C\0\0\0s\223\0\0\0|\0\0j\0\0\203\0\0}\0\0|\0\0\fs\37\0|\0\0d\1\0k\2\0r+\0t\1\0\203\0\0}\0\0n\0\0y\31\0t\2\0|\0\0\203\1\0\\\3\0}\1\0}\2\0}\3\0Wn\21\0\4t\3\0k\n\0rW\0\1\1\1n8\0X|\2\0j\4\0d\2\0|\1\0\203\2\0\1x$\0|\2\0D]\26\0}\0\0d\3\0|\0\0k\6\0ro\0Pqo\0qo\0W|\1\0}\0\0|\0\0S(\4\0\0\0s\37\1\0\0Get fully qualified domain name from name.\n\n    An empty argument is interpreted as meaning the local host.\n\n    First the hostname returned by gethostbyaddr() is checked, then\n    possibly existing aliases. In case no FQDN is available, hostname\n    from gethostname() is returned.\n    s\7\0\0\0000.0.0.0i\0\0\0\0t\1\0\0\0.(\5\0\0\0t\5\0\0\0stript\v\0\0\0gethostnamet\r\0\0\0gethostbyaddrt\5\0\0\0errort\6\0\0\0insert(\4\0\0\0t\4\0\0\0namet\10\0\0\0hostnamet\7\0\0\0aliasest\7\0\0\0ipaddrs(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyR\35\0\0\0\200\0\0\0s\32\0\0\0\0\t\f\1\23\1\f\1\3\1\31\1\r\1\4\2\20\1\r\1\f\1\10\2\6\1t\4\0\0\0bindt\7\0\0\0connectt\n\0\0\0connect_ext\6\0\0\0filenot\6\0\0\0listent\v\0\0\0getpeernamet\v\0\0\0getsocknamet\n\0\0\0getsockoptt\n\0\0\0setsockoptt\7\0\0\0sendallt\v\0\0\0setblockingt\n\0\0\0settimeoutt\n\0\0\0gettimeoutt\10\0\0\0shutdownt\2\0\0\0ntt\5\0\0\0ioctlt\6\0\0\0riscost\n\0\0\0sleeptaskwt\4\0\0\0recvt\10\0\0\0recvfromt\t\0\0\0recv_intot\r\0\0\0recvfrom_intot\4\0\0\0sendt\6\0\0\0sendtot\r\0\0\0_closedsocketc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s7\0\0\0e\0\0Z\1\0g\0\0Z\2\0d\0\0\204\0\0Z\3\0e\3\0\4Z\4\0\4Z\5\0\4Z\6\0\4Z\7\0\4Z\10\0Z\t\0e\3\0Z\n\0RS(\1\0\0\0c\0\0\0\0\1\0\0\0\3\0\0\0G\0\0\0s\23\0\0\0t\0\0t\1\0d\1\0\203\2\0\202\1\0d\0\0S(\2\0\0\0Ns\23\0\0\0Bad file descriptor(\2\0\0\0R&\0\0\0R\33\0\0\0(\1\0\0\0t\4\0\0\0args(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\6\0\0\0_dummy\255\0\0\0s\2\0\0\0\0\1(\v\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__t\t\0\0\0__slots__RF\0\0\0RB\0\0\0R>\0\0\0R@\0\0\0RC\0\0\0R?\0\0\0RA\0\0\0t\v\0\0\0__getattr__(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyRD\0\0\0\253\0\0\0s\10\0\0\0\6\1\6\1\t\3\32\1t\r\0\0\0_socketobjectc\0\0\0\0\0\0\0\0\5\0\0\0B\0\0\0s\314\0\0\0e\0\0Z\1\0e\2\0j\3\0Z\3\0d\0\0d\1\0g\2\0e\4\0e\5\0\203\1\0\27Z\6\0e\7\0e\10\0d\2\0d\21\0d\3\0\204\4\0Z\n\0e\v\0e\5\0e\f\0d\4\0\204\3\0Z\r\0e\2\0j\r\0j\3\0e\r\0_\3\0d\5\0\204\0\0Z\16\0e\2\0j\16\0j\3\0e\16\0_\3\0d\6\0\204\0\0Z\17\0d\7\0d\10\0d\t\0\204\2\0Z\20\0e\21\0d\n\0\204\0\0d\v\0d\f\0\203\1\1Z\22\0e\21\0d\r\0\204\0\0d\v\0d\16\0\203\1\1Z\23\0e\21\0d\17\0\204\0\0d\v\0d\20\0\203\1\1Z\24\0RS(\22\0\0\0t\5\0\0\0_sockt\v\0\0\0__weakref__i\0\0\0\0c\5\0\0\0\6\0\0\0\7\0\0\0C\0\0\0sX\0\0\0|\4\0d\0\0k\10\0r!\0t\1\0|\1\0|\2\0|\3\0\203\3\0}\4\0n\0\0|\4\0|\0\0_\2\0x'\0t\3\0D]\37\0}\5\0t\4\0|\0\0|\5\0t\5\0|\4\0|\5\0\203\2\0\203\3\0\1q1\0Wd\0\0S(\1\0\0\0N(\6\0\0\0t\4\0\0\0Nonet\v\0\0\0_realsocketRL\0\0\0t\21\0\0\0_delegate_methodst\7\0\0\0setattrt\7\0\0\0getattr(\6\0\0\0t\4\0\0\0selft\6\0\0\0familyt\4\0\0\0typet\5\0\0\0protoRL\0\0\0t\6\0\0\0method(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\10\0\0\0__init__\275\0\0\0s\n\0\0\0\0\1\f\1\25\1\t\1\r\1c\4\0\0\0\6\0\0\0\5\0\0\0C\0\0\0s=\0\0\0|\1\0\203\0\0|\0\0_\0\0|\0\0j\0\0j\1\0}\4\0x\36\0|\2\0D]\26\0}\5\0|\3\0|\0\0|\5\0|\4\0\203\3\0\1q\37\0Wd\0\0S(\1\0\0\0N(\2\0\0\0RL\0\0\0RF\0\0\0(\6\0\0\0RS\0\0\0RD\0\0\0RP\0\0\0RQ\0\0\0t\5\0\0\0dummyRW\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\5\0\0\0close\304\0\0\0s\10\0\0\0\0\3\f\1\f\1\r\1c\1\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s(\0\0\0|\0\0j\0\0j\1\0\203\0\0\\\2\0}\1\0}\2\0t\2\0d\1\0|\1\0\203\0\1|\2\0f\2\0S(\2\0\0\0NRL\0\0\0(\3\0\0\0RL\0\0\0t\6\0\0\0acceptRK\0\0\0(\3\0\0\0RS\0\0\0R\t\0\0\0t\4\0\0\0addr(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyR[\0\0\0\315\0\0\0s\4\0\0\0\0\1\25\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\20\0\0\0t\0\0d\1\0|\0\0j\1\0\203\0\1S(\2\0\0\0sa\0\0\0dup() -> socket object\n\n        Return a new socket object connected to the same system resource.RL\0\0\0(\2\0\0\0RK\0\0\0RL\0\0\0(\1\0\0\0RS\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\3\0\0\0dup\322\0\0\0s\2\0\0\0\0\4t\1\0\0\0ri\377\377\377\377c\3\0\0\0\3\0\0\0\4\0\0\0C\0\0\0s\23\0\0\0t\0\0|\0\0j\1\0|\1\0|\2\0\203\3\0S(\1\0\0\0s\276\0\0\0makefile([mode[, bufsize]]) -> file object\n\n        Return a regular file object corresponding to the socket.  The mode\n        and bufsize arguments are as for the built-in open() function.(\2\0\0\0t\v\0\0\0_fileobjectRL\0\0\0(\3\0\0\0RS\0\0\0t\4\0\0\0modet\7\0\0\0bufsize(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\10\0\0\0makefile\330\0\0\0s\2\0\0\0\0\5c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0|\0\0j\0\0j\1\0S(\1\0\0\0N(\2\0\0\0RL\0\0\0RT\0\0\0(\1\0\0\0RS\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\10\0\0\0<lambda>\337\0\0\0s\0\0\0\0t\3\0\0\0docs\21\0\0\0the socket familyc\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0|\0\0j\0\0j\1\0S(\1\0\0\0N(\2\0\0\0RL\0\0\0RU\0\0\0(\1\0\0\0RS\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyRc\0\0\0\340\0\0\0s\0\0\0\0s\17\0\0\0the socket typec\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0|\0\0j\0\0j\1\0S(\1\0\0\0N(\2\0\0\0RL\0\0\0RV\0\0\0(\1\0\0\0RS\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyRc\0\0\0\341\0\0\0s\0\0\0\0s\23\0\0\0the socket protocolN(\25\0\0\0RG\0\0\0RH\0\0\0RO\0\0\0t\7\0\0\0__doc__t\4\0\0\0listRP\0\0\0RI\0\0\0t\7\0\0\0AF_INETt\v\0\0\0SOCK_STREAMRN\0\0\0RX\0\0\0RD\0\0\0RQ\0\0\0RZ\0\0\0R[\0\0\0R]\0\0\0Rb\0\0\0t\10\0\0\0propertyRT\0\0\0RU\0\0\0RV\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyRK\0\0\0\267\0\0\0s\32\0\0\0\6\2\t\2\26\2\25\7\3\1\17\6\17\2\t\3\17\2\t\6\17\7\25\1\25\1c\2\0\0\0\3\0\0\0\3\0\0\0G\0\0\0s\26\0\0\0t\0\0|\1\0j\1\0|\0\0\203\2\0|\2\0\214\0\0S(\1\0\0\0N(\2\0\0\0RR\0\0\0RL\0\0\0(\3\0\0\0R(\0\0\0RS\0\0\0RE\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\4\0\0\0meth\343\0\0\0s\2\0\0\0\0\1R_\0\0\0c\0\0\0\0\0\0\0\0\n\0\0\0B\0\0\0s\327\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0Z\3\0d\2\0Z\4\0d\3\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0d\v\0d\f\0g\n\0Z\5\0d\r\0d\16\0e\6\0d\17\0\204\3\0Z\7\0d\20\0\204\0\0Z\10\0e\t\0e\10\0d\21\0d\22\0\203\1\1Z\n\0d\23\0\204\0\0Z\v\0d\24\0\204\0\0Z\f\0d\25\0\204\0\0Z\r\0d\26\0\204\0\0Z\16\0d\27\0\204\0\0Z\17\0d\30\0\204\0\0Z\20\0d\16\0d\31\0\204\1\0Z\21\0d\16\0d\32\0\204\1\0Z\22\0d\33\0d\34\0\204\1\0Z\23\0d\35\0\204\0\0Z\24\0d\36\0\204\0\0Z\25\0RS(\37\0\0\0s-\0\0\0Faux file object attached to a socket object.i\0 \0\0s\10\0\0\0<socket>R`\0\0\0Ra\0\0\0t\t\0\0\0softspaceRL\0\0\0t\t\0\0\0_rbufsizet\t\0\0\0_wbufsizet\5\0\0\0_rbuft\5\0\0\0_wbuft\t\0\0\0_wbuf_lent\6\0\0\0_closet\2\0\0\0rbi\377\377\377\377c\5\0\0\0\5\0\0\0\2\0\0\0C\0\0\0s\254\0\0\0|\1\0|\0\0_\0\0|\2\0|\0\0_\1\0|\3\0d\1\0k\0\0r*\0|\0\0j\2\0}\3\0n\0\0|\3\0|\0\0_\3\0t\4\0|\0\0_\5\0|\3\0d\1\0k\2\0rT\0d\2\0|\0\0_\6\0n$\0|\3\0d\2\0k\2\0ro\0|\0\0j\2\0|\0\0_\6\0n\t\0|\3\0|\0\0_\6\0|\3\0|\0\0_\7\0t\10\0\203\0\0|\0\0_\t\0g\0\0|\0\0_\n\0d\1\0|\0\0_\v\0|\4\0|\0\0_\f\0d\0\0S(\3\0\0\0Ni\0\0\0\0i\1\0\0\0(\r\0\0\0RL\0\0\0R`\0\0\0t\17\0\0\0default_bufsizeRa\0\0\0t\5\0\0\0FalseRk\0\0\0Rl\0\0\0Rm\0\0\0R\32\0\0\0Rn\0\0\0Ro\0\0\0Rp\0\0\0Rq\0\0\0(\5\0\0\0RS\0\0\0R\t\0\0\0R`\0\0\0Ra\0\0\0RZ\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyRX\0\0\0\372\0\0\0s \0\0\0\0\1\t\1\t\1\f\1\f\1\t\1\t\4\f\1\f\1\f\1\17\2\t\1\t\5\f\1\t\1\t\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0d\0\0k\10\0S(\1\0\0\0N(\2\0\0\0RL\0\0\0RN\0\0\0(\1\0\0\0RS\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\n\0\0\0_getclosed\24\1\0\0s\2\0\0\0\0\1Rd\0\0\0s\32\0\0\0True if the file is closedc\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0sD\0\0\0z\32\0|\0\0j\0\0r\31\0|\0\0j\1\0\203\0\0\1n\0\0Wd\0\0|\0\0j\2\0r6\0|\0\0j\0\0j\3\0\203\0\0\1n\0\0d\0\0|\0\0_\0\0Xd\0\0S(\1\0\0\0N(\5\0\0\0RL\0\0\0t\5\0\0\0flushRq\0\0\0RZ\0\0\0RN\0\0\0(\1\0\0\0RS\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyRZ\0\0\0\30\1\0\0s\f\0\0\0\0\1\3\1\t\1\21\2\t\1\20\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\34\0\0\0y\16\0|\0\0j\0\0\203\0\0\1Wn\7\0\1\1\1n\1\0Xd\0\0S(\1\0\0\0N(\1\0\0\0RZ\0\0\0(\1\0\0\0RS\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\7\0\0\0__del__!\1\0\0s\10\0\0\0\0\1\3\1\16\1\3\2c\1\0\0\0\7\0\0\0\5\0\0\0C\0\0\0s\345\0\0\0|\0\0j\0\0r\341\0d\1\0j\1\0|\0\0j\0\0\203\1\0}\1\0g\0\0|\0\0_\0\0d\2\0|\0\0_\2\0t\3\0|\0\0j\4\0|\0\0j\5\0\203\2\0}\2\0t\6\0|\1\0\203\1\0}\3\0d\2\0}\4\0t\7\0|\1\0\203\1\0}\5\0z<\0x5\0|\4\0|\3\0k\0\0r\232\0|\0\0j\10\0j\t\0|\5\0|\4\0|\4\0|\2\0\27!\203\1\0\1|\4\0|\2\0007}\4\0qf\0WWd\0\0|\4\0|\3\0k\0\0r\335\0|\1\0|\4\0\37}\6\0~\5\0~\1\0|\0\0j\0\0j\n\0|\6\0\203\1\0\1t\6\0|\6\0\203\1\0|\0\0_\2\0n\0\0Xn\0\0d\0\0S(\3\0\0\0NR!\0\0\0i\0\0\0\0(\v\0\0\0Ro\0\0\0t\4\0\0\0joinRp\0\0\0t\3\0\0\0maxRl\0\0\0Rs\0\0\0t\3\0\0\0lent\n\0\0\0memoryviewRL\0\0\0R5\0\0\0t\6\0\0\0append(\7\0\0\0RS\0\0\0t\4\0\0\0datat\v\0\0\0buffer_sizet\t\0\0\0data_sizet\f\0\0\0write_offsett\4\0\0\0viewt\t\0\0\0remainder(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyRv\0\0\0(\1\0\0s\"\0\0\0\0\1\t\1\22\1\t\1\t\1\25\1\f\1\6\1\f\1\3\1\17\1\33\1\22\2\f\1\n\1\6\1\20\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0N(\2\0\0\0RL\0\0\0R/\0\0\0(\1\0\0\0RS\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyR/\0\0\0<\1\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s\227\0\0\0t\0\0|\1\0\203\1\0}\1\0|\1\0s\26\0d\0\0S|\0\0j\1\0j\2\0|\1\0\203\1\0\1|\0\0\4j\3\0t\4\0|\1\0\203\1\0007\2_\3\0|\0\0j\5\0d\1\0k\2\0s\206\0|\0\0j\5\0d\2\0k\2\0re\0d\3\0|\1\0k\6\0s\206\0|\0\0j\5\0d\2\0k\4\0r\223\0|\0\0j\3\0|\0\0j\5\0k\5\0r\223\0|\0\0j\6\0\203\0\0\1n\0\0d\0\0S(\4\0\0\0Ni\0\0\0\0i\1\0\0\0s\1\0\0\0\n(\7\0\0\0t\3\0\0\0strRo\0\0\0R|\0\0\0Rp\0\0\0Rz\0\0\0Rm\0\0\0Rv\0\0\0(\2\0\0\0RS\0\0\0R}\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\5\0\0\0write?\1\0\0s\22\0\0\0\0\1\f\1\6\1\4\1\20\1\25\1\17\1\33\1!\1c\2\0\0\0\3\0\0\0\6\0\0\0C\0\0\0sx\0\0\0t\0\0d\0\0t\2\0t\3\0|\1\0\203\2\0\203\2\0}\2\0|\0\0\4j\4\0t\5\0t\2\0t\6\0|\2\0\203\2\0\203\1\0007\2_\4\0|\0\0j\7\0j\10\0|\2\0\203\1\0\1|\0\0j\t\0d\1\0k\1\0sg\0|\0\0j\4\0|\0\0j\t\0k\5\0rt\0|\0\0j\n\0\203\0\0\1n\0\0d\0\0S(\2\0\0\0Ni\1\0\0\0(\v\0\0\0t\6\0\0\0filterRN\0\0\0t\3\0\0\0mapR\203\0\0\0Rp\0\0\0t\3\0\0\0sumRz\0\0\0Ro\0\0\0t\6\0\0\0extendRm\0\0\0Rv\0\0\0(\3\0\0\0RS\0\0\0Rf\0\0\0t\5\0\0\0lines(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\n\0\0\0writelinesJ\1\0\0s\f\0\0\0\0\3\30\1\36\1\20\1\17\1\22\1c\2\0\0\0\n\0\0\0\5\0\0\0C\0\0\0s\30\2\0\0t\0\0|\0\0j\1\0|\0\0j\2\0\203\2\0}\2\0|\0\0j\3\0}\3\0|\3\0j\4\0d\1\0d\2\0\203\2\0\1|\1\0d\1\0k\0\0r\274\0t\5\0\203\0\0|\0\0_\3\0xi\0t\6\0r\261\0y\26\0|\0\0j\7\0j\10\0|\2\0\203\1\0}\4\0Wn/\0\4t\t\0k\n\0r\226\0\1}\5\0\1|\5\0j\n\0d\1\0\31t\v\0k\2\0r\220\0qI\0n\0\0\202\0\0n\1\0X|\4\0s\241\0Pn\0\0|\3\0j\f\0|\4\0\203\1\0\1qI\0W|\3\0j\r\0\203\0\0S|\3\0j\16\0\203\0\0}\6\0|\6\0|\1\0k\5\0r\26\1|\3\0j\4\0d\1\0\203\1\0\1|\3\0j\17\0|\1\0\203\1\0}\7\0t\5\0\203\0\0|\0\0_\3\0|\0\0j\3\0j\f\0|\3\0j\17\0\203\0\0\203\1\0\1|\7\0St\5\0\203\0\0|\0\0_\3\0x\345\0t\6\0r\t\2|\1\0|\6\0\30}\10\0y\26\0|\0\0j\7\0j\10\0|\10\0\203\1\0}\4\0Wn/\0\4t\t\0k\n\0r|\1\1}\5\0\1|\5\0j\n\0d\1\0\31t\v\0k\2\0rv\1q%\1n\0\0\202\0\0n\1\0X|\4\0s\207\1Pn\0\0t\20\0|\4\0\203\1\0}\t\0|\t\0|\1\0k\2\0r\252\1|\6\0\fr\252\1|\4\0S|\t\0|\10\0k\2\0r\312\1|\3\0j\f\0|\4\0\203\1\0\1~\4\0Pn\0\0|\t\0|\10\0k\1\0s\354\1t\21\0d\3\0|\10\0|\t\0f\2\0\26\203\1\0\202\1\0|\3\0j\f\0|\4\0\203\1\0\1|\6\0|\t\0007}\6\0~\4\0q%\1W|\3\0j\r\0\203\0\0Sd\0\0S(\4\0\0\0Ni\0\0\0\0i\2\0\0\0s\32\0\0\0recv(%d) returned %d bytes(\22\0\0\0Ry\0\0\0Rl\0\0\0Rs\0\0\0Rn\0\0\0t\4\0\0\0seekR\32\0\0\0t\4\0\0\0TrueRL\0\0\0R>\0\0\0R&\0\0\0RE\0\0\0R\34\0\0\0R\204\0\0\0t\10\0\0\0getvaluet\4\0\0\0tellt\4\0\0\0readRz\0\0\0t\16\0\0\0AssertionError(\n\0\0\0RS\0\0\0t\4\0\0\0sizet\10\0\0\0rbufsizet\3\0\0\0bufR}\0\0\0t\1\0\0\0et\7\0\0\0buf_lent\2\0\0\0rvt\4\0\0\0leftt\1\0\0\0n(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyR\217\0\0\0T\1\0\0s\\\0\0\0\0\4\25\4\t\1\20\1\f\2\f\1\t\1\3\1\26\1\17\1\23\1\6\1\7\1\6\1\4\1\21\1\n\3\f\1\f\2\r\1\17\1\f\1\26\1\4\2\f\1\t\1\n\6\3\1\26\1\17\1\23\1\6\1\7\1\6\1\4\1\f\1\23\6\4\1\f\1\r\1\3\1\4\1\"\1\r\1\n\1\7\2c\2\0\0\0\r\0\0\0\5\0\0\0C\0\0\0s\32\4\0\0|\0\0j\0\0}\2\0|\2\0j\1\0d\1\0d\2\0\203\2\0\1|\2\0j\2\0\203\0\0d\1\0k\4\0r\224\0|\2\0j\1\0d\1\0\203\1\0\1|\2\0j\3\0|\1\0\203\1\0}\3\0|\3\0j\4\0d\3\0\203\1\0sh\0t\5\0|\3\0\203\1\0|\1\0k\2\0r\216\0t\6\0\203\0\0|\0\0_\0\0|\0\0j\0\0j\7\0|\2\0j\10\0\203\0\0\203\1\0\1|\3\0S~\3\0n\0\0|\1\0d\1\0k\0\0rV\2|\0\0j\t\0d\4\0k\1\0rp\1|\2\0j\1\0d\1\0\203\1\0\1|\2\0j\10\0\203\0\0g\1\0}\4\0t\6\0\203\0\0|\0\0_\0\0d\0\0}\5\0|\0\0j\v\0j\f\0}\6\0xw\0t\r\0rb\1y:\0x3\0|\5\0d\3\0k\3\0r*\1|\6\0d\4\0\203\1\0}\5\0|\5\0s\32\1Pn\0\0|\4\0j\16\0|\5\0\203\1\0\1q\370\0WWn/\0\4t\17\0k\n\0r]\1\1}\7\0\1|\7\0j\20\0d\1\0\31t\21\0k\2\0rW\1q\354\0n\0\0\202\0\0n\1\0XPq\354\0Wd\5\0j\22\0|\4\0\203\1\0S|\2\0j\1\0d\1\0d\2\0\203\2\0\1t\6\0\203\0\0|\0\0_\0\0x\275\0t\r\0rK\2y\31\0|\0\0j\v\0j\f\0|\0\0j\t\0\203\1\0}\5\0Wn/\0\4t\17\0k\n\0r\337\1\1}\7\0\1|\7\0j\20\0d\1\0\31t\21\0k\2\0r\331\1q\217\1", 8192) = 8192
27308 read(5, "n\0\0\202\0\0n\1\0X|\5\0s\352\1Pn\0\0|\5\0j\23\0d\3\0\203\1\0}\10\0|\10\0d\1\0k\5\0r;\2|\10\0d\4\0007}\10\0|\2\0j\7\0|\5\0|\10\0 \203\1\0\1|\0\0j\0\0j\7\0|\5\0|\10\0\37\203\1\0\1~\5\0Pn\0\0|\2\0j\7\0|\5\0\203\1\0\1q\217\1W|\2\0j\24\0\203\0\0S|\2\0j\1\0d\1\0d\2\0\203\2\0\1|\2\0j\2\0\203\0\0}\t\0|\t\0|\1\0k\5\0r\300\2|\2\0j\1\0d\1\0\203\1\0\1|\2\0j\10\0|\1\0\203\1\0}\n\0t\6\0\203\0\0|\0\0_\0\0|\0\0j\0\0j\7\0|\2\0j\10\0\203\0\0\203\1\0\1|\n\0St\6\0\203\0\0|\0\0_\0\0x=\1t\r\0r\v\4y\31\0|\0\0j\v\0j\f\0|\0\0j\t\0\203\1\0}\5\0Wn/\0\4t\17\0k\n\0r\37\3\1}\7\0\1|\7\0j\20\0d\1\0\31t\21\0k\2\0r\31\3q\317\2n\0\0\202\0\0n\1\0X|\5\0s*\3Pn\0\0|\1\0|\t\0\30}\v\0|\5\0j\23\0d\3\0d\1\0|\v\0\203\3\0}\10\0|\10\0d\1\0k\5\0r\231\3|\10\0d\4\0007}\10\0|\0\0j\0\0j\7\0|\5\0|\10\0\37\203\1\0\1|\t\0r\216\3|\2\0j\7\0|\5\0|\10\0 \203\1\0\1Pq\231\3|\5\0|\10\0 Sn\0\0t\5\0|\5\0\203\1\0}\f\0|\f\0|\1\0k\2\0r\274\3|\t\0\fr\274\3|\5\0S|\f\0|\v\0k\5\0r\361\3|\2\0j\7\0|\5\0|\v\0 \203\1\0\1|\0\0j\0\0j\7\0|\5\0|\v\0\37\203\1\0\1Pn\0\0|\2\0j\7\0|\5\0\203\1\0\1|\t\0|\f\0007}\t\0q\317\2W|\2\0j\24\0\203\0\0Sd\0\0S(\6\0\0\0Ni\0\0\0\0i\2\0\0\0s\1\0\0\0\ni\1\0\0\0R!\0\0\0(\25\0\0\0Rn\0\0\0R\213\0\0\0R\216\0\0\0t\10\0\0\0readlinet\10\0\0\0endswithRz\0\0\0R\32\0\0\0R\204\0\0\0R\217\0\0\0Rl\0\0\0RN\0\0\0RL\0\0\0R>\0\0\0R\214\0\0\0R|\0\0\0R&\0\0\0RE\0\0\0R\34\0\0\0Rx\0\0\0t\4\0\0\0findR\215\0\0\0(\r\0\0\0RS\0\0\0R\221\0\0\0R\223\0\0\0t\5\0\0\0blinet\7\0\0\0buffersR}\0\0\0R>\0\0\0R\224\0\0\0t\2\0\0\0nlR\225\0\0\0R\226\0\0\0R\227\0\0\0R\230\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyR\231\0\0\0\232\1\0\0s\256\0\0\0\0\1\t\1\20\1\22\2\r\1\17\1!\1\f\1\26\1\4\1\6\1\f\2\17\2\r\1\17\1\f\1\6\1\f\1\t\1\3\1\17\1\f\1\6\1\4\1\25\1\17\3\23\1\6\1\7\1\5\1\r\2\20\1\f\1\t\1\3\1\31\1\17\1\23\1\6\1\7\1\6\1\4\1\17\1\f\1\n\1\21\1\24\1\3\1\4\1\21\1\n\3\20\1\f\1\f\1\r\1\17\1\f\1\26\1\4\1\f\1\t\1\3\1\31\1\17\1\23\1\6\1\7\1\6\1\4\1\n\2\25\1\f\1\n\2\24\1\6\1\21\1\4\4\v\1\f\1\23\3\4\1\f\1\21\1\24\1\4\1\r\1\16\2i\0\0\0\0c\2\0\0\0\5\0\0\0\3\0\0\0C\0\0\0sf\0\0\0d\1\0}\2\0g\0\0}\3\0xS\0t\0\0ra\0|\0\0j\1\0\203\0\0}\4\0|\4\0s+\0Pn\0\0|\3\0j\2\0|\4\0\203\1\0\1|\2\0t\3\0|\4\0\203\1\0007}\2\0|\1\0r\17\0|\2\0|\1\0k\5\0r\17\0Pq\17\0q\17\0W|\3\0S(\2\0\0\0Ni\0\0\0\0(\4\0\0\0R\214\0\0\0R\231\0\0\0R|\0\0\0Rz\0\0\0(\5\0\0\0RS\0\0\0t\10\0\0\0sizehintt\5\0\0\0totalRf\0\0\0t\4\0\0\0line(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\t\0\0\0readlines\3\2\0\0s\26\0\0\0\0\1\6\1\6\1\t\1\f\1\6\1\4\1\r\1\20\1\22\1\10\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0|\0\0S(\1\0\0\0N(\0\0\0\0(\1\0\0\0RS\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\10\0\0\0__iter__\22\2\0\0s\2\0\0\0\0\1c\1\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\37\0\0\0|\0\0j\0\0\203\0\0}\1\0|\1\0s\33\0t\1\0\202\1\0n\0\0|\1\0S(\1\0\0\0N(\2\0\0\0R\231\0\0\0t\r\0\0\0StopIteration(\2\0\0\0RS\0\0\0R\241\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\4\0\0\0next\25\2\0\0s\10\0\0\0\0\1\f\1\6\1\t\1(\26\0\0\0RG\0\0\0RH\0\0\0Re\0\0\0Rs\0\0\0R(\0\0\0RI\0\0\0Rt\0\0\0RX\0\0\0Ru\0\0\0Ri\0\0\0t\6\0\0\0closedRZ\0\0\0Rw\0\0\0Rv\0\0\0R/\0\0\0R\204\0\0\0R\212\0\0\0R\217\0\0\0R\231\0\0\0R\242\0\0\0R\243\0\0\0R\245\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyR_\0\0\0\357\0\0\0s(\0\0\0\6\1\6\2\6\1\6\2\t\2\22\1\t\2\22\32\t\2\22\2\t\t\t\7\t\24\t\3\t\v\t\n\fF\fi\f\17\t\3c\3\0\0\0\16\0\0\0\6\0\0\0C\0\0\0s\0\1\0\0|\0\0\\\2\0}\3\0}\4\0d\3\0}\5\0x\306\0t\1\0|\3\0|\4\0d\1\0t\2\0\203\4\0D]\257\0}\6\0|\6\0\\\5\0}\7\0}\10\0}\t\0}\n\0}\v\0d\3\0}\f\0yY\0t\3\0|\7\0|\10\0|\t\0\203\3\0}\f\0|\1\0t\4\0k\t\0rz\0|\f\0j\5\0|\1\0\203\1\0\1n\0\0|\2\0r\220\0|\f\0j\6\0|\2\0\203\1\0\1n\0\0|\f\0j\7\0|\v\0\203\1\0\1|\f\0SWq(\0\4t\10\0k\n\0r\326\0\1}\r\0\1|\r\0}\5\0|\f\0d\3\0k\t\0r\327\0|\f\0j\t\0\203\0\0\1q\327\0q(\0Xq(\0W|\5\0d\3\0k\t\0r\360\0|\5\0\202\1\0n\f\0t\10\0d\2\0\203\1\0\202\1\0d\3\0S(\4\0\0\0sd\2\0\0Connect to *address* and return the socket object.\n\n    Convenience function.  Connect to *address* (a 2-tuple ``(host,\n    port)``) and return the socket object.  Passing the optional\n    *timeout* parameter will set the timeout on the socket instance\n    before attempting to connect.  If no *timeout* is supplied, the\n    global default timeout setting returned by :func:`getdefaulttimeout`\n    is used.  If *source_address* is set it must be a tuple of (host, port)\n    for the socket to bind as a source address before making the connection.\n    An host of '' or port 0 tells the OS to use the default.\n    i\0\0\0\0s!\0\0\0getaddrinfo returns an empty listN(\n\0\0\0RN\0\0\0t\v\0\0\0getaddrinfoRh\0\0\0t\6\0\0\0sockett\27\0\0\0_GLOBAL_DEFAULT_TIMEOUTR7\0\0\0R,\0\0\0R-\0\0\0R&\0\0\0RZ\0\0\0(\16\0\0\0t\7\0\0\0addresst\7\0\0\0timeoutt\16\0\0\0source_addresst\4\0\0\0hostt\4\0\0\0portt\3\0\0\0errt\3\0\0\0rest\2\0\0\0aft\10\0\0\0socktypeRV\0\0\0t\t\0\0\0canonnamet\2\0\0\0saR\t\0\0\0t\1\0\0\0_(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyR\36\0\0\0\35\2\0\0s(\0\0\0\0\16\f\1\6\1\34\1\25\1\6\1\3\1\22\1\f\1\20\1\6\1\20\1\r\1\10\2\17\1\6\1\f\1\25\2\f\1\t\2(<\0\0\0Re\0\0\0t\7\0\0\0_sockett\t\0\0\0functoolsR\1\0\0\0t\5\0\0\0typesR\2\0\0\0t\4\0\0\0_sslt\v\0\0\0ImportErrorRN\0\0\0R\4\0\0\0R\r\0\0\0t\10\0\0\0sslerrorR\16\0\0\0R\17\0\0\0R\20\0\0\0R\21\0\0\0R\22\0\0\0R\23\0\0\0R\24\0\0\0R\25\0\0\0R\26\0\0\0R\27\0\0\0R\30\0\0\0R\31\0\0\0t\2\0\0\0ost\3\0\0\0sysR\5\0\0\0t\t\0\0\0cStringIOR\32\0\0\0t\5\0\0\0errnoRR\0\0\0R\33\0\0\0R\34\0\0\0t\7\0\0\0__all__R\210\0\0\0t\21\0\0\0_get_exports_listR\250\0\0\0RO\0\0\0t\10\0\0\0platformt\5\0\0\0lowert\n\0\0\0startswithR \0\0\0R|\0\0\0R\35\0\0\0t\16\0\0\0_socketmethodsR(\0\0\0RP\0\0\0t\6\0\0\0objectRD\0\0\0RK\0\0\0Rj\0\0\0t\2\0\0\0_mt\1\0\0\0pRG\0\0\0t\1\0\0\0mRQ\0\0\0t\n\0\0\0SocketTypeR_\0\0\0R\251\0\0\0R\36\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/socket.pyt\10\0\0\0<module>-\0\0\0s\222\0\0\0\6\2\f\1\n\1\20\1\20\2\3\1\20\1\r\2\4\2\17\t\20\1L\f\3\1\24\1\r\2\4\2$\2\3\1\24\1\r\1\24\2\3\1\20\1\r\1\n\1\22\1\22\2\f\1\26\3\6\3\30\1\6\1\n\1\n\1\n\1\n\1\n\1\n\1\n\1\n\1\n\1\n\1\n\1\n\1\n\1\n\1\n\1\20\4\f\33\17\1\f\1\6\1\17\2\17\1\20\2\17\1\20\4\f\1\f\2\26\f\26,\t\3\r\1\17\1\t\1\25\1\22\1\24\2\n\2\26\377\0-\t\2\3\1", 4096) = 3805
27308 read(5, "", 4096)                 = 0
27308 close(5)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 stat64("functools", 0xbfffd92c)   = -1 ENOENT (No such file or directory)
27308 open("functools.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("functools.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("functoolsmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("functools.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("functools.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/functools", 0xbfffd92c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/functools.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/functools.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/functoolsmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/functools.py", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=661497, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=4478, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/functools.pyc", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669376, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=6037, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(6, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0s\\\0\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0m\2\0Z\2\0m\3\0Z\3\0\1d\f\0Z\4\0d\r\0Z\5\0e\4\0e\5\0d\7\0\204\2\0Z\6\0e\4\0e\5\0d\10\0\204\2\0Z\7\0d\t\0\204\0\0Z\10\0d\n\0\204\0\0Z\t\0d\v\0S(\16\0\0\0sE\0\0\0functools.py - Tools for working with functions and callable objects\ni\377\377\377\377(\2\0\0\0t\7\0\0\0partialt\6\0\0\0reducet\n\0\0\0__module__t\10\0\0\0__name__t\7\0\0\0__doc__t\10\0\0\0__dict__c\4\0\0\0\5\0\0\0\7\0\0\0C\0\0\0sa\0\0\0x'\0|\2\0D]\37\0}\4\0t\0\0|\0\0|\4\0t\1\0|\1\0|\4\0\203\2\0\203\3\0\1q\7\0Wx0\0|\3\0D](\0}\4\0t\1\0|\0\0|\4\0\203\2\0j\2\0t\1\0|\1\0|\4\0i\0\0\203\3\0\203\1\0\1q1\0W|\0\0S(\1\0\0\0s\6\2\0\0Update a wrapper function to look like the wrapped function\n\n       wrapper is the function to be updated\n       wrapped is the original function\n       assigned is a tuple naming the attributes assigned directly\n       from the wrapped function to the wrapper function (defaults to\n       functools.WRAPPER_ASSIGNMENTS)\n       updated is a tuple naming the attributes of the wrapper that\n       are updated with the corresponding attribute from the wrapped\n       function (defaults to functools.WRAPPER_UPDATES)\n    (\3\0\0\0t\7\0\0\0setattrt\7\0\0\0getattrt\6\0\0\0update(\5\0\0\0t\7\0\0\0wrappert\7\0\0\0wrappedt\10\0\0\0assignedt\7\0\0\0updatedt\4\0\0\0attr(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyt\16\0\0\0update_wrapper\21\0\0\0s\n\0\0\0\0\17\r\1\35\1\r\1&\2c\3\0\0\0\3\0\0\0\10\0\0\0C\0\0\0s\34\0\0\0t\0\0t\1\0d\1\0|\0\0d\2\0|\1\0d\3\0|\2\0\203\1\3S(\4\0\0\0s\213\1\0\0Decorator factory to apply update_wrapper() to a wrapper function\n\n       Returns a decorator that invokes update_wrapper() with the decorated\n       function as the wrapper argument and the arguments to wraps() as the\n       remaining arguments. Default arguments are as for update_wrapper().\n       This is a convenience function to simplify applying partial() to\n       update_wrapper().\n    R\n\0\0\0R\v\0\0\0R\f\0\0\0(\2\0\0\0R\0\0\0\0R\16\0\0\0(\3\0\0\0R\n\0\0\0R\v\0\0\0R\f\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyt\5\0\0\0wraps'\0\0\0s\4\0\0\0\0\v\17\1c\1\0\0\0\6\0\0\0\5\0\0\0C\0\0\0sK\1\0\0i\4\0d\1\0d\2\0\204\0\0f\2\0d\3\0d\4\0\204\0\0f\2\0d\5\0d\6\0\204\0\0f\2\0g\3\0d\7\0006d\5\0d\10\0\204\0\0f\2\0d\7\0d\t\0\204\0\0f\2\0d\1\0d\n\0\204\0\0f\2\0g\3\0d\3\0006d\7\0d\v\0\204\0\0f\2\0d\5\0d\f\0\204\0\0f\2\0d\3\0d\r\0\204\0\0f\2\0g\3\0d\1\0006d\3\0d\16\0\204\0\0f\2\0d\1\0d\17\0\204\0\0f\2\0d\7\0d\20\0\204\0\0f\2\0g\3\0d\5\0006}\1\0t\0\0t\1\0|\0\0\203\1\0\203\1\0t\0\0|\1\0\203\1\0@}\2\0|\2\0s\343\0t\2\0d\21\0\203\1\0\202\1\0n\0\0t\3\0|\2\0\203\1\0}\3\0xU\0|\1\0|\3\0\31D]I\0\\\2\0}\4\0}\5\0|\4\0|\2\0k\7\0r\372\0|\4\0|\5\0_\4\0t\5\0t\6\0|\4\0\203\2\0j\7\0|\5\0_\7\0t\10\0|\0\0|\4\0|\5\0\203\3\0\1q\372\0q\372\0W|\0\0S(\22\0\0\0s6\0\0\0Class decorator that fills in missing ordering methodst\6\0\0\0__gt__c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\27\0\0\0|\0\0|\1\0k\0\0p\25\0|\0\0|\1\0k\2\0\fS(\1\0\0\0N(\0\0\0\0(\2\0\0\0t\4\0\0\0selft\5\0\0\0other(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyt\10\0\0\0<lambda>8\0\0\0s\0\0\0\0t\6\0\0\0__le__c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\26\0\0\0|\0\0|\1\0k\0\0p\25\0|\0\0|\1\0k\2\0S(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\23\0\0\0009\0\0\0s\0\0\0\0t\6\0\0\0__ge__c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\v\0\0\0|\0\0|\1\0k\0\0\fS(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\23\0\0\0:\0\0\0s\0\0\0\0t\6\0\0\0__lt__c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\27\0\0\0|\0\0|\1\0k\1\0\fp\26\0|\0\0|\1\0k\2\0S(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\23\0\0\0;\0\0\0s\0\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\27\0\0\0|\0\0|\1\0k\1\0o\26\0|\0\0|\1\0k\2\0\fS(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\23\0\0\0<\0\0\0s\0\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\v\0\0\0|\0\0|\1\0k\1\0\fS(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\23\0\0\0=\0\0\0s\0\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\27\0\0\0|\0\0|\1\0k\4\0p\25\0|\0\0|\1\0k\2\0\fS(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\23\0\0\0>\0\0\0s\0\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\26\0\0\0|\0\0|\1\0k\4\0p\25\0|\0\0|\1\0k\2\0S(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\23\0\0\0?\0\0\0s\0\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\v\0\0\0|\0\0|\1\0k\4\0\fS(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\23\0\0\0@\0\0\0s\0\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\27\0\0\0|\0\0|\1\0k\5\0\fp\26\0|\0\0|\1\0k\2\0S(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\23\0\0\0A\0\0\0s\0\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\27\0\0\0|\0\0|\1\0k\5\0o\26\0|\0\0|\1\0k\2\0\fS(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\23\0\0\0B\0\0\0s\0\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0S\0\0\0s\v\0\0\0|\0\0|\1\0k\5\0\fS(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\23\0\0\0C\0\0\0s\0\0\0\0s6\0\0\0must define at least one ordering operation: < > <= >=(\t\0\0\0t\3\0\0\0sett\3\0\0\0dirt\n\0\0\0ValueErrort\3\0\0\0maxR\3\0\0\0R\7\0\0\0t\3\0\0\0intR\4\0\0\0R\6\0\0\0(\6\0\0\0t\3\0\0\0clst\7\0\0\0convertt\5\0\0\0rootst\4\0\0\0roott\6\0\0\0opnamet\6\0\0\0opfunc(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyt\16\0\0\0total_ordering5\0\0\0s.\0\0\0\0\2\3\1\f\1\f\1\23\1\f\1\f\1\23\1\f\1\f\1\23\1\f\1\f\1\26\2\34\1\6\1\17\1\f\1\27\1\f\1\t\1\25\1\27\1c\1\0\0\0\2\0\0\0\4\0\0\0\3\0\0\0s \0\0\0d\1\0t\0\0f\1\0\207\0\0f\1\0d\2\0\206\0\0\203\0\0Y}\1\0|\1\0S(\3\0\0\0s,\0\0\0Convert a cmp= funct", 4096) = 4096
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669376, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=6037, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(6, "ion into a key= functiont\1\0\0\0Kc\0\0\0\0\0\0\0\0\2\0\0\0\2\0\0\0s}\0\0\0e\0\0Z\1\0d\0\0g\1\0Z\2\0d\1\0\204\0\0Z\3\0\207\0\0f\1\0d\2\0\206\0\0Z\4\0\207\0\0f\1\0d\3\0\206\0\0Z\5\0\207\0\0f\1\0d\4\0\206\0\0Z\6\0\207\0\0f\1\0d\5\0\206\0\0Z\7\0\207\0\0f\1\0d\6\0\206\0\0Z\10\0\207\0\0f\1\0d\7\0\206\0\0Z\t\0d\10\0\204\0\0Z\n\0RS(\t\0\0\0t\3\0\0\0objc\2\0\0\0\3\0\0\0\2\0\0\0W\0\0\0s\r\0\0\0|\1\0|\0\0_\0\0d\0\0S(\1\0\0\0N(\1\0\0\0R$\0\0\0(\3\0\0\0R\21\0\0\0R$\0\0\0t\4\0\0\0args(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyt\10\0\0\0__init__T\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0\23\0\0\0s\31\0\0\0\210\0\0|\0\0j\0\0|\1\0j\0\0\203\2\0d\1\0k\0\0S(\2\0\0\0Ni\0\0\0\0(\1\0\0\0R$\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\1\0\0\0t\5\0\0\0mycmp(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\26\0\0\0V\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0\23\0\0\0s\31\0\0\0\210\0\0|\0\0j\0\0|\1\0j\0\0\203\2\0d\1\0k\4\0S(\2\0\0\0Ni\0\0\0\0(\1\0\0\0R$\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\1\0\0\0R'\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\20\0\0\0X\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0\23\0\0\0s\31\0\0\0\210\0\0|\0\0j\0\0|\1\0j\0\0\203\2\0d\1\0k\2\0S(\2\0\0\0Ni\0\0\0\0(\1\0\0\0R$\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\1\0\0\0R'\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyt\6\0\0\0__eq__Z\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0\23\0\0\0s\31\0\0\0\210\0\0|\0\0j\0\0|\1\0j\0\0\203\2\0d\1\0k\1\0S(\2\0\0\0Ni\0\0\0\0(\1\0\0\0R$\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\1\0\0\0R'\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\24\0\0\0\\\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0\23\0\0\0s\31\0\0\0\210\0\0|\0\0j\0\0|\1\0j\0\0\203\2\0d\1\0k\5\0S(\2\0\0\0Ni\0\0\0\0(\1\0\0\0R$\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\1\0\0\0R'\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR\25\0\0\0^\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0\23\0\0\0s\31\0\0\0\210\0\0|\0\0j\0\0|\1\0j\0\0\203\2\0d\1\0k\3\0S(\2\0\0\0Ni\0\0\0\0(\1\0\0\0R$\0\0\0(\2\0\0\0R\21\0\0\0R\22\0\0\0(\1\0\0\0R'\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyt\6\0\0\0__ne__`\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\2\0\0\0S\0\0\0s\20\0\0\0t\0\0d\1\0\203\1\0\202\1\0d\0\0S(\2\0\0\0Ns\24\0\0\0hash not implemented(\1\0\0\0t\t\0\0\0TypeError(\1\0\0\0R\21\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyt\10\0\0\0__hash__b\0\0\0s\2\0\0\0\0\1(\v\0\0\0R\3\0\0\0R\2\0\0\0t\t\0\0\0__slots__R&\0\0\0R\26\0\0\0R\20\0\0\0R(\0\0\0R\24\0\0\0R\25\0\0\0R)\0\0\0R+\0\0\0(\0\0\0\0(\1\0\0\0R'\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyR#\0\0\0R\0\0\0s\22\0\0\0\6\1\t\1\t\2\17\2\17\2\17\2\17\2\17\2\17\2(\1\0\0\0t\6\0\0\0object(\2\0\0\0R'\0\0\0R#\0\0\0(\0\0\0\0(\1\0\0\0R'\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyt\n\0\0\0cmp_to_keyP\0\0\0s\4\0\0\0\0\2\34\22N(\3\0\0\0s\n\0\0\0__module__s\10\0\0\0__name__s\7\0\0\0__doc__(\1\0\0\0s\10\0\0\0__dict__(\n\0\0\0R\4\0\0\0t\n\0\0\0_functoolsR\0\0\0\0R\1\0\0\0t\23\0\0\0WRAPPER_ASSIGNMENTSt\17\0\0\0WRAPPER_UPDATESR\16\0\0\0R\17\0\0\0R\"\0\0\0R.\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/functools.pyt\10\0\0\0<module>\2\0\0\0s\22\0\0\0\6\10\26\5\6\1\6\3\3\1\f\24\3\1\f\f\t\33", 4096) = 1941
27308 read(6, "", 4096)                 = 0
27308 close(6)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 close(5)                          = 0
27308 stat64("_ssl", 0xbfffd92c)        = -1 ENOENT (No such file or directory)
27308 open("_ssl.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("_ssl.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("_sslmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("_ssl.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("_ssl.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/_ssl", 0xbfffd92c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_ssl.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_ssl.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_sslmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_ssl.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_ssl.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/plat-i386-linux-gnu/_ssl", 0xbfffd92c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_ssl.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_ssl.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_sslmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_ssl.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_ssl.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/lib-tk/_ssl", 0xbfffd92c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/_ssl.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/_ssl.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/_sslmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/_ssl.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/_ssl.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/lib-dynload/_ssl", 0xbfffd92c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/_ssl.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=662302, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=192, st_size=94616, st_atime=2017/04/26-21:00:32, st_mtime=2015/04/02-16:48:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/lib-dynload/_ssl.i386-linux-gnu.so", O_RDONLY|O_CLOEXEC) = 6
27308 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000H\0\0004\0\0\0\210m\1\0\0\0\0\0004\0 \0\7\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0l9\1\0l9\1\0\5\0\0\0\0\20\0\0\1\0\0\0\260>\1\0\260N\1\0\260N\1\0\324-\0\0\f.\0\0\6\0\0\0\0\20\0\0\2\0\0\0\274>\1\0\274N\1\0\274N\1\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345td\30\0\1\0\30\0\1\0\30\0\1\0\f\2\0\0\f\2\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\260>\1\0\260N\1\0\260N\1\0P\1\0\0P\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\17\3514\330\311\253@\276\301\217\246\375\376\274l7\336\251\320\245\7\0\0\0\346\0\0\0\2\0\0\0\6\0\0\0\210\0 \1\0\305@\t\0\0\0\0\0\0\0\0\346\0\0\0\347\0\0\0\350\0\0\0\352\0\0\0\353\0\0\0\353\323\357\16+\212\220s\330qX\34CE\325\354\271\215\361\16\273\343\222|\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\347\7\0\0\0\0\0\0\0\0\0\0\22\0\0\0d\10\0\0\0\0\0\0\0\0\0\0\22\0\0\0\2\5\0\0\0\0\0\0\0\0\0\0\20\0\0\0008\f\0\0\0\0\0\0\0\0\0\0\22\0\0\0\306\4\0\0\0\0\0\0\0\0\0\0\20\0\0\0\214\r\0\0\0\0\0\0\0\0\0\0\22\0\0\0\216\3\0\0\0\0\0\0\0\0\0\0", 512) = 512
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=662302, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=192, st_size=94616, st_atime=2017/04/26-21:00:32, st_mtime=2015/04/02-16:48:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 mmap2(NULL, 97468, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7a5d000
27308 mmap2(0xb7a71000, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x13000) = 0xb7a71000
27308 close(6)                          = 0
27308 open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=1072777, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=200, st_size=101810, st_atime=2017/04/26-21:18:06, st_mtime=2017/04/26-21:18:06, st_ctime=2017/04/26-21:18:06}) = 0
27308 mmap2(NULL, 101810, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb79db000
27308 close(6)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libssl.so.1.0.0", O_RDONLY|O_CLOEXEC) = 6
27308 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\200\261\0\0004\0\0\0\330\364\5\0\0\0\0\0004\0 \0\7\0(\0\34\0\33\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0008\241\5\0008\241\5\0\5\0\0\0\0\20\0\0\1\0\0\0008\247\5\0008\267\5\0008\267\5\0hL\0\0\0M\0\0\6\0\0\0\0\20\0\0\2\0\0\0\264\276\5\0\264\316\5\0\264\316\5\0\0\1\0\0\0\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345td$f\4\0$f\4\0$f\4\0L\22\0\0L\22\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td8\247\5\0008\267\5\0008\267\5\0\310\30\0\0\310\30\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\351\0160\22\364\rv\376\205\230Mh \2L\205\323Je\337\7\1\0\0k\1\0\0@\0\0\0\v\0\0\0\30\f\0062\33i5\2\7\0\2\4\206\0\200\31D\1\21\10\"\26$\10H\241\370\32\10(\0\314!\0\0\0\10\0\0\1\t\20\22\"\10#\200 \211 \"\"\4\2\1L1\2\230\n\\Ho\201X\0\3010#\0\313\1\0 \202\10\24HP\210 \0\0\4b>\0\6\0\230\20@\201q\212\212\262\21\0\"b\200\0\4\10B\4\211\10\211@\1\304\0\0031D\2@\24\241D\24$a\300\204(\0\0\2\200\20\220\200@\23\232\4P\200\6\0\210\342\0\210$\20\201\21\"\0`\0B&,\341\32\10\4\0\tC\200m\336\2\0\220#\0\0\17\0\4\0\307\"\264@D@", 512) = 512
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=1054070, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=768, st_size=391480, st_atime=2017/04/26-19:26:28, st_mtime=2015/12/04-13:31:32, st_ctime=2016/02/02-19:10:28}) = 0
27308 mmap2(NULL, 394296, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb797a000
27308 mmap2(0xb79d5000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x5a000) = 0xb79d5000
27308 close(6)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libcrypto.so.1.0.0", O_RDONLY|O_CLOEXEC) = 6
27308 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@\177\3\0004\0\0\0008\350\34\0\0\0\0\0004\0 \0\7\0(\0\34\0\33\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\210\33\0\224\210\33\0\5\0\0\0\0\20\0\0\1\0\0\0\264\212\33\0\264\232\33\0\264\232\33\0M\\\1\0\374\220\1\0\6\0\0\0\0\20\0\0\2\0\0\0\250z\34\0\250\212\34\0\250\212\34\0\0\1\0\0\0\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345td\210f\24\0\210f\24\0\210f\24\0\214\215\0\0\214\215\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\264\212\33\0\264\232\33\0\264\232\33\0L\365\0\0L\365\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0`N\nA>\243\21*\233_Q4U\376\374\21@\217\346_\5\10\0\0l\0\0\0\0\4\0\0\17\0\0\0\1\4\31\205D\0\200\200`\300\4\0\1\f\4\0\201\0\0\0\30\206\4\210\20\0a\300\0\0\0\0\5\204\3\0\200$`\21F\t\fH\0\3\200\24\0\0\212\4\211\3A\204\10\0\4\20\0\2a9\10\0\0\200\0\0\0\0\f\20t\205\262\fD\0\0\22\0\5\t@\300@\10\205\f\200\4P\20@ \1\0@(\f@\v\10T\211\2\0\f\1\0@\0\0\200\21S,\234\205\0 \f\10\350\2N\0\0\0\0\4@\0\0\0\6\240\2\0\0\30\r\5\0f\0b\260\2\2\0\260\0\4\0\0042H\0\0\0\0\340\0\0\1\1#\4\210\4\0\10\2\10\0\0\200\2 E\202", 512) = 512
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=1051925, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=3704, st_size=1895576, st_atime=2017/04/26-19:25:17, st_mtime=2015/12/04-13:31:31, st_ctime=2016/02/02-19:10:28}) = 0
27308 mmap2(NULL, 1911728, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb77a7000
27308 mmap2(0xb7960000, 94208, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x1b8000) = 0xb7960000
27308 mmap2(0xb7977000, 11184, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7977000
27308 close(6)                          = 0
27308 mprotect(0xb7960000, 65536, PROT_READ) = 0
27308 mprotect(0xb79d5000, 8192, PROT_READ) = 0
27308 mprotect(0xb7a71000, 4096, PROT_READ) = 0
27308 munmap(0xb79db000, 101810)        = 0
27308 brk(0x84d6000)                    = 0x84d6000
27308 close(5)                          = 0
27308 close(4)                          = 0
27308 stat64("urlparse", 0xbfffdcdc)    = -1 ENOENT (No such file or directory)
27308 open("urlparse.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("urlparse.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("urlparsemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("urlparse.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("urlparse.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/urlparse", 0xbfffdcdc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/urlparse.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/urlparse.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/urlparsemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/urlparse.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661617, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=15164, st_atime=2017/02/23-18:09:09, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/urlparse.pyc", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=707533, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=14465, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(5, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\27\0\0\0@\0\0\0s\305\2\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\3\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0g\10\0Z\2\0d\v\0d\f\0d\r\0d\16\0d\17\0d\20\0d\21\0d\22\0d\23\0d\24\0d\25\0d\26\0d\27\0d\30\0d\31\0d\32\0d\33\0g\21\0Z\3\0d\v\0d\f\0d\r\0d\16\0d\34\0d\17\0d\20\0d\21\0d\24\0d\22\0d\23\0d\35\0d\25\0d\26\0d\27\0d\36\0d\30\0d\32\0d\33\0d\31\0d\37\0d \0d!\0g\27\0Z\4\0d\v\0d\"\0d\25\0d\f\0d\17\0d\22\0d\23\0d\26\0d\27\0d#\0d$\0d\24\0d\30\0d\31\0d%\0g\17\0Z\5\0d\r\0d\"\0d&\0d'\0d\34\0d\20\0d\17\0d\35\0d#\0d$\0g\n\0Z\6\0d\f\0d\20\0d\17\0d\22\0d\23\0d\24\0d\r\0d\26\0d\27\0d#\0d$\0d\30\0g\f\0Z\7\0d\v\0d\"\0d\f\0d\r\0d'\0d\16\0d\20\0d\22\0d\23\0d\35\0d\21\0d\25\0d\30\0g\r\0Z\10\0d(\0Z\t\0d)\0Z\n\0i\0\0Z\v\0d*\0\204\0\0Z\f\0d+\0e\r\0f\1\0d,\0\204\0\0\203\0\0YZ\16\0d\1\0d-\0l\17\0m\20\0Z\20\0\1d.\0e\20\0d.\0d/\0\203\2\0e\16\0f\2\0d0\0\204\0\0\203\0\0YZ\21\0d1\0e\20\0d1\0d2\0\203\2\0e\16\0f\2\0d3\0\204\0\0\203\0\0YZ\22\0d\30\0e\23\0d4\0\204\2\0Z\24\0d5\0\204\0\0Z\25\0d6\0d7\0\204\1\0Z\26\0d\30\0e\23\0d8\0\204\2\0Z\27\0d9\0\204\0\0Z\30\0d:\0\204\0\0Z\31\0e\23\0d;\0\204\1\0Z\32\0d<\0\204\0\0Z\33\0y\10\0e\34\0\1Wn\32\0\4e\35\0k\n\0re\2\1\1\1d=\0\204\0\0Z\36\0n\n\0Xd>\0\204\0\0Z\36\0d?\0Z\37\0e \0d@\0\204\0\0e\37\0D\203\1\0\203\1\0Z!\0e\1\0j\"\0dA\0\203\1\0Z#\0dB\0\204\0\0Z$\0d6\0d6\0dC\0\204\2\0Z%\0d6\0d6\0dD\0\204\2\0Z&\0d\2\0S(E\0\0\0sc\4\0\0Parse (absolute and relative) URLs.\n\nurlparse module is based upon the following RFC specifications.\n\nRFC 3986 (STD66): \"Uniform Resource Identifiers\" by T. Berners-Lee, R. Fielding\nand L.  Masinter, January 2005.\n\nRFC 2732 : \"Format for Literal IPv6 Addresses in URL's by R.Hinden, B.Carpenter\nand L.Masinter, December 1999.\n\nRFC 2396:  \"Uniform Resource Identifiers (URI)\": Generic Syntax by T.\nBerners-Lee, R. Fielding, and L. Masinter, August 1998.\n\nRFC 2368: \"The mailto URL scheme\", by P.Hoffman , L Masinter, J. Zwinski, July 1998.\n\nRFC 1808: \"Relative Uniform Resource Locators\", by R. Fielding, UC Irvine, June\n1995.\n\nRFC 1738: \"Uniform Resource Locators (URL)\" by T. Berners-Lee, L. Masinter, M.\nMcCahill, December 1994\n\nRFC 3986 is considered the current standard and any future changes to\nurlparse module should conform with it.  The urlparse module is\ncurrently not entirely compliant with this RFC due to defacto\nscenarios for parsing, and for backward compatibility purposes, some\nparsing quirks from older RFCs are retained. The testcases in\ntest_urlparse.py provides a good indicator of parsing behavior.\n\ni\377\377\377\377Nt\10\0\0\0urlparset\n\0\0\0urlunparset\7\0\0\0urljoint\t\0\0\0urldefragt\10\0\0\0urlsplitt\n\0\0\0urlunsplitt\10\0\0\0parse_qst\t\0\0\0parse_qslt\3\0\0\0ftpt\4\0\0\0httpt\6\0\0\0gophert\4\0\0\0nntpt\4\0\0\0imapt\4\0\0\0waist\4\0\0\0filet\5\0\0\0httpst\5\0\0\0shttpt\3\0\0\0mmst\10\0\0\0prosperot\4\0\0\0rtspt\5\0\0\0rtsput\0\0\0\0t\4\0\0\0sftpt\3\0\0\0svns\7\0\0\0svn+ssht\6\0\0\0telnett\5\0\0\0snewst\5\0\0\0rsynct\3\0\0\0nfst\3\0\0\0gits\7\0\0\0git+ssht\3\0\0\0hdlt\3\0\0\0sipt\4\0\0\0sipst\3\0\0\0telt\6\0\0\0mailtot\4\0\0\0newssA\0\0\0abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-.i\24\0\0\0c\0\0\0\0\0\0\0\0\1\0\0\0C\0\0\0s\16\0\0\0t\0\0j\1\0\203\0\0\1d\1\0S(\2\0\0\0s\26\0\0\0Clear the parse cache.N(\2\0\0\0t\f\0\0\0_parse_cachet\5\0\0\0clear(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyt\v\0\0\0clear_cacheD\0\0\0s\2\0\0\0\0\2t\v\0\0\0ResultMixinc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sJ\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0d\1\0\204\0\0\203\1\0Z\4\0e\3\0d\2\0\204\0\0\203\1\0Z\5\0e\3\0d\3\0\204\0\0\203\1\0Z\6\0e\3\0d\4\0\204\0\0\203\1\0Z\7\0RS(\5\0\0\0s-\0\0\0Shared methods for the parsed result objects.c\1\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sX\0\0\0|\0\0j\0\0}\1\0d\1\0|\1\0k\6\0rT\0|\1\0j\1\0d\1\0d\2\0\203\2\0d\3\0\31}\2\0d\4\0|\2\0k\6\0rP\0|\2\0j\2\0d\4\0d\2\0\203\2\0d\3\0\31}\2\0n\0\0|\2\0Sd\0\0S(\5\0\0\0Nt\1\0\0\0@i\1\0\0\0i\0\0\0\0t\1\0\0\0:(\4\0\0\0t\6\0\0\0netloct\6\0\0\0rsplitt\5\0\0\0splitt\4\0\0\0None(\3\0\0\0t\4\0\0\0selfR)\0\0\0t\10\0\0\0userinfo(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyt\10\0\0\0usernameL\0\0\0s\16\0\0\0\0\2\t\1\f\1\26\1\f\1\31\1\4\1c\1\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sR\0\0\0|\0\0j\0\0}\1\0d\1\0|\1\0k\6\0rN\0|\1\0j\1\0d\1\0d\2\0\203\2\0d\3\0\31}\2\0d\4\0|\2\0k\6\0rN\0|\2\0j\2\0d\4\0d\2\0\203\2\0d\2\0\31Sn\0\0d\0\0S(\5\0\0\0NR'\0\0\0i\1\0\0\0i\0\0\0\0R(\0\0\0(\4\0\0\0R)\0\0\0R*\0\0\0R+\0\0\0R,\0\0\0(\3\0\0\0R-\0\0\0R)\0\0\0R.\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyt\10\0\0\0passwordV\0\0\0s\f\0\0\0\0\2\t\1\f\1\26\1\f\1\27\1c\1\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\212\0\0\0|\0\0j\0\0j\1\0d\1\0\203\1\0d\2\0\31}\1\0d\3\0|\1\0k\6\0rI\0d\4\0|\1\0k\6\0rI\0|\1\0j\1\0d\4\0\203\1\0d\5\0\31d\6\0\37j\2\0\203\0\0Sd\7\0|\1\0k\6\0rl\0|\1\0j\1\0d\7\0\203\1\0d\5\0\31j\2\0\203\0\0S|\1\0d\10\0k\2\0r|\0d\0\0S|\1\0j\2\0\203\0\0Sd\0\0S(\t\0\0\0NR'\0\0\0i\377\377\377\377t\1\0\0\0[t\1\0\0\0]i\0\0\0\0i\1\0\0\0R(\0\0\0R\25\0\0\0(\4\0\0\0R)\0\0\0R+\0\0\0t\5\0\0\0lowerR,\0\0\0(\2\0\0\0R-\0\0\0R)\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyt\10\0\0\0hostname_\0\0\0s\20\0\0\0\0\2\26\1\30\1\33\1\f\1\27\1\f\1\4\2c\1\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\201\0\0\0|\0\0j\0\0j\1\0d\1\0\203\1\0d\2\0\31j\1\0d\3\0\203\1\0d\2\0\31}\1\0d\4\0|\1\0k\6\0r}\0|\1\0j\1\0d\4\0\203\1\0d\5\0\31}\2\0|\2\0r}\0t\2\0|\2\0d\6\0\203\2\0}\2\0d\7\0|\2\0\4\3k\1\0on\0d\10\0k\1\0n\2\0\2\1rz\0|\2\0Sq}\0n\0\0d\0\0S(\t\0\0\0NR'\0\0\0i\377\377\377\377R2\0\0\0R(\0\0\0i\1\0\0\0i\n\0\0\0i\0\0\0\0i\377\377\0\0(\4\0\0\0R)\0\0\0R+\0\0\0t\3\0\0\0intR,\0\0\0(\3\0\0\0R-\0\0\0R)\0\0\0t\4\0\0\0port(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR6\0\0\0k\0\0\0s\20\0\0\0\0\2#\1\f\1\23\1\6\1\17\2\34\1\n\1(\10\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__t\7\0\0\0__doc__t\10\0\0\0propertyR/\0\0\0R0\0\0\0R4\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR&\0\0\0I\0\0\0s\n\0\0\0\6\1\6\2\17\n\17\t\17\f(\1\0\0\0t\n\0\0\0namedtuplet\v\0\0\0SplitResults!\0\0\0scheme netloc p", 4096) = 4096
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=707533, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=14465, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 read(5, "ath query fragmentc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\27\0\0\0e\0\0Z\1\0d\1\0Z\2\0d\0\0\204\0\0Z\3\0RS(\2\0\0\0c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0N(\1\0\0\0R\5\0\0\0(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyt\6\0\0\0geturl}\0\0\0s\2\0\0\0\0\1(\0\0\0\0(\4\0\0\0R7\0\0\0R8\0\0\0t\t\0\0\0__slots__R=\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR<\0\0\0y\0\0\0s\4\0\0\0\6\2\6\2t\v\0\0\0ParseResults(\0\0\0scheme netloc path params query fragmentc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\27\0\0\0e\0\0Z\1\0d\1\0Z\2\0d\0\0\204\0\0Z\3\0RS(\2\0\0\0c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0N(\1\0\0\0R\1\0\0\0(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR=\0\0\0\205\0\0\0s\2\0\0\0\0\1(\0\0\0\0(\4\0\0\0R7\0\0\0R8\0\0\0R>\0\0\0R=\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR?\0\0\0\201\0\0\0s\4\0\0\0\6\2\6\2c\3\0\0\0\10\0\0\0\7\0\0\0C\0\0\0ss\0\0\0t\0\0|\0\0|\1\0|\2\0\203\3\0}\3\0|\3\0\\\5\0}\1\0}\4\0}\0\0}\5\0}\6\0|\1\0t\1\0k\6\0rT\0d\1\0|\0\0k\6\0rT\0t\2\0|\0\0\203\1\0\\\2\0}\0\0}\7\0n\6\0d\2\0}\7\0t\3\0|\1\0|\4\0|\0\0|\7\0|\5\0|\6\0\203\6\0S(\3\0\0\0s#\1\0\0Parse a URL into 6 components:\n    <scheme>://<netloc>/<path>;<params>?<query>#<fragment>\n    Return a 6-tuple: (scheme, netloc, path, params, query, fragment).\n    Note that we don't break the components up in smaller bits\n    (e.g. netloc is a single string) and we don't expand % escapes.t\1\0\0\0;R\25\0\0\0(\4\0\0\0R\4\0\0\0t\v\0\0\0uses_paramst\f\0\0\0_splitparamsR?\0\0\0(\10\0\0\0t\3\0\0\0urlt\6\0\0\0schemet\17\0\0\0allow_fragmentst\5\0\0\0tupleR)\0\0\0t\5\0\0\0queryt\10\0\0\0fragmentt\6\0\0\0params(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR\0\0\0\0\211\0\0\0s\f\0\0\0\0\6\22\1\25\1\30\1\25\2\6\1c\1\0\0\0\2\0\0\0\4\0\0\0C\0\0\0se\0\0\0d\1\0|\0\0k\6\0r@\0|\0\0j\0\0d\2\0|\0\0j\1\0d\1\0\203\1\0\203\2\0}\1\0|\1\0d\3\0k\0\0rO\0|\0\0d\4\0f\2\0Sn\17\0|\0\0j\0\0d\2\0\203\1\0}\1\0|\0\0|\1\0 |\0\0|\1\0d\5\0\27\37f\2\0S(\6\0\0\0Nt\1\0\0\0/R@\0\0\0i\0\0\0\0R\25\0\0\0i\1\0\0\0(\2\0\0\0t\4\0\0\0findt\5\0\0\0rfind(\2\0\0\0RC\0\0\0t\1\0\0\0i(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyRB\0\0\0\227\0\0\0s\f\0\0\0\0\1\f\1\33\1\f\1\r\2\17\1i\0\0\0\0c\2\0\0\0\5\0\0\0\4\0\0\0C\0\0\0sb\0\0\0t\0\0|\0\0\203\1\0}\2\0x>\0d\1\0D]6\0}\3\0|\0\0j\1\0|\3\0|\1\0\203\2\0}\4\0|\4\0d\2\0k\5\0r\23\0t\2\0|\2\0|\4\0\203\2\0}\2\0q\23\0q\23\0W|\0\0|\1\0|\2\0!|\0\0|\2\0\37f\2\0S(\3\0\0\0Ns\3\0\0\0/?#i\0\0\0\0(\3\0\0\0t\3\0\0\0lenRK\0\0\0t\3\0\0\0min(\5\0\0\0RC\0\0\0t\5\0\0\0startt\5\0\0\0delimt\1\0\0\0ct\6\0\0\0wdelim(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyt\f\0\0\0_splitnetloc\240\0\0\0s\f\0\0\0\0\1\f\1\r\1\22\1\f\1\26\1c\3\0\0\0\f\0\0\0\6\0\0\0C\0\0\0s\353\2\0\0t\0\0|\2\0\203\1\0}\2\0|\0\0|\1\0|\2\0t\1\0|\0\0\203\1\0t\1\0|\1\0\203\1\0f\5\0}\3\0t\2\0j\3\0|\3\0d\16\0\203\2\0}\4\0|\4\0rI\0|\4\0St\5\0t\2\0\203\1\0t\6\0k\5\0re\0t\7\0\203\0\0\1n\0\0d\1\0\4}\5\0\4}\6\0}\7\0|\0\0j\10\0d\2\0\203\1\0}\10\0|\10\0d\3\0k\4\0r\n\2|\0\0|\10\0 d\4\0k\2\0r\235\1|\0\0|\10\0 j\t\0\203\0\0}\1\0|\0\0|\10\0d\5\0\27\37}\0\0|\0\0d\6\0 d\7\0k\2\0r#\1t\n\0|\0\0d\6\0\203\2\0\\\2\0}\5\0}\0\0d\10\0|\5\0k\6\0r\371\0d\t\0|\5\0k\7\0s\21\1d\t\0|\5\0k\6\0r#\1d\10\0|\5\0k\7\0r#\1t\v\0d\n\0\203\1\0\202\1\0q#\1n\0\0|\2\0rP\1d\v\0|\0\0k\6\0rP\1|\0\0j\f\0d\v\0d\5\0\203\2\0\\\2\0}\0\0}\7\0n\0\0d\f\0|\0\0k\6\0rw\1|\0\0j\f\0d\f\0d\5\0\203\2\0\\\2\0}\0\0}\6\0n\0\0t\r\0|\1\0|\5\0|\0\0|\6\0|\7\0\203\5\0}\t\0|\t\0t\2\0|\3\0<|\t\0Sxj\0|\0\0|\10\0 D]\26\0}\n\0|\n\0t\16\0k\7\0r\250\1Pq\250\1q\250\1W|\0\0|\10\0d\5\0\27\37}\v\0|\v\0\fs\355\1t\17\0d\r\0\204\0\0|\v\0D\203\1\0\203\1\0r\n\2|\0\0|\10\0 j\t\0\203\0\0|\v\0\2}\1\0}\0\0q\n\2n\0\0|\0\0d\6\0 d\7\0k\2\0rq\2t\n\0|\0\0d\6\0\203\2\0\\\2\0}\5\0}\0\0d\10\0|\5\0k\6\0rG\2d\t\0|\5\0k\7\0s_\2d\t\0|\5\0k\6\0rq\2d\10\0|\5\0k\7\0rq\2t\v\0d\n\0\203\1\0\202\1\0qq\2n\0\0|\2\0r\236\2d\v\0|\0\0k\6\0r\236\2|\0\0j\f\0d\v\0d\5\0\203\2\0\\\2\0}\0\0}\7\0n\0\0d\f\0|\0\0k\6\0r\305\2|\0\0j\f\0d\f\0d\5\0\203\2\0\\\2\0}\0\0}\6\0n\0\0t\r\0|\1\0|\5\0|\0\0|\6\0|\7\0\203\5\0}\t\0|\t\0t\2\0|\3\0<|\t\0S(\17\0\0\0s\22\1\0\0Parse a URL into 5 components:\n    <scheme>://<netloc>/<path>?<query>#<fragment>\n    Return a 5-tuple: (scheme, netloc, path, query, fragment).\n    Note that we don't break the components up in smaller bits\n    (e.g. netloc is a single string) and we don't expand % escapes.R\25\0\0\0R(\0\0\0i\0\0\0\0R\t\0\0\0i\1\0\0\0i\2\0\0\0s\2\0\0\0//R1\0\0\0R2\0\0\0s\20\0\0\0Invalid IPv6 URLt\1\0\0\0#t\1\0\0\0?c\1\0\0\0\2\0\0\0\3\0\0\0s\0\0\0s\33\0\0\0|\0\0]\21\0}\1\0|\1\0d\0\0k\7\0V\1q\3\0d\1\0S(\2\0\0\0t\n\0\0\0000123456789N(\0\0\0\0(\2\0\0\0t\2\0\0\0.0RR\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pys\t\0\0\0<genexpr>\316\0\0\0s\2\0\0\0\6\0N(\20\0\0\0t\4\0\0\0boolt\4\0\0\0typeR#\0\0\0t\3\0\0\0getR,\0\0\0RN\0\0\0t\16\0\0\0MAX_CACHE_SIZER%\0\0\0RK\0\0\0R3\0\0\0RT\0\0\0t\n\0\0\0ValueErrorR+\0\0\0R<\0\0\0t\f\0\0\0scheme_charst\3\0\0\0any(\f\0\0\0RC\0\0\0RD\0\0\0RE\0\0\0t\3\0\0\0keyt\6\0\0\0cachedR)\0\0\0RG\0\0\0RH\0\0\0RM\0\0\0t\1\0\0\0vRR\0\0\0t\4\0\0\0rest(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR\4\0\0\0\250\0\0\0sV\0\0\0\0\6\f\1!\1\22\1\6\1\4\1\22\1\n\1\16\1\17\1\f\1\20\1\20\1\16\1\20\1\25\1\30\1\30\1\22\1\22\1\33\1\f\1\33\1\30\1\n\1\4\1\21\1\f\1\10\4\16\1\35\2\35\2\20\1\25\1\30\1\30\1\22\1\22\1\33\1\f\1\33\1\30\1\n\1c\1\0\0\0\7\0\0\0\6\0\0\0C\0\0\0sJ\0\0\0|\0\0\\\6\0}\1\0}\2\0}\3\0}\4\0}\5\0}\6\0|\4\0r1\0d\1\0|\3\0|\4\0f\2\0\26}\3\0n\0\0t\0\0|\1\0|\2\0|\3\0|\5\0|\6\0f\5\0\203\1\0S(\2\0\0\0s\372\0\0\0Put a parsed URL back together again.  This may result in a\n    slightly different, but equivalent URL, if the URL that was parsed\n    originally had redundant delimiters, e.g. a ? with an empty query\n    (the draft states that these are equivalent).s\5\0\0\0%s;%s(\1\0\0\0R\5\0\0\0(\7\0\0\0t\4\0\0\0dataRD\0\0\0R)\0\0\0RC\0\0\0RI\0\0\0RG\0\0\0RH\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR\1\0\0\0\337\0\0\0s\10\0\0\0\0\5\30\1\6\1\23\1c\1\0\0\0\6\0\0\0\5\0\0\0C\0\0\0s\300\0\0\0|\0\0\\\5\0}\1\0}\2\0}\3\0}\4\0}\5\0|\2\0s=\0|\1\0rw\0|\1\0t\0\0k\6\0rw\0|\3\0d\1\0 d\2\0k\3\0rw\0|\3\0r`\0|\3\0d\3\0 d\4\0k\3\0r`\0d\4\0|\3\0\27}\3\0n\0\0d\2\0|\2\0pl\0d\5\0\27|\3\0\27}\3\0n\0\0|\1\0r\216\0|\1\0d\6\0\27|\3\0\27}\3\0n\0\0|\4\0r\245\0|\3\0d\7\0\27|\4\0\27}\3\0n\0\0|\5\0r\274\0|\3\0d\10\0\27|\5\0\27}\3\0n\0\0|\3\0S(\t\0\0\0sk\1\0\0Combine the elements of a tuple as returned by urlsplit() into a\n    complete URL as a string. The data argument can be any five-item iterable.\n    This may result in a slightly different, but equivalent URL, if the URL that\n    was parsed originally had unnecessary delimiters (for example, a ? with an\n    empty query; the RFC states that these are equivalent).i\2\0\0\0s\2\0\0\0//i\1\0\0\0RJ\0\0\0R\25\0\0\0R(\0\0\0RV\0\0\0RU\0\0\0(\1\0\0\0t\v\0\0\0uses_netloc(\6\0\0\0Rd\0\0\0RD\0\0\0R)\0\0\0RC\0\0\0RG\0\0\0RH\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR\5\0\0\0\351\0\0\0s\30\0\0\0\0\6\25\1(\1\26\0\r\1\27\1\6\1\21\1\6\1\21\1\6\1\21\1c\3\0\0\0\22\0\0\0\7\0\0\0C\0\0\0sh\2\0\0|\0\0s\n\0|\1\0S|\1\0s\24\0|\0\0St\0\0|\0\0d\1\0|\2\0\203\3\0\\\6\0}\3\0}\4\0}\5\0}\6\0}\7\0}\10\0t\0\0|\1\0|\3\0|\2\0\203\3\0\\\6\0}\t\0}\n\0}\v\0}\f\0}\r\0}\16\0|\t\0|\3\0k\3\0st\0|\t\0t\1\0k\7\0rx\0|\1\0S|\t\0t\2\0k\6\0r\257\0|\n\0r\246\0t\3\0|\t\0|\n\0|\v\0|\f\0|\r\0|\16\0f\6\0\203\1\0S|\4\0}\n\0n\0\0|\v\0d\2\0 d\3\0k\2\0r\333\0t\3\0|\t\0|\n\0|\v\0|\f\0|\r\0|\16\0f\6\0\203\1\0S|\v\0\fr \1|\f\0\fr \1|\5\0}\v\0|\6\0}\f\0|\r\0s\4\1|\7\0}\r\0n\0\0t\3\0|\t\0|\n\0|\v\0|\f\0|\r\0|\16\0f\6\0\203\1\0S|\5\0j\4\0d\3\0\203\1\0d\4\0 |\v\0j\4\0d\3\0\203\1\0\27}\17\0|\17\0d\4\0\31d\5\0k\2\0r]\1d\1\0|\17\0d\4\0<n\0\0x\35\0d\5\0|\17\0k\6\0r|\1|\17\0j\5\0d\5\0\203\1\0\1q`\1Wxr\0d\2\0}\20\0t\6\0|\17\0\203\1\0d\2\0\30}\21\0xU\0|\20\0|\21\0k\0\0r\354\1|\17\0|\20\0\31d\6\0k\2\0r\337\1|\17\0|\20\0d\2\0\30\31d\t\0k\7\0r\337\1|\17\0|\20\0d\2\0\30|\20\0d\2\0\0275Pn\0\0|\20\0d\2\0\27}\20\0q\231\1WPq\200\1W|\17\0d\1\0d\6\0g\2\0k\2\0r\21\2d\1\0|\17\0d\4\0<n2\0t\6\0|\17\0\203\1\0d\7\0k\5\0rC\2|\17\0d\4\0\31d\6\0k\2\0rC\2d\1\0g\1\0|\17\0d\10\0)n\0\0t\3\0|\t\0|\n\0d\3\0j\7\0|\17\0\203\1\0|\f\0|\r\0|\16\0f\6\0\203\1\0S(\n\0\0\0sa\0\0\0Join a base URL and a possibly relative URL to form an absolute\n    interpretation of the latter.R\25\0\0\0i\1\0\0\0RJ\0\0\0i\377\377\377\377t\1\0\0\0.s\2\0\0\0..i\2\0\0\0i\376\377\377\377(\2\0\0\0R\25\0\0\0s\2\0\0\0..(\10\0\0\0R\0\0\0\0t\r\0\0\0uses_relativeRe\0\0\0R\1\0\0\0R+\0\0\0t\6\0\0\0removeRN\0\0\0t\4\0\0\0join(\22\0\0\0t\4\0\0\0baseRC\0\0\0RE\0\0\0t\7\0\0\0bschemet\7\0\0\0bnetloct\5\0\0\0bpatht\7\0\0\0bparamst\6\0\0\0bqueryt\t\0\0\0bfragmentRD\0\0\0R)\0\0\0t\4\0\0\0pathRI\0\0\0RG\0\0\0RH\0\0\0t\10\0\0\0segmentsRM\0\0\0t\1\0\0\0n(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR\2\0\0\0\373\0\0\0sX\0\0\0\0\3\6\1\4\1\6\1\4\2$\2$\1\30\1\4\1\f\1\6\1\f\1\20\1\t\1\20\1\f\1\20\1\16\1\6\1\6\1\6\1\t\1\f\1\20\1 \2\20\1\r\1\17\1\21\1\3\1\6\1\20\1\17\1\20\1\24\1\22\1\4\1\16\2\5\1\22\1\r\1\"\1\20\1\25\1c\1\0\0\0\10\0\0\0\7\0\0\0C\0\0\0s`\0\0\0d\1\0|\0\0k\6\0rR\0t\0\0|\0\0\203\1\0\\\6\0}\1\0}\2\0}\3\0}\4\0}\5\0}\6\0t\1\0|\1\0|\2\0|\3\0|\4\0|\5\0d\2\0f\6\0\203\1\0}\7\0|\7\0|\6\0f\2\0S|\0\0d\2\0f\2\0Sd\3\0S(\4\0\0\0s\277\0\0\0Removes any existing fragment from URL.\n\n    Returns a tuple of the defragmented URL and the fragment.  If\n    the URL contained no fragments, the second element is the\n    empty string.\n    RU\0\0\0R\25\0\0\0N(\2\0\0\0R\0\0\0\0R\1\0\0\0(\10\0\0\0RC\0\0\0t\1\0\0\0sRs\0\0\0t\1\0\0\0pt\1\0\0\0at\1\0\0\0qt\4\0\0\0fragt\6\0\0\0defrag(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR\3\0\0\0/\1\0\0s\n\0\0\0\0\7\f\1\36\1\36\1\n\2c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\1\0S(\2\0\0\0Ni\0\0\0\0(\0\0\0\0(\1\0\0\0t\1\0\0\0x(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyt\v\0\0\0_is_unicode@\1\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0t\1\0\203\2\0S(\1\0\0\0N(\2\0\0\0t\n\0\0\0isinstancet\7\0\0\0unicode(\1\0\0\0Rz\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR{\0\0\0C\1\0\0s\2\0\0\0\0\1t\26\0\0\0000123456789ABCDEFabcdefc\1\0\0\0\3\0\0\0\7\0\0\0c\0\0\0s?\0\0\0|\0\0]5\0}\1\0t\0\0D](\0}\2\0|\1\0|\2\0\27t\1\0t\2\0|\1\0|\2\0\27d\0\0\203\2\0\203\1\0f\2\0V\1q\r\0q\3\0d\1\0S(\2\0\0\0i\20\0\0\0N(\3\0\0\0t\7\0\0\0_hexdigt\3\0\0\0chrR5\0\0\0(\3\0\0\0RX\0\0\0Rv\0\0\0t\1\0\0\0b(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pys\t\0\0\0<genexpr>L\1\0\0s\2\0\0\0\6\1s\10\0\0\0([\0-\177]+)c\1\0\0\0\6\0\0\0\6\0\0\0C\0\0\0sO\1\0\0t\0\0|\0\0\203\1\0r\246\0d\1\0|\0\0k\7\0r\34\0|\0\0St\1\0j\2\0|\0\0\203\1\0}\1\0|\1\0d\2\0\31g\1\0}\2\0|\2\0j\3\0}\3\0xU\0t\4\0d\3\0t\5\0|\1\0\203\1\0d\4\0\203\3\0D];\0}\4\0|\3\0t\6\0t\7\0|\1\0|\4\0\31\203\1\0\203\1\0j\10\0d\5\0\203\1\0\203\1\0\1|\3\0|\1\0|\4\0d\3\0\27\31\203\1\0\1qZ\0Wd\6\0j\t\0|\2\0\203\1\0S|\0\0j\2\0d\1\0\203\1\0}\1\0t\5\0|\1\0\203\1\0d\3\0k\2\0r\313\0|\0\0S|\1\0d\2\0\31g\1\0}\2\0|\2\0j\3\0}\3\0x^\0|\1\0d\3\0\37D]R\0}\5\0y$\0|\3\0t\n\0|\5\0d\4\0 \31\203\1\0\1|\3\0|\5\0d\4\0\37\203\1\0\1Wq\354\0\4t\v\0k\n\0r=\1\1\1\1|\3\0d\1\0\203\1\0\1|\3\0|\5\0\203\1\0\1q\354\0Xq\354\0Wd\6\0j\t\0|\2\0\203\1\0S(\7\0\0\0s\"\0\0\0unquote('abc%20def') -> 'abc def'.t\1\0\0\0%i\0\0\0\0i\1\0\0\0i\2\0\0\0t\6\0\0\0latin1R\25\0\0\0(\f\0\0\0R{\0\0\0t\10\0\0\0_asciireR+\0\0\0t\6\0\0\0appendt\5\0\0\0rangeRN\0\0\0t\7\0\0\0unquotet\3\0\0\0strt\6\0\0\0decodeRi\0\0\0t\t\0\0\0_hextochrt\10\0\0\0KeyError(\6\0\0\0Rt\0\0\0t\4\0\0\0bitst\3\0\0\0resR\205\0\0\0RM\0\0\0t\4\0\0\0item(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR\207\0\0\0P\1\0\0s.\0\0\0\0\2\f\1\f\1\4\1\17\1\r\1\t\1\37\1#\1\26\1\r\2\17\2\22\1\4\1\r\1\t\1\21\1\3\1\22\1\22\1\r\1\n\1\22\1c\3\0\0\0\6\0\0\0\4\0\0\0C\0\0\0sZ\0\0\0i\0\0}\3\0xM\0t\0\0|\0\0|\1\0|\2\0\203\3\0D]9\0\\\2\0}\4\0}\5\0|\4\0|\3\0k\6\0rE\0|\3\0|\4\0\31j\1\0|\5\0\203\1\0\1q\31\0|\5\0g\1\0|\3\0|\4\0<q\31\0W|\3\0S(\1\0\0\0s\262\2\0\0Parse a query given as a string argument.\n\n        Arguments:\n\n        qs: percent-encoded query string to be parsed\n\n        keep_blank_values: flag indicating whether blank values in\n            percent-encoded queries should be treated as blank strings.\n            A true value indicates that blanks should be retained as\n            blank strings.  The default false value indicates that\n            blank values are to be", 8192) = 8192
27308 read(5, " ignored and treated as if they were\n            not included.\n\n        strict_parsing: flag indicating what to do with parsing errors.\n            If false (the default), errors are silently ignored.\n            If true, errors raise a ValueError exception.\n    (\2\0\0\0R\7\0\0\0R\205\0\0\0(\6\0\0\0t\2\0\0\0qst\21\0\0\0keep_blank_valuest\16\0\0\0strict_parsingt\4\0\0\0dictt\4\0\0\0namet\5\0\0\0value(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR\6\0\0\0l\1\0\0s\f\0\0\0\0\22\6\1\37\1\f\1\24\2\21\1c\3\0\0\0\v\0\0\0\5\0\0\0C\0\0\0s$\1\0\0g\0\0|\0\0j\0\0d\1\0\203\1\0D]\"\0}\3\0|\3\0j\0\0d\2\0\203\1\0D]\f\0}\4\0|\4\0^\3\0q#\0q\20\0}\5\0g\0\0}\6\0x\337\0|\5\0D]\327\0}\7\0|\7\0\fr_\0|\2\0\fr_\0qE\0n\0\0|\7\0j\0\0d\3\0d\4\0\203\2\0}\10\0t\1\0|\10\0\203\1\0d\5\0k\3\0r\270\0|\2\0r\234\0t\2\0d\6\0|\7\0f\1\0\26\202\2\0n\0\0|\1\0rE\0|\10\0j\3\0d\7\0\203\1\0\1q\270\0qE\0n\0\0t\1\0|\10\0d\4\0\31\203\1\0s\316\0|\1\0rE\0t\4\0|\10\0d\10\0\31j\5\0d\t\0d\n\0\203\2\0\203\1\0}\t\0t\4\0|\10\0d\4\0\31j\5\0d\t\0d\n\0\203\2\0\203\1\0}\n\0|\6\0j\3\0|\t\0|\n\0f\2\0\203\1\0\1qE\0qE\0W|\6\0S(\v\0\0\0s\246\2\0\0Parse a query given as a string argument.\n\n    Arguments:\n\n    qs: percent-encoded query string to be parsed\n\n    keep_blank_values: flag indicating whether blank values in\n        percent-encoded queries should be treated as blank strings.  A\n        true value indicates that blanks should be retained as blank\n        strings.  The default false value indicates that blank values\n        are to be ignored and treated as if they were  not included.\n\n    strict_parsing: flag indicating what to do with parsing errors. If\n        false (the default), errors are silently ignored. If true,\n        errors raise a ValueError exception.\n\n    Returns a list, as G-d intended.\n    t\1\0\0\0&R@\0\0\0t\1\0\0\0=i\1\0\0\0i\2\0\0\0s\23\0\0\0bad query field: %rR\25\0\0\0i\0\0\0\0t\1\0\0\0+t\1\0\0\0 (\6\0\0\0R+\0\0\0RN\0\0\0R]\0\0\0R\205\0\0\0R\207\0\0\0t\7\0\0\0replace(\v\0\0\0R\217\0\0\0R\220\0\0\0R\221\0\0\0t\2\0\0\0s1t\2\0\0\0s2t\5\0\0\0pairst\1\0\0\0rt\n\0\0\0name_valuet\2\0\0\0nvR\223\0\0\0R\224\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyR\7\0\0\0\206\1\0\0s\"\0\0\0\0\0238\1\6\1\r\1\16\1\6\1\22\1\22\1\6\1\23\2\6\1\20\2\6\1\26\1\34\1\34\1\32\2('\0\0\0R9\0\0\0t\2\0\0\0ret\7\0\0\0__all__Rg\0\0\0Re\0\0\0RA\0\0\0t\20\0\0\0non_hierarchicalt\n\0\0\0uses_queryt\r\0\0\0uses_fragmentR^\0\0\0R\\\0\0\0R#\0\0\0R%\0\0\0t\6\0\0\0objectR&\0\0\0t\v\0\0\0collectionsR;\0\0\0R<\0\0\0R?\0\0\0t\4\0\0\0TrueR\0\0\0\0RB\0\0\0RT\0\0\0R\4\0\0\0R\1\0\0\0R\5\0\0\0R\2\0\0\0R\3\0\0\0R}\0\0\0t\t\0\0\0NameErrorR{\0\0\0R\177\0\0\0R\222\0\0\0R\212\0\0\0t\7\0\0\0compileR\204\0\0\0R\207\0\0\0R\6\0\0\0R\7\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/urlparse.pyt\10\0\0\0<module>\35\0\0\0sb\0\0\0\6\2\f\2\f\1\22\3\17\1\17\1\17\1\f\1\17\1\22\1\22\1\30\1\17\1\22\1\22\4\f\1\30\1\22\1\30\1\17\1\17\1\17\3\6\5\6\1\6\2\t\5\26.\20\2\"\10\"\10\17\16\t\t\f\10\0177\t\n\t\22\f4\t\16\3\1\10\1\r\1\r\3\t\10\6\1\t\1\r\1\17\2\t\34\17\32", 4096) = 2177
27308 read(5, "", 4096)                 = 0
27308 close(5)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 stat64("collections", 0xbfffd92c) = -1 ENOENT (No such file or directory)
27308 open("collections.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("collections.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("collectionsmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("collections.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("collections.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/collections", 0xbfffd92c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/collections.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/collections.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/collectionsmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/collections.py", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=661472, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=27261, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/collections.pyc", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669381, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=25517, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(6, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\5\0\0\0@\0\0\0s\202\2\0\0d\0\0d\1\0d\2\0d\3\0d\4\0g\5\0Z\0\0d\5\0d\6\0l\1\0Td\5\0d\7\0l\1\0Z\1\0e\0\0e\1\0j\0\0007Z\0\0d\5\0d\10\0l\2\0m\3\0Z\3\0m\4\0Z\4\0\1d\5\0d\t\0l\5\0m\6\0Z\7\0m\10\0Z\t\0\1d\5\0d\n\0l\n\0m\v\0Z\f\0\1d\5\0d\7\0l\r\0Z\16\0d\5\0d\7\0l\17\0Z\20\0d\5\0d\v\0l\21\0m\22\0Z\23\0m\24\0Z\25\0m\26\0Z\27\0\1d\5\0d\f\0l\21\0m\30\0Z\31\0\1y\24\0d\5\0d\r\0l\32\0m\33\0Z\34\0\1Wn!\0\4e\35\0k\n\0r\357\0\1\1\1d\5\0d\r\0l\36\0m\33\0Z\34\0\1n\1\0Xd\4\0e\37\0f\1\0d\16\0\204\0\0\203\0\0YZ \0d\17\0Z!\0d\20\0Z\"\0d\21\0Z#\0e$\0e$\0d\22\0\204\2\0Z%\0d\0\0e\37\0f\1\0d\23\0\204\0\0\203\0\0YZ&\0e'\0d\24\0k\2\0r~\2d\5\0d\25\0l(\0m)\0Z)\0m*\0Z*\0\1e%\0d\26\0d\27\0e+\0\203\3\0Z,\0e,\0d\30\0d\31\0d\32\0d\33\0\203\0\2Z-\0e-\0e)\0e*\0e-\0\203\1\0\203\1\0k\2\0s\244\1t.\0\202\1\0d\26\0e%\0d\26\0d\34\0\203\2\0f\1\0d\35\0\204\0\0\203\0\0YZ,\0x/\0e,\0d\36\0d\37\0\203\2\0e,\0d \0d!\0d\"\0\25\203\2\0f\2\0D]\v\0Z-\0e-\0GHq\346\1Wd\26\0e%\0d\26\0d\34\0\203\2\0f\1\0d#\0\204\0\0\203\0\0YZ,\0e,\0d$\0d%\0\203\2\0j/\0d\30\0d&\0\203\0\1GHe%\0d'\0e,\0j0\0d(\0f\1\0\27\203\2\0Z1\0e1\0j2\0GHd\5\0d\7\0l3\0Z3\0e%\0d)\0d*\0\203\2\0Z4\0e4\0e3\0j5\0\203\0\0\214\0\0GHn\0\0d\7\0S(+\0\0\0t\7\0\0\0Countert\5\0\0\0dequet\v\0\0\0defaultdictt\n\0\0\0namedtuplet\v\0\0\0OrderedDicti\377\377\377\377(\1\0\0\0t\1\0\0\0*N(\2\0\0\0R\1\0\0\0R\2\0\0\0(\2\0\0\0t\n\0\0\0itemgettert\2\0\0\0eq(\1\0\0\0t\t\0\0\0iskeyword(\3\0\0\0t\6\0\0\0repeatt\5\0\0\0chaint\7\0\0\0starmap(\1\0\0\0t\4\0\0\0imap(\1\0\0\0t\t\0\0\0get_identc\0\0\0\0\0\0\0\0\3\0\0\0B\0\0\0s\37\1\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0\204\0\0Z\3\0e\4\0j\5\0d\2\0\204\1\0Z\5\0e\4\0j\6\0d\3\0\204\1\0Z\6\0d\4\0\204\0\0Z\7\0d\5\0\204\0\0Z\10\0d\6\0\204\0\0Z\t\0d\7\0\204\0\0Z\n\0d\10\0\204\0\0Z\v\0d\t\0\204\0\0Z\f\0d\n\0\204\0\0Z\r\0d\v\0\204\0\0Z\16\0d\f\0\204\0\0Z\17\0e\20\0j\21\0Z\21\0e\21\0Z\22\0e\23\0\203\0\0Z\24\0e\24\0d\r\0\204\1\0Z\25\0d\31\0d\16\0\204\1\0Z\27\0e\30\0d\17\0\204\1\0Z\31\0i\0\0d\20\0\204\1\0Z\32\0d\21\0\204\0\0Z\33\0d\22\0\204\0\0Z\34\0e\35\0d\31\0d\23\0\204\1\0\203\1\0Z\36\0d\24\0\204\0\0Z\37\0d\25\0\204\0\0Z \0d\26\0\204\0\0Z!\0d\27\0\204\0\0Z\"\0d\30\0\204\0\0Z#\0RS(\32\0\0\0s)\0\0\0Dictionary that remembers insertion orderc\0\0\0\0\4\0\0\0\5\0\0\0O\0\0\0s\255\0\0\0|\0\0s\25\0t\0\0d\1\0\203\1\0\202\1\0n\0\0|\0\0d\2\0\31}\2\0|\0\0d\3\0\37}\0\0t\1\0|\0\0\203\1\0d\3\0k\4\0rT\0t\0\0d\4\0t\1\0|\0\0\203\1\0\26\203\1\0\202\1\0n\0\0y\v\0|\2\0j\2\0\1Wn7\0\4t\3\0k\n\0r\230\0\1\1\1g\0\0\4|\2\0_\2\0}\3\0|\3\0|\3\0d\5\0g\3\0|\3\0(i\0\0|\2\0_\5\0n\1\0X|\2\0j\6\0|\0\0|\1\0\216\0\0\1d\5\0S(\6\0\0\0s\305\0\0\0Initialize an ordered dictionary.  The signature is the same as\n        regular dictionaries, but keyword arguments are not recommended because\n        their insertion order is arbitrary.\n\n        s?\0\0\0descriptor '__init__' of 'OrderedDict' object needs an argumenti\0\0\0\0i\1\0\0\0s$\0\0\0expected at most 1 arguments, got %dN(\7\0\0\0t\t\0\0\0TypeErrort\3\0\0\0lent\22\0\0\0_OrderedDict__roott\16\0\0\0AttributeErrort\4\0\0\0Nonet\21\0\0\0_OrderedDict__mapt\24\0\0\0_OrderedDict__update(\4\0\0\0t\4\0\0\0argst\4\0\0\0kwdst\4\0\0\0selft\4\0\0\0root(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\10\0\0\0__init__&\0\0\0s\32\0\0\0\0\6\6\1\17\2\n\1\n\1\22\1\31\1\3\1\v\1\r\1\r\1\20\1\r\1c\4\0\0\0\6\0\0\0\4\0\0\0C\0\0\0sX\0\0\0|\1\0|\0\0k\7\0rH\0|\0\0j\0\0}\4\0|\4\0d\1\0\31}\5\0|\5\0|\4\0|\1\0g\3\0\4|\5\0d\2\0<\4|\4\0d\1\0<|\0\0j\1\0|\1\0<n\0\0|\3\0|\0\0|\1\0|\2\0\203\3\0S(\3\0\0\0s!\0\0\0od.__setitem__(i, y) <==> od[i]=yi\0\0\0\0i\1\0\0\0(\2\0\0\0R\20\0\0\0R\23\0\0\0(\6\0\0\0R\27\0\0\0t\3\0\0\0keyt\5\0\0\0valuet\f\0\0\0dict_setitemR\30\0\0\0t\4\0\0\0last(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\v\0\0\0__setitem__;\0\0\0s\n\0\0\0\0\4\f\1\t\1\n\1)\1c\3\0\0\0\6\0\0\0\3\0\0\0C\0\0\0s@\0\0\0|\2\0|\0\0|\1\0\203\2\0\1|\0\0j\0\0j\1\0|\1\0\203\1\0\\\3\0}\3\0}\4\0}\5\0|\4\0|\3\0d\1\0<|\3\0|\4\0d\2\0<d\3\0S(\4\0\0\0s \0\0\0od.__delitem__(y) <==> del od[y]i\1\0\0\0i\0\0\0\0N(\2\0\0\0R\23\0\0\0t\3\0\0\0pop(\6\0\0\0R\27\0\0\0R\32\0\0\0t\f\0\0\0dict_delitemt\t\0\0\0link_prevt\t\0\0\0link_nextt\1\0\0\0_(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\v\0\0\0__delitem__E\0\0\0s\10\0\0\0\0\4\r\1\33\1\n\1c\1\0\0\0\3\0\0\0\2\0\0\0c\0\0\0s=\0\0\0|\0\0j\0\0}\1\0|\1\0d\1\0\31}\2\0x#\0|\2\0|\1\0k\t\0r8\0|\2\0d\2\0\31V\1|\2\0d\1\0\31}\2\0q\26\0Wd\3\0S(\4\0\0\0s\33\0\0\0od.__iter__() <==> iter(od)i\1\0\0\0i\2\0\0\0N(\1\0\0\0R\20\0\0\0(\3\0\0\0R\27\0\0\0R\30\0\0\0t\4\0\0\0curr(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\10\0\0\0__iter__N\0\0\0s\n\0\0\0\0\3\t\1\n\1\17\1\t\1c\1\0\0\0\3\0\0\0\2\0\0\0c\0\0\0s=\0\0\0|\0\0j\0\0}\1\0|\1\0d\1\0\31}\2\0x#\0|\2\0|\1\0k\t\0r8\0|\2\0d\2\0\31V\1|\2\0d\1\0\31}\2\0q\26\0Wd\3\0S(\4\0\0\0s#\0\0\0od.__reversed__() <==> reversed(od)i\0\0\0\0i\2\0\0\0N(\1\0\0\0R\20\0\0\0(\3\0\0\0R\27\0\0\0R\30\0\0\0R%\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\f\0\0\0__reversed__W\0\0\0s\n\0\0\0\0\3\t\1\n\1\17\1\t\1c\1\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s7\0\0\0|\0\0j\0\0}\1\0|\1\0|\1\0d\1\0g\3\0|\1\0(|\0\0j\2\0j\3\0\203\0\0\1t\4\0j\3\0|\0\0\203\1\0\1d\1\0S(\2\0\0\0s.\0\0\0od.clear() -> None.  Remove all items from od.N(\5\0\0\0R\20\0\0\0R\22\0\0\0R\23\0\0\0t\5\0\0\0cleart\4\0\0\0dict(\2\0\0\0R\27\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyR(\0\0\0`\0\0\0s\10\0\0\0\0\2\t\1\20\1\r\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0s\37\0\0\0od.keys() -> list of keys in od(\1\0\0\0t\4\0\0\0list(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\4\0\0\0keysi\0\0\0s\2\0\0\0\0\2c\1\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s\33\0\0\0g\0\0|\0\0D]\20\0}\1\0|\0\0|\1\0\31^\2\0q\7\0S(\1\0\0\0s#\0\0\0od.values() -> list of values in od(\0\0\0\0(\2\0\0\0R\27\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\6\0\0\0valuesm\0\0\0s\2\0\0\0\0\2c\1\0\0\0\2\0\0\0\5\0\0\0C\0\0\0s!\0\0\0g\0\0|\0\0D]\26\0}\1\0|\1\0|\0\0|\1\0\31f\2\0^\2\0q\7\0S(\1\0\0\0s.\0\0\0od.items() -> list of (key, value) pairs in od(\0\0\0\0(\2\0\0\0R\27\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\5\0\0\0itemsq\0\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0s0\0\0\0od.iterkeys() -> an iterator over the keys in od(\1\0\0\0t\4\0\0\0iter(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0", 4096) = 4096
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669381, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=25517, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(6, "\0/usr/lib/python2.7/collections.pyt\10\0\0\0iterkeysu\0\0\0s\2\0\0\0\0\2c\1\0\0\0\2\0\0\0\3\0\0\0c\0\0\0s\36\0\0\0x\27\0|\0\0D]\17\0}\1\0|\0\0|\1\0\31V\1q\7\0Wd\1\0S(\2\0\0\0s2\0\0\0od.itervalues -> an iterator over the values in odN(\0\0\0\0(\2\0\0\0R\27\0\0\0t\1\0\0\0k(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\n\0\0\0itervaluesy\0\0\0s\4\0\0\0\0\2\r\1c\1\0\0\0\2\0\0\0\4\0\0\0c\0\0\0s$\0\0\0x\35\0|\0\0D]\25\0}\1\0|\1\0|\0\0|\1\0\31f\2\0V\1q\7\0Wd\1\0S(\2\0\0\0s=\0\0\0od.iteritems -> an iterator over the (key, value) pairs in odN(\0\0\0\0(\2\0\0\0R\27\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\t\0\0\0iteritems~\0\0\0s\4\0\0\0\0\2\r\1c\3\0\0\0\4\0\0\0\2\0\0\0C\0\0\0sC\0\0\0|\1\0|\0\0k\6\0r!\0|\0\0|\1\0\31}\3\0|\0\0|\1\0=|\3\0S|\2\0|\0\0j\0\0k\10\0r?\0t\1\0|\1\0\203\1\0\202\1\0n\0\0|\2\0S(\1\0\0\0s\262\0\0\0od.pop(k[,d]) -> v, remove specified key and return the corresponding\n        value.  If key is not found, d is returned if given, otherwise KeyError\n        is raised.\n\n        (\2\0\0\0t\24\0\0\0_OrderedDict__markert\10\0\0\0KeyError(\4\0\0\0R\27\0\0\0R\32\0\0\0t\7\0\0\0defaultt\6\0\0\0result(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyR\37\0\0\0\211\0\0\0s\16\0\0\0\0\6\f\1\n\1\7\1\4\1\17\1\17\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\"\0\0\0|\1\0|\0\0k\6\0r\24\0|\0\0|\1\0\31S|\2\0|\0\0|\1\0<|\2\0S(\1\0\0\0sD\0\0\0od.setdefault(k[,d]) -> od.get(k,d), also set od[k]=d if k not in od(\0\0\0\0(\3\0\0\0R\27\0\0\0R\32\0\0\0R5\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\n\0\0\0setdefault\227\0\0\0s\10\0\0\0\0\2\f\1\10\1\n\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0sR\0\0\0|\0\0s\25\0t\0\0d\1\0\203\1\0\202\1\0n\0\0t\1\0|\1\0r*\0t\2\0|\0\0\203\1\0n\t\0t\3\0|\0\0\203\1\0\203\1\0}\2\0|\0\0j\4\0|\2\0\203\1\0}\3\0|\2\0|\3\0f\2\0S(\2\0\0\0s\231\0\0\0od.popitem() -> (k, v), return and remove a (key, value) pair.\n        Pairs are returned in LIFO order if last is true or FIFO order if false.\n\n        s\23\0\0\0dictionary is empty(\5\0\0\0R4\0\0\0t\4\0\0\0nextt\10\0\0\0reversedR.\0\0\0R\37\0\0\0(\4\0\0\0R\27\0\0\0R\35\0\0\0R\32\0\0\0R\33\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\7\0\0\0popitem\236\0\0\0s\n\0\0\0\0\5\6\1\17\1$\1\17\1c\2\0\0\0\3\0\0\0\5\0\0\0C\0\0\0ss\0\0\0t\0\0|\0\0\203\1\0t\1\0\203\0\0f\2\0}\2\0|\2\0|\1\0k\6\0r%\0d\1\0Sd\2\0|\1\0|\2\0<z5\0|\0\0sI\0d\3\0|\0\0j\2\0j\3\0f\1\0\26Sd\4\0|\0\0j\2\0j\3\0|\0\0j\4\0\203\0\0f\2\0\26SWd\5\0|\1\0|\2\0=Xd\5\0S(\6\0\0\0s\33\0\0\0od.__repr__() <==> repr(od)s\3\0\0\0...i\1\0\0\0s\4\0\0\0%s()s\6\0\0\0%s(%r)N(\5\0\0\0t\2\0\0\0idt\n\0\0\0_get_identt\t\0\0\0__class__t\10\0\0\0__name__R-\0\0\0(\3\0\0\0R\27\0\0\0t\r\0\0\0_repr_runningt\10\0\0\0call_key(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\10\0\0\0__repr__\251\0\0\0s\22\0\0\0\0\2\25\1\f\1\4\1\n\1\3\1\6\1\21\1\36\2c\1\0\0\0\4\0\0\0\5\0\0\0C\0\0\0s\210\0\0\0g\0\0|\0\0D]\26\0}\1\0|\1\0|\0\0|\1\0\31g\2\0^\2\0q\7\0}\2\0t\0\0|\0\0\203\1\0j\1\0\203\0\0}\3\0x'\0t\0\0t\2\0\203\0\0\203\1\0D]\26\0}\1\0|\3\0j\3\0|\1\0d\1\0\203\2\0\1qE\0W|\3\0rx\0|\0\0j\5\0|\2\0f\1\0|\3\0f\3\0S|\0\0j\5\0|\2\0f\1\0f\2\0S(\2\0\0\0s%\0\0\0Return state information for picklingN(\6\0\0\0t\4\0\0\0varst\4\0\0\0copyR\4\0\0\0R\37\0\0\0R\22\0\0\0R=\0\0\0(\4\0\0\0R\27\0\0\0R0\0\0\0R-\0\0\0t\t\0\0\0inst_dict(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\n\0\0\0__reduce__\266\0\0\0s\16\0\0\0\0\2#\1\22\1\26\1\24\1\6\1\23\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0|\0\0\203\1\0S(\1\0\0\0s!\0\0\0od.copy() -> a shallow copy of od(\1\0\0\0R=\0\0\0(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyRC\0\0\0\300\0\0\0s\2\0\0\0\0\2c\3\0\0\0\5\0\0\0\4\0\0\0C\0\0\0s(\0\0\0|\0\0\203\0\0}\3\0x\30\0|\1\0D]\20\0}\4\0|\2\0|\3\0|\4\0<q\20\0W|\3\0S(\1\0\0\0s\177\0\0\0OD.fromkeys(S[, v]) -> New ordered dictionary with keys from S.\n        If not specified, the value defaults to None.\n\n        (\0\0\0\0(\5\0\0\0t\3\0\0\0clst\10\0\0\0iterableR\33\0\0\0R\27\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\10\0\0\0fromkeys\304\0\0\0s\10\0\0\0\0\6\t\1\r\1\16\1c\2\0\0\0\2\0\0\0\5\0\0\0C\0\0\0sG\0\0\0t\0\0|\1\0t\1\0\203\2\0r7\0t\2\0j\3\0|\0\0|\1\0\203\2\0o6\0t\4\0t\5\0t\6\0|\0\0|\1\0\203\3\0\203\1\0St\2\0j\3\0|\0\0|\1\0\203\2\0S(\1\0\0\0s\223\0\0\0od.__eq__(y) <==> od==y.  Comparison to another OD is order-sensitive\n        while comparison to a regular mapping is order-insensitive.\n\n        (\7\0\0\0t\n\0\0\0isinstanceR\4\0\0\0R)\0\0\0t\6\0\0\0__eq__t\3\0\0\0allt\5\0\0\0_imapt\3\0\0\0_eq(\2\0\0\0R\27\0\0\0t\5\0\0\0other(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyRJ\0\0\0\317\0\0\0s\6\0\0\0\0\5\17\1(\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\v\0\0\0|\0\0|\1\0k\2\0\fS(\1\0\0\0s\27\0\0\0od.__ne__(y) <==> od!=y(\0\0\0\0(\2\0\0\0R\27\0\0\0RN\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\6\0\0\0__ne__\330\0\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0s@\0\0\0od.viewkeys() -> a set-like object providing a view on od's keys(\1\0\0\0t\10\0\0\0KeysView(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\10\0\0\0viewkeys\336\0\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0s<\0\0\0od.viewvalues() -> an object providing a view on od's values(\1\0\0\0t\n\0\0\0ValuesView(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\n\0\0\0viewvalues\342\0\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0sB\0\0\0od.viewitems() -> a set-like object providing a view on od's items(\1\0\0\0t\t\0\0\0ItemsView(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\t\0\0\0viewitems\346\0\0\0s\2\0\0\0\0\2N($\0\0\0R>\0\0\0t\n\0\0\0__module__t\7\0\0\0__doc__R\31\0\0\0R)\0\0\0R\36\0\0\0R$\0\0\0R&\0\0\0R'\0\0\0R(\0\0\0R+\0\0\0R,\0\0\0R-\0\0\0R/\0\0\0R1\0\0\0R2\0\0\0t\16\0\0\0MutableMappingt\6\0\0\0updateR\24\0\0\0t\6\0\0\0objectR3\0\0\0R\37\0\0\0R\22\0\0\0R7\0\0\0t\4\0\0\0TrueR:\0\0\0RA\0\0\0RE\0\0\0RC\0\0\0t\v\0\0\0classmethodRH\0\0\0RJ\0\0\0RO\0\0\0RQ\0\0\0RS\0\0\0RU\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyR\4\0\0\0\32\0\0\0s:\0\0\0\6\1\6\v\t\25\17\n\17\t\t\t\t\t\t\t\t\4\t\4\t\4\t\4\t\5\t\5\t\2\6\2\t\2\f\16\f\7\f\v\f\r\t\n\t\4\3\1\17\n\t\t\t\6\t\4\t\4s\216\5\0\0class {typename}(tuple):\n    '{typename}({arg_list})'\n\n    __slots__ = ()\n\n    _fields = {field_names!r}\n\n    def __new__(_cls, {arg_list}):\n        'Create new instance of {typename}({arg_list})'\n        return _tuple.__new__(_cls, ({arg_list}))\n\n    @classmethod\n    def _make(cls, iterable, new=tuple.__new__, len=len):\n        'Make a new {typename} object from a sequence or iterable'\n        result = new(cls, iterable)\n        if len(result) != {num_fields:d}:\n            raise TypeError('Expected {num_fields:d} arguments, got %d' % len(result))\n        return result\n\n    def __repr__(self):\n        'Return a nicely formatted representation string'\n        return '{typename}({repr_fmt})' % self\n\n    def _asdict(self):\n        'Return a new OrderedDict which maps field names to their values'\n        return OrderedDict(zip(self._fields, self))\n\n    def _replace(_self, **kwds):\n        'Return a new {typename} object replacing specified fields with new values'\n        result = _self._make(map(kwds.pop, {field_names!r}, _self))\n        if kwds:\n            raise ValueError('Got unexpected field names: %r' % kwds.keys())\n        return result\n\n    def __getnewargs__(self):\n        'Return self as a plain tuple.  Used by copy and pickle.'\n        return tuple(self)\n\n    __dict__ = _property(_asdict)\n\n    def __getstate__(self):\n        'Exclude the OrderedDict from pickling'\n        pass\n\n{field_defs}\ns\t\0\0\0{name}=%rsW\0\0\0    {name} = _property(_itemgetter({index:d}), doc='Alias for field number {index:d}')\nc\4\0\0\0\v\0\0\0\20\0\0\0B\0\0\0s@\3\0\0e\0\0|\1\0e\1\0\203\2\0r*\0|\1\0j\2\0d\1\0d\2\0\203\2\0j\3\0\203\0\0}\1\0n\0\0e\4\0e\5\0|\1\0\203\2\0}\1\0e\5\0|\0\0\203\1\0}\0\0|\3\0r\347\0e\6\0\203\0\0}\4\0x\220\0e\7\0|\1\0\203\1\0D]\177\0\\\2\0}\5\0}\6\0e\10\0d\3\0\204\0\0|\6\0D\203\1\0\203\1\0\fs\302\0e\t\0|\6\0\203\1\0s\302\0|\6\0\fs\302\0|\6\0d\4\0\31j\n\0\203\0\0s\302\0|\6\0j\v\0d\5\0\203\1\0s\302\0|\6\0|\4\0k\6\0r\323\0d\6\0|\5\0\26|\1\0|\5\0<n\0\0|\4\0j\f\0|\6\0\203\1\0\1qa\0Wn\0\0x\241\0|\0\0g\1\0|\1\0\27D]\222\0}\6\0e\r\0|\6\0\203\1\0e\5\0k\3\0r\34\1e\16\0d\7\0\203\1\0\202\1\0n\0\0e\10\0d\10\0\204\0\0|\6\0D\203\1\0\203\1\0sE\1e\17\0d\t\0|\6\0\26\203\1\0\202\1\0n\0\0e\t\0|\6\0\203\1\0rd\1e\17\0d\n\0|\6\0\26\203\1\0\202\1\0n\0\0|\6\0d\4\0\31j\n\0\203\0\0r\365\0e\17\0d\v\0|\6\0\26\203\1\0\202\1\0q\365\0q\365\0We\6\0\203\0\0}\4\0xc\0|\1\0D][\0}\6\0|\6\0j\v\0d\5\0\203\1\0r\312\1|\3\0\fr\312\1e\17\0d\f\0|\6\0\26\203\1\0\202\1\0n\0\0|\6\0|\4\0k\6\0r\351\1e\17\0d\r\0|\6\0\26\203\1\0\202\1\0n\0\0|\4\0j\f\0|\6\0\203\1\0\1q\233\1We\20\0j\21\0d\16\0|\0\0d\17\0e\22\0|\1\0\203\1\0d\20\0e\23\0|\1\0\203\1\0d\21\0e\24\0e\22\0|\1\0\203\1\0\203\1\0j\2\0d\22\0d\23\0\203\2\0d\24\0d\25\0!d\26\0d\27\0j\25\0d\30\0\204\0\0|\1\0D\203\1\0\203\1\0d\31\0d\32\0j\25\0d\33\0\204\0\0e\7\0|\1\0\203\1\0D\203\1\0\203\1\0\203\0\6}\7\0|\2\0r\217\2|\7\0GHn\0\0e\26\0d\34\0e\27\0d\35\0d\36\0|\0\0\26d\37\0e\30\0d \0e\31\0d!\0e\22\0\203\0\5}\10\0y\f\0|\7\0|\10\0\4UWn*\0\4e\32\0k\n\0r\362\2\1}\t\0\1e\32\0|\t\0j\33\0d\"\0\27|\7\0\27\203\1\0\202\1\0n\1\0X|\10\0|\0\0\31}\n\0y%\0e\34\0j\35\0d\24\0\203\1\0j\36\0j\37\0d\35\0d#\0\203\2\0|\n\0_ \0Wn\27\0\4e!\0e\17\0f\2\0k\n\0r;\3\1\1\1n\1\0X|\n\0S($\0\0\0sC\3\0\0Returns a new subclass of tuple with named fields.\n\n    >>> Point = namedtuple('Point', ['x', 'y'])\n    >>> Point.__doc__                   # docstring for the new class\n    'Point(x, y)'\n    >>> p = Point(11, y=22)             # instantiate with positional args or keywords\n    >>> p[0] + p[1]                     # indexable like a plain tuple\n    33\n    >>> x, y = p                        # unpack like a regular tuple\n    >>> x, y\n    (11, 22)\n    >>> p.x + p.y                       # fields also accessable by name\n    33\n    >>> d = p._asdict()                 # convert to a dictionary\n    >>> d['x']\n    11\n    >>> Point(**d)                      # convert from a dictionary\n    Point(x=11, y=22)\n    >>> p._replace(x=100)               # _replace() is like str.replace() but targets named fields\n    Point(x=100, y=22)\n\n    t\1\0\0\0,t\1\0\0\0 c\1\0\0\0\2\0\0\0\3\0\0\0s\0\0\0s'\0\0\0|\0\0]\35\0}\1\0|\1\0j\0\0\203\0\0p\36\0|\1\0d\0\0k\2\0V\1q\3\0d\1\0S(\2\0\0\0R#\0\0\0N(\1\0\0\0t\7\0\0\0isalnum(\2\0\0\0t\2\0\0\0.0t\1\0\0\0c(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pys\t\0\0\0<genexpr>F\1\0\0s\2\0\0\0\6\0i\0\0\0\0R#\0\0\0s\3\0\0\0_%ds*\0\0\0Type names and field names must be stringsc\1\0\0\0\2\0\0\0\3\0\0\0s\0\0\0s'\0\0\0|\0\0]\35\0}\1\0|\1\0j\0\0\203\0\0p\36\0|\1\0d\0\0k\2\0V\1q\3\0d\1\0S(\2\0\0\0R#\0\0\0N(\1\0\0\0R_\0\0\0(\2\0\0\0R`\0\0\0Ra\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pys\t\0\0\0<genexpr>Q\1\0\0s\2\0\0\0\6\0sW\0\0\0Type names and field names can only contain alphanumeric characters and underscores: %rs2\0\0\0Type names and field names cannot be a keyword: %rs9\0\0\0Type names and field names cannot start with a number: %rs/\0\0\0Field names cannot start with an underscore: %rs$\0\0\0Encountered duplicate field name: %rt\10\0\0\0typenamet\v\0\0\0field_namest\n\0\0\0num_fieldst\10\0\0\0arg_listt\1\0\0\0't\0\0\0\0i\1\0\0\0i\377\377\377\377t\10\0\0\0repr_fmts\2\0\0\0, c\1\0\0\0\2\0\0\0\4\0\0\0s\0\0\0s!\0\0\0|\0\0]\27\0}\1\0t\0\0j\1\0d\0\0|\1\0\203\0\1V\1q\3\0d\1\0S(\2\0\0\0t\4\0\0\0nameN(\2\0\0\0t\16\0\0\0_repr_templatet\6\0\0\0format(\2\0\0\0R`\0\0\0Ri\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pys\t\0\0\0<genexpr>i\1\0\0s\2\0\0\0\6\1t\n\0\0\0field_defss\1\0\0\0\nc\1\0\0\0\3\0\0\0\6\0\0\0s\0\0\0s-\0\0\0|\0\0]#\0\\\2\0}\1\0}\2\0t\0\0j\1\0d\0\0|\1\0d\1\0|\2\0\203\0\2V\1q\3\0d\2\0S(\3\0\0\0t\5\0\0\0indexRi\0\0\0N(\2\0\0\0t\17\0\0\0_field_templateRk\0\0\0(\3\0\0\0R`\0\0\0Rm\0\0\0Ri\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pys\t\0\0\0<genexpr>k\1\0\0s\2\0\0\0\6\1t\v\0\0\0_itemgetterR>\0\0\0s\r\0\0\0namedtuple_%sR\4\0\0\0t\t\0\0\0_propertyt\6\0\0\0_tuples\2\0\0\0:\nt\10\0\0\0__main__(\"\0\0\0RI\0\0\0t\n\0\0\0basestringt\7\0\0\0replacet\5\0\0\0splitt\3\0\0\0mapt\3\0\0\0strt\3\0\0\0sett\t\0\0\0enumerateRK\0\0\0t\n\0\0\0_iskeywordt\7\0\0\0isdigitt\n\0\0\0startswitht\3\0\0\0addt\4\0\0\0typeR\16\0\0\0t\n\0\0\0ValueErrort\17\0\0\0_class_templateRk\0\0\0t\5\0\0\0tupleR\17\0\0\0t\4\0\0\0reprt\4\0\0\0joinR)\0\0\0Ro\0\0\0R\4\0\0\0t\10\0\0\0propertyt\v\0\0\0SyntaxErrort\7\0\0\0messaget\4\0\0\0_syst\t\0\0\0_getframet\t\0\0\0f_globalst\3\0\0\0getRV\0\0\0R\21\0\0\0(\v\0\0\0Rb\0\0\0Rc\0\0\0t\7\0\0\0verboset\6\0\0\0renamet\4\0\0\0seenRm\0\0\0Ri\0\0\0t\20\0\0\0class_definitiont\t\0\0\0namespacet\1\0\0\0eR6\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyR\3\0\0\0%\1\0\0st\0\0\0\0\32\17\1\33\1\17\1\f\1\6\1\t\1\31\1\27\1\f\1\7\1\20\1\17\1\f\1\21\1\24\1\24\1\22\1\17\1\26\1\6\1\r\1\f\1\6\1\r\1\20\1\6\1\21\1\t\1\r\1\26\1\6\1\r\1\f\1\23\1\21\3\t\1\6\1\f\1\f\1%\1\f\1\r\1\f\1\26\2\6\1\10\4\26\1\25\1\3\1\f\1\17\1\33\1\n\6\3\1%\1\23\1\4\2c\0\0\0\0\0\0\0\0\3\0\0\0B\0\0\0s\241\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0d\20\0d\3\0\204\1\0Z\6\0d\4\0\204\0\0Z\7\0e\10\0d\20\0d\5\0\204\1\0\203\1\0Z\t\0d\6\0\204\0\0Z\n\0d\7\0\204\0\0Z\v\0d\10\0\204\0\0Z\f\0d\t\0\204\0\0Z\r\0d\n\0\204\0\0Z\16\0d\v\0\204\0\0Z\17\0d\f\0\204\0\0Z\20\0d\r\0\204\0\0Z\21\0d\16\0\204\0\0Z\22\0d\17\0\204\0\0Z\23\0RS(\21\0\0\0s\237\6\0\0Dict subclass for counting hashable items.  Sometimes called a bag\n    or multiset.  Elements are stored as dictionary keys and their counts\n    are stored as dictionary values.\n\n    >>> c = Counter('abcdeabcdabcaba')  # count elements from a string\n\n    >>> c.most_common(3)                # three most common elements\n    [('a', 5), ('b', 4), ('c', 3)]\n    >>> sorted(c)                       # list all unique elements\n    ['a', 'b', 'c', 'd', 'e']\n    >>> ''.join(sorted(c.elements()))   # list elements with repetitions\n    'aaaaabbbbcccdde'\n    >>> sum(c.values())                 # total of all counts\n    15\n\n    >>> c['a']                          # count of letter 'a'\n    5\n    >>> for elem in 'shazam':           # update counts from an iterable\n    ...     c[elem] += 1                # by adding 1 to each element's count\n    >>> c['a']                          # now there are seven 'a'\n    7\n    >>> del c['b']                      # remove all 'b'\n    >>> c['b']                          # now there are zero 'b'\n    0\n\n    >>> d = Counter('simsalabim')       # make another counter\n    >>> c.update(d)                     # add in the second counter\n    >>> c['a']                          # now there are nine 'a'\n    9\n\n    >>> c.clear()                       # empty the counter\n    >>> c\n    Counter()\n\n    Note:  If a count is set to zero or reduced to zero, it will remain\n    in the counter until the entry is deleted or the counter is cleared:\n\n    >>> c = Counter('aaabbc')\n    >>> c['b'] -= 2                     # reduce the count of 'b' by two\n    >>> c.most_common()                 # 'b' is still in, but its count is zero\n    [('a', 3), ('c', 1), ('b', 0)]\n\n    c\0\0\0\0\3\0\0\0\4\0\0\0O\0\0\0s{\0\0\0|\0\0s\25\0t\0\0d\1\0\203\1\0\202\1\0n\0\0|\0\0d\2\0\31}\2\0|\0\0d\3\0\37}\0\0t\1\0|\0\0\203\1\0d\3\0k\4\0rT\0t\0\0d\4\0t\1\0|\0\0\203\1\0\26\203\1\0\202\1\0n\0\0t\2\0t\3\0|\2\0\203\2\0j\4\0\203\0\0\1|\2\0j\5\0|\0\0|\1\0\216\0\0\1d\5\0S(\6\0\0\0s\t\2\0\0Create a new, empty Counter object.  And if given, count elements\n        from an input iterable.  Or, initialize the count from another mapping\n        of elements to their counts.\n\n        >>> c = Counter()                           # a new, empty counter\n        >>> c = Counter('gallahad')                 # a new counter from an iterable\n        >>> c = Counter({'a': 4, 'b': 2})           # a new counter from a mapping\n        >>> c = Counter(a=4, b=2)                   # a new counter from keyword args\n\n        s;\0\0\0descriptor '__init__' of 'Counter' object needs an argumenti\0\0\0\0i\1\0\0\0s$\0\0\0expected at most 1 arguments, got %dN(\6\0\0\0R\16\0\0\0R\17\0\0\0t\5\0\0\0superR\0\0\0\0R\31\0\0\0RY\0\0\0(\3\0\0\0R\25\0\0\0R\26\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyR\31\0\0\0\276\1\0\0s\20\0\0\0\0\v\6\1\17\2\n\1\n\1\22\1\31\1\23\1c\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\1\0S(\2\0\0\0s1\0\0\0The count of elements not in the Counter is zero.i\0\0\0\0(\0\0\0\0(\2\0\0\0R\27\0\0\0R\32\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\v\0\0\0__missing__\323\1\0\0s\2\0\0\0\0\3c\2\0\0\0\2\0\0\0\6\0\0\0C\0\0\0sP\0\0\0|\1\0d\4\0k\10\0r.\0t\1\0|\0\0j\2\0\203\0\0d\1\0t\3\0d\2\0\203\1\0d\3\0t\4\0\203\1\2St\5\0j\6\0|\1\0|\0\0j\2\0\203\0\0d\1\0t\3\0d\2\0\203\1\0\203\2\1S(\5\0\0\0s\360\0\0\0List the n most common elements and their counts from the most\n        common to the least.  If n is None, then list all element counts.\n\n        >>> Counter('abcdeabcdabcaba').most_common(3)\n        [('a', 5), ('b', 4), ('c', 3)]\n\n        R\32\0\0\0i\1\0\0\0t\7\0\0\0reverseN(\7\0\0\0R\22\0\0\0t\6\0\0\0sortedR2\0\0\0Ro\0\0\0R[\0\0\0t\6\0\0\0_heapqt\10\0\0\0nlargest(\2\0\0\0R\27\0\0\0t\1\0\0\0n(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\v\0\0\0most_common\330\1\0\0s\6\0\0\0\0\t\f\1\"\1c\1\0\0\0\1\0\0\0\4\0\0\0C\0\0\0s\34\0\0\0t\0\0j\1\0t\2\0t\3\0|\0\0j\4\0\203\0\0\203\2\0\203\1\0S(\1\0\0\0s\201\2\0\0Iterator over elements repeating each as many times as its count.\n\n        >>> c = Counter('ABCABC')\n        >>> sorted(c.elements())\n        ['A', 'A', 'B', 'B', 'C', 'C']\n\n        # Knuth's example for prime factors of 1836:  2**2 * 3**3 * 17**1\n        >>> prime_factors = Counter({2: 2, 3: 3, 17: 1})\n        >>> product = 1\n        >>> for factor in prime_factors.elements():     # loop over factors\n        ...     product *= factor                       # and multiply them\n        >>> product\n        1836\n\n        Note, if an element's count has been set to zero or is a negative\n        number, elements() will ignore it.\n\n        (\5\0\0\0t\6\0\0\0_chaint\r\0\0\0from_iterablet\10\0\0\0_starmapt\7\0\0\0_repeatR2\0\0\0(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\10\0\0\0elements\345\1\0\0s\2\0\0\0\0\24c\3\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0d\1\0\203\1\0\202\1\0d\0\0S(\2\0\0\0Ns@\0\0\0Counter.fromkeys() is undefined.  Use Counter(iterable) instead.(\1\0\0\0t\23\0\0\0NotImplementedError(\3\0\0\0RF\0\0\0RG\0\0\0t\1\0\0\0v(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyRH\0\0\0\375\1\0\0s\4\0\0\0\0\4\3\1c\0\0\0\0\7\0\0\0\4\0\0\0O\0\0\0s2\1\0\0|\0\0s\25\0t\0\0d\1\0\203\1\0\202\1\0n\0\0|\0\0d\2\0\31}\2\0|\0\0d\3\0\37}\0\0t\1\0|\0\0\203\1\0d\3\0k\4\0rT\0t\0\0d\4\0t\1\0|\0\0\203\1\0\26\203\1\0\202\1\0n\0\0|\0\0rd\0|\0\0d\2\0\31n\3\0d\5\0}\3\0|\3\0d\5\0k\t\0r\30\1t\3\0|\3\0t\4\0\203\2\0r\344\0|\2\0r\313\0|\2\0j\5\0}\4\0xJ\0|\3\0j\6\0\203\0\0D]#\0\\\2\0}\5\0}\6\0|\4\0|\5\0d\2\0\203\2\0|\6\0\27|\2\0|\5\0<q\241\0Wq\25\1t\7\0t\10\0|\2\0\203\2\0j\t\0|\3\0\203\1\0\1q\30\1|\2\0j\5\0}\4\0x(\0|\3\0D]\35\0}\5\0|\4\0|\5\0d\2\0\203\2\0d\3\0\27|\2\0|\5\0<q\364\0Wn\0\0|\1\0r.\1|\2\0j\t\0|\1\0\203\1\0\1n\0\0d\5\0S(\6\0\0\0s\311\1\0\0Like dict.update() but add counts instead of replacing them.\n\n        Source can be an iterable, a dictionary, or another Counter instance.\n\n        >>> c = Counter('which')\n        >>> c.update('witch')           # add elements from another iterable\n        >>> d = Counter('watch')\n        >>> c.update(d)                 # add elements from another counter\n        >>> c['h']                      # four 'h' in which, witch, and watch\n        4\n\n        s9\0\0\0descriptor 'update' of 'Counter' object needs an argumenti\0\0\0\0i\1\0\0\0s$\0\0\0expected at most 1 arguments, got %dN(\n\0\0\0R\16\0\0\0R\17\0\0\0R\22\0\0\0RI\0\0\0t\7\0\0\0MappingR\212\0\0\0R2\0\0\0R\221\0\0\0R\0\0\0\0RY\0\0\0(\7\0\0\0R\25\0\0\0R\26\0\0\0R\27\0\0\0RG\0\0\0t\10\0\0\0self_gett\4\0\0\0elemt\5\0\0\0count(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyRY\0\0\0\4\2\0\0s&\0\0\0\0\24\6\1\17\2\n\1\n\1\22\1\31\1\26\1\f\1\17\1\6\1\t\1\31\1\36\2\31\2\t\1\r\1\36\1\6\1c\0\0\0\0\7\0\0\0\4\0\0\0O\0\0\0s\n\1\0\0|\0\0s\25\0t\0\0d\1\0\203\1\0\202\1\0n\0\0|\0\0d\2\0\31}\2\0|\0\0d\3\0\37}\0\0t\1\0|\0\0\203\1\0d\3\0k\4\0rT\0t\0\0d\4\0t\1\0|\0\0\203\1\0\26\203\1\0\202\1\0n\0\0|\0\0rd\0|\0\0d\2\0\31n\3\0d\5\0}\3\0|\3\0d\5\0k\t\0r\360\0|\2\0j\3\0}\4\0t\4\0|\3\0t\5\0\203\2\0r\305\0x\\\0|\3\0j\6\0\203\0\0D]#\0\\\2\0}\5\0}\6\0|\4\0|\5\0d\2\0\203\2\0|\6\0\30|\2\0|\5\0<q\233\0Wq\360\0x(\0|\3\0D]\35\0}\5\0|\4\0|\5\0d\2\0\203\2\0d\3\0\30|\2\0|\5\0<q\314\0Wn\0\0|\1\0r\6\1|\2\0j\7\0|\1\0\203\1\0\1n\0\0d\5\0S(\6\0\0\0s\267\2\0\0Like dict.update() but subtracts counts instead of replacing them.\n        Counts can be reduced below zero.  Both the inputs and outputs are\n        allowed to contain zero and negative counts.\n\n        Source can be an iterable, a dictionary, or another Counter instance.\n\n        >>> c = Counter('which')\n        >>> c.subtract('witch')             # subtract elements from another iterable\n        >>> c.subtract(Counter('watch'))    # subtract elements from another counter\n        >>> c['h']                          # 2 in which, minus 1 in witch, minus 1 in watch\n        0\n        >>> c['w']                          # 1 in which, minus 1 in witch, minus 1 in watch\n        -1\n\n        s;\0\0\0descriptor 'subtract' of 'Counter' object needs an argumenti\0\0\0\0i\1\0\0\0s$\0\0\0expected at most 1 arguments, got %dN(\10\0\0\0R\16\0\0\0R\17\0\0\0R\22\0\0\0R\212\0\0\0RI\0\0\0R\240\0\0\0R-\0\0\0t\10\0\0\0subtract(\7\0\0\0R\25\0\0\0R\26\0\0\0R\27\0\0\0RG\0\0\0R\241\0\0\0R\242\0\0\0R\243\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyR\244\0\0\0/\2\0\0s \0\0\0\0\20\6\1\17\2\n\1\n\1\22\1\31\1\26\1\f\1\t\1\17\1\31\1\36\2\r\1\36\1\6\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0|\0\0\203\1\0S(\1\0\0\0s\26\0\0\0Return a shallow copy.(\1\0\0\0R=\0\0\0(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyRC\0\0\0R\2\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\26\0\0\0|\0\0j\0\0t\1\0|\0\0\203\1\0f\1\0f\2\0S(\1\0\0\0N(\2\0\0\0R=\0\0\0R)\0\0\0(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyRE\0\0\0V\2\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s)\0\0\0|\1\0|\0\0k\6\0r%\0t\0\0t\1\0|\0\0\203\2\0j\2\0|\1\0\203\1\0\1n\0\0d\1\0S(\2\0\0\0sG\0\0\0Like dict.__delitem__() but does not raise KeyError for missing values.N(\3\0\0\0R\221\0\0\0R\0\0\0\0R$\0\0\0(\2\0\0\0R\27\0\0\0R\242\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyR$\0\0\0Y\2\0\0s\4\0\0\0\0\2\f\1c\1\0\0\0\2\0\0\0\4\0\0\0C\0\0\0sI\0\0\0|\0\0s\24\0d\1\0|\0\0j\0\0j\1\0\26Sd\2\0j\2\0t\3\0d\3\0j\4\0|\0\0j\5\0\203\0\0\203\2\0\203\1\0}\1\0d\4\0|\0\0j\0\0j\1\0|\1\0f\2\0\26S(\5\0\0\0Ns\4\0\0\0%s()s\2\0\0\0, s\6\0\0\0%r: %rs\10\0\0\0%s({%s})(\6\0\0\0R=\0\0\0R>\0\0\0R\203\0\0\0Rv\0\0\0t\7\0\0\0__mod__R\230\0\0\0(\2\0\0\0R\27\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyRA\0\0\0^\2\0\0s\10\0\0\0\0\1\6\1\16\1!\1c\2\0\0\0\6\0\0\0\4\0\0\0C\0\0\0s\246\0\0\0t\0\0|\1\0t\1\0\203\2\0s\23\0t\2\0St\1\0\203\0\0}\2\0xA\0|\0\0j\3\0\203\0\0D]3\0\\\2\0}\3\0}\4\0|\4\0|\1\0|\3\0\31\27}\5\0|\5\0d\1\0k\4\0r)\0|\5\0|\2\0|\3\0<q)\0q)\0Wx?\0|\1\0j\3\0\203\0\0D]1\0\\\2\0}\3\0}\4\0|\3\0|\0\0k\7\0rm\0|\4\0d\1\0k\4\0rm\0|\4\0|\2\0|\3\0<qm\0qm\0W|\2\0S(\2\0\0\0s\177\0\0\0Add counts from two counters.\n\n        >>> Counter('abbb') + Counter('bcc')\n        Counter({'b': 4, 'c': 2, 'a': 1})\n\n        i\0\0\0\0(\4\0\0\0RI\0\0\0R\0\0\0\0t\16\0\0\0NotImplementedR-\0\0\0(\6\0\0\0R\27\0\0\0RN\0\0\0R6\0\0\0R\242\0\0\0R\243\0\0\0t\10\0\0\0newcount(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\7\0\0\0__add__m\2\0\0s\26\0\0\0\0\7\17\1\4\1\t\1\31\1\16\1\f\1\21\1\31\1\30\1\21\1c\2\0\0\0\6\0\0\0\4\0\0\0C\0\0\0s\252\0\0\0t\0\0|\1\0t\1\0\203\2\0s\23\0t\2\0St\1\0\203\0\0}\2\0xA\0|\0\0j\3\0\203\0\0D]3\0\\\2\0}\3\0}\4\0|\4\0|\1\0|\3\0\31\30}\5\0|\5\0d\1\0k\4\0r)\0|\5\0|\2\0|\3\0<q)\0q)\0WxC\0|\1\0j\3\0\203\0\0D]5\0\\\2\0}\3\0}\4\0|\3\0|\0\0k\7\0rm\0|\4\0d\1\0k\0\0rm\0d\1\0|\4\0\30|\2\0|\3\0<qm\0qm\0W|\2\0S(\2\0\0\0s\230\0\0\0 Subtract count, but keep only results with positive counts.\n\n        >>> Counter('abbbc') - Counter('bccd')\n        Counter({'b': 2, 'a': 1})\n\n        i\0\0\0\0(\4\0\0\0RI\0\0\0R\0\0\0\0R\246\0\0\0R-\0\0\0(\6\0\0\0R\27\0\0\0RN\0\0\0R6\0\0\0R\242\0\0\0R\243\0\0\0R\247\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\7\0\0\0__sub__\200\2\0\0s\26\0\0\0\0\7\17\1\4\1\t\1\31\1\16\1\f\1\21\1\31\1\30\1\25\1c\2\0\0\0\7\0\0\0\4\0\0\0C\0\0\0s\272\0\0\0t\0\0|\1\0t\1\0\203\2\0s\23\0t\2\0St\1\0\203\0\0}\2\0xU\0|\0\0j\3\0\203\0\0D]G\0\\\2\0}\3\0}\4\0|\1\0|\3\0\31}\5\0|\4\0|\5\0k\0\0rQ\0|\5\0n\3\0|\4\0}\6\0|\6\0d\1\0k\4\0r)\0|\6\0|\2\0|\3\0<q)\0q)\0Wx?\0|\1\0j\3\0\203\0\0D]1\0\\\2\0}\3\0}\4\0|\3\0|\0\0k\7\0r\201\0|\4\0d\1\0k\4\0r\201\0|\4\0|\2\0|\3\0<q\201\0q\201\0W|\2\0S(\2\0\0\0s\240\0\0\0Union is the maximum of value in either of the input counters.\n\n        >>> Counter('abbb') | Counter('bcc')\n        Counter({'b': 3, 'c': 2, 'a': 1})\n\n        i\0\0\0\0(\4\0\0\0RI\0\0\0R\0\0\0\0R\246\0\0\0R-\0\0\0(\7\0\0\0R\27\0\0\0RN\0\0\0R6\0\0\0R\242\0\0\0R\243\0\0\0t\v\0\0\0other_countR\247\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\6\0\0\0__or__\223\2\0\0s\30\0\0\0\0\7\17\1\4\1\t\1\31\1\n\1\30\1\f\1\21\1\31\1\30\1\21\1c\2\0\0\0\7\0\0\0\4\0\0\0C\0\0\0sx\0\0\0t\0\0|\1\0t\1\0\203\2\0s\23\0t\2\0St\1\0\203\0\0}\2\0xU\0|\0\0j\3\0\203\0\0D]G\0\\\2\0}\3\0}\4\0|\1\0|\3\0\31}\5\0|\4\0|\5\0k\0\0rQ\0|\4\0n\3\0|\5\0}\6\0|\6\0d\1\0k\4\0r)\0|\6\0|\2\0|\3\0<q)\0q)\0W|\2\0S(\2\0\0\0s\207\0\0\0 Intersection is the minimum of corresponding counts.\n\n        >>> Counter('abbb') & Counter('bcc')\n        Counter({'b': 1})\n\n        i\0\0\0\0(\4\0\0\0RI\0\0\0R\0\0\0\0R\246\0\0\0R-\0\0\0(\7\0\0\0R\27\0\0\0RN\0\0\0R6\0\0\0R\242\0\0\0R\243\0\0\0R\252\0\0\0R\247\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\7\0\0\0__and__\247\2\0\0s\22\0\0\0\0\7\17\1\4\1\t\1\31\1\n\1\30\1\f\1\21\1N(\24\0\0\0R>\0\0\0RV\0\0\0RW\0\0\0R\31\0\0\0R\222\0\0\0R\22\0\0\0R\230\0\0\0R\235\0\0\0R\\\0\0\0RH\0\0\0RY\0\0\0R\244\0\0\0RC\0\0\0RE\0\0\0R$\0\0\0RA\0\0\0R\250\0\0\0R\251\0\0\0R\253\0\0\0R\254\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyR\0\0\0\0\213\1\0\0s\"\0\0\0\6+\6\10\t\25\t\5\f\r\t\30\3\1\17\6\t+\t#\t\4\t\3\t\5\t\17\t\23\t\23\t\24Rr\0\0\0(\2\0\0\0t\5\0\0\0loadst\5\0\0\0dumpst\5\0\0\0Points\4\0\0\0x, yt\1\0\0\0xi\n\0\0\0t\1\0\0\0yi\24\0\0\0s\3\0\0\0x yc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s&\0\0\0e\0\0Z\1\0d\2\0Z\2\0e\3\0d\0\0\204\0\0\203\1\0Z\4\0d\1\0\204\0\0Z\5\0RS(\3\0\0\0c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\32\0\0\0|\0\0j\0\0d\1\0\23|\0\0j\1\0d\1\0\23\27d\2\0\23S(\3\0\0\0Ni\2\0\0\0g\0\0\0\0\0\0\340?(\2\0\0\0R\260\0\0\0R\261\0\0\0(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\5\0\0\0hypot\303\2\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\4\0\0\0C\0\0\0s\32\0\0\0d\1\0|\0\0j\0\0|\0\0j\1\0|\0\0j\2\0f\3\0\26S(\2\0\0\0Ns$\0\0\0Point: x=%6.3f  y=%6.3f  hypot=%6.3f(\3\0\0\0R\260\0\0\0R\261\0\0\0R\262\0\0\0(\1\0\0\0R\27\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\7\0\0\0__str__\306\2\0\0s\2\0\0\0\0\1(\0\0\0\0(\6\0\0\0R>\0\0\0RV\0\0\0t\t\0\0\0__slots__R\204\0\0\0R\262\0\0\0R\263\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyR\257\0\0\0\301\2\0\0s\6\0\0\0\6\1\6\1\17\3i\3\0\0\0i\4\0\0\0i\16\0\0\0i\5\0\0\0g\0\0\0\0\0\0\34@c\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s/\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\2\0Z\3\0e\4\0e\5\0j\6\0\203\1\0Z\7\0e\10\0d\1\0\204\1\0Z\t\0RS(\3\0\0\0sH\0\0\0Point class with optimized _make() and _replace() without error-checkingc\2\0\0\0\3\0\0\0\5\0\0\0K\0\0\0s\34\0\0\0|\0\0j\0", 20480) = 20480
27308 read(6, "\0|\1\0|\2\0j\1\0d\3\0|\0\0\203\3\0\203\1\0S(\4\0\0\0NR\260\0\0\0R\261\0\0\0(\2\0\0\0R\260\0\0\0R\261\0\0\0(\2\0\0\0t\5\0\0\0_makeR\212\0\0\0(\3\0\0\0R\27\0\0\0t\4\0\0\0_mapR\26\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\10\0\0\0_replace\320\2\0\0s\2\0\0\0\0\1(\0\0\0\0(\n\0\0\0R>\0\0\0RV\0\0\0RW\0\0\0R\264\0\0\0R\\\0\0\0R\201\0\0\0t\7\0\0\0__new__R\265\0\0\0Rv\0\0\0R\267\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyR\257\0\0\0\314\2\0\0s\10\0\0\0\6\1\6\1\6\1\17\1i\v\0\0\0i\26\0\0\0id\0\0\0t\7\0\0\0Point3Dt\1\0\0\0zt\v\0\0\0TestResultss\20\0\0\0failed attempted(6\0\0\0t\7\0\0\0__all__t\7\0\0\0_abcollt\f\0\0\0_collectionsR\1\0\0\0R\2\0\0\0t\10\0\0\0operatorR\6\0\0\0Ro\0\0\0R\7\0\0\0RM\0\0\0t\7\0\0\0keywordR\10\0\0\0Rz\0\0\0t\3\0\0\0sysR\207\0\0\0t\5\0\0\0heapqR\225\0\0\0t\t\0\0\0itertoolsR\t\0\0\0R\234\0\0\0R\n\0\0\0R\231\0\0\0R\v\0\0\0R\233\0\0\0R\f\0\0\0RL\0\0\0t\6\0\0\0threadR\r\0\0\0R<\0\0\0t\v\0\0\0ImportErrort\f\0\0\0dummy_threadR)\0\0\0R\4\0\0\0R\200\0\0\0Rj\0\0\0Rn\0\0\0t\5\0\0\0FalseR\3\0\0\0R\0\0\0\0R>\0\0\0t\7\0\0\0cPickleR\255\0\0\0R\256\0\0\0R[\0\0\0R\257\0\0\0t\1\0\0\0pt\16\0\0\0AssertionErrorR\267\0\0\0t\7\0\0\0_fieldsR\271\0\0\0RW\0\0\0t\7\0\0\0doctestR\273\0\0\0t\7\0\0\0testmod(\0\0\0\0(\0\0\0\0(\0\0\0\0s!\0\0\0/usr/lib/python2.7/collections.pyt\10\0\0\0<module>\1\0\0\0sJ\0\0\0\25\3\n\1\f\1\r\2\26\1\26\1\20\1\f\1\f\1\34\1\20\2\3\1\24\1\r\1\24\7\26\377\0\4\6\2\6\4\6\2\17f\26\377\0/\f\2\26\1\22\1\25\1\36\3\37\10)\1\t\2\37\7\32\2\31\1\10\2\f\1\17\1", 4096) = 941
27308 read(6, "", 4096)                 = 0
27308 close(6)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 brk(0x84f7000)                    = 0x84f7000
27308 stat64("keyword", 0xbfffd57c)     = -1 ENOENT (No such file or directory)
27308 open("keyword.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("keyword.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("keywordmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("keyword.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("keyword.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/keyword", 0xbfffd57c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/keyword.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/keyword.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/keywordmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/keyword.py", O_RDONLY|O_LARGEFILE) = 6
27308 brk(0x84f6000)                    = 0x84f6000
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=661516, st_mode=S_IFREG|0755, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1995, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:47:31, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/keyword.pyc", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669382, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2101, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(7, "\3\363\r\n\243r\35Uc\0\0\0\0\0\0\0\0\37\0\0\0@\0\0\0s\247\0\0\0d\0\0Z\0\0d\1\0d\2\0g\2\0Z\1\0d\3\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0d\v\0d\f\0d\r\0d\16\0d\17\0d\20\0d\21\0d\22\0d\23\0d\24\0d\25\0d\26\0d\27\0d\30\0d\31\0d\32\0d\33\0d\34\0d\35\0d\36\0d\37\0d \0d!\0g\37\0Z\2\0e\3\0e\2\0\203\1\0j\4\0Z\5\0d\"\0\204\0\0Z\6\0e\7\0d#\0k\2\0r\243\0e\6\0\203\0\0\1n\0\0d$\0S(%\0\0\0s\373\0\0\0Keywords (from \"graminit.c\")\n\nThis file is automatically generated; please don't muck it up!\n\nTo update the symbols in this file, 'cd' to the top directory of\nthe python source tree after building the interpreter and run:\n\n    ./python Lib/keyword.py\nt\t\0\0\0iskeywordt\6\0\0\0kwlistt\3\0\0\0andt\2\0\0\0ast\6\0\0\0assertt\5\0\0\0breakt\5\0\0\0classt\10\0\0\0continuet\3\0\0\0deft\3\0\0\0delt\4\0\0\0elift\4\0\0\0elset\6\0\0\0exceptt\4\0\0\0exect\7\0\0\0finallyt\3\0\0\0fort\4\0\0\0fromt\6\0\0\0globalt\2\0\0\0ift\6\0\0\0importt\2\0\0\0int\2\0\0\0ist\6\0\0\0lambdat\3\0\0\0nott\2\0\0\0ort\4\0\0\0passt\5\0\0\0printt\5\0\0\0raiset\6\0\0\0returnt\3\0\0\0tryt\5\0\0\0whilet\4\0\0\0witht\5\0\0\0yieldc\0\0\0\0\r\0\0\0\5\0\0\0C\0\0\0s\244\1\0\0d\1\0d\0\0l\0\0}\0\0d\1\0d\0\0l\1\0}\1\0|\0\0j\2\0d\2\0\37}\2\0|\2\0r5\0|\2\0d\3\0\31p8\0d\4\0}\3\0t\3\0|\2\0\203\1\0d\2\0k\4\0rZ\0|\2\0d\2\0\31}\4\0n\6\0d\5\0}\4\0t\4\0|\3\0\203\1\0}\5\0|\1\0j\5\0d\6\0\203\1\0}\6\0g\0\0}\7\0xS\0|\5\0D]K\0}\10\0d\7\0|\10\0k\6\0r\210\0|\6\0j\6\0|\10\0\203\1\0}\t\0|\t\0r\323\0|\7\0j\7\0d\10\0|\t\0j\10\0d\2\0\203\1\0\27d\t\0\27\203\1\0\1q\323\0q\210\0q\210\0W|\5\0j\t\0\203\0\0\1|\7\0j\n\0\203\0\0\1t\4\0|\4\0\203\1\0}\5\0|\5\0j\v\0\203\0\0}\n\0|\5\0j\t\0\203\0\0\1y3\0|\n\0j\f\0d\n\0\203\1\0d\2\0\27}\v\0|\n\0j\f\0d\v\0\203\1\0}\f\0|\7\0|\n\0|\v\0|\f\0+Wn.\0\4t\r\0k\n\0rp\1\1\1\1|\0\0j\16\0j\17\0d\f\0\203\1\0\1|\0\0j\20\0d\2\0\203\1\0\1n\1\0Xt\4\0|\4\0d\r\0\203\2\0}\5\0|\5\0j\17\0d\16\0j\21\0|\n\0\203\1\0\203\1\0\1|\5\0j\t\0\203\0\0\1d\0\0S(\17\0\0\0Ni\377\377\377\377i\1\0\0\0i\0\0\0\0s\21\0\0\0Python/graminit.cs\16\0\0\0Lib/keyword.pys\t\0\0\0\"([^\"]+)\"s\5\0\0\0{1, \"s\t\0\0\0        's\3\0\0\0',\ns\24\0\0\0#--start keywords--\ns\22\0\0\0#--end keywords--\ns'\0\0\0target does not contain format markers\nt\1\0\0\0wt\0\0\0\0(\22\0\0\0t\3\0\0\0syst\2\0\0\0ret\4\0\0\0argvt\3\0\0\0lent\4\0\0\0opent\7\0\0\0compilet\6\0\0\0searcht\6\0\0\0appendt\5\0\0\0groupt\5\0\0\0closet\4\0\0\0sortt\t\0\0\0readlinest\5\0\0\0indext\n\0\0\0ValueErrort\6\0\0\0stderrt\5\0\0\0writet\4\0\0\0exitt\4\0\0\0join(\r\0\0\0R#\0\0\0R$\0\0\0t\4\0\0\0argst\7\0\0\0iptfilet\7\0\0\0optfilet\2\0\0\0fpt\7\0\0\0strprogt\5\0\0\0linest\4\0\0\0linet\5\0\0\0matcht\6\0\0\0formatt\5\0\0\0startt\3\0\0\0end(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/keyword.pyt\4\0\0\0main5\0\0\0s:\0\0\0\0\1\30\2\r\1\26\1\22\0\r\1\6\3\f\1\17\1\6\1\r\1\f\1\17\1\6\1(\1\n\1\n\3\f\1\f\1\n\3\3\1\23\1\17\1\21\1\r\1\20\1\21\3\17\1\26\1t\10\0\0\0__main__N(\10\0\0\0t\7\0\0\0__doc__t\7\0\0\0__all__R\1\0\0\0t\t\0\0\0frozensett\f\0\0\0__contains__R\0\0\0\0R@\0\0\0t\10\0\0\0__name__(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/keyword.pyt\10\0\0\0<module>\v\0\0\0sH\0\0\0\6\2\f\4\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\t\4\17\2\t'\f\1", 4096) = 2101
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669382, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2101, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(7, "", 4096)                 = 0
27308 close(7)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 close(6)                          = 0
27308 stat64("heapq", 0xbfffd57c)       = -1 ENOENT (No such file or directory)
27308 open("heapq.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("heapq.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("heapqmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("heapq.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("heapq.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/heapq", 0xbfffd57c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/heapq.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/heapq.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/heapqmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/heapq.py", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=661505, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=18296, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/heapq.pyc", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669383, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=14529, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(7, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\n\0\0\0@\0\0\0s\321\1\0\0d\0\0Z\0\0d\1\0Z\1\0d\2\0d\3\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0g\10\0Z\2\0d\n\0d\v\0l\3\0m\4\0Z\4\0m\5\0Z\5\0m\6\0Z\6\0m\7\0Z\7\0m\10\0Z\10\0m\t\0Z\t\0\1d\n\0d\f\0l\n\0m\v\0Z\v\0\1d\r\0\204\0\0Z\f\0d\16\0\204\0\0Z\r\0d\17\0\204\0\0Z\16\0d\20\0\204\0\0Z\17\0d\21\0\204\0\0Z\20\0d\22\0\204\0\0Z\21\0d\23\0\204\0\0Z\22\0d\24\0\204\0\0Z\23\0d\25\0\204\0\0Z\24\0d\26\0\204\0\0Z\25\0d\27\0\204\0\0Z\26\0d\30\0\204\0\0Z\27\0d\31\0\204\0\0Z\30\0d\32\0\204\0\0Z\31\0y\16\0d\n\0d\33\0l\32\0TWn\21\0\4e\33\0k\n\0r\7\1\1\1\1n\1\0Xd\34\0\204\0\0Z\34\0e\25\0Z\35\0d*\0d\35\0\204\1\0Z\25\0e\24\0Z\37\0d*\0d\36\0\204\1\0Z\24\0e \0d\37\0k\2\0r\315\1g\0\0Z!\0d \0d!\0d\"\0d#\0d$\0d%\0d&\0d'\0d(\0d)\0g\n\0Z\"\0x\33\0e\"\0D]\23\0Z#\0e\r\0e!\0e#\0\203\2\0\1qr\1Wg\0\0Z$\0x\35\0e!\0r\256\1e$\0j%\0e\16\0e!\0\203\1\0\203\1\0\1q\222\1We$\0GHd\n\0d*\0l&\0Z&\0e&\0j'\0\203\0\0\1n\0\0d*\0S(+\0\0\0s\357\4\0\0Heap queue algorithm (a.k.a. priority queue).\n\nHeaps are arrays for which a[k] <= a[2*k+1] and a[k] <= a[2*k+2] for\nall k, counting elements from 0.  For the sake of comparison,\nnon-existing elements are considered to be infinite.  The interesting\nproperty of a heap is that a[0] is always its smallest element.\n\nUsage:\n\nheap = []            # creates an empty heap\nheappush(heap, item) # pushes a new item on the heap\nitem = heappop(heap) # pops the smallest item from the heap\nitem = heap[0]       # smallest item on the heap without popping it\nheapify(x)           # transforms list into a heap, in-place, in linear time\nitem = heapreplace(heap, item) # pops and returns smallest item, and adds\n                               # new item; the heap size is unchanged\n\nOur API differs from textbook heap algorithms as follows:\n\n- We use 0-based indexing.  This makes the relationship between the\n  index for a node and the indexes for its children slightly less\n  obvious, but is more suitable since Python uses 0-based indexing.\n\n- Our heappop() method returns the smallest item, not the largest.\n\nThese two make it possible to view the heap as a regular Python list\nwithout surprises: heap[0] is the smallest item, and heap.sort()\nmaintains the heap invariant!\nso\22\0\0Heap queues\n\n[explanation by Fran\347ois Pinard]\n\nHeaps are arrays for which a[k] <= a[2*k+1] and a[k] <= a[2*k+2] for\nall k, counting elements from 0.  For the sake of comparison,\nnon-existing elements are considered to be infinite.  The interesting\nproperty of a heap is that a[0] is always its smallest element.\n\nThe strange invariant above is meant to be an efficient memory\nrepresentation for a tournament.  The numbers below are `k', not a[k]:\n\n                                   0\n\n                  1                                 2\n\n          3               4                5               6\n\n      7       8       9       10      11      12      13      14\n\n    15 16   17 18   19 20   21 22   23 24   25 26   27 28   29 30\n\n\nIn the tree above, each cell `k' is topping `2*k+1' and `2*k+2'.  In\nan usual binary tournament we see in sports, each cell is the winner\nover the two cells it tops, and we can trace the winner down the tree\nto see all opponents s/he had.  However, in many computer applications\nof such tournaments, we do not need to trace the history of a winner.\nTo be more memory efficient, when a winner is promoted, we try to\nreplace it by something else at a lower level, and the rule becomes\nthat a cell and the two cells it tops contain three different items,\nbut the top cell \"wins\" over the two topped cells.\n\nIf this heap invariant is protected at all time, index 0 is clearly\nthe overall winner.  The simplest algorithmic way to remove it and\nfind the \"next\" winner is to move some loser (let's say cell 30 in the\ndiagram above) into the 0 position, and then percolate this new 0 down\nthe tree, exchanging values, until the invariant is re-established.\nThis is clearly logarithmic on the total number of items in the tree.\nBy iterating over all items, you get an O(n ln n) sort.\n\nA nice feature of this sort is that you can efficiently insert new\nitems while the sort is going on, provided that the inserted items are\nnot \"better\" than the last 0'th element you extracted.  This is\nespecially useful in simulation contexts, where the tree holds all\nincoming events, and the \"win\" condition means the smallest scheduled\ntime.  When an event schedule other events for execution, they are\nscheduled into the future, so they can easily go into the heap.  So, a\nheap is a good structure for impl", 4096) = 4096
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669383, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=14529, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(7, "ementing schedulers (this is what I\nused for my MIDI sequencer :-).\n\nVarious structures for implementing schedulers have been extensively\nstudied, and heaps are good for this, as they are reasonably speedy,\nthe speed is almost constant, and the worst case is not much different\nthan the average case.  However, there are other representations which\nare more efficient overall, yet the worst cases might be terrible.\n\nHeaps are also very useful in big disk sorts.  You most probably all\nknow that a big sort implies producing \"runs\" (which are pre-sorted\nsequences, which size is usually related to the amount of CPU memory),\nfollowed by a merging passes for these runs, which merging is often\nvery cleverly organised[1].  It is very important that the initial\nsort produces the longest runs possible.  Tournaments are a good way\nto that.  If, using all the memory available to hold a tournament, you\nreplace and percolate items that happen to fit the current run, you'll\nproduce runs which are twice the size of the memory for random input,\nand much better for input fuzzily ordered.\n\nMoreover, if you output the 0'th item on disk and get an input which\nmay not fit in the current tournament (because the value \"wins\" over\nthe last output value), it cannot fit in the heap, so the size of the\nheap decreases.  The freed memory could be cleverly reused immediately\nfor progressively building a second heap, which grows at exactly the\nsame rate the first heap is melting.  When the first heap completely\nvanishes, you switch heaps and start a new run.  Clever and quite\neffective!\n\nIn a word, heaps are useful memory structures to know.  I use them in\na few applications, and I think it is good to keep a `heap' module\naround. :-)\n\n--------------------\n[1] The disk balancing algorithms which are current, nowadays, are\nmore annoying than clever, and this is a consequence of the seeking\ncapabilities of the disks.  On devices which cannot seek, like big\ntape drives, the story was quite different, and one had to be very\nclever to ensure (far in advance) that each tape movement will be the\nmost effective possible (that is, will best participate at\n\"progressing\" the merge).  Some tapes were even able to read\nbackwards, and this was also used to avoid the rewinding time.\nBelieve me, real good tape sorts were quite spectacular to watch!\nFrom all times, sorting has always been a Great Art! :-)\nt\10\0\0\0heappusht\7\0\0\0heappopt\7\0\0\0heapifyt\v\0\0\0heapreplacet\5\0\0\0merget\10\0\0\0nlargestt\t\0\0\0nsmallestt\v\0\0\0heappushpopi\377\377\377\377(\6\0\0\0t\6\0\0\0islicet\5\0\0\0countt\4\0\0\0imapt\4\0\0\0izipt\3\0\0\0teet\5\0\0\0chain(\1\0\0\0t\n\0\0\0itemgetterc\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s$\0\0\0t\0\0|\0\0d\1\0\203\2\0r\31\0|\0\0|\1\0k\0\0S|\1\0|\0\0k\1\0\fS(\2\0\0\0Nt\6\0\0\0__lt__(\1\0\0\0t\7\0\0\0hasattr(\2\0\0\0t\1\0\0\0xt\1\0\0\0y(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyt\6\0\0\0cmp_lt\207\0\0\0s\2\0\0\0\0\3c\2\0\0\0\2\0\0\0\5\0\0\0C\0\0\0s+\0\0\0|\0\0j\0\0|\1\0\203\1\0\1t\1\0|\0\0d\1\0t\2\0|\0\0\203\1\0d\2\0\30\203\3\0\1d\3\0S(\4\0\0\0s4\0\0\0Push item onto heap, maintaining the heap invariant.i\0\0\0\0i\1\0\0\0N(\3\0\0\0t\6\0\0\0appendt\t\0\0\0_siftdownt\3\0\0\0len(\2\0\0\0t\4\0\0\0heapt\4\0\0\0item(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR\0\0\0\0\214\0\0\0s\4\0\0\0\0\2\r\1c\1\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s@\0\0\0|\0\0j\0\0\203\0\0}\1\0|\0\0r6\0|\0\0d\1\0\31}\2\0|\1\0|\0\0d\1\0<t\1\0|\0\0d\1\0\203\2\0\1n\6\0|\1\0}\2\0|\2\0S(\2\0\0\0sC\0\0\0Pop the smallest item off the heap, maintaining the heap invariant.i\0\0\0\0(\2\0\0\0t\3\0\0\0popt\7\0\0\0_siftup(\3\0\0\0R\27\0\0\0t\7\0\0\0lasteltt\n\0\0\0returnitem(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR\1\0\0\0\221\0\0\0s\16\0\0\0\0\2\f\1\6\1\n\1\n\1\20\2\6\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s%\0\0\0|\0\0d\1\0\31}\2\0|\1\0|\0\0d\1\0<t\0\0|\0\0d\1\0\203\2\0\1|\2\0S(\2\0\0\0s\262\1\0\0Pop and return the current smallest value, and add the new item.\n\n    This is more efficient than heappop() followed by heappush(), and can be\n    more appropriate when using a fixed-size heap.  Note that the value\n    returned may be larger than item!  That constrains reasonable uses of\n    this routine unless written as part of a conditional replacement:\n\n        if item > heap[0]:\n            item = heapreplace(heap, item)\n    i\0\0\0\0(\1\0\0\0R\32\0\0\0(\3\0\0\0R\27\0\0\0R\30\0\0\0R\34\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR\3\0\0\0\234\0\0\0s\10\0\0\0\0\v\n\1\n\1\r\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0sB\0\0\0|\0\0r>\0t\0\0|\0\0d\1\0\31|\1\0\203\2\0r>\0|\0\0d\1\0\31|\1\0\2}\1\0|\0\0d\1\0<t\1\0|\0\0d\1\0\203\2\0\1n\0\0|\1\0S(\2\0\0\0s1\0\0\0Fast version of a heappush followed by a heappop.i\0\0\0\0(\2\0\0\0R\23\0\0\0R\32\0\0\0(\2\0\0\0R\27\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR\7\0\0\0\254\0\0\0s\10\0\0\0\0\2\31\1\25\1\20\1c\1\0\0\0\3\0\0\0\4\0\0\0C\0\0\0s>\0\0\0t\0\0|\0\0\203\1\0}\1\0x+\0t\1\0t\2\0|\1\0d\1\0\32\203\1\0\203\1\0D]\23\0}\2\0t\3\0|\0\0|\2\0\203\2\0\1q#\0Wd\2\0S(\3\0\0\0s8\0\0\0Transform list into a heap, in-place, in O(len(x)) time.i\2\0\0\0N(\4\0\0\0R\26\0\0\0t\10\0\0\0reversedt\6\0\0\0xrangeR\32\0\0\0(\3\0\0\0R\21\0\0\0t\1\0\0\0nt\1\0\0\0i(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR\2\0\0\0\263\0\0\0s\6\0\0\0\0\2\f\6\35\1c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0sB\0\0\0|\0\0r>\0t\0\0|\1\0|\0\0d\1\0\31\203\2\0r>\0|\0\0d\1\0\31|\1\0\2}\1\0|\0\0d\1\0<t\1\0|\0\0d\1\0\203\2\0\1n\0\0|\1\0S(\2\0\0\0s4\0\0\0Maxheap version of a heappush followed by a heappop.i\0\0\0\0(\2\0\0\0R\23\0\0\0t\v\0\0\0_siftup_max(\2\0\0\0R\27\0\0\0R\30\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyt\20\0\0\0_heappushpop_max\276\0\0\0s\10\0\0\0\0\2\31\1\25\1\20\1c\1\0\0\0\3\0\0\0\4\0\0\0C\0\0\0s>\0\0\0t\0\0|\0\0\203\1\0}\1\0x+\0t\1\0t\2\0|\1\0d\1\0\32\203\1\0\203\1\0D]\23\0}\2\0t\3\0|\0\0|\2\0\203\2\0\1q#\0Wd\2\0S(\3\0\0\0s;\0\0\0Transform list into a maxheap, in-place, in O(len(x)) time.i\2\0\0\0N(\4\0\0\0R\26\0\0\0R\35\0\0\0t\5\0\0\0rangeR!\0\0\0(\3\0\0\0R\21\0\0\0R\37\0\0\0R \0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyt\f\0\0\0_heapify_max\305\0\0\0s\6\0\0\0\0\2\f\1\35\1c\2\0\0\0\6\0\0\0\4\0\0\0C\0\0\0s}\0\0\0|\0\0d\1\0k\0\0r\20\0g\0\0St\0\0|\1\0\203\1\0}\2\0t\1\0t\2\0|\2\0|\0\0\203\2\0\203\1\0}\3\0|\3\0s;\0|\3\0St\3\0|\3\0\203\1\0\1t\4\0}\4\0x\33\0|\2\0D]\23\0}\5\0|\4\0|\3\0|\5\0\203\2\0\1qR\0W|\3\0j\5\0d\2\0t\6\0\203\0\1\1|\3\0S(\3\0\0\0sf\0\0\0Find the n largest elements in a dataset.\n\n    Equivalent to:  sorted(iterable, reverse=True)[:n]\n    i\0\0\0\0t\7\0\0\0reverse(\7\0\0\0t\4\0\0\0itert\4\0\0\0listR\10\0\0\0R\2\0\0\0R\7\0\0\0t\4\0\0\0sortt\4\0\0\0True(\6\0\0\0R\37\0\0\0t\10\0\0\0iterablet\2\0\0\0itt\6\0\0\0resultt\f\0\0\0_heappushpopt\4\0\0\0elem(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR\5\0\0\0\313\0\0\0s\30\0\0\0\0\5\f\1\4\1\f\1\25\1\6\1\4\1\n\1\6\1\r\1\21\1\20\1c\2\0\0\0\6\0\0\0\4\0\0\0C\0\0\0sw\0\0\0|\0\0d\1\0k\0\0r\20\0g\0\0St\0\0|\1\0\203\1\0}\2\0t\1\0t\2\0|\2\0|\0\0\203\2\0\203\1\0}\3\0|\3\0s;\0|\3\0St\3\0|\3\0\203\1\0\1t\4\0}\4\0x\33\0|\2\0D]\23\0}\5\0|\4\0|\3\0|\5\0\203\2\0\1qR\0W|\3\0j\5\0\203\0\0\1|\3\0S(\2\0\0\0sY\0\0\0Find the n smallest elements in a dataset.\n\n    Equivalent to:  sorted(iterable)[:n]\n    i\0\0\0\0(\6\0\0\0R&\0\0\0R'\0\0\0R\10\0\0\0R$\0\0\0R\"\0\0\0R(\0\0\0(\6\0\0\0R\37\0\0\0R*\0\0\0R+\0\0\0R,\0\0\0R-\0\0\0R.\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR\6\0\0\0\335\0\0\0s\30\0\0\0\0\5\f\1\4\1\f\1\25\1\6\1\4\1\n\1\6\1\r\1\21\1\n\1c\3\0\0\0\6\0\0\0\3\0\0\0C\0\0\0si\0\0\0|\0\0|\2\0\31}\3\0xN\0|\2\0|\1\0k\4\0rZ\0|\2\0d\1\0\30d\1\0?}\4\0|\0\0|\4\0\31}\5\0t\0\0|\3\0|\5\0\203\2\0rV\0|\5\0|\0\0|\2\0<|\4\0}\2\0q\r\0n\0\0Pq\r\0W|\3\0|\0\0|\2\0<d\0\0S(\2\0\0\0Ni\1\0\0\0(\1\0\0\0R\23\0\0\0(\6\0\0\0R\27\0\0\0t\10\0\0\0startpost\3\0\0\0post\7\0\0\0newitemt\t\0\0\0parentpost\6\0\0\0parent(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR\25\0\0\0\362\0\0\0s\24\0\0\0\0\1\n\3\17\1\16\1\n\1\17\1\n\1\6\1\6\1\5\1c\2\0\0\0\7\0\0\0\4\0\0\0C\0\0\0s\264\0\0\0t\0\0|\0\0\203\1\0}\2\0|\1\0}\3\0|\0\0|\1\0\31}\4\0d\1\0|\1\0\24d\2\0\27}\5\0xi\0|\5\0|\2\0k\0\0r\225\0|\5\0d\2\0\27}\6\0|\6\0|\2\0k\0\0rp\0t\1\0|\0\0|\5\0\31|\0\0|\6\0\31\203\2\0\frp\0|\6\0}\5\0n\0\0|\0\0|\5\0\31|\0\0|\1\0<|\5\0}\1\0d\1\0|\1\0\24d\2\0\27}\5\0q-\0W|\4\0|\0\0|\1\0<t\2\0|\0\0|\3\0|\1\0\203\3\0\1d\0\0S(\3\0\0\0Ni\2\0\0\0i\1\0\0\0(\3\0\0\0R\26\0\0\0R\23\0\0\0R\25\0\0\0(\7\0\0\0R\27\0\0\0R0\0\0\0t\6\0\0\0endposR/\0\0\0R1\0\0\0t\10\0\0\0childpost\10\0\0\0rightpos(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR\32\0\0\0'\1\0\0s\32\0\0\0\0\1\f\1\6\1\n\2\16\1\17\2\n\1$\1\t\2\16\1\6\1\22\3\n\1c\3\0\0\0\6\0\0\0\3\0\0\0C\0\0\0si\0\0\0|\0\0|\2\0\31}\3\0xN\0|\2\0|\1\0k\4\0rZ\0|\2\0d\1\0\30d\1\0?}\4\0|\0\0|\4\0\31}\5\0t\0\0|\5\0|\3\0\203\2\0rV\0|\5\0|\0\0|\2\0<|\4\0}\2\0q\r\0n\0\0Pq\r\0W|\3\0|\0\0|\2\0<d\2\0S(\3\0\0\0s\34\0\0\0Maxheap variant of _siftdowni\1\0\0\0N(\1\0\0\0R\23\0\0\0(\6\0\0\0R\27\0\0\0R/\0\0\0R0\0\0\0R1\0\0\0R2\0\0\0R3\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyt\r\0\0\0_siftdown_max;\1\0\0s\24\0\0\0\0\2\n\3\17\1\16\1\n\1\17\1\n\1\6\1\6\1\5\1c\2\0\0\0\7\0\0\0\4\0\0\0C\0\0\0s\264\0\0\0t\0\0|\0\0\203\1\0}\2\0|\1\0}\3\0|\0\0|\1\0\31}\4\0d\1\0|\1\0\24d\2\0\27}\5\0xi\0|\5\0|\2\0k\0\0r\225\0|\5\0d\2\0\27}\6\0|\6\0|\2\0k\0\0rp\0t\1\0|\0\0|\6\0\31|\0\0|\5\0\31\203\2\0\frp\0|\6\0}\5\0n\0\0|\0\0|\5\0\31|\0\0|\1\0<|\5\0}\1\0d\1\0|\1\0\24d\2\0\27}\5\0q-\0W|\4\0|\0\0|\1\0<t\2\0|\0\0|\3\0|\1\0\203\3\0\1d\3\0S(\4\0\0\0s\32\0\0\0Maxheap variant of _siftupi\2\0\0\0i\1\0\0\0N(\3\0\0\0R\26\0\0\0R\23\0\0\0R7\0\0\0(\7\0\0\0R\27\0\0\0R0\0\0\0R4\0\0\0R/\0\0\0R1\0\0\0R5\0\0\0R6\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR!\0\0\0J\1\0\0s\32\0\0\0\0\2\f\1\6\1\n\2\16\1\17\2\n\1$\1\t\2\16\1\6\1\22\3\n\1(\1\0\0\0t\1\0\0\0*c\0\0\0\0\f\0\0\0\6\0\0\0g\0\0\0sF\1\0\0t\0\0t\1\0t\2\0\3\2}\1\0}\2\0}\3\0t\3\0}\4\0g\0\0}\5\0|\5\0j\4\0}\6\0xZ\0t\5\0t\6\0t\7\0|\0\0\203\2\0\203\1\0D]C\0\\\2\0}\7\0}\10\0y#\0|\10\0j\10\0}\t\0|\6\0|\t\0\203\0\0|\7\0|\t\0g\3\0\203\1\0\1Wq?\0\4|\3\0k\n\0r\201\0\1\1\1q?\0Xq?\0Wt\t\0|\5\0\203\1\0\1xu\0|\4\0|\5\0\203\1\0d\1\0k\4\0r\7\1yA\0x:\0|\5\0d\2\0\31\4\\\3\0}\n\0}\7\0}\t\0}\v\0|\n\0V\1|\t\0\203\0\0|\v\0d\2\0<|\2\0|\5\0|\v\0\203\2\0\1q\253\0WWq\223\0\4|\3\0k\n\0r\3\1\1\1\1|\1\0|\5\0\203\1\0\1q\223\0Xq\223\0W|\5\0rB\1|\5\0d\2\0\31\\\3\0}\n\0}\7\0}\t\0|\n\0V\1x\31\0|\t\0j\n\0D]\v\0}\n\0|\n\0V\1q0\1Wn\0\0d\3\0S(\4\0\0\0s\213\1\0\0Merge multiple sorted inputs into a single sorted output.\n\n    Similar to sorted(itertools.chain(*iterables)) but returns a generator,\n    does not pull the data into memory all at once, and assumes that each of\n    the input streams is already sorted (smallest to largest).\n\n    >>> list(merge([1,3,5,7], [0,2,4,8], [5,10,15,20], [], [25]))\n    [0, 1, 2, 3, 4, 5, 5, 7, 8, 10, 15, 20, 25]\n\n    i\1\0\0\0i\0\0\0\0N(\v\0\0\0R\1\0\0\0R\3\0\0\0t\r\0\0\0StopIterationR\26\0\0\0R\24\0\0\0t\t\0\0\0enumeratet\3\0\0\0mapR&\0\0\0t\4\0\0\0nextR\2\0\0\0t\10\0\0\0__self__(\f\0\0\0t\t\0\0\0iterablest\10\0\0\0_heappopt\f\0\0\0_heapreplacet\16\0\0\0_StopIterationt", 8192) = 8192
27308 read(7, "\4\0\0\0_lent\1\0\0\0ht\10\0\0\0h_appendt\5\0\0\0itnumR+\0\0\0R<\0\0\0t\1\0\0\0vt\1\0\0\0s(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR\4\0\0\0e\1\0\0s2\0\0\0\0\v\24\1\6\2\6\1\t\1\"\1\3\1\t\1\32\1\r\1\10\1\n\2\25\1\3\1\3\1\27\1\5\1\r\1\25\1\r\1\22\1\6\2\23\1\5\1\20\1c\3\0\0\0\t\0\0\0\6\0\0\0C\0\0\0sQ\1\0\0|\0\0d\1\0k\2\0ru\0t\0\0|\1\0\203\1\0}\3\0t\1\0t\2\0|\3\0d\1\0\203\2\0\203\1\0}\4\0|\4\0s7\0g\0\0S|\2\0d\5\0k\10\0rY\0t\4\0t\5\0|\4\0|\3\0\203\2\0\203\1\0g\1\0St\4\0t\5\0|\4\0|\3\0\203\2\0d\2\0|\2\0\203\1\1g\1\0Sy\20\0t\6\0|\1\0\203\1\0}\5\0Wn\27\0\4t\7\0t\10\0f\2\0k\n\0r\236\0\1\1\1n!\0X|\0\0|\5\0k\5\0r\277\0t\t\0|\1\0d\2\0|\2\0\203\1\1|\0\0 S|\2\0d\5\0k\10\0r\377\0t\n\0|\1\0t\v\0\203\0\0\203\2\0}\3\0t\f\0|\0\0|\3\0\203\2\0}\6\0t\r\0t\16\0d\3\0\203\1\0|\6\0\203\2\0St\17\0|\1\0\203\1\0\\\2\0}\7\0}\10\0t\n\0t\20\0|\2\0|\7\0\203\2\0t\v\0\203\0\0|\10\0\203\3\0}\3\0t\f\0|\0\0|\3\0\203\2\0}\6\0t\r\0t\16\0d\4\0\203\1\0|\6\0\203\2\0S(\6\0\0\0sb\0\0\0Find the n smallest elements in a dataset.\n\n    Equivalent to:  sorted(iterable, key=key)[:n]\n    i\1\0\0\0t\3\0\0\0keyi\0\0\0\0i\2\0\0\0N(\21\0\0\0R&\0\0\0R'\0\0\0R\10\0\0\0t\4\0\0\0Nonet\3\0\0\0minR\r\0\0\0R\26\0\0\0t\t\0\0\0TypeErrort\16\0\0\0AttributeErrort\6\0\0\0sortedR\v\0\0\0R\t\0\0\0t\n\0\0\0_nsmallestR;\0\0\0R\16\0\0\0R\f\0\0\0R\n\0\0\0(\t\0\0\0R\37\0\0\0R*\0\0\0RH\0\0\0R+\0\0\0t\4\0\0\0headt\4\0\0\0sizeR,\0\0\0t\3\0\0\0in1t\3\0\0\0in2(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR\6\0\0\0\217\1\0\0s,\0\0\0\0\6\f\1\f\1\25\1\6\1\4\1\f\1\26\1\34\3\3\1\20\1\23\1\4\2\f\1\24\3\f\1\22\1\17\1\23\3\22\1\36\1\17\1c\3\0\0\0\t\0\0\0\6\0\0\0C\0\0\0sc\1\0\0|\0\0d\1\0k\2\0ru\0t\0\0|\1\0\203\1\0}\3\0t\1\0t\2\0|\3\0d\1\0\203\2\0\203\1\0}\4\0|\4\0s7\0g\0\0S|\2\0d\7\0k\10\0rY\0t\4\0t\5\0|\4\0|\3\0\203\2\0\203\1\0g\1\0St\4\0t\5\0|\4\0|\3\0\203\2\0d\2\0|\2\0\203\1\1g\1\0Sy\20\0t\6\0|\1\0\203\1\0}\5\0Wn\27\0\4t\7\0t\10\0f\2\0k\n\0r\236\0\1\1\1n'\0X|\0\0|\5\0k\5\0r\305\0t\t\0|\1\0d\2\0|\2\0d\3\0t\n\0\203\1\2|\0\0 S|\2\0d\7\0k\10\0r\v\1t\v\0|\1\0t\f\0d\4\0d\5\0\203\2\0\203\2\0}\3\0t\r\0|\0\0|\3\0\203\2\0}\6\0t\16\0t\17\0d\4\0\203\1\0|\6\0\203\2\0St\20\0|\1\0\203\1\0\\\2\0}\7\0}\10\0t\v\0t\21\0|\2\0|\7\0\203\2\0t\f\0d\4\0d\5\0\203\2\0|\10\0\203\3\0}\3\0t\r\0|\0\0|\3\0\203\2\0}\6\0t\16\0t\17\0d\6\0\203\1\0|\6\0\203\2\0S(\10\0\0\0so\0\0\0Find the n largest elements in a dataset.\n\n    Equivalent to:  sorted(iterable, key=key, reverse=True)[:n]\n    i\1\0\0\0RH\0\0\0R%\0\0\0i\0\0\0\0i\377\377\377\377i\2\0\0\0N(\22\0\0\0R&\0\0\0R'\0\0\0R\10\0\0\0RI\0\0\0t\3\0\0\0maxR\r\0\0\0R\26\0\0\0RK\0\0\0RL\0\0\0RM\0\0\0R)\0\0\0R\v\0\0\0R\t\0\0\0t\t\0\0\0_nlargestR;\0\0\0R\16\0\0\0R\f\0\0\0R\n\0\0\0(\t\0\0\0R\37\0\0\0R*\0\0\0RH\0\0\0R+\0\0\0RO\0\0\0RP\0\0\0R,\0\0\0RQ\0\0\0RR\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyR\5\0\0\0\264\1\0\0s,\0\0\0\0\7\f\1\f\1\25\1\6\1\4\1\f\1\26\1\34\3\3\1\20\1\23\1\4\2\f\1\32\3\f\1\30\1\17\1\23\3\22\1$\1\17\1t\10\0\0\0__main__i\1\0\0\0i\3\0\0\0i\5\0\0\0i\7\0\0\0i\t\0\0\0i\2\0\0\0i\4\0\0\0i\6\0\0\0i\10\0\0\0i\0\0\0\0N((\0\0\0t\7\0\0\0__doc__t\t\0\0\0__about__t\7\0\0\0__all__t\t\0\0\0itertoolsR\10\0\0\0R\t\0\0\0R\n\0\0\0R\v\0\0\0R\f\0\0\0R\r\0\0\0t\10\0\0\0operatorR\16\0\0\0R\23\0\0\0R\0\0\0\0R\1\0\0\0R\3\0\0\0R\7\0\0\0R\2\0\0\0R\"\0\0\0R$\0\0\0R\5\0\0\0R\6\0\0\0R\25\0\0\0R\32\0\0\0R7\0\0\0R!\0\0\0t\6\0\0\0_heapqt\v\0\0\0ImportErrorR\4\0\0\0RN\0\0\0RI\0\0\0RT\0\0\0t\10\0\0\0__name__R\27\0\0\0t\4\0\0\0dataR\30\0\0\0R(\0\0\0R\24\0\0\0t\7\0\0\0doctestt\7\0\0\0testmod(\0\0\0\0(\0\0\0\0(\0\0\0\0s\33\0\0\0/usr/lib/python2.7/heapq.pyt\10\0\0\0<module>\37\0\0\0sN\0\0\0\6`\6\2\17\1\17\2.\1\20\2\t\5\t\5\t\v\t\20\t\7\t\v\t\7\t\6\t\22\t\25\t5\t\24\t\17\t\26\3\1\16\1\r\1\4\2\t)\6\1\f$\6\1\f%\f\2\6\1$\1\r\1\21\1\6\1\t\1\27\1\5\2\f\1", 4096) = 2241
27308 read(7, "", 4096)                 = 0
27308 close(7)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 close(6)                          = 0
27308 mmap2(NULL, 262144, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7767000
27308 munmap(0xb7767000, 262144)        = 0
27308 mmap2(NULL, 262144, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7767000
27308 close(5)                          = 0
27308 close(4)                          = 0
27308 stat64("mimetools", 0xbfffdcdc)   = -1 ENOENT (No such file or directory)
27308 open("mimetools.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("mimetools.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("mimetoolsmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("mimetools.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("mimetools.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/mimetools", 0xbfffdcdc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/mimetools.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/mimetools.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/mimetoolsmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/mimetools.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661526, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=7168, st_atime=2017/02/23-18:09:09, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/mimetools.pyc", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=707544, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8199, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(5, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\10\0\0\0@\0\0\0s\306\1\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0d\1\0d\2\0l\3\0Z\3\0d\1\0d\3\0l\4\0m\5\0Z\5\0m\6\0Z\6\0\1e\6\0\203\0\0\217-\0\1e\2\0j\7\0rf\0e\5\0d\4\0d\5\0e\10\0\203\3\0\1n\0\0d\1\0d\2\0l\t\0Z\t\0Wd\2\0QXd\1\0d\6\0l\4\0m\n\0Z\n\0\1e\n\0d\7\0d\10\0d\t\0\203\1\1\1d\n\0d\v\0d\f\0d\r\0d\16\0d\17\0g\6\0Z\v\0d\n\0e\t\0j\f\0f\1\0d\20\0\204\0\0\203\0\0YZ\f\0y\20\0d\1\0d\2\0l\r\0Z\r\0Wn\35\0\4e\16\0k\n\0r\370\0\1\1\1d\1\0d\2\0l\17\0Z\r\0n\1\0Xe\r\0j\20\0\203\0\0Z\21\0[\r\0d\21\0a\22\0d\22\0\204\0\0Z\23\0d\2\0a\25\0d\23\0\204\0\0Z\26\0d\24\0\204\0\0Z\27\0d\25\0\204\0\0Z\30\0d\26\0Z\31\0i\6\0e\31\0d\27\0006e\31\0d\30\0006e\31\0d\31\0006e\31\0d\32\0006d\33\0d\34\0006d\35\0d\36\0006Z\32\0i\6\0d\37\0d\30\0006d\37\0d\27\0006d\37\0d\32\0006d\37\0d\31\0006d \0d\34\0006d!\0d\36\0006Z\33\0d\"\0\204\0\0Z\34\0d#\0\204\0\0Z\35\0d$\0\204\0\0Z\36\0d%\0\204\0\0Z\37\0d\2\0S(&\0\0\0s<\0\0\0Various tools used by MIME-reading or MIME-writing programs.i\377\377\377\377N(\2\0\0\0t\16\0\0\0filterwarningst\16\0\0\0catch_warningst\6\0\0\0ignores\31\0\0\0.*rfc822 has been removed(\1\0\0\0t\10\0\0\0warnpy3ks@\0\0\0in 3.x, mimetools has been removed in favor of the email packaget\n\0\0\0stackleveli\2\0\0\0t\7\0\0\0Messaget\17\0\0\0choose_boundaryt\6\0\0\0encodet\6\0\0\0decodet\v\0\0\0copyliteralt\n\0\0\0copybinaryc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sk\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0d\2\0\204\1\0Z\3\0d\3\0\204\0\0Z\4\0d\4\0\204\0\0Z\5\0d\5\0\204\0\0Z\6\0d\6\0\204\0\0Z\7\0d\7\0\204\0\0Z\10\0d\10\0\204\0\0Z\t\0d\t\0\204\0\0Z\n\0d\n\0\204\0\0Z\v\0d\v\0\204\0\0Z\f\0RS(\f\0\0\0s\210\0\0\0A derived class of rfc822.Message that knows about MIME headers and\n    contains some hooks for decoding encoded and multipart messages.i\1\0\0\0c\3\0\0\0\3\0\0\0\4\0\0\0C\0\0\0sR\0\0\0t\0\0j\1\0j\2\0|\0\0|\1\0|\2\0\203\3\0\1|\0\0j\3\0d\1\0\203\1\0|\0\0_\4\0|\0\0j\3\0d\2\0\203\1\0|\0\0_\5\0|\0\0j\6\0\203\0\0\1|\0\0j\7\0\203\0\0\1d\0\0S(\3\0\0\0Ns\31\0\0\0content-transfer-encodings\f\0\0\0content-type(\10\0\0\0t\6\0\0\0rfc822R\5\0\0\0t\10\0\0\0__init__t\t\0\0\0getheadert\16\0\0\0encodingheadert\n\0\0\0typeheadert\t\0\0\0parsetypet\n\0\0\0parseplist(\3\0\0\0t\4\0\0\0selft\2\0\0\0fpt\10\0\0\0seekable(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyR\f\0\0\0\30\0\0\0s\n\0\0\0\0\1\26\2\22\2\22\1\n\1c\1\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s\333\0\0\0|\0\0j\0\0}\1\0|\1\0d\0\0k\10\0r\36\0d\1\0}\1\0n\0\0d\2\0|\1\0k\6\0rS\0|\1\0j\2\0d\2\0\203\1\0}\2\0|\1\0|\2\0\37|\0\0_\3\0|\1\0|\2\0 }\1\0n\t\0d\3\0|\0\0_\3\0|\1\0j\4\0d\4\0\203\1\0}\3\0x4\0t\5\0t\6\0|\3\0\203\1\0\203\1\0D] \0}\2\0|\3\0|\2\0\31j\7\0\203\0\0j\10\0\203\0\0|\3\0|\2\0<q~\0Wd\4\0j\t\0|\3\0\203\1\0|\0\0_\n\0|\3\0d\5\0\31|\0\0_\v\0d\4\0j\t\0|\3\0d\6\0\37\203\1\0|\0\0_\f\0d\0\0S(\7\0\0\0Ns\n\0\0\0text/plaint\1\0\0\0;t\0\0\0\0t\1\0\0\0/i\0\0\0\0i\1\0\0\0(\r\0\0\0R\17\0\0\0t\4\0\0\0Nonet\5\0\0\0indext\t\0\0\0plisttextt\5\0\0\0splitt\5\0\0\0ranget\3\0\0\0lent\5\0\0\0stript\5\0\0\0lowert\4\0\0\0joint\4\0\0\0typet\10\0\0\0maintypet\7\0\0\0subtype(\4\0\0\0R\22\0\0\0t\3\0\0\0strt\1\0\0\0it\6\0\0\0fields(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyR\20\0\0\0!\0\0\0s\34\0\0\0\0\1\t\1\f\1\t\1\f\1\17\1\r\1\r\2\t\1\17\1\31\1\36\1\22\1\r\1c\1\0\0\0\5\0\0\0\4\0\0\0C\0\0\0s\325\0\0\0|\0\0j\0\0}\1\0g\0\0|\0\0_\1\0x\274\0|\1\0d\1\0 d\2\0k\2\0r\320\0|\1\0d\1\0\37}\1\0d\2\0|\1\0k\6\0rM\0|\1\0j\2\0d\2\0\203\1\0}\2\0n\f\0t\3\0|\1\0\203\1\0}\2\0|\1\0|\2\0 }\3\0d\3\0|\3\0k\6\0r\255\0|\3\0j\2\0d\3\0\203\1\0}\4\0|\3\0|\4\0 j\4\0\203\0\0j\5\0\203\0\0d\3\0\27|\3\0|\4\0d\1\0\27\37j\4\0\203\0\0\27}\3\0n\0\0|\0\0j\1\0j\6\0|\3\0j\4\0\203\0\0\203\1\0\1|\1\0|\2\0\37}\1\0q\25\0Wd\0\0S(\4\0\0\0Ni\1\0\0\0R\25\0\0\0t\1\0\0\0=(\7\0\0\0R\32\0\0\0t\5\0\0\0plistR\31\0\0\0R\35\0\0\0R\36\0\0\0R\37\0\0\0t\6\0\0\0append(\5\0\0\0R\22\0\0\0R$\0\0\0t\3\0\0\0endt\1\0\0\0fR%\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyR\21\0\0\0002\0\0\0s\32\0\0\0\0\1\t\1\t\1\23\1\n\1\f\2\22\2\f\1\n\1\f\1\17\2/\1\26\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\7\0\0\0|\0\0j\0\0S(\1\0\0\0N(\1\0\0\0R(\0\0\0(\1\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyt\10\0\0\0getplistD\0\0\0s\2\0\0\0\0\1c\2\0\0\0\4\0\0\0\4\0\0\0C\0\0\0sU\0\0\0|\1\0j\0\0\203\0\0d\1\0\27}\1\0t\1\0|\1\0\203\1\0}\2\0x2\0|\0\0j\2\0D]'\0}\3\0|\3\0|\2\0 |\1\0k\2\0r&\0t\3\0j\4\0|\3\0|\2\0\37\203\1\0Sq&\0Wd\0\0S(\2\0\0\0NR'\0\0\0(\6\0\0\0R\37\0\0\0R\35\0\0\0R(\0\0\0R\v\0\0\0t\7\0\0\0unquoteR\30\0\0\0(\4\0\0\0R\22\0\0\0t\4\0\0\0namet\1\0\0\0nt\1\0\0\0p(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyt\10\0\0\0getparamG\0\0\0s\f\0\0\0\0\1\20\1\f\1\20\1\20\1\25\1c\1\0\0\0\4\0\0\0\4\0\0\0C\0\0\0sS\0\0\0g\0\0}\1\0xF\0|\0\0j\0\0D];\0}\2\0|\2\0j\1\0d\1\0\203\1\0}\3\0|\3\0d\2\0k\5\0r\20\0|\1\0j\2\0|\2\0|\3\0 j\3\0\203\0\0\203\1\0\1q\20\0q\20\0W|\1\0S(\3\0\0\0NR'\0\0\0i\0\0\0\0(\4\0\0\0R(\0\0\0t\4\0\0\0findR)\0\0\0R\37\0\0\0(\4\0\0\0R\22\0\0\0t\6\0\0\0resultR0\0\0\0R%\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyt\r\0\0\0getparamnamesO\0\0\0s\f\0\0\0\0\1\6\1\20\1\17\1\f\1\36\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s \0\0\0|\0\0j\0\0d\0\0k\10\0r\23\0d\1\0S|\0\0j\0\0j\2\0\203\0\0S(\2\0\0\0Nt\4\0\0\0007bit(\3\0\0\0R\16\0\0\0R\30\0\0\0R\37\0\0\0(\1\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyt\v\0\0\0getencodingW\0\0\0s\6\0\0\0\0\1\17\1\4\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\7\0\0\0|\0\0j\0\0S(\1\0\0\0N(\1\0\0\0R!\0\0\0(\1\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyt\7\0\0\0gettype\\\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\7\0\0\0|\0\0j\0\0S(\1\0\0\0N(\1\0\0\0R\"\0\0\0(\1\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyt\v\0\0\0getmaintype_\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\7\0\0\0|\0\0j\0\0S(\1\0\0\0N(\1\0\0\0R#\0\0\0(\1\0\0\0R\22\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyt\n\0\0\0getsubtypeb\0\0\0s\2\0\0\0\0\1(\r\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__t\7\0\0\0__doc__R\f\0\0\0R\20\0\0\0R\21\0\0\0R,\0\0\0R1\0\0\0R4\0\0\0R6\0\0\0R7\0\0\0R8\0\0\0R9\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyR\5\0\0\0\24\0\0\0s\26\0\0\0\6\2\6\2\f\t\t\21\t\22\t\3\t\10\t\10\t\5\t\3\t\3i\0\0\0\0c\0\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s(\0\0\0t\0\0j\1\0\203\0\0\1t\2\0d\1\0007a\2\0t\2\0}\0\0t\0\0j\3\0\203\0\0\1|\0\0S(\2\0\0\0Ni\1\0\0\0(\4\0\0\0t\r\0\0\0_counter_lockt\7\0\0\0acquiret\10\0\0\0_countert\7\0\0\0release(\1\0\0\0R3\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyt\21\0\0\0_get_next_counters\0\0\0s\n\0\0\0\0\2\n\1\n\1\6\1\n\1", 4096) = 4096
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=707544, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8199, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 read(5, "c\0\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\355\0\0\0d\1\0d\2\0l\0\0}\0\0t\1\0d\2\0k\10\0r\323\0d\1\0d\2\0l\3\0}\1\0y\31\0|\1\0j\4\0|\1\0j\5\0\203\0\0\203\1\0}\2\0Wn\32\0\4|\1\0j\6\0k\n\0rY\0\1\1\1d\3\0}\2\0n\1\0Xy\26\0t\7\0t\10\0j\t\0\203\0\0\203\1\0}\3\0Wn\27\0\4t\n\0k\n\0r\211\0\1\1\1d\4\0}\3\0n\1\0Xy\26\0t\7\0t\10\0j\v\0\203\0\0\203\1\0}\4\0Wn\27\0\4t\n\0k\n\0r\271\0\1\1\1d\4\0}\4\0n\1\0X|\2\0d\5\0\27|\3\0\27d\5\0\27|\4\0\27a\1\0n\0\0d\6\0t\1\0|\0\0j\0\0\203\0\0t\f\0\203\0\0f\3\0\26S(\7\0\0\0sx\1\0\0Return a string usable as a multipart boundary.\n\n    The string chosen is unique within a single program run, and\n    incorporates the user id (if available), process id (if available),\n    and current time.  So it's very unlikely the returned string appears\n    in message text, but there's no guarantee.\n\n    The boundary contains dots so you have to quote it in the header.i\377\377\377\377Ns\t\0\0\000127.0.0.1t\1\0\0\0001t\1\0\0\0.s\n\0\0\0%s.%.3f.%d(\r\0\0\0t\4\0\0\0timet\7\0\0\0_prefixR\30\0\0\0t\6\0\0\0sockett\r\0\0\0gethostbynamet\v\0\0\0gethostnamet\10\0\0\0gaierrort\4\0\0\0reprt\2\0\0\0ost\6\0\0\0getuidt\16\0\0\0AttributeErrort\6\0\0\0getpidRA\0\0\0(\5\0\0\0RD\0\0\0RF\0\0\0t\6\0\0\0hostidt\3\0\0\0uidt\3\0\0\0pid(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyR\6\0\0\0}\0\0\0s\"\0\0\0\0\v\f\1\f\1\f\1\3\1\31\1\20\1\n\1\3\1\26\1\r\1\n\1\3\1\26\1\r\1\n\1\31\1c\3\0\0\0\6\0\0\0\5\0\0\0C\0\0\0s\313\0\0\0|\2\0d\1\0k\2\0r(\0d\2\0d\3\0l\0\0}\3\0|\3\0j\1\0|\0\0|\1\0\203\2\0S|\2\0d\4\0k\2\0rP\0d\2\0d\3\0l\2\0}\4\0|\4\0j\1\0|\0\0|\1\0\203\2\0S|\2\0d\f\0k\6\0rx\0d\2\0d\3\0l\3\0}\5\0|\5\0j\1\0|\0\0|\1\0\203\2\0S|\2\0d\r\0k\6\0r\227\0|\1\0j\4\0|\0\0j\5\0\203\0\0\203\1\0S|\2\0t\6\0k\6\0r\272\0t\7\0|\0\0t\6\0|\2\0\31|\1\0\203\3\0\1n\r\0t\10\0d\v\0|\2\0\26\202\2\0d\3\0S(\16\0\0\0sD\0\0\0Decode common content-transfer-encodings (base64, quopri, uuencode).t\6\0\0\0base64i\377\377\377\377Ns\20\0\0\0quoted-printablet\10\0\0\0uuencodes\n\0\0\0x-uuencodet\3\0\0\0uues\5\0\0\0x-uueR5\0\0\0t\4\0\0\0008bits%\0\0\0unknown Content-Transfer-Encoding: %s(\4\0\0\0s\10\0\0\0uuencodes\n\0\0\0x-uuencodes\3\0\0\0uues\5\0\0\0x-uue(\2\0\0\0s\4\0\0\0007bits\4\0\0\0008bit(\t\0\0\0RR\0\0\0R\10\0\0\0t\6\0\0\0quoprit\2\0\0\0uut\5\0\0\0writet\4\0\0\0readt\t\0\0\0decodetabt\v\0\0\0pipethrought\n\0\0\0ValueError(\6\0\0\0t\5\0\0\0inputt\6\0\0\0outputt\10\0\0\0encodingRR\0\0\0RV\0\0\0RW\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyR\10\0\0\0\235\0\0\0s\36\0\0\0\0\2\f\1\f\1\20\1\f\1\f\1\20\1\f\1\f\1\20\1\f\1\23\1\f\1\27\2\3\1c\3\0\0\0\6\0\0\0\5\0\0\0C\0\0\0s\316\0\0\0|\2\0d\1\0k\2\0r(\0d\2\0d\3\0l\0\0}\3\0|\3\0j\1\0|\0\0|\1\0\203\2\0S|\2\0d\4\0k\2\0rS\0d\2\0d\3\0l\2\0}\4\0|\4\0j\1\0|\0\0|\1\0d\5\0\203\3\0S|\2\0d\r\0k\6\0r{\0d\2\0d\3\0l\3\0}\5\0|\5\0j\1\0|\0\0|\1\0\203\2\0S|\2\0d\16\0k\6\0r\232\0|\1\0j\4\0|\0\0j\5\0\203\0\0\203\1\0S|\2\0t\6\0k\6\0r\275\0t\7\0|\0\0t\6\0|\2\0\31|\1\0\203\3\0\1n\r\0t\10\0d\f\0|\2\0\26\202\2\0d\3\0S(\17\0\0\0sD\0\0\0Encode common content-transfer-encodings (base64, quopri, uuencode).RR\0\0\0i\377\377\377\377Ns\20\0\0\0quoted-printablei\0\0\0\0RS\0\0\0s\n\0\0\0x-uuencodeRT\0\0\0s\5\0\0\0x-uueR5\0\0\0RU\0\0\0s%\0\0\0unknown Content-Transfer-Encoding: %s(\4\0\0\0s\10\0\0\0uuencodes\n\0\0\0x-uuencodes\3\0\0\0uues\5\0\0\0x-uue(\2\0\0\0s\4\0\0\0007bits\4\0\0\0008bit(\t\0\0\0RR\0\0\0R\7\0\0\0RV\0\0\0RW\0\0\0RX\0\0\0RY\0\0\0t\t\0\0\0encodetabR[\0\0\0R\\\0\0\0(\6\0\0\0R]\0\0\0R^\0\0\0R_\0\0\0RR\0\0\0RV\0\0\0RW\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyR\7\0\0\0\260\0\0\0s\36\0\0\0\0\2\f\1\f\1\20\1\f\1\f\1\23\1\f\1\f\1\20\1\f\1\23\1\f\1\27\2\3\1sa\0\0\0(\nTEMP=/tmp/@uu.$$\nsed \"s%^begin [0-7][0-7]* .*%begin 600 $TEMP%\" | uudecode\ncat $TEMP\nrm $TEMP\n)RS\0\0\0s\n\0\0\0x-uuencodeRT\0\0\0s\5\0\0\0x-uues\16\0\0\0mmencode -u -qs\20\0\0\0quoted-printables\16\0\0\0mmencode -u -bRR\0\0\0s\21\0\0\0uuencode tempfiles\v\0\0\0mmencode -qs\v\0\0\0mmencode -bc\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s-\0\0\0t\0\0j\1\0|\1\0d\1\0\203\2\0}\2\0t\2\0|\0\0|\2\0\203\2\0\1|\2\0j\3\0\203\0\0\1d\0\0S(\2\0\0\0Nt\1\0\0\0w(\4\0\0\0RK\0\0\0t\5\0\0\0popenR\t\0\0\0t\5\0\0\0close(\3\0\0\0R]\0\0\0t\7\0\0\0commandt\4\0\0\0pipe(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyt\6\0\0\0pipeto\340\0\0\0s\6\0\0\0\0\1\22\1\r\1c\3\0\0\0\7\0\0\0\3\0\0\0C\0\0\0s}\0\0\0t\0\0j\1\0\203\0\0\\\2\0}\3\0}\4\0t\2\0j\3\0|\3\0d\1\0\203\2\0}\5\0t\4\0|\0\0|\5\0\203\2\0\1|\5\0j\5\0\203\0\0\1t\2\0j\6\0|\1\0d\2\0\27|\4\0\27d\3\0\203\2\0}\6\0t\7\0|\6\0|\2\0\203\2\0\1|\6\0j\5\0\203\0\0\1t\2\0j\10\0|\4\0\203\1\0\1d\0\0S(\4\0\0\0NRa\0\0\0s\2\0\0\0 <t\1\0\0\0r(\t\0\0\0t\10\0\0\0tempfilet\7\0\0\0mkstempRK\0\0\0t\6\0\0\0fdopenR\t\0\0\0Rc\0\0\0Rb\0\0\0R\n\0\0\0t\6\0\0\0unlink(\7\0\0\0R]\0\0\0Rd\0\0\0R^\0\0\0t\2\0\0\0fdt\10\0\0\0tempnamet\4\0\0\0tempRe\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyR[\0\0\0\345\0\0\0s\20\0\0\0\0\1\22\1\22\1\r\1\n\1\32\1\r\1\n\1c\2\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s.\0\0\0x'\0|\0\0j\0\0\203\0\0}\2\0|\2\0s\31\0Pn\0\0|\1\0j\1\0|\2\0\203\1\0\1q\3\0Wd\0\0S(\1\0\0\0N(\2\0\0\0t\10\0\0\0readlineRX\0\0\0(\3\0\0\0R]\0\0\0R^\0\0\0t\4\0\0\0line(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyR\t\0\0\0\357\0\0\0s\n\0\0\0\0\1\3\1\f\1\6\0\4\1c\2\0\0\0\4\0\0\0\2\0\0\0C\0\0\0s7\0\0\0d\1\0}\2\0x*\0|\0\0j\0\0|\2\0\203\1\0}\3\0|\3\0s\"\0Pn\0\0|\1\0j\1\0|\3\0\203\1\0\1q\t\0Wd\0\0S(\2\0\0\0Ni\0 \0\0(\2\0\0\0RY\0\0\0RX\0\0\0(\4\0\0\0R]\0\0\0R^\0\0\0t\7\0\0\0BUFSIZERp\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyR\n\0\0\0\365\0\0\0s\f\0\0\0\0\1\6\1\3\1\17\1\6\0\4\1( \0\0\0R<\0\0\0RK\0\0\0t\3\0\0\0sysRh\0\0\0t\10\0\0\0warningsR\0\0\0\0R\1\0\0\0t\v\0\0\0py3kwarningt\22\0\0\0DeprecationWarningR\v\0\0\0R\3\0\0\0t\7\0\0\0__all__R\5\0\0\0t\6\0\0\0threadt\v\0\0\0ImportErrort\f\0\0\0dummy_threadt\r\0\0\0allocate_lockR=\0\0\0R?\0\0\0RA\0\0\0R\30\0\0\0RE\0\0\0R\6\0\0\0R\10\0\0\0R\7\0\0\0t\r\0\0\0uudecode_pipeRZ\0\0\0R`\0\0\0Rf\0\0\0R[\0\0\0R\t\0\0\0R\n\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\37\0\0\0/usr/lib/python2.7/mimetools.pyt\10\0\0\0<module>\1\0\0\0sZ\0\0\0\6\3\f\1\f\1\f\1\26\1\n\1\t\1\23\1\22\2\20\1\t\1\7\2\17\1\t\2\31W\3\1\20\1\r\1\20\1\f\1\3\2\6\1\t\10\6\2\t \t\23\t\34\6\2\3\1\7\1\7\1\7\1\7\1\7\1\n\3\3\1\7\1\7\1\7\1\7\1\7\1\n", 4096) = 4096
27308 read(5, "\3\t\5\t\n\t\6", 4096)   = 7
27308 read(5, "", 4096)                 = 0
27308 close(5)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 stat64("tempfile", 0xbfffd92c)    = -1 ENOENT (No such file or directory)
27308 open("tempfile.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("tempfile.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("tempfilemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("tempfile.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("tempfile.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/tempfile", 0xbfffd92c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/tempfile.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/tempfile.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/tempfilemodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/tempfile.py", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=661603, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=18721, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/tempfile.pyc", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669879, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=19861, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:34:14, st_ctime=2015/09/26-01:34:14}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(6, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\n\0\0\0@\0\0\0s\f\3\0\0d\0\0Z\0\0d\1\0d\2\0d\3\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0g\n\0Z\1\0d\v\0d\f\0l\2\0Z\3\0d\v\0d\f\0l\4\0Z\5\0d\v\0d\f\0l\6\0Z\7\0d\v\0d\r\0l\10\0m\t\0Z\n\0\1y\24\0d\v\0d\16\0l\v\0m\f\0Z\r\0\1Wn!\0\4e\16\0k\n\0r\225\0\1\1\1d\v\0d\16\0l\f\0m\f\0Z\r\0\1n\1\0Xy\20\0d\v\0d\f\0l\17\0Z\20\0Wn\32\0\4e\16\0k\n\0r\302\0\1\1\1d\17\0\204\0\0Z\21\0n\n\0Xd\20\0\204\0\0Z\21\0y\20\0d\v\0d\f\0l\22\0Z\23\0Wn\35\0\4e\16\0k\n\0r\373\0\1\1\1d\v\0d\f\0l\24\0Z\23\0n\1\0Xe\23\0j\25\0Z\26\0e\5\0j\27\0e\5\0j\30\0Be\5\0j\31\0BZ\32\0e\33\0e\5\0d\21\0\203\2\0r;\1e\32\0e\5\0j\34\0OZ\32\0n\0\0e\33\0e\5\0d\22\0\203\2\0rZ\1e\32\0e\5\0j\35\0OZ\32\0n\0\0e\32\0Z\36\0e\33\0e\5\0d\23\0\203\2\0r\177\1e\36\0e\5\0j\37\0OZ\36\0n\0\0e\33\0e\5\0d\7\0\203\2\0r\232\1e\5\0j \0Z \0n\6\0d\24\0Z \0d\25\0Z!\0e\26\0\203\0\0Z\"\0e\33\0e\5\0d\26\0\203\2\0r\312\1e\5\0j#\0Z$\0n$\0e\33\0e\5\0d\27\0\203\2\0r\345\1e\5\0j%\0Z$\0n\t\0d\30\0\204\0\0Z$\0d\31\0\204\0\0Z&\0d\32\0d.\0d\33\0\204\0\0\203\0\0YZ'\0d\34\0\204\0\0Z(\0d\35\0\204\0\0Z)\0d\f\0a+\0d\36\0\204\0\0Z,\0d\37\0\204\0\0Z-\0d \0\204\0\0Z.\0d\f\0a/\0d!\0\204\0\0Z0\0d\"\0e!\0d\f\0e1\0d#\0\204\4\0Z2\0d\"\0e!\0d\f\0d$\0\204\3\0Z3\0d\"\0e!\0d\f\0d%\0\204\3\0Z4\0d&\0d/\0d'\0\204\0\0\203\0\0YZ5\0d(\0d\v\0d\"\0e!\0d\f\0e6\0d)\0\204\6\0Z7\0e\5\0j8\0d*\0k\3\0s\324\2e\5\0j9\0j:\0d+\0k\2\0r\335\2e7\0Z;\0n\30\0d(\0d\v\0d\"\0e!\0d\f\0d,\0\204\5\0Z;\0d\3\0d0\0d-\0\204\0\0\203\0\0YZ<\0d\f\0S(1\0\0\0s,\3\0\0Temporary files.\n\nThis module provides generic, low- and high-level interfaces for\ncreating temporary files and directories.  All of the interfaces\nprovided by this module can be used without fear of race conditions\nexcept for 'mktemp'.  'mktemp' is subject to race conditions and\nshould not be used; it is provided for backward compatibility only.\n\nThis module also provides some data items to the user:\n\n  TMP_MAX  - maximum number of names that will be tried before\n             giving up.\n  template - the default prefix for all temporary names.\n             You may change this to control the default prefix.\n  tempdir  - If this is set to a string before the first use of\n             any routine from this module, it will be considered as\n             another candidate location to store temporary files.\nt\22\0\0\0NamedTemporaryFilet\r\0\0\0TemporaryFilet\24\0\0\0SpooledTemporaryFilet\7\0\0\0mkstempt\7\0\0\0mkdtempt\6\0\0\0mktempt\7\0\0\0TMP_MAXt\r\0\0\0gettempprefixt\7\0\0\0tempdirt\n\0\0\0gettempdiri\377\377\377\377N(\1\0\0\0t\6\0\0\0Random(\1\0\0\0t\10\0\0\0StringIOc\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\0\0S(\1\0\0\0N(\0\0\0\0(\1\0\0\0t\2\0\0\0fd(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\f\0\0\0_set_cloexec-\0\0\0s\2\0\0\0\0\1c\1\0\0\0\2\0\0\0\5\0\0\0C\0\0\0sW\0\0\0y\34\0t\0\0j\1\0|\0\0t\0\0j\2\0d\1\0\203\3\0}\1\0Wn\21\0\4t\3\0k\n\0r/\0\1\1\1n$\0X|\1\0t\0\0j\4\0O}\1\0t\0\0j\1\0|\0\0t\0\0j\5\0|\1\0\203\3\0\1d\0\0S(\2\0\0\0Ni\0\0\0\0(\6\0\0\0t\6\0\0\0_fcntlt\5\0\0\0fcntlt\7\0\0\0F_GETFDt\7\0\0\0IOErrort\n\0\0\0FD_CLOEXECt\7\0\0\0F_SETFD(\2\0\0\0R\f\0\0\0t\5\0\0\0flags(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\r\0\0\0000\0\0\0s\f\0\0\0\0\1\3\1\34\1\r\1\4\3\r\1t\v\0\0\0O_NOINHERITt\n\0\0\0O_NOFOLLOWt\10\0\0\0O_BINARYi\20'\0\0t\3\0\0\0tmpt\5\0\0\0lstatt\4\0\0\0statc\1\0\0\0\2\0\0\0\5\0\0\0C\0\0\0s;\0\0\0y\20\0t\0\0|\0\0\203\1\0}\1\0Wn\32\0\4t\1\0k\n\0r,\0\1\1\1t\2\0j\3\0\202\1\0n\1\0X|\1\0j\4\0\203\0\0\1d\0\0S(\1\0\0\0N(\5\0\0\0t\4\0\0\0openR\21\0\0\0t\3\0\0\0_ost\5\0\0\0errort\5\0\0\0close(\2\0\0\0t\2\0\0\0fnt\1\0\0\0f(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\5\0\0\0_stat]\0\0\0s\n\0\0\0\0\1\3\1\20\1\r\1\r\1c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0s.\0\0\0y\16\0t\0\0|\0\0\203\1\0\1Wn\25\0\4t\1\0j\2\0k\n\0r%\0\1\1\1t\3\0SXt\4\0Sd\0\0S(\1\0\0\0N(\5\0\0\0R!\0\0\0R\34\0\0\0R\35\0\0\0t\5\0\0\0Falset\4\0\0\0True(\1\0\0\0R\37\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\7\0\0\0_existsd\0\0\0s\n\0\0\0\0\1\3\1\16\1\20\1\5\2t\23\0\0\0_RandomNameSequencec\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sF\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0d\2\0\27d\3\0\27Z\3\0d\4\0\204\0\0Z\4\0e\5\0d\5\0\204\0\0\203\1\0Z\6\0d\6\0\204\0\0Z\7\0d\7\0\204\0\0Z\10\0RS(\10\0\0\0s*\1\0\0An instance of _RandomNameSequence generates an endless\n    sequence of unpredictable strings which can safely be incorporated\n    into file names.  Each string is six characters long.  Multiple\n    threads can safely use the same instance at the same time.\n\n    _RandomNameSequence is an iterator.t\32\0\0\0abcdefghijklmnopqrstuvwxyzt\32\0\0\0ABCDEFGHIJKLMNOPQRSTUVWXYZt\v\0\0\0000123456789_c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\37\0\0\0t\0\0\203\0\0|\0\0_\1\0t\2\0j\3\0j\4\0|\0\0_\4\0d\0\0S(\1\0\0\0N(\5\0\0\0t\16\0\0\0_allocate_lockt\5\0\0\0mutexR\34\0\0\0t\4\0\0\0patht\10\0\0\0normcase(\1\0\0\0t\4\0\0\0self(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\10\0\0\0__init__x\0\0\0s\4\0\0\0\0\1\f\1c\1\0\0\0\2\0\0\0\5\0\0\0C\0\0\0sC\0\0\0t\0\0j\1\0\203\0\0}\1\0|\1\0t\2\0|\0\0d\1\0d\0\0\203\3\0k\3\0r<\0t\4\0\203\0\0|\0\0_\5\0|\1\0|\0\0_\6\0n\0\0|\0\0j\5\0S(\2\0\0\0Nt\10\0\0\0_rng_pid(\7\0\0\0R\34\0\0\0t\6\0\0\0getpidt\7\0\0\0getattrt\4\0\0\0Nonet\7\0\0\0_Randomt\4\0\0\0_rngR/\0\0\0(\2\0\0\0R-\0\0\0t\7\0\0\0cur_pid(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\3\0\0\0rng|\0\0\0s\n\0\0\0\0\2\f\1\30\1\f\1\f\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0|\0\0S(\1\0\0\0N(\0\0\0\0(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\10\0\0\0__iter__\204\0\0\0s\2\0\0\0\0\1c\1\0\0\0\6\0\0\0\4\0\0\0C\0\0\0so\0\0\0|\0\0j\0\0}\1\0|\0\0j\1\0}\2\0|\0\0j\2\0j\3\0}\3\0|\1\0j\4\0\203\0\0\1z#\0g\0\0d\1\0D]\22\0}\4\0|\3\0|\2\0\203\1\0^\2\0q2\0}\5\0Wd\0\0|\1\0j\5\0\203\0\0\1X|\0\0j\6\0d\2\0j\7\0|\5\0\203\1\0\203\1\0S(\3\0\0\0Nt\6\0\0\000123456t\0\0\0\0(\10\0\0\0R*\0\0\0t\n\0\0\0charactersR6\0\0\0t\6\0\0\0choicet\7\0\0\0acquiret\7\0\0\0releaseR,\0\0\0t\4\0\0\0join(\6\0\0\0R-\0\0\0t\1\0\0\0mt\1\0\0\0ct\6\0\0\0c", 4096) = 4096
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669879, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=19861, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:34:14, st_ctime=2015/09/26-01:34:14}) = 0
27308 read(6, "hooset\5\0\0\0dummyt\7\0\0\0letters(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\4\0\0\0next\207\0\0\0s\20\0\0\0\0\1\t\1\t\1\f\2\n\1\3\1#\2\v\2(\t\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__t\7\0\0\0__doc__R:\0\0\0R.\0\0\0t\10\0\0\0propertyR6\0\0\0R7\0\0\0RD\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR%\0\0\0l\0\0\0s\16\0\0\0\6\6\6\3\7\1\7\2\t\4\17\10\t\3c\0\0\0\0\3\0\0\0\6\0\0\0C\0\0\0s\374\0\0\0g\0\0}\0\0x3\0d\16\0D]+\0}\1\0t\0\0j\1\0|\1\0\203\1\0}\2\0|\2\0r\r\0|\0\0j\2\0|\2\0\203\1\0\1q\r\0q\r\0Wt\0\0j\3\0d\4\0k\2\0rs\0t\0\0j\1\0d\5\0\203\1\0}\2\0|\2\0r\264\0|\0\0j\2\0|\2\0\203\1\0\1q\264\0nA\0t\0\0j\3\0d\6\0k\2\0r\236\0|\0\0j\4\0d\7\0d\10\0d\t\0d\n\0g\4\0\203\1\0\1n\26\0|\0\0j\4\0d\v\0d\f\0d\r\0g\3\0\203\1\0\1y\27\0|\0\0j\2\0t\0\0j\5\0\203\0\0\203\1\0\1Wn*\0\4t\6\0t\0\0j\7\0f\2\0k\n\0r\367\0\1\1\1|\0\0j\2\0t\0\0j\10\0\203\1\0\1n\1\0X|\0\0S(\17\0\0\0s[\0\0\0Generate a list of candidate temporary directories which\n    _get_default_tempdir will try.t\6\0\0\0TMPDIRt\4\0\0\0TEMPt\3\0\0\0TMPt\6\0\0\0riscoss\r\0\0\0Wimp$ScrapDirt\2\0\0\0nts\7\0\0\0c:\\temps\6\0\0\0c:\\tmps\5\0\0\0\\temps\4\0\0\0\\tmps\4\0\0\0/tmps\10\0\0\0/var/tmps\10\0\0\0/usr/tmp(\3\0\0\0RI\0\0\0RJ\0\0\0RK\0\0\0(\t\0\0\0R\34\0\0\0t\6\0\0\0getenvt\6\0\0\0appendt\4\0\0\0namet\6\0\0\0extendt\6\0\0\0getcwdt\16\0\0\0AttributeErrorR\35\0\0\0t\6\0\0\0curdir(\3\0\0\0t\7\0\0\0dirlistt\7\0\0\0envnamet\7\0\0\0dirname(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\27\0\0\0_candidate_tempdir_list\224\0\0\0s\"\0\0\0\0\4\6\3\r\1\17\1\6\0\24\3\17\1\17\1\6\0\23\1\17\1\34\2\26\3\3\1\27\1\26\1\24\2c\0\0\0\0\n\0\0\0\10\0\0\0C\0\0\0sV\1\0\0t\0\0\203\0\0}\0\0t\1\0\203\0\0}\1\0t\2\0}\2\0x!\1|\1\0D]\31\1}\3\0|\3\0t\3\0j\4\0k\3\0rU\0t\3\0j\5\0j\6\0t\3\0j\5\0j\7\0|\3\0\203\1\0\203\1\0}\3\0n\0\0x\340\0t\10\0d\1\0\203\1\0D]\322\0}\4\0|\0\0j\t\0\203\0\0}\5\0t\3\0j\5\0j\n\0|\3\0|\5\0\203\2\0}\6\0yu\0t\3\0j\v\0|\6\0|\2\0d\2\0\203\3\0}\7\0zG\0z2\0t\f\0j\v\0|\7\0d\3\0d\4\0t\r\0\203\2\1\217\24\0}\10\0|\10\0j\16\0d\5\0\203\1\0\1Wd\6\0QXWd\6\0t\3\0j\17\0|\7\0\203\1\0\1XWd\6\0t\3\0j\20\0|\6\0\203\1\0\1X|\3\0SWqb\0\4t\21\0t\22\0f\2\0k\n\0r3\1\1}\t\0\1|\t\0j\23\0d\7\0\31t\24\0j\25\0k\3\0r4\1Pq4\1qb\0Xqb\0Wq\37\0Wt\22\0t\24\0j\26\0d\10\0|\1\0\26f\2\0\202\2\0d\6\0S(\t\0\0\0sq\1\0\0Calculate the default directory to use for temporary files.\n    This routine should be called exactly once.\n\n    We determine whether or not a candidate temp dir is usable by\n    trying to create and write to a file in that directory.  If this\n    is successful, the test file is deleted.  To prevent denial of\n    service, the name of the test file must be randomized.id\0\0\0i\200\1\0\0t\2\0\0\0wbt\7\0\0\0closefdt\4\0\0\0blatNi\0\0\0\0s)\0\0\0No usable temporary directory found in %s(\27\0\0\0R%\0\0\0RX\0\0\0t\17\0\0\0_text_openflagsR\34\0\0\0RT\0\0\0R+\0\0\0R,\0\0\0t\7\0\0\0abspatht\6\0\0\0xrangeRD\0\0\0R>\0\0\0R\33\0\0\0t\3\0\0\0_ioR\"\0\0\0t\5\0\0\0writeR\36\0\0\0t\6\0\0\0unlinkt\7\0\0\0OSErrorR\21\0\0\0t\4\0\0\0argst\6\0\0\0_errnot\6\0\0\0EEXISTt\6\0\0\0ENOENT(\n\0\0\0t\5\0\0\0namerRU\0\0\0R\24\0\0\0t\3\0\0\0dirt\3\0\0\0seqRP\0\0\0t\10\0\0\0filenameR\f\0\0\0t\2\0\0\0fpt\1\0\0\0e(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\24\0\0\0_get_default_tempdir\260\0\0\0s0\0\0\0\0\t\t\1\t\1\6\2\r\1\17\1!\2\23\1\f\1\25\1\3\1\25\1\3\1\3\1\33\1\27\2\22\2\16\1\10\1\25\1\26\1\4\1\f\1\t\1c\0\0\0\0\0\0\0\0\4\0\0\0C\0\0\0sG\0\0\0t\0\0d\1\0k\10\0rC\0t\2\0j\3\0\203\0\0\1z\34\0t\0\0d\1\0k\10\0r1\0t\4\0\203\0\0a\0\0n\0\0Wd\1\0t\2\0j\5\0\203\0\0\1Xn\0\0t\0\0S(\2\0\0\0s7\0\0\0Common setup sequence for all user-callable interfaces.N(\6\0\0\0t\16\0\0\0_name_sequenceR2\0\0\0t\n\0\0\0_once_lockR<\0\0\0R%\0\0\0R=\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\24\0\0\0_get_candidate_names\330\0\0\0s\16\0\0\0\0\4\f\1\n\1\3\1\f\1\20\2\16\1c\4\0\0\0\n\0\0\0\6\0\0\0C\0\0\0s\360\0\0\0t\0\0\203\0\0}\4\0x\316\0t\1\0t\2\0\203\1\0D]\300\0}\5\0|\4\0j\3\0\203\0\0}\6\0t\4\0j\5\0j\6\0|\0\0|\1\0|\6\0\27|\2\0\27\203\2\0}\7\0y9\0t\4\0j\7\0|\7\0|\3\0d\1\0\203\3\0}\10\0t\10\0|\10\0\203\1\0\1|\10\0t\4\0j\5\0j\t\0|\7\0\203\1\0f\2\0SWq\26\0\4t\n\0k\n\0r\325\0\1}\t\0\1|\t\0j\v\0t\f\0j\r\0k\2\0r\250\0q\26\0n\0\0t\4\0j\16\0d\2\0k\2\0r\317\0|\t\0j\v\0t\f\0j\17\0k\2\0r\317\0q\26\0n\0\0\202\0\0q\26\0Xq\26\0Wt\20\0t\f\0j\r\0d\3\0f\2\0\202\2\0d\4\0S(\5\0\0\0s>\0\0\0Code common to mkstemp, TemporaryFile, and NamedTemporaryFile.i\200\1\0\0RM\0\0\0s#\0\0\0No usable temporary file name foundN(\21\0\0\0Rp\0\0\0R^\0\0\0R\6\0\0\0RD\0\0\0R\34\0\0\0R+\0\0\0R>\0\0\0R\33\0\0\0R\r\0\0\0R]\0\0\0Rb\0\0\0t\5\0\0\0errnoRd\0\0\0Re\0\0\0RP\0\0\0t\6\0\0\0EACCESR\21\0\0\0(\n\0\0\0Rh\0\0\0t\3\0\0\0pret\3\0\0\0sufR\24\0\0\0t\5\0\0\0namesRi\0\0\0RP\0\0\0t\4\0\0\0fileR\f\0\0\0Rl\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\16\0\0\0_mkstemp_inner\346\0\0\0s\36\0\0\0\0\3\t\2\23\1\f\1\35\1\3\1\25\1\n\1\32\1\17\1\22\1\6\1!\3\6\1\v\2c\0\0\0\0\0\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0t\0\0S(\1\0\0\0s\36\0\0\0Accessor for tempdir.template.(\1\0\0\0t\10\0\0\0template(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\7\0\0\0\0\1\0\0s\2\0\0\0\0\2c\0\0\0\0\0\0\0\0\4\0\0\0C\0\0\0sG\0\0\0t\0\0d\1\0k\10\0rC\0t\2\0j\3\0\203\0\0\1z\34\0t\0\0d\1\0k\10\0r1\0t\4\0\203\0\0a\0\0n\0\0Wd\1\0t\2\0j\5\0\203\0\0\1Xn\0\0t\0\0S(\2\0\0\0s\36\0\0\0Accessor for tempfile.tempdir.N(\6\0\0\0R\10\0\0\0R2\0\0\0Ro\0\0\0R<\0\0\0Rm\0\0\0R=\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\t\0\0\0\6\1\0\0s\16\0\0\0\0\3\f\1\n\1\3\1\f\1\20\2\16\1R9\0\0\0c\4\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s@\0\0\0|\2\0d\1\0k\10\0r\30\0t\1\0\203\0\0}\2\0n\0\0|\3\0r'\0t\2\0}\4\0n\6\0t\3\0}\4\0t\4\0|\2\0|\1\0|\0\0|\4\0\203\4\0S(\2\0\0\0s'\4\0\0User-callable function to create and return a unique temporary\n    file.  The return value is a pair (fd, name) where fd is the\n    file descriptor returned by os.open, and name is the filename.\n\n    If 'suffix' is specified, the file name will end with that suffix,\n    otherwise there will be no suffix.\n\n    If 'prefix' is specified, the file name will begin with that prefix,\n    otherwise a default prefix is used.\n\n    If 'dir' is specified, the file will be created in that directory,\n    otherwise a default directory is used.\n\n    If 'text' is specified and true, the file is opened in text\n    mode.  Else (the default) the file is opened in binary mode.  On\n    some operating systems, this makes no difference.\n\n    The file is readable and writable only by the creating user ID.\n    If the operating system uses permission bits to indicate whether a\n    file is executable, the file is executable by no one. The file\n    descriptor is not inherited by children of this process.\n\n    Caller is responsible for deleting the file when done with it.\n    N(\5\0\0\0R2\0\0\0R\t\0\0\0R\\\0\0\0t\16\0\0\0_bin_openflagsRw\0\0\0(\5\0\0\0t\6\0\0\0suffixt\6\0\0\0prefixRh\0\0\0t\4\0\0\0textR\24\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\3\0\0\0\22\1\0\0s\f\0\0\0\0\32\f\1\f\2\6\1\t\2\6\2c\3\0\0\0\10\0\0\0\6\0\0\0C\0\0\0s\300\0\0\0|\2\0d\3\0k\10\0r\30\0t\1\0\203\0\0}\2\0n\0\0t\2\0\203\0\0}\3\0x\206\0t\3\0t\4\0\203\1\0D]x\0}\4\0|\3\0j\5\0\203\0\0}\5\0t\6\0j\7\0j\10\0|\2\0|\1\0|\5\0\27|\0\0\27\203\2\0}\6\0y\30\0t\6\0j\t\0|\6\0d\1\0\203\2\0\1|\6\0SWq.\0\4t\n\0k\n\0r\245\0\1}\7\0\1|\7\0j\v\0t\f\0j\r\0k\2\0r\237\0q.\0n\0\0\202\0\0q.\0Xq.\0Wt\16\0t\f\0j\r\0d\2\0f\2\0\202\2\0d\3\0S(\4\0\0\0s\177\1\0\0User-callable function to create and return a unique temporary\n    directory.  The return value is the pathname of the directory.\n\n    Arguments are as for mkstemp, except that the 'text' argument is\n    not accepted.\n\n    The directory is readable, writable, and searchable only by the\n    creating user.\n\n    Caller is responsible for deleting the directory when done with it.\n    i\300\1\0\0s(\0\0\0No usable temporary directory name foundN(\17\0\0\0R2\0\0\0R\t\0\0\0Rp\0\0\0R^\0\0\0R\6\0\0\0RD\0\0\0R\34\0\0\0R+\0\0\0R>\0\0\0t\5\0\0\0mkdirRb\0\0\0Rq\0\0\0Rd\0\0\0Re\0\0\0R\21\0\0\0(\10\0\0\0Rz\0\0\0R{\0\0\0Rh\0\0\0Ru\0\0\0Ri\0\0\0RP\0\0\0Rv\0\0\0Rl\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\4\0\0\0007\1\0\0s\34\0\0\0\0\r\f\1\f\2\t\2\23\1\f\1\35\1\3\1\20\1\10\1\17\1\22\1\6\1\v\2c\3\0\0\0\7\0\0\0\5\0\0\0C\0\0\0s\207\0\0\0|\2\0d\2\0k\10\0r\30\0t\1\0\203\0\0}\2\0n\0\0t\2\0\203\0\0}\3\0xM\0t\3\0t\4\0\203\1\0D]?\0}\4\0|\3\0j\5\0\203\0\0}\5\0t\6\0j\7\0j\10\0|\2\0|\1\0|\5\0\27|\0\0\27\203\2\0}\6\0t\t\0|\6\0\203\1\0s.\0|\6\0Sq.\0Wt\n\0t\v\0j\f\0d\1\0f\2\0\202\2\0d\2\0S(\3\0\0\0s\232\1\0\0User-callable function to return a unique temporary file name.  The\n    file is not created.\n\n    Arguments are as for mkstemp, except that the 'text' argument is\n    not accepted.\n\n    This function is unsafe and should not be used.  The file name\n    refers to a file that did not exist at some point, but by the time\n    you get around to creating it, someone else may have beaten you to\n    the punch.\n    s\"\0\0\0No usable temporary filename foundN(\r\0\0\0R2\0\0\0R\t\0\0\0Rp\0\0\0R^\0\0\0R\6\0\0\0RD\0\0\0R\34\0\0\0R+\0\0\0R>\0\0\0R$\0\0\0R\21\0\0\0Rd\0\0\0Re\0\0\0(\7\0\0\0Rz\0\0\0R{\0\0\0Rh\0\0\0Ru\0\0\0Ri\0\0\0RP\0\0\0Rv\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\5\0\0\0V\1\0\0s\22\0\0\0\0\21\f\1\f\2\t\1\23\1\f\1\35\1\f\1\10\2t\25\0\0\0_TemporaryFileWrapperc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0sk\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0d\1\0\204\1\0Z\4\0d\2\0\204\0\0Z\5\0d\3\0\204\0\0Z\6\0e\7\0j\10\0d\4\0k\3\0r`\0e\7\0j\t\0Z\t\0d\5\0\204\0\0Z\n\0d\6\0\204\0\0Z\v\0d\7\0\204\0\0Z\f\0n\t\0d\10\0\204\0\0Z\f\0RS(\t\0\0\0s\304\0\0\0Temporary file wrapper\n\n    This class provides a wrapper around files opened for\n    temporary use.  In particular, it seeks to automatically\n    remove the file when it is no longer needed.\n    c\4\0\0\0\4\0\0\0\2\0\0\0C\0\0\0s(\0\0\0|\1\0|\0\0_\0\0|\2\0|\0\0_\1\0t\2\0|\0\0_\3\0|\3\0|\0\0_\4\0d\0\0S(\1\0\0\0N(\5\0\0\0Rv\0\0\0RP\0\0\0R\"\0\0\0t\f\0\0\0close_calledt\6\0\0\0delete(\4\0\0\0R-\0\0\0Rv\0\0\0RP\0\0\0R\200\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR.\0\0\0|\1\0\0s\10\0\0\0\0\1\t\1\t\1\t\1c\2\0\0\0\4\0\0\0\4\0\0\0C\0\0\0sN\0\0\0|\0\0j\0\0d\1\0\31}\2\0t\1\0|\2\0|\1\0\203\2\0}\3\0t\2\0t\3\0|\3\0\203\1\0t\3\0d\2\0\203\1\0\203\2\0sJ\0t\4\0|\0\0|\1\0|\3\0\203\3\0\1n\0\0|\3\0S(\3\0\0\0NRv\0\0\0i\0\0\0\0(\5\0\0\0t\10\0\0\0__dict__R1\0\0\0t\n\0\0\0issubclasst\4\0\0\0typet\7\0\0\0setattr(\4\0\0\0R-\0\0\0RP\0\0\0Rv\0\0\0t\1\0\0\0a(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\v\0\0\0__getattr__\202\1\0\0s\n\0\0\0\0\4\r\1\17\1\33\1\23\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0j\1\0\203\0\0\1|\0\0S(\1\0\0\0N(\2\0\0\0Rv\0\0\0t\t\0\0\0__enter__(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\207\0\0\0\216\1\0\0s\4\0\0\0\0\1\r\1RM\0\0\0c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0sB\0\0\0|\0\0j\0\0s>\0t\1\0|\0\0_\0\0|\0\0j\2\0j\3\0\203\0\0\1|\0\0j\4\0r>\0|\0\0j\5\0|\0\0j\6\0\203\1\0\1q>\0n\0\0d\0\0S(\1\0\0\0N(\7\0\0\0R\177\0\0\0R#\0\0\0Rv\0\0\0R\36\0\0\0R\200\0\0\0Ra\0\0\0RP\0\0\0(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\36\0\0\0\235\1\0\0s\n\0\0\0\0\1\t\1\t\1\r\1\t\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\16\0\0\0|\0\0j\0\0\203\0\0\1d\0\0S(\1\0\0\0N(\1\0\0\0R\36\0\0\0(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\7\0\0\0__del__\244\1\0\0s\2\0\0\0\0\1c\4\0\0\0\5\0\0\0\4\0\0\0C\0\0\0s&\0\0\0|\0\0j\0\0j\1\0|\1\0|\2\0|\3\0\203\3\0}\4\0|\0\0j\2\0\203\0\0\1|\4\0S(\1\0\0\0N(\3\0\0\0Rv\0\0\0t\10\0\0\0__exit__R\36\0\0\0(\5\0\0\0R-\0\0\0t\3\0\0\0exct\5\0\0\0valuet\2\0\0\0tbt\6\0\0\0result(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\211\0\0\0\251\1\0\0s\6\0\0\0\0\1\30\1\n\1c\4\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s\32\0\0\0|\0\0j\0\0j\1\0|\1\0|\2\0|\3\0\203\3\0\1d\0\0S(\1\0\0\0N(\2\0\0\0Rv\0\0\0R\211\0\0\0(\4\0\0\0R-\0\0\0R\212\0\0\0R\213\0\0\0R\214\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\211\0\0\0\256\1\0\0s\2\0\0\0\0\1(\r\0\0\0RE\0\0\0RF\0\0\0RG\0\0\0R#\0\0\0R.\0\0\0R\206\0\0\0R\207\0\0\0R\34\0\0\0RP\0\0\0Ra\0\0\0R\36\0\0\0R\210\0\0\0R\211\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR~\0\0\0t\1\0\0s\24\0\0\0\6\6\6\2\f\6\t\f\t\7\17\6\t\2\t\7\t\5\f\5s\3\0\0\0w+bc\6\0\0\0\n\0\0\0\5\0\0\0C\0\0\0s\272\0\0\0|\4\0d\3\0k\10\0r\30\0t\1\0\203\0\0}\4\0n\0\0d\1\0|\0\0k\6\0r-\0t\2\0}\6\0n\6\0t\3\0}\6\0t\4\0j\5\0d\2\0k\2\0rX\0|\5\0rX\0|\6\0t\4\0j\6\0O}\6\0n\0\0t\7\0|\4\0|\3\0|\2\0|\6\0\203\4\0\\\2\0}\7\0}\10\0y)\0t\4\0j\10\0|\7\0|\0\0|\1\0\203\3\0}\t\0t\t\0|\t\0|\10\0|\5\0\203\3\0SWn\27\0\1\1\1t\4\0j\n\0|\7\0\203\1\0\1\202\0\0n\1\0Xd\3\0S(\4\0\0\0s6\2\0\0Create and return a temporary file.\n    Arguments:\n    'prefix', 'suffix', 'dir' -- as for mkstemp.\n    'mode' -- the mode argument to os.fdopen (default \"w+b\").\n    'bufsize' -- the buffer size argument to os.fdopen (default -1).\n    'delete' -- whether the file is deleted on close (default True).\n    The file is created as mkstemp() would do it.\n\n    Returns an object with a file-like interface; the name of the file\n    is accessible as file.name.  The file will be automatically deleted\n    when it is closed unless the 'delete' argument is set to False.\n    t\1\0\0\0bRM\0\0\0N(\v\0\0\0R2\0\0\0R\t\0\0\0Ry\0\0\0R\\\0\0\0R\34\0\0\0RP\0\0\0t\v\0\0\0O_TEMPORARYRw\0\0\0t\6\0\0\0fdopenR~\0\0\0R\36\0\0\0(\n\0\0\0t\4\0\0\0modet\7\0\0\0bufsizeRz\0\0\0R{\0\0\0Rh\0\0\0R\200\0\0\0R\24\0\0\0R\f\0\0\0RP\0\0\0Rv\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\0\0\0\0\262\1\0\0s\34\0\0\0\0\17\f\1\f\2\f\1\t\2\6\4\25\1\20\2\33\1\3\1\25\1\24\1\3\1\r\1t\5\0\0\0posixt\6\0\0\0cygwinc\5\0\0\0\10\0\0\0\5\0\0\0C\0\0\0s\220\0\0\0|\4\0d\2\0k\10\0r\30\0t\1\0\203\0\0}\4\0n\0\0d\1\0|\0\0k\6\0r-\0t\2\0}\5\0n\6\0t\3\0}\5\0t\4\0|\4\0|\3\0|\2\0|\5\0\203\4\0\\\2\0}\6\0}\7\0y$\0t\5\0j\6\0|\7\0\203\1\0\1t\5\0j\7\0|\6\0|\0\0|\1\0\203\3\0SWn\27\0\1\1\1t\5\0j\10\0|\6\0\203\1\0\1\202\0\0n\1\0Xd\2\0S(\3\0\0\0s\266\1\0\0Create and return a temporary file.\n        Arguments:\n        'prefix', 'suffix', 'dir' -- as for mkstemp.\n        'mode' -- the mode argument to os.fdopen (default \"w+b\").\n        'bufsize' -- the buffer size argument to os.fdopen (default -1).\n        The file is created as mkstemp() would do it.\n\n        Returns an object with a file-like interface.  The file has no\n        name, and will cease to exist when it is closed.\n        R\216\0\0\0N(\t\0\0\0R2\0\0\0R\t\0\0\0Ry\0\0\0R\\\0\0\0Rw\0\0\0R\34\0\0\0Ra\0\0\0R\220\0\0\0R\36\0\0\0(\10\0\0\0R\221\0\0\0R\222\0\0\0Rz\0\0\0R{\0\0\0Rh\0\0\0R\24\0\0\0R\f\0\0\0RP\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\1\0\0\0\334\1\0\0s\30\0\0\0\0\r\f\1\f\2\f\1\t\2\6\2\33\1\3\1\r\1\27\1\3\1\r\1c\0\0\0\0\0\0\0\0\7\0\0\0B\0\0\0s\26\1\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0Z\4\0d\1\0d\2\0d\3\0d\4\0e\5\0d\35\0d\5\0\204\6\0Z\7\0d\6\0\204\0\0Z\10\0d\7\0\204\0\0Z\t\0d\10\0\204\0\0Z\n\0d\t\0\204\0\0Z\v\0d\n\0\204\0\0Z\f\0d\v\0\204\0\0Z\r\0e\16\0d\f\0\204\0\0\203\1\0Z\17\0d\r\0\204\0\0Z\20\0d\16\0\204\0\0Z\21\0d\17\0\204\0\0Z\22\0e\16\0d\20\0\204\0\0\203\1\0Z\23\0e\16\0d\21\0\204\0\0\203\1\0Z\24\0d\22\0\204\0\0Z\25\0d\23\0\204\0\0Z\26\0d\24\0\204\0\0Z\27\0d\25\0\204\0\0Z\30\0d\26\0\204\0\0Z\31\0e\16\0d\27\0\204\0\0\203\1\0Z\32\0d\30\0\204\0\0Z\33\0d\31\0\204\0\0Z\34\0d\32\0\204\0\0Z\35\0d\33\0\204\0\0Z\36\0d\34\0\204\0\0Z\37\0RS(\36\0\0\0s\222\0\0\0Temporary file wrapper, specialized to switch from\n    StringIO to a real file when it exceeds a certain size or\n    when a fileno is needed.\n    i\0\0\0\0s\3\0\0\0w+bi\377\377\377\377R9\0\0\0c\7\0\0\0\7\0\0\0\5\0\0\0C\0\0\0s:\0\0\0t\0\0\203\0\0|\0\0_\1\0|\1\0|\0\0_\2\0t\3\0|\0\0_\4\0|\2\0|\3\0|\4\0|\5\0|\6\0f\5\0|\0\0_\5\0d\0\0S(\1\0\0\0N(\6\0\0\0t\t\0\0\0_StringIOt\5\0\0\0_filet\t\0\0\0_max_sizeR\"\0\0\0t\7\0\0\0_rolledt\22\0\0\0_TemporaryFileArgs(\7\0\0\0R-\0\0\0t\10\0\0\0max_sizeR\221\0\0\0R\222\0\0\0Rz\0\0\0R{\0\0\0Rh\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR.\0\0\0\0\2\0\0s\10\0\0\0\0\2\f\1\t\1\t\1c\2\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s?\0\0\0|\0\0j\0\0r\r\0d\0\0S|\0\0j\1\0}\2\0|\2\0r;\0|\1\0j\2\0\203\0\0|\2\0k\4\0r;\0|\0\0j\3\0\203\0\0\1n\0\0d\0\0S(\1\0\0\0N(\4\0\0\0R\230\0\0\0R\227\0\0\0t\4\0\0\0tellt\10\0\0\0rollover(\3\0\0\0R-\0\0\0Rv\0\0\0R\232\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\6\0\0\0_check\7\2\0\0s\n\0\0\0\0\1\t\0\4\1\t\1\30\1c\1\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sh\0\0\0|\0\0j\0\0r\r\0d\0\0S|\0\0j\1\0}\1\0t\2\0|\0\0j\3\0\214\0\0\4}\2\0|\0\0_\1\0|\0\0`\3\0|\2\0j\4\0|\1\0j\5\0\203\0\0\203\1\0\1|\2\0j\6\0|\1\0j\7\0\203\0\0d\1\0\203\2\0\1t\10\0|\0\0_\0\0d\0\0S(\2\0\0\0Ni\0\0\0\0(\t\0\0\0R\230\0\0\0R\226\0\0\0R\1\0\0\0R\231\0\0\0R`\0\0\0t\10\0\0\0getvaluet\4\0\0\0seekR\233\0\0\0R#\0\0\0(\3\0\0\0R-\0\0\0Rv\0\0\0t\7\0\0\0newfile(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\234\0\0\0\r\2\0\0s\20\0\0\0\0\1\t\0\4\1\t\1\26\1\6\2\23\1\26\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\37\0\0\0|\0\0j\0\0j\1\0r\33\0t\2\0d\1\0\203\1\0\202\1\0n\0\0|\0\0S(\2\0\0\0Ns%\0\0\0Cannot enter context with closed file(\3\0\0\0R\226\0\0\0t\6\0\0\0closedt\n\0\0\0ValueError(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\207\0\0\0\36\2\0\0s\6\0\0\0\0\1\f\1\17\1c\4\0\0\0\4\0\0\0\1\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0R\36\0\0\0(\4\0\0\0R-\0\0\0R\212\0\0\0R\213\0\0\0R\214\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\211\0\0\0#\2\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0R7\0\0\0(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR7\0\0\0'\2\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0R\36\0\0\0(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\36\0\0\0*\2\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0", 12288) = 12288
27308 read(6, "\0\0s\n\0\0\0|\0\0j\0\0j\1\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0R\241\0\0\0(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\241\0\0\0-\2\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\27\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0j\2\0\203\0\0S(\1\0\0\0N(\3\0\0\0R\234\0\0\0R\226\0\0\0t\6\0\0\0fileno(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\243\0\0\0001\2\0\0s\4\0\0\0\0\1\n\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0t\5\0\0\0flush(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\244\0\0\0005\2\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0t\6\0\0\0isatty(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\245\0\0\0008\2\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0s.\0\0\0y\16\0|\0\0j\0\0j\1\0SWn\31\0\4t\2\0k\n\0r)\0\1\1\1|\0\0j\3\0d\1\0\31SXd\0\0S(\2\0\0\0Ni\0\0\0\0(\4\0\0\0R\226\0\0\0R\221\0\0\0RS\0\0\0R\231\0\0\0(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\221\0\0\0;\2\0\0s\10\0\0\0\0\2\3\1\16\1\r\1c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0s'\0\0\0y\16\0|\0\0j\0\0j\1\0SWn\22\0\4t\2\0k\n\0r\"\0\1\1\1d\0\0SXd\0\0S(\1\0\0\0N(\4\0\0\0R\226\0\0\0RP\0\0\0RS\0\0\0R2\0\0\0(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyRP\0\0\0B\2\0\0s\10\0\0\0\0\2\3\1\16\1\r\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0|\0\0j\0\0j\1\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0RD\0\0\0(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyRD\0\0\0I\2\0\0s\2\0\0\0\0\1c\1\0\0\0\2\0\0\0\2\0\0\0G\0\0\0s\20\0\0\0|\0\0j\0\0j\1\0|\1\0\214\0\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0t\4\0\0\0read(\2\0\0\0R-\0\0\0Rc\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\246\0\0\0L\2\0\0s\2\0\0\0\0\1c\1\0\0\0\2\0\0\0\2\0\0\0G\0\0\0s\20\0\0\0|\0\0j\0\0j\1\0|\1\0\214\0\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0t\10\0\0\0readline(\2\0\0\0R-\0\0\0Rc\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\247\0\0\0O\2\0\0s\2\0\0\0\0\1c\1\0\0\0\2\0\0\0\2\0\0\0G\0\0\0s\20\0\0\0|\0\0j\0\0j\1\0|\1\0\214\0\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0t\t\0\0\0readlines(\2\0\0\0R-\0\0\0Rc\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\250\0\0\0R\2\0\0s\2\0\0\0\0\1c\1\0\0\0\2\0\0\0\2\0\0\0G\0\0\0s\24\0\0\0|\0\0j\0\0j\1\0|\1\0\214\0\0\1d\0\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0R\237\0\0\0(\2\0\0\0R-\0\0\0Rc\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\237\0\0\0U\2\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0|\0\0j\0\0j\1\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0t\t\0\0\0softspace(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\251\0\0\0X\2\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0R\233\0\0\0(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\233\0\0\0\\\2\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\2\0\0\0R\226\0\0\0t\10\0\0\0truncate(\1\0\0\0R-\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\252\0\0\0_\2\0\0s\2\0\0\0\0\1c\2\0\0\0\4\0\0\0\2\0\0\0C\0\0\0s)\0\0\0|\0\0j\0\0}\2\0|\2\0j\1\0|\1\0\203\1\0}\3\0|\0\0j\2\0|\2\0\203\1\0\1|\3\0S(\1\0\0\0N(\3\0\0\0R\226\0\0\0R`\0\0\0R\235\0\0\0(\4\0\0\0R-\0\0\0t\1\0\0\0sRv\0\0\0t\2\0\0\0rv(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR`\0\0\0b\2\0\0s\10\0\0\0\0\1\t\1\17\1\r\1c\2\0\0\0\4\0\0\0\2\0\0\0C\0\0\0s)\0\0\0|\0\0j\0\0}\2\0|\2\0j\1\0|\1\0\203\1\0}\3\0|\0\0j\2\0|\2\0\203\1\0\1|\3\0S(\1\0\0\0N(\3\0\0\0R\226\0\0\0t\n\0\0\0writelinesR\235\0\0\0(\4\0\0\0R-\0\0\0t\10\0\0\0iterableRv\0\0\0R\254\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\255\0\0\0h\2\0\0s\10\0\0\0\0\1\t\1\17\1\r\1c\1\0\0\0\2\0\0\0\3\0\0\0G\0\0\0s9\0\0\0t\0\0|\0\0j\1\0d\1\0\203\2\0r\37\0t\2\0|\0\0j\1\0\203\1\0St\2\0|\0\0j\1\0j\3\0|\1\0\214\0\0\203\1\0Sd\0\0S(\2\0\0\0Nt\n\0\0\0xreadlines(\4\0\0\0t\7\0\0\0hasattrR\226\0\0\0t\4\0\0\0iterR\250\0\0\0(\2\0\0\0R-\0\0\0Rc\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\257\0\0\0n\2\0\0s\6\0\0\0\0\1\22\1\r\2N( \0\0\0RE\0\0\0RF\0\0\0RG\0\0\0R\"\0\0\0R\230\0\0\0Rx\0\0\0R2\0\0\0R.\0\0\0R\235\0\0\0R\234\0\0\0R\207\0\0\0R\211\0\0\0R7\0\0\0R\36\0\0\0RH\0\0\0R\241\0\0\0R\243\0\0\0R\244\0\0\0R\245\0\0\0R\221\0\0\0RP\0\0\0RD\0\0\0R\246\0\0\0R\247\0\0\0R\250\0\0\0R\237\0\0\0R\251\0\0\0R\233\0\0\0R\252\0\0\0R`\0\0\0R\255\0\0\0R\257\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyR\2\0\0\0\371\1\0\0s6\0\0\0\6\4\6\1\6\2\t\1\22\6\t\6\t\21\t\5\t\4\t\3\t\3\17\4\t\4\t\3\t\3\17\7\17\7\t\3\t\3\t\3\t\3\t\3\17\4\t\3\t\3\t\6\t\6(\0\0\0\0(\0\0\0\0(\0\0\0\0(=\0\0\0RG\0\0\0t\7\0\0\0__all__t\2\0\0\0ioR_\0\0\0t\2\0\0\0osR\34\0\0\0Rq\0\0\0Rd\0\0\0t\6\0\0\0randomR\n\0\0\0R3\0\0\0t\t\0\0\0cStringIOR\v\0\0\0R\225\0\0\0t\v\0\0\0ImportErrorR\17\0\0\0R\16\0\0\0R\r\0\0\0t\6\0\0\0threadt\7\0\0\0_threadt\f\0\0\0dummy_threadt\r\0\0\0allocate_lockR)\0\0\0t\6\0\0\0O_RDWRt\7\0\0\0O_CREATt\6\0\0\0O_EXCLR\\\0\0\0R\260\0\0\0R\25\0\0\0R\26\0\0\0Ry\0\0\0R\27\0\0\0R\6\0\0\0Rx\0\0\0Ro\0\0\0R\31\0\0\0R!\0\0\0R\32\0\0\0R$\0\0\0R%\0\0\0RX\0\0\0Rm\0\0\0R2\0\0\0Rn\0\0\0Rp\0\0\0Rw\0\0\0R\7\0\0\0R\10\0\0\0R\t\0\0\0R\"\0\0\0R\3\0\0\0R\4\0\0\0R\5\0\0\0R~\0\0\0R#\0\0\0R\0\0\0\0RP\0\0\0t\3\0\0\0syst\10\0\0\0platformR\1\0\0\0R\2\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/tempfile.pyt\10\0\0\0<module>\22\0\0\0s~\0\0\0\6\3\6\1\3\1\6\1\3\1\6\1\f\6\f\1\f\1\f\1\20\2\3\1\24\1\r\1\24\2\3\1\20\1\r\1\r\3\t\v\3\1\20\1\r\1\20\1\t\2\27\1\17\1\20\1\17\1\20\2\6\1\17\1\20\2\17\1\f\2\6\2\6\4\t\2\17\1\f\1\17\1\f\4\t\7\t\10\23(\t\34\t&\6\2\t\16\t\32\t\4\6\2\t\f\25%\22\37\22\36\23>\t\1\22#!\3\t\3\t\1\17\34", 4096) = 3477
27308 read(6, "", 4096)                 = 0
27308 close(6)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 stat64("io", 0xbfffd57c)          = -1 ENOENT (No such file or directory)
27308 open("io.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("io.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("iomodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("io.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("io.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/io", 0xbfffd57c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/io.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/io.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/iomodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/io.py", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=661515, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3321, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/io.pyc", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669880, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3578, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:34:14, st_ctime=2015/09/26-01:34:14}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(7, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\22\0\0\0@\0\0\0s\245\1\0\0d\0\0Z\0\0d\1\0Z\1\0d\2\0d\3\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0d\v\0d\f\0d\r\0d\16\0d\17\0d\20\0d\21\0d\22\0d\23\0g\22\0Z\2\0d\24\0d\25\0l\3\0Z\3\0d\24\0d\25\0l\4\0Z\4\0d\24\0d\26\0l\3\0m\5\0Z\5\0m\6\0Z\6\0m\7\0Z\7\0m\10\0Z\10\0m\t\0Z\t\0m\n\0Z\n\0m\v\0Z\v\0m\f\0Z\f\0m\r\0Z\r\0m\16\0Z\16\0m\17\0Z\17\0m\20\0Z\20\0m\21\0Z\21\0\1e\3\0j\10\0Z\22\0d\27\0Z\23\0d\30\0Z\24\0d\31\0Z\25\0d\4\0e\3\0j\26\0f\1\0d\32\0\204\0\0\203\0\0YZ\27\0d\5\0e\3\0j\30\0e\27\0f\2\0d\33\0\204\0\0\203\0\0YZ\31\0d\t\0e\3\0j\32\0e\27\0f\2\0d\34\0\204\0\0\203\0\0YZ\33\0d\16\0e\3\0j\34\0e\27\0f\2\0d\35\0\204\0\0\203\0\0YZ\35\0e\31\0j\36\0e\t\0\203\1\0\1x*\0e\n\0e\f\0e\r\0e\17\0e\16\0f\5\0D]\23\0Z\37\0e\33\0j\36\0e\37\0\203\1\0\1qc\1Wx!\0e\v\0e\21\0f\2\0D]\23\0Z\37\0e\35\0j\36\0e\37\0\203\1\0\1q\207\1W[\37\0d\25\0S(\36\0\0\0s\300\5\0\0The io module provides the Python interfaces to stream handling. The\nbuiltin open function is defined in this module.\n\nAt the top of the I/O hierarchy is the abstract base class IOBase. It\ndefines the basic interface to a stream. Note, however, that there is no\nseparation between reading and writing to streams; implementations are\nallowed to raise an IOError if they do not support a given operation.\n\nExtending IOBase is RawIOBase which deals simply with the reading and\nwriting of raw bytes to a stream. FileIO subclasses RawIOBase to provide\nan interface to OS files.\n\nBufferedIOBase deals with buffering on a raw byte stream (RawIOBase). Its\nsubclasses, BufferedWriter, BufferedReader, and BufferedRWPair buffer\nstreams that are readable, writable, and both respectively.\nBufferedRandom provides a buffered interface to random access\nstreams. BytesIO is a simple stream of in-memory bytes.\n\nAnother IOBase subclass, TextIOBase, deals with the encoding and decoding\nof streams into text. TextIOWrapper, which extends it, is a buffered text\ninterface to a buffered raw stream (`BufferedIOBase`). Finally, StringIO\nis a in-memory stream for text.\n\nArgument names are not part of the specification, and only the arguments\nof open() are intended to be used as keyword arguments.\n\ndata:\n\nDEFAULT_BUFFER_SIZE\n\n   An int containing the default buffer size used by the module's buffered\n   I/O classes. open() uses the file's blksize (as obtained by os.stat) if\n   possible.\ns\353\0\0\0Guido van Rossum <guido@python.org>, Mike Verdone <mike.verdone@gmail.com>, Mark Russell <mark.russell@zen.co.uk>, Antoine Pitrou <solipsis@pitrou.net>, Amaury Forgeot d'Arc <amauryfa@gmail.com>, Benjamin Peterson <benjamin@python.org>t\17\0\0\0BlockingIOErrort\4\0\0\0opent\6\0\0\0IOBaset\t\0\0\0RawIOBaset\6\0\0\0FileIOt\7\0\0\0BytesIOt\10\0\0\0StringIOt\16\0\0\0BufferedIOBaset\16\0\0\0BufferedReadert\16\0\0\0BufferedWritert\16\0\0\0BufferedRWPairt\16\0\0\0BufferedRandomt\n\0\0\0TextIOBaset\r\0\0\0TextIOWrappert\24\0\0\0UnsupportedOperationt\10\0\0\0SEEK_SETt\10\0\0\0SEEK_CURt\10\0\0\0SEEK_ENDi\377\377\377\377N(\r\0\0\0t\23\0\0\0DEFAULT_BUFFER_SIZER\0\0\0\0R\16\0\0\0R\1\0\0\0R\4\0\0\0R\5\0\0\0R\6\0\0\0R\10\0\0\0R\t\0\0\0R\n\0\0\0R\v\0\0\0t\31\0\0\0IncrementalNewlineDecoderR\r\0\0\0i\0\0\0\0i\1\0\0\0i\2\0\0\0c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\35\0\0\0e\0\0Z\1\0e\2\0j\3\0Z\4\0e\5\0j\6\0j\7\0Z\7\0RS(\0\0\0\0(\10\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__t\3\0\0\0abct\7\0\0\0ABCMetat\r\0\0\0__metaclass__t\3\0\0\0_iot\7\0\0\0_IOBaset\7\0\0\0__doc__(\0\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/io.pyR\2\0\0\0E\0\0\0s\4\0\0\0\6\1\t\1c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\24\0\0\0e\0\0Z\1\0e\2\0j\3\0j\4\0Z\4\0RS(\0\0\0\0(\5\0\0\0R\24\0\0\0R\25\0\0\0R\31\0\0\0t\n\0\0\0_RawIOBaseR\33\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/io.pyR\3\0\0\0I\0\0\0s\2\0\0\0\6\1c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\24\0\0\0e\0\0Z\1\0e\2\0j\3\0j\4\0Z\4\0RS(\0\0\0\0(\5\0\0\0R\24\0\0\0R\25\0\0\0R\31\0\0\0t\17\0\0\0_BufferedIOBaseR\33\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/io.pyR\7\0\0\0L\0\0\0s\2\0\0\0\6\1c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\24\0\0\0e\0\0Z\1\0e\2\0j\3\0j\4\0Z\4\0RS(\0\0\0\0(\5\0\0\0R\24\0\0\0R\25\0\0\0R\31\0\0\0t\v\0\0\0_TextIOBaseR\33\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/io.pyR\f\0\0\0O\0\0\0s\2\0\0\0\6\1( \0\0\0R\33\0\0\0t\n\0\0\0__author__t\7\0\0\0__all__R\31\0\0\0R\26\0\0\0R\22\0\0\0R\0\0\0\0R\16\0\0\0R\1\0\0\0R\4\0\0\0R\5\0\0\0R\6\0\0\0R\10\0\0\0R\t\0\0\0R\n\0\0\0R\v\0\0\0R\23\0\0\0R\r\0\0\0t\v\0\0\0OpenWrapperR\17\0\0\0R\20\0\0\0R\21\0\0\0R\32\0\0\0R\2\0\0\0R\34\0\0\0R\3\0\0\0R\35\0\0\0R\7\0\0\0R\36\0\0\0R\f\0\0\0t\10\0\0\0registert\5\0\0\0klass(\0\0\0\0(\0\0\0\0(\0\0\0\0s\30\0\0\0/usr/lib/python2.7/io.pyt\10\0\0\0<module>\"\0\0\0s0\0\0\0\6\3\6\7\17\1\t\1\t\1\t\1\22\3\f\1\f\2X\5\t\3\6\1\6\1\6\5\31\4\34\3\34\3\34\3\r\2\17\1\r\1\21\2\23\1\21\1", 4096) = 3578
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669880, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3578, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:34:14, st_ctime=2015/09/26-01:34:14}) = 0
27308 read(7, "", 4096)                 = 0
27308 close(7)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 close(6)                          = 0
27308 stat64("random", 0xbfffd57c)      = -1 ENOENT (No such file or directory)
27308 open("random.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("random.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("randommodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("random.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("random.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/random", 0xbfffd57c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/random.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/random.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/randommodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/random.py", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=661562, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=64, st_size=32323, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/random.pyc", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669881, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=25486, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:34:14, st_ctime=2015/09/26-01:34:14}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(7, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\31\0\0\0@ \0\0s\243\2\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0m\2\0Z\2\0\1d\1\0d\3\0l\3\0m\4\0Z\5\0\1d\1\0d\4\0l\6\0m\7\0Z\10\0m\t\0Z\n\0\1d\1\0d\5\0l\v\0m\f\0Z\r\0m\16\0Z\17\0m\20\0Z\21\0m\22\0Z\23\0m\24\0Z\25\0\1d\1\0d\6\0l\v\0m\26\0Z\27\0m\30\0Z\31\0m\32\0Z\33\0m\34\0Z\35\0\1d\1\0d\7\0l\36\0m\37\0Z \0\1d\1\0d\10\0l!\0m\"\0Z#\0\1d\1\0d\t\0l$\0Z%\0d\n\0d\v\0d\f\0d\r\0d\16\0d\17\0d\20\0d\21\0d\22\0d\23\0d\24\0d\25\0d\26\0d\27\0d\30\0d\31\0d\32\0d\33\0d\34\0d\35\0d\36\0d\37\0d \0d!\0d\"\0g\31\0Z&\0d#\0e\17\0d$\0\203\1\0\24e\27\0d%\0\203\1\0\33Z'\0d%\0e\21\0\24Z(\0e\r\0d&\0\203\1\0Z)\0d'\0e\r\0d(\0\203\1\0\27Z*\0d)\0Z+\0d*\0e+\0\v\23Z,\0d\1\0d\t\0l-\0Z-\0d\n\0e-\0j.\0f\1\0d+\0\204\0\0\203\0\0YZ.\0d \0e.\0f\1\0d,\0\204\0\0\203\0\0YZ/\0d\"\0e.\0f\1\0d-\0\204\0\0\203\0\0YZ0\0d.\0\204\0\0Z1\0d/\0d0\0\204\1\0Z2\0e.\0\203\0\0Z3\0e3\0j4\0Z4\0e3\0j5\0Z5\0e3\0j6\0Z6\0e3\0j7\0Z7\0e3\0j8\0Z8\0e3\0j9\0Z9\0e3\0j:\0Z:\0e3\0j;\0Z;\0e3\0j<\0Z<\0e3\0j=\0Z=\0e3\0j>\0Z>\0e3\0j?\0Z?\0e3\0j@\0Z@\0e3\0jA\0ZA\0e3\0jB\0ZB\0e3\0jC\0ZC\0e3\0jD\0ZD\0e3\0jE\0ZE\0e3\0jF\0ZF\0e3\0jG\0ZG\0e3\0jH\0ZH\0e3\0jI\0ZI\0eJ\0d1\0k\2\0r\237\2e2\0\203\0\0\1n\0\0d\t\0S(2\0\0\0sP\4\0\0Random variable generators.\n\n    integers\n    --------\n           uniform within range\n\n    sequences\n    ---------\n           pick random element\n           pick random sample\n           generate random permutation\n\n    distributions on the real line:\n    ------------------------------\n           uniform\n           triangular\n           normal (Gaussian)\n           lognormal\n           negative exponential\n           gamma\n           beta\n           pareto\n           Weibull\n\n    distributions on the circle (angles 0 to 2pi)\n    ---------------------------------------------\n           circular uniform\n           von Mises\n\nGeneral notes on the underlying Mersenne Twister core generator:\n\n* The period is 2**19937-1.\n* It is one of the most extensively tested generators in existence.\n* Without a direct way to compute N steps forward, the semantics of\n  jumpahead(n) are weakened to simply jump to another distant state and rely\n  on the large period to avoid overlapping sequences.\n* The random() method is implemented in C, executes in a single Python step,\n  and is, therefore, threadsafe.\n\ni\377\377\377\377(\1\0\0\0t\10\0\0\0division(\1\0\0\0t\4\0\0\0warn(\2\0\0\0t\n\0\0\0MethodTypet\21\0\0\0BuiltinMethodType(\5\0\0\0t\3\0\0\0logt\3\0\0\0expt\2\0\0\0pit\1\0\0\0et\4\0\0\0ceil(\4\0\0\0t\4\0\0\0sqrtt\4\0\0\0acost\3\0\0\0cost\3\0\0\0sin(\1\0\0\0t\7\0\0\0urandom(\1\0\0\0t\7\0\0\0hexlifyNt\6\0\0\0Randomt\4\0\0\0seedt\6\0\0\0randomt\7\0\0\0uniformt\7\0\0\0randintt\6\0\0\0choicet\6\0\0\0samplet\t\0\0\0randranget\7\0\0\0shufflet\r\0\0\0normalvariatet\16\0\0\0lognormvariatet\v\0\0\0expovariatet\17\0\0\0vonmisesvariatet\f\0\0\0gammavariatet\n\0\0\0triangulart\5\0\0\0gausst\v\0\0\0betavariatet\r\0\0\0paretovariatet\16\0\0\0weibullvariatet\10\0\0\0getstatet\10\0\0\0setstatet\t\0\0\0jumpaheadt\f\0\0\0WichmannHillt\v\0\0\0getrandbitst\f\0\0\0SystemRandomi\4\0\0\0g\0\0\0\0\0\0\340\277g\0\0\0\0\0\0\0@g\0\0\0\0\0\0\20@g\0\0\0\0\0\0\360?g\0\0\0\0\0\0\22@i5\0\0\0i\2\0\0\0c\0\0\0\0\0\0\0\0\6\0\0\0B \0\0s*\1\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0Z\3\0d\37\0d\2\0\204\1\0Z\5\0d\37\0d\3\0\204\1\0Z\6\0d\4\0\204\0\0Z\7\0d\5\0\204\0\0Z\10\0d\6\0\204\0\0Z\t\0d\7\0\204\0\0Z\n\0d\10\0\204\0\0Z\v\0d\t\0\204\0\0Z\f\0d\37\0d\n\0e\r\0d\v\0e\16\0>d\f\0\204\4\0Z\17\0d\r\0\204\0\0Z\20\0e\21\0e\r\0d\v\0e\16\0>e\22\0e\23\0d\16\0\204\5\0Z\24\0d\17\0\204\0\0Z\25\0d\37\0d\20\0\204\1\0Z\26\0d\21\0\204\0\0Z\27\0d\22\0\204\0\0Z\30\0d\23\0d\24\0d\37\0d\25\0\204\3\0Z\31\0d\26\0\204\0\0Z\32\0d\27\0\204\0\0Z\33\0d\30\0\204\0\0Z\34\0d\31\0\204\0\0Z\35\0d\32\0\204\0\0Z\36\0d\33\0\204\0\0Z\37\0d\34\0\204\0\0Z \0d\35\0\204\0\0Z!\0d\36\0\204\0\0Z\"\0RS( \0\0\0s\316\2\0\0Random number generator base class used by bound module functions.\n\n    Used to instantiate instances of Random to get generators that don't\n    share state.  Especially useful for multi-threaded programs, creating\n    a different instance of Random for each thread, and using the jumpahead()\n    method to ensure that the generated sequences seen by each thread don't\n    overlap.\n\n    Class Random can also be subclassed if you want to use a different basic\n    generator of your own devising: in that case, override the following\n    methods: random(), seed(), getstate(), setstate() and jumpahead().\n    Optionally, implement a getrandbits() method so that randrange() can cover\n    arbitrarily large ranges.\n\n    i\3\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C \0\0s\32\0\0\0|\0\0j\0\0|\1\0\203\1\0\1d\1\0|\0\0_\2\0d\1\0S(\2\0\0\0se\0\0\0Initialize an instance.\n\n        Optional argument x controls seeding, as for Random.seed().\n        N(\3\0\0\0R\20\0\0\0t\4\0\0\0Nonet\n\0\0\0gauss_next(\2\0\0\0t\4\0\0\0selft\1\0\0\0x(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyt\10\0\0\0__init__[\0\0\0s\4\0\0\0\0\6\r\1c\2\0\0\0\3\0\0\0\5\0\0\0C \0\0s\207\0\0\0|\1\0d\4\0k\10\0rd\0y\37\0t\1\0t\2\0t\3\0d\1\0\203\1\0\203\1\0d\2\0\203\2\0}\1\0Wqd\0\4t\4\0k\n\0r`\0\1\1\1d\3\0d\4\0l\5\0}\2\0t\1\0|\2\0j\5\0\203\0\0d\5\0\24\203\1\0}\1\0qd\0Xn\0\0t\6\0t\7\0|\0\0\203\2\0j\10\0|\1\0\203\1\0\1d\4\0|\0\0_\t\0d\4\0S(\6\0\0\0s\0\1\0\0Initialize internal state from hashable object.\n\n        None or no argument seeds from current time or from an operating\n        system specific randomness ", 4096) = 4096
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=669881, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=25486, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:34:14, st_ctime=2015/09/26-01:34:14}) = 0
27308 read(7, "source if available.\n\n        If a is not None or an int or long, hash(a) is used instead.\n        i\304\t\0\0i\20\0\0\0i\377\377\377\377Ni\0\1\0\0(\n\0\0\0R(\0\0\0t\4\0\0\0longt\10\0\0\0_hexlifyt\10\0\0\0_urandomt\23\0\0\0NotImplementedErrort\4\0\0\0timet\5\0\0\0superR\17\0\0\0R\20\0\0\0R)\0\0\0(\3\0\0\0R*\0\0\0t\1\0\0\0aR1\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\20\0\0\0d\0\0\0s\20\0\0\0\0\t\f\1\3\3\37\1\r\1\f\1\35\2\26\1c\1\0\0\0\1\0\0\0\4\0\0\0C \0\0s\"\0\0\0|\0\0j\0\0t\1\0t\2\0|\0\0\203\2\0j\3\0\203\0\0|\0\0j\4\0f\3\0S(\1\0\0\0s9\0\0\0Return internal state; can be passed to setstate() later.(\5\0\0\0t\7\0\0\0VERSIONR2\0\0\0R\17\0\0\0R\"\0\0\0R)\0\0\0(\1\0\0\0R*\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\"\0\0\0y\0\0\0s\2\0\0\0\0\2c\2\0\0\0\5\0\0\0\5\0\0\0C \0\0s\316\0\0\0|\1\0d\1\0\31}\2\0|\2\0d\2\0k\2\0rA\0|\1\0\\\3\0}\2\0}\3\0|\0\0_\0\0t\1\0t\2\0|\0\0\203\2\0j\3\0|\3\0\203\1\0\1n\211\0|\2\0d\3\0k\2\0r\261\0|\1\0\\\3\0}\2\0}\3\0|\0\0_\0\0y\32\0t\4\0d\4\0\204\0\0|\3\0D\203\1\0\203\1\0}\3\0Wn\34\0\4t\5\0k\n\0r\227\0\1}\4\0\1t\6\0|\4\0\202\2\0n\1\0Xt\1\0t\2\0|\0\0\203\2\0j\3\0|\3\0\203\1\0\1n\31\0t\5\0d\5\0|\2\0|\0\0j\7\0f\2\0\26\203\1\0\202\1\0d\6\0S(\7\0\0\0s:\0\0\0Restore internal state from object returned by getstate().i\0\0\0\0i\3\0\0\0i\2\0\0\0c\1\0\0\0\2\0\0\0\4\0\0\0s \0\0s\37\0\0\0|\0\0]\25\0}\1\0t\0\0|\1\0\203\1\0d\3\0\26V\1q\3\0d\2\0S(\4\0\0\0i\2\0\0\0i \0\0\0Nl\3\0\0\0\0\0\0\0\4\0(\1\0\0\0R-\0\0\0(\2\0\0\0t\2\0\0\0.0R+\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pys\t\0\0\0<genexpr>\212\0\0\0s\2\0\0\0\6\0s?\0\0\0state with version %s passed to Random.setstate() of version %sN(\10\0\0\0R)\0\0\0R2\0\0\0R\17\0\0\0R#\0\0\0t\5\0\0\0tuplet\n\0\0\0ValueErrort\t\0\0\0TypeErrorR4\0\0\0(\5\0\0\0R*\0\0\0t\5\0\0\0statet\7\0\0\0versiont\r\0\0\0internalstateR\7\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR#\0\0\0}\0\0\0s\32\0\0\0\0\2\n\1\f\1\22\1\31\1\f\1\22\5\3\1\32\1\17\1\r\1\31\2\6\2c\2\0\0\0\3\0\0\0\4\0\0\0C \0\0sW\0\0\0t\0\0|\1\0\203\1\0t\0\0|\0\0j\1\0\203\0\0\203\1\0\27}\2\0t\2\0t\3\0j\4\0d\1\0|\2\0\203\2\0j\5\0\203\0\0d\2\0\203\2\0}\1\0t\6\0t\7\0|\0\0\203\2\0j\10\0|\1\0\203\1\0\1d\3\0S(\4\0\0\0s\256\0\0\0Change the internal state to one that is likely far away\n        from the current state.  This method will not be in Py3.x,\n        so it is better to simply reseed.\n        t\6\0\0\0sha512i\20\0\0\0N(\t\0\0\0t\4\0\0\0reprR\"\0\0\0t\3\0\0\0intt\10\0\0\0_hashlibt\3\0\0\0newt\t\0\0\0hexdigestR2\0\0\0R\17\0\0\0R$\0\0\0(\3\0\0\0R*\0\0\0t\1\0\0\0nt\1\0\0\0s(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR$\0\0\0\223\0\0\0s\6\0\0\0\0\10\34\1!\1c\1\0\0\0\1\0\0\0\1\0\0\0C \0\0s\n\0\0\0|\0\0j\0\0\203\0\0S(\1\0\0\0N(\1\0\0\0R\"\0\0\0(\1\0\0\0R*\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyt\f\0\0\0__getstate__\244\0\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\2\0\0\0C \0\0s\21\0\0\0|\0\0j\0\0|\1\0\203\1\0\1d\0\0S(\1\0\0\0N(\1\0\0\0R#\0\0\0(\2\0\0\0R*\0\0\0R9\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyt\f\0\0\0__setstate__\247\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\3\0\0\0C \0\0s\26\0\0\0|\0\0j\0\0d\1\0|\0\0j\1\0\203\0\0f\3\0S(\2\0\0\0N(\0\0\0\0(\2\0\0\0t\t\0\0\0__class__R\"\0\0\0(\1\0\0\0R*\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyt\n\0\0\0__reduce__\252\0\0\0s\2\0\0\0\0\1i\1\0\0\0l\1\0\0\0\1\0c\6\0\0\0\v\0\0\0\5\0\0\0C \0\0s\345\1\0\0|\4\0|\1\0\203\1\0}\6\0|\6\0|\1\0k\3\0r$\0t\0\0d\1\0\202\2\0n\0\0|\2\0d\t\0k\10\0ru\0|\6\0d\2\0k\4\0ri\0|\6\0|\5\0k\5\0rU\0|\0\0j\2\0|\6\0\203\1\0S|\4\0|\0\0j\3\0\203\0\0|\6\0\24\203\1\0St\0\0d\3\0\202\2\0n\0\0|\4\0|\2\0\203\1\0}\7\0|\7\0|\2\0k\3\0r\231\0t\0\0d\4\0\202\2\0n\0\0|\7\0|\6\0\30}\10\0|\3\0d\5\0k\2\0r\374\0|\10\0d\2\0k\4\0r\374\0|\10\0|\5\0k\5\0r\336\0|\4\0|\6\0|\0\0j\2\0|\10\0\203\1\0\27\203\1\0S|\4\0|\6\0|\4\0|\0\0j\3\0\203\0\0|\10\0\24\203\1\0\27\203\1\0S|\3\0d\5\0k\2\0r!\1t\0\0d\6\0|\6\0|\7\0|\10\0f\3\0\26\202\2\0n\0\0|\4\0|\3\0\203\1\0}\t\0|\t\0|\3\0k\3\0rE\1t\0\0d\7\0\202\2\0n\0\0|\t\0d\2\0k\4\0rf\1|\10\0|\t\0\27d\5\0\30|\t\0\32}\n\0n*\0|\t\0d\2\0k\0\0r\207\1|\10\0|\t\0\27d\5\0\27|\t\0\32}\n\0n\t\0t\0\0d\10\0\202\2\0|\n\0d\2\0k\1\0r\250\1t\0\0d\3\0\202\2\0n\0\0|\n\0|\5\0k\5\0r\311\1|\6\0|\t\0|\0\0j\2\0|\n\0\203\1\0\24\27S|\6\0|\t\0|\4\0|\0\0j\3\0\203\0\0|\n\0\24\203\1\0\24\27S(\n\0\0\0s\300\0\0\0Choose a random item from range(start, stop[, step]).\n\n        This fixes the problem with randint() which includes the\n        endpoint; in Python this is usually not what you want.\n\n        s!\0\0\0non-integer arg 1 for randrange()i\0\0\0\0s\33\0\0\0empty range for randrange()s \0\0\0non-integer stop for randrange()i\1\0\0\0s'\0\0\0empty range for randrange() (%d,%d, %d)s \0\0\0non-integer step for randrange()s\31\0\0\0zero step for randrange()N(\4\0\0\0R7\0\0\0R(\0\0\0t\n\0\0\0_randbelowR\21\0\0\0(\v\0\0\0R*\0\0\0t\5\0\0\0startt\4\0\0\0stopt\4\0\0\0stept\4\0\0\0_intt\t\0\0\0_maxwidtht\6\0\0\0istartt\5\0\0\0istopt\5\0\0\0widtht\5\0\0\0istepRB\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\26\0\0\0\257\0\0\0s@\0\0\0\0\n\f\1\f\1\f\1\f\1\f\1\f\1\r\1\24\1\f\3\f\1\f\1\f\1\n\1\30\16\f\1\27\1\36\1\f\1\31\3\f\1\f\1\f\1\f\1\25\1\f\1\25\2\t\2\f\1\f\2\f\1\25\1c\3\0\0\0\3\0\0\0\4\0\0\0C \0\0s\24\0\0\0|\0\0j\0\0|\1\0|\2\0d\1\0\27\203\2\0S(\2\0\0\0sJ\0\0\0Return random integer in range [a, b], including both end points.\n        i\1\0\0\0(\1\0\0\0R\26\0\0\0(\3\0\0\0R*\0\0\0R3\0\0\0t\1\0\0\0b(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\23\0\0\0\356\0\0\0s\2\0\0\0\0\4c\7\0\0\0\n\0\0\0\5\0\0\0C \0\0s\301\0\0\0y\r\0|\0\0j\0\0}\7\0Wn\21\0\4t\1\0k\n\0r \0\1\1\1nt\0Xt\2\0|\0\0j\3\0\203\1\0|\6\0k\10\0sH\0t\2\0|\7\0\203\1\0|\5\0k\10\0r\224\0|\3\0d\1\0|\2\0|\1\0d\2\0\30d\3\0\203\2\0\27\203\1\0}\10\0|\7\0|\10\0\203\1\0}\t\0x\34\0|\t\0|\1\0k\5\0r\217\0|\7\0|\10\0\203\1\0}\t\0qt\0W|\t\0S|\1\0|\4\0k\5\0r\255\0t\4\0d\4\0\203\1\0\1n\0\0|\3\0|\0\0j\3\0\203\0\0|\1\0\24\203\1\0S(\5\0\0\0s\243\0\0\0Return a random int in the range [0,n)\n\n        Handles the case where n has more bits than returned\n        by a single call to the underlying generator.\n        gr\304Z|\n\0\360?i\1\0\0\0g\0\0\0\0\0\0\0@sg\0\0\0Underlying random() generator does not supply \nenough bits to choose from a population range this large(\5\0\0\0R&\0\0\0t\16\0\0\0AttributeErrort\4\0\0\0typeR\21\0\0\0t\5\0\0\0_warn(\n\0\0\0R*\0\0\0RB\0\0\0t\4\0\0\0_logRL\0\0\0RM\0\0\0t\7\0\0\0_Methodt\16\0\0\0_BuiltinMethodR&\0\0\0t\1\0\0\0kt\1\0\0\0r(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyRH\0\0\0\364\0\0\0s\32\0\0\0\0\10\3\1\r\1\r\1\4\5'\1\35\1\f\1\17\1\20\1\4\1\f\1\r\2c\2\0\0\0\2\0\0\0\5\0\0\0C \0\0s\36\0\0\0|\1\0t\0\0|\0\0j\1\0\203\0\0t\2\0|\1\0\203\1\0\24\203\1\0\31S(\1\0\0\0s2\0\0\0Choose a random element from a non-empty sequence.(\3\0\0\0R>\0\0\0R\21\0\0\0t\3\0\0\0len(\2\0\0\0R*\0\0\0t\3\0\0\0seq(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\24\0\0\0\21\1\0\0s\2\0\0\0\0\2c\3\0\0\0\6\0\0\0\5\0\0\0C \0\0s|\0\0\0|\2\0d\2\0k\10\0r\30\0|\0\0j\1\0}\2\0n\0\0t\2\0}\3\0xW\0t\3\0t\4\0d\1\0t\5\0|\1\0\203\1\0\203\2\0\203\1\0D]:\0}\4\0|\3\0|\2\0\203\0\0|\4\0d\1\0\27\24\203\1\0}\5\0|\1\0|\5\0\31|\1\0|\4\0\31\2|\1\0|\4\0<|\1\0|\5\0<q:\0Wd\2\0S(\3\0\0\0s\330\0\0\0x, random=random.random -> shuffle list x in place; return None.\n\n        Optional arg random is a 0-argument function returning a random\n        float in [0.0, 1.0); by default, the standard random.random.\n\n        i\1\0\0\0N(\6\0\0\0R(\0\0\0R\21\0\0\0R>\0\0\0t\10\0\0\0reversedt\6\0\0\0xrangeR[\0\0\0(\6\0\0\0R*\0\0\0R+\0\0\0R\21\0\0\0RL\0\0\0t\1\0\0\0it\1\0\0\0j(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\27\0\0\0\25\1\0\0s\f\0\0\0\0\10\f\1\f\1\6\1\"\2\27\1c\3\0\0\0\r\0\0\0\6\0\0\0C \0\0s\311\1\0\0t\0\0|\1\0\203\1\0}\3\0d\1\0|\2\0\4\3k\1\0o#\0|\3\0k\1\0n\2\0\2\1s7\0t\1\0d\2\0\203\1\0\202\1\0n\0\0|\0\0j\2\0}\4\0t\3\0}\5\0d\t\0g\1\0|\2\0\24}\6\0d\3\0}\7\0|\2\0d\4\0k\4\0r\211\0|\7\0d\5\0t\5\0t\6\0|\2\0d\6\0\24d\5\0\203\2\0\203\1\0\0237}\7\0n\0\0|\3\0|\7\0k\1\0s\244\0t\7\0|\1\0d\7\0\203\2\0r\5\1t\10\0|\1\0\203\1\0}\10\0x\22\1t\t\0|\2\0\203\1\0D]A\0}\t\0|\5\0|\4\0\203\0\0|\3\0|\t\0\30\24\203\1\0}\n\0|\10\0|\n\0\31|\6\0|\t\0<|\10\0|\3\0|\t\0\30d\10\0\30\31|\10\0|\n\0<q\275\0Wn\300\0y~\0t\n\0\203\0\0}\v\0|\v\0j\v\0}\f\0xe\0t\t\0|\2\0\203\1\0D]W\0}\t\0|\5\0|\4\0\203\0\0|\3\0\24\203\1\0}\n\0x#\0|\n\0|\v\0k\6\0re\1|\5\0|\4\0\203\0\0|\3\0\24\203\1\0}\n\0qC\1W|\f\0|\n\0\203\1\0\1|\1\0|\n\0\31|\6\0|\t\0<q'\1WWn?\0\4t\f\0t\r\0f\2\0k\n\0r\304\1\1\1\1t\16\0|\1\0t\10\0\203\2\0r\256\1\202\0\0n\0\0|\0\0j\17\0t\20\0|\1\0\203\1\0|\2\0\203\2\0SX|\6\0S(\n\0\0\0s8\3\0\0Chooses k unique random elements from a population sequence.\n\n        Returns a new list containing elements from the population while\n        leaving the original population unchanged.  The resulting list is\n        in selection order so that all sub-slices will also be valid random\n        samples.  This allows raffle winners (the sample) to be partitioned\n        into grand prize and second place winners (the subslices).\n\n        Members of the population need not be hashable or unique.  If the\n        population contains repeats, then each occurrence is a possible\n        selection in the sample.\n\n        To choose a sample in a range of integers, use xrange as an argument.\n        This is especially fast and space efficient for sampling from a\n        large population:   sample(xrange(10000000), 60)\n        i\0\0\0\0s\35\0\0\0sample larger than populationi\25\0\0\0i\5\0\0\0i\4\0\0\0i\3\0\0\0t\4\0\0\0keysi\1\0\0\0N(\21\0\0\0R[\0\0\0R7\0\0\0R\21\0\0\0R>\0\0\0R(\0\0\0t\5\0\0\0_ceilRV\0\0\0t\7\0\0\0hasattrt\4\0\0\0listR^\0\0\0t\3\0\0\0sett\3\0\0\0addR8\0\0\0t\10\0\0\0KeyErrort\n\0\0\0isinstanceR\25\0\0\0R6\0\0\0(\r\0\0\0R*\0\0\0t\n\0\0\0populationRY\0\0\0RB\0\0\0R\21\0\0\0RL\0\0\0t\6\0\0\0resultt\7\0\0\0setsizet\4\0\0\0poolR_\0\0\0R`\0\0\0t\10\0\0\0selectedt\f\0\0\0selected_add(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\25\0\0\0%\1\0\0s:\0\0\0\0\34\f\1\34\1\17\1\t\1\6\1\r\1\6\1\f\1$\1\33\3\f\1\23\1\27\1\16\1\35\2\3\1\t\1\t\1\23\1\23\1\17\1\27\1\n\1\26\1\23\1\17\1\6\1\27\1c\3\0\0\0\3\0\0\0\3\0\0\0C \0\0s\26\0\0\0|\1\0|\2\0|\1\0\30|\0\0j\0\0\203\0\0\24\27S(\1\0\0\0sH\0\0\0Get a random number in the range [a, b) or [a, b] depending on rounding.(\1\0\0\0R\21\0\0\0(\3\0\0\0R*\0\0\0R3\0\0\0RR\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\22\0\0\0f\1\0\0s\2\0\0\0\0\2g\0\0\0\0\0\0\0\0g\0\0\0\0\0\0\360?c\4\0\0\0\6\0\0\0\5\0\0\0C \0\0s\221\0\0\0|\0\0j\0\0\203\0\0}\4\0y(\0|\3\0d\3\0k\10\0r!\0d\1\0n\17\0|\3\0|\1\0\30|\2\0|\1\0\30\33}\5\0Wn\22\0\4t\2\0k\n\0rH\0\1\1\1|\1\0SX|\4\0|\5\0k\4\0ry\0d\2\0|\4\0\30}\4\0d\2\0|\5\0\30}\5\0|\2\0|\1\0\2}\1\0}\2\0n\0\0|\1\0|\2\0|\1\0\30|\4\0|\5\0\24d\1\0\23\24\27S(\4\0\0\0s\334\0\0\0Triangular distribution.\n\n        Continuous distribution bounded by given lower and upper limits,\n        and having a given mode value in-between.\n\n        http://en.wikipedia.org/wiki/Triangular_distribution\n\n        g\0\0\0\0\0\0\340?g\0\0\0\0\0\0\360?N(\3\0\0\0R\21\0\0\0R(\0\0\0t\21\0\0\0ZeroDivisionError(\6\0\0\0R*\0\0\0t\3\0\0\0lowt\4\0\0\0hight\4\0\0\0modet\1\0\0\0ut\1\0\0\0c(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\35\0\0\0l\1\0\0s\24\0\0\0\0\t\f\1\3\1(\1\r\1\5\1\f\1\n\1\n\1\20\1c\3\0\0\0\10\0\0\0\3\0\0\0C \0\0si\0\0\0|\0\0j\0\0}\3\0xQ\0|\3\0\203\0\0}\4\0d\1\0|\3\0\203\0\0\30}\5\0t\1\0|\4\0d\2\0\30\24|\5\0\33}\6\0|\6\0|\6\0\24d\3\0\33}\7\0|\7\0t\2\0|\5\0\203\1\0\vk\1\0r\f\0Pq\f\0q\f\0W|\1\0|\6\0|\2\0\24\27S(\4\0\0\0s\\\0\0\0Normal distribution.\n\n        mu is the mean, and sigma is the standard deviation.\n\n        g\0\0\0\0\0\0\360?g\0\0\0\0\0\0\340?g\0\0\0\0\0\0\20@(\3\0\0\0R\21\0\0\0t\r\0\0\0NV_MAGICCONSTRV\0\0\0(\10\0\0\0R*\0\0\0t\2\0\0\0mut\5\0\0\0sigmaR\21\0\0\0t\2\0\0\0u1t\2\0\0\0u2t\1\0\0\0zt\2\0\0\0zz(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\30\0\0\0\202\1\0\0s\22\0\0\0\0\r\t\1\3\1\t\1\r\1\22\1\16\1\23\1\10\1c\3\0\0\0\3\0\0\0\4\0\0\0C \0\0s\26\0\0\0t\0\0|\0\0j\1\0|\1\0|\2\0\203\2\0\203\1\0S(\1\0\0\0s\373\0\0\0Log normal distribution.\n\n        If you take the natural logarithm of this distribution, you'll get a\n        normal distribution with mean mu and standard deviation sigma.\n        mu can have any value, and sigma must be greater than zero.\n\n        (\2\0\0\0t\4\0\0\0_expR\30\0\0\0(\3\0\0\0R*\0\0\0Rv\0\0\0Rw\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\31\0\0\0\233\1\0\0s\2\0\0\0\0\10c\2\0\0\0\2\0\0\0\3\0\0\0C \0\0s\31\0\0\0t\0\0d\1\0|\0\0j\1\0\203\0\0\30\203\1\0\v|\1\0\33S(\2\0\0\0s^\1\0\0Exponential distribution.\n\n        lambd is 1.0 divided by the desired mean.  It should be\n        nonzero.  (The parameter would be called \"lambda\", but that is\n        a reserved word in Python.)  Returned values range from 0 to\n        positive infinity if lambd is positive, and from negative\n        infinity to 0 if lambd is negative.\n\n        g\0\0\0\0\0\0\360?(\2\0\0\0RV\0\0\0R\21\0\0\0(\2\0\0\0R*\0\0\0t\5\0\0\0lambd(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\32\0\0\0\247\1\0\0s\2\0\0\0\0\17c\3\0\0\0\16\0\0\0\5\0\0\0C \0\0s\17\1\0\0|\0\0j\0\0}\3\0|\2\0d\1\0k\1\0r \0t\1\0|\3\0\203\0\0\24Sd\2\0|\2\0\33}\4\0|\4\0t\2\0d\3\0|\4\0|\4\0\24\27\203\1\0\27}\5\0xf\0|\3\0\203\0\0}\6\0t\3\0t\4\0|\6\0\24\203\1\0}\7\0|\7\0|\5\0|\7\0\27\33}\10\0|\3\0\203\0\0}\t\0|\t\0d\3\0|\10\0|\10\0\24\30k\0\0s\243\0|\t\0d\3\0|\10\0\30t\5\0|\10\0\203\1\0\24k\1\0rE\0PqE\0qE\0Wd\3\0|\5\0\33}\n\0|\n\0|\7\0\27d\3\0|\n\0|\7\0\24\27\33}\v\0|\3\0\203\0\0}\f\0|\f\0d\2\0k\4\0r\367\0|\1\0t\6\0|\v\0\203\1\0\27t\1\0\26}\r\0n\24\0|\1\0t\6\0|\v\0\203\1\0\30t\1\0\26}\r\0|\r\0S(\4\0\0\0sF\1\0\0Circular data distribution.\n\n        mu is the mean angle, expressed in radians between 0 and 2*pi, and\n        kappa is the concentration parameter, which must be greater than or\n        equal to zero.  If kappa is equal to zero, this distribution reduces\n        to a uniform random angle over the range 0 to 2*pi.\n\n        g\215\355\265\240\367\306\260>g\0\0\0\0\0\0\340?g\0\0\0\0\0\0\360?(\7\0\0\0R\21\0\0\0t\5\0\0\0TWOPIt\5\0\0\0_sqrtt\4\0\0\0_cost\3\0\0\0_piR|\0\0\0t\5\0\0\0_acos(\16\0\0\0R*\0\0\0Rv\0\0\0t\5\0\0\0kappaR\21\0\0\0RC\0\0\0RZ\0\0\0Rx\0\0\0Rz\0\0\0t\1\0\0\0dRy\0\0\0t\1\0\0\0qt\1\0\0\0ft\2\0\0\0u3t\5\0\0\0theta(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\33\0\0\0\272\1\0\0s&\0\0\0\0\24\t\1\f\1\v\2\n\1\30\2\3\1\t\1\20\2\16\1\t\1.\1\10\2\n\1\26\1\t\1\f\1\27\2\24\2c\3\0\0\0\20\0\0\0\4\0\0\0C \0\0s\n\2\0\0|\1\0d\1\0k\1\0s\30\0|\2\0d\1\0k\1\0r$\0t\0\0d\2\0\202\2\0n\0\0|\0\0j\1\0}\3\0|\1\0d\3\0k\4\0r\35\1t\2\0d\4\0|\1\0\24d\3\0\30\203\1\0}\4\0|\1\0t\3\0\30}\5\0|\1\0|\4\0\27}\6\0x\242\1|\3\0\203\0\0}\7\0d\5\0|\7\0\4\3k\0\0o\204\0d\6\0k\0\0n\2\0\2\1s\217\0qd\0n\0\0d\3\0|\3\0\203\0\0\30}\10\0t\4\0|\7\0d\3\0|\7\0\30\33\203\1\0|\4\0\33}\t\0|\1\0t\5\0|\t\0\203\1\0\24}\n\0|\7\0|\7\0\24|\10\0\24}\v\0|\5\0|\6\0|\t\0\24\27|\n\0\30}\f\0|\f\0t\6\0\27d\7\0|\v\0\24\30d\1\0k\5\0s\16\1|\f\0t\4\0|\v\0\203\1\0k\5\0rd\0|\n\0|\2\0\24Sqd\0Wn\351\0|\1\0d\3\0k\2\0r]\1|\3\0\203\0\0}\r\0x\31\0|\r\0d\5\0k\1\0rM\1|\3\0\203\0\0}\r\0q5\1Wt\4\0|\r\0\203\1\0\v|\2\0\24Sx\236\0|\3\0\203\0\0}\r\0t\7\0|\1\0\27t\7\0\33}\16\0|\16\0|\r\0\24}\17\0|\17\0d\3\0k\1\0r\236\1|\17\0d\3\0|\1\0\33\23}\n\0n\25\0t\4\0|\16\0|\17\0\30|\1\0\33\203\1\0\v}\n\0|\3\0\203\0\0}\7\0|\17\0d\3\0k\4\0r\343\1|\7\0|\n\0|\1\0d\3\0\30\23k\1\0r\372\1Pq\372\1q`\1|\7\0t\5\0|\n\0\v\203\1\0k\1\0r`\1Pq`\1q`\1W|\n\0|\2\0\24Sd\10\0S(\t\0\0\0sZ\1\0\0Gamma distribution.  Not the gamma function!\n\n        Conditions on the parameters are alpha > 0 and beta > 0.\n\n        The probability distribution function is:\n\n                    x ** (alpha - 1) * math.exp(-x / beta)\n          pdf(x) =  --------------------------------------\n                      math.gamma(alpha) * beta ** alpha\n\n        g\0\0\0\0\0\0\0\0s*\0\0\0gammavariate: alpha and beta must be > 0.0g\0\0\0\0\0\0\360?g\0\0\0\0\0\0\0@gH\257\274\232\362\327z>g\313\32P\312\377\377\357?g\0\0\0\0\0\0\22@N(\10\0\0\0R7\0\0\0R\21\0\0\0R\177\0\0\0t\4\0\0\0LOG4RV\0\0\0R|\0\0\0t\r\0\0\0SG_MAGICCONSTt\2\0\0\0_e(\20\0\0\0R*\0\0\0t\5\0\0\0alphat\4\0\0\0betaR\21\0\0\0t\4\0\0\0ainvt\3\0\0\0bbbt\3\0\0\0cccRx\0\0\0Ry\0\0\0t\1\0\0\0vR+\0\0\0Rz\0\0\0RZ\0\0\0Rs\0\0\0RR\0\0\0t\1\0\0\0p(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\34\0\0\0\352\1\0\0sJ\0\0\0\0\21\30\1\f\2\t\1\f\6\24\1\n\1\n\2\3\1\t\1\34\1\6\1\r\1\30\1\20\1\16\1\22\1*\1\17\2\f\2\t\1\17\1\r\1\17\6\3\1\t\1\16\1\n\1\f\1\21\2\25\1\t\1\f\1\24\1\7\1\23\1\10\1c\3\0\0\0\7\0\0\0\5\0\0\0C \0\0s\203\0\0\0|\0\0j\0\0}\3\0|\0\0j\1\0}\4\0d\3\0|\0\0_\1\0|\4\0d\3\0k\10\0rw\0|\3\0\203\0\0t\3\0\24}\5\0t\4\0d\1\0t\5\0d\2\0|\3\0\203\0\0\30\203\1\0\24\203\1\0}\6\0t\6\0|\5\0\203\1\0|\6\0\24}\4\0t\7\0|\5\0\203\1\0|\6\0\24|\0\0_\1\0n\0\0|\1\0|\4\0|\2\0\24\27S(\4\0\0\0s\330\0\0\0Gaussian distribution.\n\n        mu is the mean, and sigma is the standard deviation.  This is\n        slightly faster than the normalvariate() function.\n\n        Not thread-safe without a lock around calls.\n\n        g\0\0\0\0\0\0\0\300g\0\0\0\0\0\0\360?N(\10\0\0\0R\21\0\0\0R)\0\0\0R(\0\0\0R~\0\0\0R\177\0\0\0RV\0\0\0R\200\0\0\0t\4\0\0\0_sin(\7\0\0\0R*\0\0\0Rv\0\0\0Rw\0\0\0R\21\0\0\0Rz\0\0\0t\4\0\0\0x2pit\5\0\0\0g2rad(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\36\0\0\0002\2\0\0s\22\0\0\0\0\34\t\1\t\1\t\1\f\1\r\1\35\1\20\1\26\2c\3\0\0\0\4\0\0\0\5\0\0\0C \0\0s>\0\0\0|\0\0j\0\0|\1\0d\1\0\203\2\0}\3\0|\3\0d\2\0k\2\0r\"\0d\3\0S|\3\0|\3\0|\0\0j\0\0|\2\0d\1\0\203\2\0\27\33Sd\4\0S(\5\0\0\0s\215\0\0\0Beta distribution.\n\n        Conditions on the parameters are alpha > 0 and beta > 0.\n        Returned values range between 0 and 1.\n\n        g\0\0\0\0\0\0\360?i\0\0\0\0g\0\0\0\0\0\0\0\0N(\1\0\0\0R\34\0\0\0(\4\0\0\0R*\0\0\0R\214\0\0\0R\215\0\0\0t\1\0\0\0y(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\37\0\0\0g\2\0\0s\10\0\0\0\0\n\22\1\f\1\4\2c\2\0\0\0\3\0\0\0\5\0\0\0C \0\0s%\0\0\0d\1\0|\0\0j\0\0\203\0\0\30}\2\0d\1\0t\1\0|\2\0d\1\0|\1\0\33\203\2\0\33S(\2\0\0\0s3\0\0\0Pareto distribution.  alpha is the shape parameter.g\0\0\0\0\0\0\360?(\2\0\0\0R\21\0\0\0t\3\0\0\0pow(\3\0\0\0R*\0\0\0R\214\0\0\0Rs\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR \0\0\0y\2\0\0s\4\0\0\0\0\4\20\1c\3\0\0\0\4\0\0\0\5\0\0\0C \0\0s,\0\0\0d\1\0|\0\0j\0\0\203\0\0\30}\3\0|\1\0t\1\0t\2\0|\3\0\203\1\0\vd\1\0|\2\0\33\203\2\0\24S(\2\0\0\0sf\0\0\0Weibull distribution.\n\n        alpha is the scale parameter and beta is the shape parameter.\n\n        g\0\0\0\0\0\0\360?(\3\0\0\0R\21\0\0\0R\227\0\0\0RV\0\0\0(\4\0\0\0R*\0\0\0R\214\0\0\0R\215\0\0\0Rs\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR!\0\0\0\202\2\0\0s\4\0\0\0\0\10\20\1N(#\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__t\7\0\0\0__doc__R4\0\0\0R(\0\0\0R,\0\0\0R\20\0\0\0R\"\0\0\0R#\0\0\0R$\0\0\0RD\0\0\0RE\0\0\0RG\0\0\0R>\0\0\0t\3\0\0\0BPFR\26\0\0\0R\23\0\0\0RV\0\0\0t\v\0\0\0_MethodTypet\22\0\0\0_BuiltinMethodTypeRH\0\0\0R\24\0\0\0R\27\0\0\0R\25\0\0\0R\22\0\0\0R\35\0\0\0R\30\0\0\0R\31\0\0\0R\32\0\0\0R\33\0\0\0R\34\0\0\0R\36\0\0\0R\37\0\0\0R \0\0\0R!\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\17\0\0\0H\0\0\0s8\0\0\0\6\17\6\2\6\2\f\t\f\25\t\4\t\26\t\21\t\3\t\3\t\5\31?\t\6\r\1\17\34\t\4\f\20\tA\t\6\22\26\t\31\t\f\t\23\t0\tH\t5\t\22\t\tc\0\0\0\0\0\0\0\0\4\0\0\0B \0\0s\\\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\t\0d\1\0\204\1\0Z\4\0d\2\0\204\0\0Z\5\0d\3\0\204\0\0Z\6\0d\4\0\204\0\0Z\7\0d\5\0\204\0\0Z\10\0d\6\0d\6\0d\6\0d\7\0\204\3\0Z\t\0d\t\0d\10\0\204\1\0Z\n\0RS(\n\0\0\0i\1\0\0\0c\2\0\0\0\6\0\0\0\5\0\0\0C \0\0s\4\1\0\0|\1\0d\3\0k\10\0rd\0y\37\0t\1\0t\2\0t\3\0d\1\0\203\1\0\203\1\0d\1\0\203\2\0}\1\0Wqd\0\4t\4\0k\n\0r`\0\1\1\1d\2\0d\3\0l\5\0}\2\0t\1\0|\2\0j\5\0\203\0\0d\4\0\24\203\1\0}\1\0qd\0Xn\0\0t\6\0|\1\0t\7\0t\1\0f\2\0\203\2\0s\210\0t\10\0|\1\0\203\1\0}\1\0n\0\0t\t\0|\1\0d\5\0\203\2\0\\\2\0}\1\0}\3\0t\t\0|\1\0d\6\0\203\2\0\\\2\0}\1\0}\4\0t\t\0|\1\0d\7\0\203\2\0\\\2\0}\1\0}\5\0t\7\0|\3\0\203\1\0d\10\0\27t\7\0|\4\0\203\1\0d\10\0\27t\7\0|\5\0\203\1\0d\10\0\27f\3\0|\0\0_\n\0d\3\0|\0\0_\v\0d\3\0S(\t\0\0\0s\374\1\0\0Initialize internal state from hashable object.\n\n        None or no argument seeds from current time or from an operating\n        system specific randomness source if available.\n\n        If a is not None or an int or long, hash(a) is used instead.\n\n        If a is an int or long, a is used directly.  Distinct values between\n        0 and 27814431486575L inclusive are guaranteed to yield distinct\n        internal states (this guarantee is specific to the default\n        Wichmann-Hill generator).\n        i\20\0\0\0i\377\377\377\377Ni\0\1\0\0i<v\0\0ibv\0\0irv\0\0i\1\0\0\0(\f\0\0\0R(\0\0\0R-\0\0\0R.\0\0\0R/\0\0\0R0\0\0\0R1\0\0\0Rh\0\0\0R>\0\0\0t\4\0\0\0hasht\6\0\0\0divmodt\5\0\0\0_seedR)\0\0\0(\6\0\0\0R*\0\0\0R3\0\0\0R1\0\0\0R+\0\0\0R\226\0\0\0Rz\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\20\0\0\0\223\2\0\0s\32\0\0\0\0\16\f\1\3\1\37\1\r\1\f\1\35\2\25\1\17\2\25\1\25\1\25\0010\2c\1\0\0\0\4\0\0\0\3\0\0\0C \0\0sj\0\0\0|\0\0j\0\0\\\3\0}\1\0}\2\0}\3\0d\1\0|\1\0\24d\2\0\26}\1\0d\3\0|\2\0\24d\4\0\26}\2\0d\5\0|\3\0\24d\6\0\26}\3\0|\1\0|\2\0|\3\0f\3\0|\0\0_\0\0|\1\0d\7\0\33|\2\0d\10\0\33\27|\3\0d\t\0\33\27d\n\0\26S(\v\0\0\0s3\0\0\0Get the next random number in the range [0.0, 1.0).i\253\0\0\0i=v\0\0i\254\0\0\0icv\0\0i\252\0\0\0isv\0\0g\0\0\0\0@\217\335@g\0\0\0\0\300\230\335@g\0\0\0\0\300\234\335@g\0\0\0\0\0\0\360?(\1\0\0\0R\240\0\0\0(\4\0\0\0R*\0\0\0R+\0\0\0R\226\0\0\0Rz\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\21\0\0\0\262\2\0\0s\f\0\0\0\0\24\22\1\16\1\16\1\16\1\22\5c\1\0\0\0\1\0\0\0\3\0\0\0C \0\0s\26\0\0\0|\0\0j\0\0|\0\0j\1\0|\0\0j\2\0f\3\0S(\1\0\0\0s9\0\0\0Return internal state; can be passed to setstate() later.(\3\0\0\0R4\0\0\0R\240\0\0\0R)\0\0\0(\1\0\0\0R*\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\"\0\0\0\321\2\0\0s\2\0\0\0\0\2c\2\0\0\0\3\0\0\0\4\0\0\0C \0\0sK\0\0\0|\1\0d\1\0\31}\2\0|\2\0d\2\0k\2\0r.\0|\1\0\\\3\0}\2\0|\0\0_\0\0|\0\0_\1\0n\31\0t\2\0d\3\0|\2\0|\0\0j\3\0f\2\0\26\203\1\0\202\1\0d\4\0S(\5\0\0\0s:\0\0\0Restore internal state from object returned by getstate().i\0\0\0\0i\1\0\0\0s?\0\0\0state with version %s passed to Random.setstate() of version %sN(\4\0\0\0R\240\0\0\0R)\0\0\0R7\0\0\0R4\0\0\0(\3\0\0\0R*\0\0\0R9\0\0\0R:\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR#\0\0\0\325\2\0\0s\n\0\0\0\0\2\n\1\f\1\30\2\6\2c\2\0\0\0\5\0\0\0\6\0\0\0C \0\0s\243\0\0\0|\1\0d\1\0k\5\0s\33\0t\0\0d\2\0\203\1\0\202\1\0n\0\0|\0\0j\1\0\\\3\0}\2\0}\3\0}\4\0t\2\0|\2\0t\3\0d\3\0|\1\0d\4\0\203\3\0\24\203\1\0d\4\0\26}\2\0t\2\0|\3\0t\3\0d\5\0|\1\0d\6\0\203\3\0\24\203\1\0d\6\0\26}\3\0t\2\0|\4\0t\3\0d\7\0|\1\0d\10\0\203\3\0\24\203\1\0d\10\0\26}\4\0|\2\0|\3\0|\4\0f\3\0|\0\0_\1\0d\t\0S(\n\0\0\0s\303\1\0\0Act as if n calls to random() were made, but quickly.\n\n        n is an int, greater than or equal to 0.\n\n        Example use:  If you have 2 threads and know that each will\n        consume no more than a million random numbers, create two Random\n        objects r1 and r2, then do\n            r2.setstate(r1.getstate())\n            r2.jumpahead(1000000)\n        Then r1 and r2 will use guaranteed-disjoint segments of the full\n        period.\n        i\0\0\0\0s\16\0\0\0n must be >= 0i\253\0\0\0i=v\0\0i\254\0\0\0icv\0\0i\252\0\0\0isv\0\0N(\4\0\0\0R7\0\0\0R\240\0\0\0R>\0\0\0R\227\0\0\0(\5\0\0\0R*\0\0\0RB\0\0\0R+\0\0\0R\226\0\0\0Rz\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR$\0\0\0\337\2\0\0s\16\0\0\0\0\16\f\1\17\1\22\1 \1 \1 \1i\0\0\0\0c\4\0\0\0\6\0\0\0\4\0\0\0C \0\0s\177\1\0\0t\0\0|\1\0\203\1\0t\0\0|\2\0\203\1\0\4\3k\2\0o4\0t\0\0|\3\0\203\1\0\4\3k\2\0o4\0t\1\0k\2\0n\2\0\2\1sH\0t\2\0d\1\0\203\1\0\202\1\0n\0\0d\2\0|\1\0\4\3k\1\0o_\0d\3\0k\0\0n\2\0\2\1o\231\0d\2\0|\2\0\4\3k\1\0o{\0d\3\0k\0\0n\2\0\2\1o\231\0d\2\0|\3\0\4\3k\1\0o\227\0d\3\0k\0\0n\2\0\2\1s\253\0t\3\0d\4\0\203\1\0\202\1\0n\0\0d\2\0|\1\0\4\3k\2\0o\315\0|\2\0\4\3k\2\0o\315\0|\3\0k\2\0n\2\0\2\1rN\1d\5\0d\6\0l\4\0}\4\0t\5\0|\4\0j\4\0\203\0\0d\3\0\24\203\1\0}\5\0t\1\0|\5\0d\7\0@|\5\0d\10\0?A\203\1\0}\5\0t\6\0|\5\0d\3\0\203\2\0\\\2\0}\5\0}\1\0t\6\0|\5\0d\3\0\203\2\0\\\2\0}\5\0}\2\0t\6\0|\5\0d\3\0\203\2\0\\\2\0}\5\0}\3\0n\0\0|\1\0pW\1d\t\0|\2\0p`\1d\t\0|\3\0pi\1d\t\0f\3\0|\0\0_\7\0d\6\0|\0\0_\t\0d\6\0S(\n\0\0\0sj\0\0\0Set the Wichmann-Hill seed from (x, y, z).\n\n        These must be integers in the range [0, 256).\n        s\26\0\0\0seeds must be integersi\0\0\0\0i\0\1\0\0s\36\0\0\0seeds must be in range(0, 256)i\377\377\377\377Ni\377\377\377\0i\30\0\0\0i\1\0\0\0(\n\0\0\0RT\0\0\0R>\0\0\0R8\0\0\0R7\0\0\0R1\0\0\0R-\0\0\0R\237\0\0\0R\240\0\0\0R(\0\0\0R)\0\0\0(\6\0\0\0R*\0\0\0R+\0\0\0R\226\0\0\0Rz\0\0\0R1\0\0\0t\1\0\0\0t(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyt\10\0\0\0__whseed\365\2\0\0s\32\0\0\0\0\0069\1\17\1T\1\17\1'\2\f\1\26\1\30\1\25\1\25\1\30\2$\2c\2\0\0\0\5\0\0\0\4\0\0\0C \0\0s\270\0\0\0|\1\0d\1\0k\10\0r\32\0|\0\0j\1\0\203\0\0\1d\1\0St\2\0|\1\0\203\1\0}\1\0t\3\0|\1\0d\2\0\203\2\0\\\2\0}\1\0}\2\0t\3\0|\1\0d\2\0\203\2\0\\\2\0}\1\0}\3\0t\3\0|\1\0d\2\0\203\2\0\\\2\0}\1\0}\4\0|\2\0|\1\0\27d\2\0\26pv\0d\3\0}\2\0|\3\0|\1\0\27d\2\0\26p\212\0d\3\0}\3\0|\4\0|\1\0\27d\2\0\26p\236\0d\3\0}\4\0|\0\0j\1\0|\2\0|\3\0|\4\0\203\3\0\1d\1\0S(\4\0\0\0sb\1\0\0Seed from hashable object's hash code.\n\n        None or no argument seeds from current time.  It is not guaranteed\n        that objects with distinct hash codes lead to distinct internal\n        states.\n\n        This is obsolete, provided for compatibility with the seed routine\n        used prior to Python 2.1.  Use the .seed() method instead.\n        Ni\0\1\0\0i\1\0\0\0(\4\0\0\0R(\0\0\0t\25\0\0\0_WichmannHill__whseedR\236\0\0\0R\237\0\0\0(\5\0\0\0R*\0\0\0R3\0\0\0R+\0\0\0R\226\0\0\0Rz\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyt\6\0\0\0whseed\f\3\0\0s\26\0\0\0\0\v\f\1\n\1\4\1\f\1\25\1\25\1\25\1\24\1\24\1\24\1N(\v\0\0\0R\230\0\0\0R\231\0\0\0R4\0\0\0R(\0\0\0R\20\0\0\0R\21\0\0\0R\"\0\0\0R#\0\0\0R$\0\0\0R\243\0\0\0R\244\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR%\0\0\0\217\2\0\0s\20\0\0\0\6\2\6\2\f\37\t\37\t\4\t\n\t\26\22\27c\0\0\0\0\0\0\0\0\2\0\0\0B \0\0sF\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0d\3\0\204\0\0Z\5\0e\5\0\4Z\6\0Z\7\0d\4\0\204\0\0Z\10\0e\10\0\4Z\t\0Z\n\0RS(\5\0\0\0s\335\0\0\0Alternate random number generator using sources provided\n    by the operating system (such as /dev/urandom on Unix or\n    CryptGenRandom on Windows).\n\n     Not available on all systems (see os.urandom() for details).\n    c\1\0\0\0\1\0\0\0\4\0\0\0C \0\0s!\0\0\0t\0\0t\1\0t\2\0d\1\0\203\1\0\203\1\0d\2\0\203\2\0d\3\0?t\3\0\24S(\4\0\0\0s3\0\0\0Get the next random number in the range [0.0, 1.0).i\7\0\0\0i\20\0\0\0i\3\0\0\0(\4\0\0\0R-\0\0\0R.\0\0\0R/\0\0\0t\t\0\0\0RECIP_BPF(\1\0\0\0R*\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR\21\0\0\0-\3\0\0s\2\0\0\0\0\2c\2\0\0\0\4\0\0\0\4\0\0\0C \0\0su\0\0\0|\1\0d\1\0k\1\0r\33\0t\0\0d\2\0\203\1\0\202\1\0n\0\0|\1\0t\1\0|\1\0\203\1\0k\3\0r<\0t\2\0d\3\0\203\1\0\202\1\0n\0\0|\1\0d\4\0\27d\5\0\32}\2\0t\3\0t\4\0t\5\0|\2\0\203\1\0\203\1\0d\6\0\203\2\0}\3\0|\3\0|\2\0d\5\0\24|\1\0\30?S(\7\0\0\0s>\0\0\0getrandbits(k) -> x.  Generates a long int with k random bits.i\0\0\0\0s(\0\0\0number of bits must be greater than zeros#\0\0\0number of bits should be an integeri\7\0\0\0i\10\0\0\0i\20\0\0\0(\6\0\0\0R7\0\0\0R>\0\0\0R8\0\0\0R-\0\0\0R.\0\0\0R/\0\0\0(\4\0\0\0R*\0\0\0RY\0\0\0t\5\0\0\0bytesR+\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR&\0\0\0001\3\0\0s\16\0\0\0\0\2\f\1\17\1\22\1\17\1\16\1\33\1c\1\0\0\0\3\0\0\0\1\0\0\0O \0\0s\4\0\0\0d\1\0S(\2\0\0\0s<\0\0\0Stub method.  Not used for a system random number generator.N(\1\0\0\0R(\0\0\0(\3\0\0\0R*\0\0\0t\4\0\0\0argst\4\0\0\0kwds(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyt\5\0\0\0_stub;\3\0\0s\2\0\0\0\0\2c\1\0\0\0\3\0\0\0\2\0\0\0O \0\0s\20\0\0\0t\0\0d\1\0\203\1\0\202\1\0d\2\0S(\3\0\0\0sA\0\0\0Method should not be called for a system random number generator.s*\0\0\0System entropy source does not have state.N(\1\0\0\0R0\0\0\0(\3\0\0\0R*\0\0\0R\247\0\0\0R\250\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyt\17\0\0\0_notimplemented@\3\0\0s\2\0\0\0\0\2(\v\0\0\0R\230\0\0\0R\231\0\0\0R\232\0\0\0R\21\0\0\0R&\0\0\0R\251\0\0\0R\20\0\0\0R$\0\0\0R\252\0\0\0R\"\0\0\0R#\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyR'\0\0\0%\3\0\0s\16\0\0\0\6\6\6\2\t\4\t\n\t\3\n\2\t\3c\3\0\0\0\16\0\0\0\5\0\0\0C \0\0s\365\0\0\0d\1\0d\0\0l\0\0}\3\0|\0\0Gd\2\0G|\1\0j\1\0GHd\3\0}\4\0d\3\0}\5\0d\4\0}\6\0d\5\0}\7\0|\3\0j\0\0\203\0\0}\10\0xV\0t\2\0|\0\0\203\1\0D]H\0}\t\0|\1\0|\2\0\214\0\0}\n\0|\4\0|\n\0007}\4\0|\5\0|\n\0|\n\0\24\27}\5\0t\3\0|\n\0|\6\0\203\2\0}\6\0t\4\0|\n\0|\7\0\203\2\0}\7\0qM\0W|\3\0j\0\0\203\0\0}\v\0t\5\0|\v\0|\10\0\30d\6\0\203\2\0Gd\7\0G|\4\0|\0\0\33}\f\0t\6\0|\5\0|\0\0\33|\f\0|\f\0\24\30\203\1\0}\r\0d\10\0|\f\0|\r\0|\6\0|\7\0f\4\0\26GHd\0\0S(\t\0\0\0Ni\377\377\377\377t\5\0\0\0timesg\0\0\0\0\0\0\0\0g\0\0\0 _\240\2Bg\0\0\0 _\240\2\302i\3\0\0\0s\4\0\0\0sec,s!\0\0\0avg %g, stddev %g, min %g, max %g(\7\0\0\0R1\0\0\0R\230\0\0\0t\5\0\0\0ranget\3\0\0\0mint\3\0\0\0maxt\5\0\0\0roundR\177\0\0\0(\16\0\0\0RB\0\0\0t\4\0\0\0funcR\247\0\0\0R1\0\0\0t\5\0\0\0totalt\5\0\0\0sqsumt\10\0\0\0smallestt\7\0\0\0largestt\2\0\0\0t0R_\0\0\0R+\0\0\0t\2\0\0\0t1t\3\0\0\0avgt\6\0\0\0stddev(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyt\17\0\0\0_test_generatorG\3\0\0s&\0\0\0\0\1\f\1\20\1\6\1\6\1\6\1\6\1\f\1\23\1\f\1\n\1\16\1\17\1\23\1\f\1\25\1\n\1\30\1\3\1i\320\7\0\0c\1\0\0\0\1\0\0\0\7\0\0\0C \0\0s\r\1\0\0t\0\0|\0\0t\1\0d\v\0\203\3\0\1t\0\0|\0\0t\2\0d\f\0\203\3\0\1t\0\0|\0\0t\3\0d\r\0\203\3\0\1t\0\0|\0\0t\4\0d\16\0\203\3\0\1t\0\0|\0\0t\5\0d\17\0\203\3\0\1t\0\0|\0\0t\5\0d\20\0\203\3\0\1t\0\0|\0\0t\5\0d\21\0\203\3\0\1t\0\0|\0\0t\5\0d\22\0\203\3\0\1t\0\0|\0\0t\5\0d\23\0\203\3\0\1t\0\0|\0\0t\5\0d\24\0\203\3\0\1t\0\0|\0\0t\5\0d\25\0\203\3\0\1t\0\0|\0\0t\5\0d\26\0\203\3\0\1t\0\0|\0\0t\5\0d\27\0\203\3\0\1t\0\0|\0\0t\6\0d\30\0\203\3\0\1t\0\0|\0\0t\7\0d\31\0\203\3\0\1t\0\0|\0\0t\10\0d\1\0d\2\0d\32\0f\3\0\203\3\0\1d\0\0S(\33\0\0\0Ng\0\0\0\0\0\0\0\0g\0\0\0\0\0\0\360?g{\24\256G\341z\204?g\232\231\231\231\231\231\271?g\0\0\0\0\0\0\0@g\0\0\0\0\0\0\340?g\315\314\314\314\314\314\354?g\0\0\0\0\0\0004@g\0\0\0\0\0\0i@g\0\0\0\0\0\0\10@(\0\0\0\0(\2\0\0\0g\0\0\0\0\0\0\0\0g\0\0\0\0\0\0\360?(\2\0\0\0g\0\0\0\0\0\0\0\0g\0\0\0\0\0\0\360?(\2\0\0\0g\0\0\0\0\0\0\0\0g\0\0\0\0\0\0\360?(\2\0\0\0g{\24\256G\341z\204?g\0\0\0\0\0\0\360?(\2\0\0\0g\232\231\231\231\231\231\271?g\0\0\0\0\0\0\360?(\2\0\0\0g\232\231\231\231\231\231\271?g\0\0\0\0\0\0\0@(\2\0\0\0g\0\0\0\0\0\0\340?g\0\0\0\0\0\0\360?(\2\0\0\0g\315\314\314\314\314\314\354?g\0\0\0\0\0\0\360?(\2\0\0\0g\0\0\0\0\0\0\360?g\0\0\0\0\0\0\360?(", 20480) = 20480
27308 read(7, "\2\0\0\0g\0\0\0\0\0\0\0@g\0\0\0\0\0\0\360?(\2\0\0\0g\0\0\0\0\0\0004@g\0\0\0\0\0\0\360?(\2\0\0\0g\0\0\0\0\0\0i@g\0\0\0\0\0\0\360?(\2\0\0\0g\0\0\0\0\0\0\0\0g\0\0\0\0\0\0\360?(\2\0\0\0g\0\0\0\0\0\0\10@g\0\0\0\0\0\0\10@gUUUUUU\325?(\t\0\0\0R\271\0\0\0R\21\0\0\0R\30\0\0\0R\31\0\0\0R\33\0\0\0R\34\0\0\0R\36\0\0\0R\37\0\0\0R\35\0\0\0(\1\0\0\0t\1\0\0\0N(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyt\5\0\0\0_test]\3\0\0s \0\0\0\0\1\20\1\20\1\20\1\20\1\20\1\20\1\20\1\20\1\20\1\20\1\20\1\20\1\20\1\20\1\20\1t\10\0\0\0__main__(K\0\0\0R\232\0\0\0t\n\0\0\0__future__R\0\0\0\0t\10\0\0\0warningsR\1\0\0\0RU\0\0\0t\5\0\0\0typesR\2\0\0\0R\234\0\0\0R\3\0\0\0R\235\0\0\0t\4\0\0\0mathR\4\0\0\0RV\0\0\0R\5\0\0\0R|\0\0\0R\6\0\0\0R\201\0\0\0R\7\0\0\0R\213\0\0\0R\10\0\0\0Rb\0\0\0R\t\0\0\0R\177\0\0\0R\n\0\0\0R\202\0\0\0R\v\0\0\0R\200\0\0\0R\f\0\0\0R\223\0\0\0t\2\0\0\0osR\r\0\0\0R/\0\0\0t\10\0\0\0binasciiR\16\0\0\0R.\0\0\0t\7\0\0\0hashlibR?\0\0\0t\7\0\0\0__all__Ru\0\0\0R~\0\0\0R\211\0\0\0R\212\0\0\0R\233\0\0\0R\245\0\0\0t\7\0\0\0_randomR\17\0\0\0R%\0\0\0R'\0\0\0R\271\0\0\0R\273\0\0\0t\5\0\0\0_instR\20\0\0\0R\21\0\0\0R\22\0\0\0R\35\0\0\0R\23\0\0\0R\24\0\0\0R\26\0\0\0R\25\0\0\0R\27\0\0\0R\30\0\0\0R\31\0\0\0R\32\0\0\0R\33\0\0\0R\34\0\0\0R\36\0\0\0R\37\0\0\0R \0\0\0R!\0\0\0R\"\0\0\0R#\0\0\0R$\0\0\0R&\0\0\0R\230\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/random.pyt\10\0\0\0<module>(\0\0\0sj\0\0\0\6\2\20\1\20\1\26\1(\1\"\1\20\1\20\1\f\2\25\1\f\1\f\1\f\1\17\1\t\2\32\1\n\1\f\1\20\1\6\1\v\7\f\2\31\377\0\377\0I\26\226\26\"\t\26\f\30\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\2\f\1", 4096) = 910
27308 read(7, "", 4096)                 = 0
27308 close(7)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 stat64("__future__", 0xbfffd1cc)  = -1 ENOENT (No such file or directory)
27308 open("__future__.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("__future__.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("__future__module.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("__future__.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("__future__.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/__future__", 0xbfffd1cc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/__future__.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/__future__.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/__future__module.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/__future__.py", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=661439, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=4380, st_atime=2017/04/13-18:38:00, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/__future__.pyc", O_RDONLY|O_LARGEFILE) = 8
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669406, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=4216, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(8, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\7\0\0\0@\0\0\0s\355\0\0\0d\0\0Z\0\0d\1\0d\2\0d\3\0d\4\0d\5\0d\6\0d\7\0g\7\0Z\1\0d\10\0g\1\0e\1\0\27Z\2\0d\t\0Z\3\0d\n\0Z\4\0d\v\0Z\5\0d\f\0Z\6\0d\r\0Z\7\0d\16\0Z\10\0d\17\0Z\t\0d\20\0d\33\0d\21\0\204\0\0\203\0\0YZ\n\0e\n\0d\34\0d\35\0e\3\0\203\3\0Z\v\0e\n\0d\36\0d\37\0e\4\0\203\3\0Z\f\0e\n\0d \0d!\0e\5\0\203\3\0Z\r\0e\n\0d\"\0d#\0e\6\0\203\3\0Z\16\0e\n\0d$\0d%\0e\7\0\203\3\0Z\17\0e\n\0d&\0d'\0e\10\0\203\3\0Z\20\0e\n\0d(\0d)\0e\t\0\203\3\0Z\21\0d\32\0S(*\0\0\0sf\6\0\0Record of phased-in incompatible language changes.\n\nEach line is of the form:\n\n    FeatureName = \"_Feature(\" OptionalRelease \",\" MandatoryRelease \",\"\n                              CompilerFlag \")\"\n\nwhere, normally, OptionalRelease < MandatoryRelease, and both are 5-tuples\nof the same form as sys.version_info:\n\n    (PY_MAJOR_VERSION, # the 2 in 2.1.0a3; an int\n     PY_MINOR_VERSION, # the 1; an int\n     PY_MICRO_VERSION, # the 0; an int\n     PY_RELEASE_LEVEL, # \"alpha\", \"beta\", \"candidate\" or \"final\"; string\n     PY_RELEASE_SERIAL # the 3; an int\n    )\n\nOptionalRelease records the first release in which\n\n    from __future__ import FeatureName\n\nwas accepted.\n\nIn the case of MandatoryReleases that have not yet occurred,\nMandatoryRelease predicts the release in which the feature will become part\nof the language.\n\nElse MandatoryRelease records when the feature became part of the language;\nin releases at or after that, modules no longer need\n\n    from __future__ import FeatureName\n\nto use the feature in question, but may continue to use such imports.\n\nMandatoryRelease may also be None, meaning that a planned feature got\ndropped.\n\nInstances of class _Feature have two corresponding methods,\n.getOptionalRelease() and .getMandatoryRelease().\n\nCompilerFlag is the (bitfield) flag that should be passed in the fourth\nargument to the builtin function compile() to enable the feature in\ndynamically compiled code.  This flag is stored in the .compiler_flag\nattribute on _Future instances.  These values must match the appropriate\n#defines of CO_xxx flags in Include/compile.h.\n\nNo feature line is ever to be deleted from this file.\nt\r\0\0\0nested_scopest\n\0\0\0generatorst\10\0\0\0divisiont\17\0\0\0absolute_importt\16\0\0\0with_statementt\16\0\0\0print_functiont\20\0\0\0unicode_literalst\21\0\0\0all_feature_namesi\20\0\0\0i\0\0\0\0i\0 \0\0i\0@\0\0i\0\200\0\0i\0\0\1\0i\0\0\2\0t\10\0\0\0_Featurec\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s,\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0d\3\0\204\0\0Z\5\0RS(\4\0\0\0c\4\0\0\0\4\0\0\0\2\0\0\0C\0\0\0s\37\0\0\0|\1\0|\0\0_\0\0|\2\0|\0\0_\1\0|\3\0|\0\0_\2\0d\0\0S(\1\0\0\0N(\3\0\0\0t\10\0\0\0optionalt\t\0\0\0mandatoryt\r\0\0\0compiler_flag(\4\0\0\0t\4\0\0\0selft\17\0\0\0optionalReleaset\20\0\0\0mandatoryReleaseR\v\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/__future__.pyt\10\0\0\0__init__K\0\0\0s\6\0\0\0\0\1\t\1\t\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\7\0\0\0|\0\0j\0\0S(\1\0\0\0s\205\0\0\0Return first release in which this feature was recognized.\n\n        This is a 5-tuple, of the same form as sys.version_info.\n        (\1\0\0\0R\t\0\0\0(\1\0\0\0R\f\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/__future__.pyt\22\0\0\0getOptionalReleaseP\0\0\0s\2\0\0\0\0\6c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\7\0\0\0|\0\0j\0\0S(\1\0\0\0s\267\0\0\0Return release in which this feature will become mandatory.\n\n        This is a 5-tuple, of the same form as sys.version_info, or, if\n        the feature was dropped, is None.\n        (\1\0\0\0R\n\0\0\0(\1\0\0\0R\f\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/__future__.pyt\23\0\0\0getMandatoryReleaseX\0\0\0s\2\0\0\0\0\7c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0s \0\0\0d\1\0t\0\0|\0\0j\1\0|\0\0j\2\0|\0\0j\3\0f\3\0\203\1\0\27S(\2\0\0\0NR\10\0\0\0(\4\0\0\0t\4\0\0\0reprR\t\0\0\0R\n\0\0\0R\v\0\0\0(\1\0\0\0R\f\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/__future__.pyt\10\0\0\0__repr__a\0\0\0s\6\0\0\0\0\1\f\1\6\1(\6\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__R\17\0\0\0R\20\0\0\0R\21\0\0\0R\23\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/__future__.pyR\10\0\0\0J\0\0\0s\10\0\0\0\6\1\t\5\t\10\t\ti\2\0\0\0i\1\0\0\0t\4\0\0\0betat\5\0\0\0alphai\3\0\0\0t\5\0\0\0finali\5\0\0\0i\6\0\0\0N(\0\0\0\0(\5\0\0\0i\2\0\0\0i\1\0\0\0i\0\0\0\0R\26\0\0\0i\1\0\0\0(\5\0\0\0i\2\0\0\0i\2\0\0\0i\0\0\0\0R\27\0\0\0i\0\0\0\0(\5\0\0\0i\2\0\0\0i\2\0\0\0i\0\0\0\0R\27\0\0\0i\1\0\0\0(\5\0\0\0i\2\0\0\0i\3\0\0\0i\0\0\0\0s\5\0\0\0finali\0\0\0\0(\5\0\0\0i\2\0\0\0i\2\0\0\0i\0\0\0\0R\27\0\0\0i\2\0\0\0(\5\0\0\0i\3\0\0\0i\0\0\0\0i\0\0\0\0R\27\0\0\0i\0\0\0\0(\5\0\0\0i\2\0\0\0i\5\0\0\0i\0\0\0\0R\27\0\0\0i\1\0\0\0(\5\0\0\0i\3\0\0\0i\0\0\0\0i\0\0\0\0R\27\0\0\0i\0\0\0\0(\5\0\0\0i\2\0\0\0i\5\0\0\0i\0\0\0\0R\27\0\0\0i\1\0\0\0(\5\0\0\0i\2\0\0\0i\6\0\0\0i\0\0\0\0R\27\0\0\0i\0\0\0\0(\5\0\0\0i\2\0\0\0i\6\0\0\0i\0\0\0\0R\27\0\0\0i\2\0\0\0(\5\0\0\0i\3\0\0\0i\0\0\0\0i\0\0\0\0R\27\0\0\0i\0\0\0\0(\5\0\0\0i\2\0\0\0i\6\0\0\0i\0\0\0\0R\27\0\0\0i\2\0\0\0(\5\0\0\0i\3\0\0\0i\0\0\0\0i\0\0\0\0R\27\0\0\0i\0\0\0\0(\22\0\0\0t\7\0\0\0__doc__R\7\0\0\0t\7\0\0\0__all__t\t\0\0\0CO_NESTEDt\24\0\0\0CO_GENERATOR_ALLOWEDt\22\0\0\0CO_FUTURE_DIVISIONt\31\0\0\0CO_FUTURE_ABSOLUTE_IMPORTt\30\0\0\0CO_FUTURE_WITH_STATEMENTt\30\0\0\0CO_FUTURE_PRINT_FUNCTIONt\32\0\0\0CO_FUTURE_UNICODE_LITERALSR\10\0\0\0R\0\0\0\0R\1\0\0\0R\2\0\0\0R\3\0\0\0R\4\0\0\0R\5\0\0\0R\6\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib", 4096) = 4096
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669406, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=4216, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(8, "/python2.7/__future__.pyt\10\0\0\0<module>0\0\0\0sJ\0\0\0\6\3\3\1\3\1\3\1\3\1\3\1\3\1\t\3\r\6\6\1\6\1\6\1\6\1\6\1\6\1\6\2\23\34\6\1\3\1\t\2\6\1\3\1\t\2\6\1\3\1\t\2\6\1\3\1\t\2\6\1\3\1\t\2\6\1\3\1\t\2\6\1\3\1", 4096) = 120
27308 read(8, "", 4096)                 = 0
27308 close(8)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 close(7)                          = 0
27308 stat64("hashlib", 0xbfffd1cc)     = -1 ENOENT (No such file or directory)
27308 open("hashlib.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("hashlib.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("hashlibmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("hashlib.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("hashlib.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/hashlib", 0xbfffd1cc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/hashlib.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/hashlib.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/hashlibmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/hashlib.py", O_RDONLY|O_LARGEFILE) = 7
27308 fstat64(7, {st_dev=makedev(8, 1), st_ino=661504, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=7842, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/hashlib.pyc", O_RDONLY|O_LARGEFILE) = 8
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669882, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=7011, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:34:14, st_ctime=2015/09/26-01:34:14}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
27308 read(8, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\6\0\0\0@\0\0\0s\244\1\0\0d\0\0Z\0\0d\31\0Z\1\0e\2\0e\1\0\203\1\0Z\3\0e\2\0e\1\0\203\1\0Z\4\0e\1\0Z\5\0e\1\0d\32\0\27Z\6\0d\f\0\204\0\0Z\7\0d\r\0\204\0\0Z\10\0d\16\0d\17\0\204\1\0Z\t\0d\16\0d\20\0\204\1\0Z\n\0y.\0d\21\0d\22\0l\v\0Z\v\0e\n\0Z\f\0e\10\0Z\r\0e\4\0j\16\0e\v\0j\17\0\203\1\0Z\4\0Wn\35\0\4e\20\0k\n\0r\253\0\1\1\1e\t\0Z\f\0e\7\0Z\r\0n\1\0XxU\0e\1\0D]M\0Z\21\0y\27\0e\r\0e\21\0\203\1\0e\22\0\203\0\0e\21\0<Wq\263\0\4e\23\0k\n\0r\377\0\1\1\1d\21\0d\22\0l\24\0Z\24\0e\24\0j\25\0d\23\0e\21\0\203\2\0\1q\263\0Xq\263\0Wy\24\0d\21\0d\24\0l\v\0m\26\0Z\26\0\1Wns\0\4e\20\0k\n\0r\215\1\1\1\1d\21\0d\22\0l\27\0Z\27\0d\21\0d\22\0l\30\0Z\30\0d\16\0j\31\0d\25\0\204\0\0e\32\0d\26\0\203\1\0D\203\1\0\203\1\0Z\33\0d\16\0j\31\0d\27\0\204\0\0e\32\0d\26\0\203\1\0D\203\1\0\203\1\0Z\34\0d\22\0d\30\0\204\1\0Z\26\0n\1\0X[\1\0[\21\0[\r\0[\t\0[\n\0[\10\0d\22\0S(\33\0\0\0s\354\7\0\0hashlib module - A common interface to many hash functions.\n\nnew(name, string='') - returns a new hash object implementing the\n                       given hash function; initializing the hash\n                       using the given string data.\n\nNamed constructor functions are also available, these are much faster\nthan using new():\n\nmd5(), sha1(), sha224(), sha256(), sha384(), and sha512()\n\nMore algorithms may be available on your platform but the above are guaranteed\nto exist.  See the algorithms_guaranteed and algorithms_available attributes\nto find out what algorithm names can be passed to new().\n\nNOTE: If you want the adler32 or crc32 hash functions they are available in\nthe zlib module.\n\nChoose your hash function wisely.  Some have known collision weaknesses.\nsha384 and sha512 will be slow on 32 bit platforms.\n\nHash objects have these methods:\n - update(arg): Update the hash object with the string arg. Repeated calls\n                are equivalent to a single call with the concatenation of all\n                the arguments.\n - digest():    Return the digest of the strings passed to the update() method\n                so far. This may contain non-ASCII characters, including\n                NUL bytes.\n - hexdigest(): Like digest() except the digest is returned as a string of\n                double length, containing only hexadecimal digits.\n - copy():      Return a copy (clone) of the hash object. This can be used to\n                efficiently compute the digests of strings that share a common\n                initial substring.\n\nFor example, to obtain the digest of the string 'Nobody inspects the\nspammish repetition':\n\n    >>> import hashlib\n    >>> m = hashlib.md5()\n    >>> m.update(\"Nobody inspects\")\n    >>> m.update(\" the spammish repetition\")\n    >>> m.digest()\n    '\\xbbd\\x9c\\x83\\xdd\\x1e\\xa5\\xc9\\xd9\\xde\\xc9\\xa1\\x8d\\xf0\\xff\\xe9'\n\nMore condensed:\n\n    >>> hashlib.sha224(\"Nobody inspects the spammish repetition\").hexdigest()\n    'a4337bc45a8fc544c03f52dc550cd6e1e87021bc896588bd79e901e2'\n\nt\3\0\0\0md5t\4\0\0\0sha1t\6\0\0\0sha224t\6\0\0\0sha256t\6\0\0\0sha384t\6\0\0\0sha512t\3\0\0\0newt\25\0\0\0algorithms_guaranteedt\24\0\0\0algorithms_availablet\n\0\0\0algorithmst\v\0\0\0pbkdf2_hmacc\1\0\0\0\6\0\0\0\5\0\0\0C\0\0\0s\0\1\0\0y\330\0|\0\0d\24\0k\6\0r\"\0d\3\0d\0\0l\0\0}\1\0|\1\0j\1\0S|\0\0d\25\0k\6\0rA\0d\3\0d\0\0l\2\0}\2\0|\2\0j\1\0S|\0\0d\26\0k\6\0r\214\0d\3\0d\0\0l\3\0}\3\0|\0\0d\n\0\37}\4\0|\4\0d\v\0k\2\0rv\0|\3\0j\4\0S|\4\0d\f\0k\2\0r\327\0|\3\0j\5\0SnK\0|\0\0d\27\0k\6\0r\327\0d\3\0d\0\0l\6\0}\5\0|\0\0d\n\0\37}\4\0|\4\0d\21\0k\2\0r\301\0|\5\0j\7\0S|\4\0d\22\0k\2\0r\327\0|\5\0j\10\0Sn\0\0Wn\21\0\4t\t\0k\n\0r\353\0\1\1\1n\1\0Xt\n\0d\23\0|\0\0\27\203\1\0\202\1\0d\0\0S(\30\0\0\0Nt\4\0\0\0SHA1R\1\0\0\0i\377\377\377\377t\3\0\0\0MD5R\0\0\0\0t\6\0\0\0SHA256R\3\0\0\0t\6\0\0\0SHA224R\2\0\0\0i\3\0\0\0t\3\0\0\000256t\3\0\0\000224t\6\0\0\0SHA512R\5\0\0\0t\6\0\0\0SHA384R\4\0\0\0t\3\0\0\000512t\3\0\0\000384s\26\0\0\0unsupported hash type (\2\0\0\0R\v\0\0\0R\1\0\0\0(\2\0\0\0R\f\0\0\0R\0\0\0\0(\4\0\0\0R\r\0\0\0s\6\0\0\0sha256R\16\0\0\0s\6\0\0\0sha224(\4\0\0\0R\21\0\0\0s\6\0\0\0sha512R\22\0\0\0s\6\0\0\0sha384(\v\0\0\0t\4\0\0\0_shaR\6\0\0\0t\4\0\0\0_md5t\7\0\0\0_sha256R\3\0\0\0R\2\0\0\0t\7\0\0\0_sha512R\5\0\0\0R\4\0\0\0t\v\0\0\0ImportErrort\n\0\0\0ValueError(\6\0\0\0t\4\0\0\0nameR\25\0\0\0R\26\0\0\0R\27\0\0\0t\2\0\0\0bsR\30\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/hashlib.pyt\31\0\0\0__get_builtin_constructorH\0\0\0s0\0\0\0\0\1\3\1\f\1\f\1\7\1\f\1\f\1\7\1\f\1\f\1\n\1\f\1\7\1\f\1\n\1\f\1\f\1\n\1\f\1\7\1\f\1\16\1\r\1\4\2c\1\0\0\0\2\0\0\0\6\0\0\0C\0\0\0sG\0\0\0y\"\0t\0\0t\1\0d\1\0|\0\0\27\203\2\0}\1\0|\1\0\203\0\0\1|\1\0SWn\36\0\4t\2\0t\3\0f\2\0k\n\0rB\0\1\1\1t\4\0|\0\0\203\1\0SXd\0\0S(\2\0\0\0Nt\10\0\0\0openssl_(\5\0\0\0t\7\0\0\0getattrt\10\0\0\0_hashlibt\16\0\0\0AttributeErrorR\32\0\0\0R\35\0\0\0(\2\0\0\0R\33\0\0\0t\1\0\0\0f(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/hashlib.pyt\31\0\0\0__get_openssl_constructord\0\0\0s\f\0\0\0\0\1\3\1\23\3\7\2\10\1\23\1t\0\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0t\0\0|\0\0\203\1\0|\1\0\203\1\0S(\1\0\0\0s|\0\0\0new(name, string='') - Return a new hashing object using the named algorithm;\n    optionally initialized with a string.\n    (\1\0\0\0R\35\0\0\0(\2\0\0\0R\33\0\0\0t\6\0\0\0string(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/hashlib.pyt\10\0\0\0__py_newp\0\0\0s\2\0\0\0\0\4c\2\0\0\0\2\0\0\0\5\0\0\0C\0\0\0s9\0\0\0y\24\0t\0\0j\1\0|\0\0|\1\0\203\2\0SWn\36\0\4t\2\0k\n\0r4\0\1\1\1t\3\0|\0\0\203\1\0|\1\0\203\1\0SXd", 4096) = 4096
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669882, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=7011, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:34:14, st_ctime=2015/09/26-01:34:14}) = 0
27308 read(8, "\1\0S(\2\0\0\0s|\0\0\0new(name, string='') - Return a new hashing object using the named algorithm;\n    optionally initialized with a string.\n    N(\4\0\0\0R \0\0\0R\6\0\0\0R\32\0\0\0R\35\0\0\0(\2\0\0\0R\33\0\0\0R%\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/hashlib.pyt\n\0\0\0__hash_neww\0\0\0s\10\0\0\0\0\4\3\1\24\1\r\5i\377\377\377\377Ns\37\0\0\0code for hash %s was not found.(\1\0\0\0R\n\0\0\0c\1\0\0\0\2\0\0\0\4\0\0\0c\0\0\0s\37\0\0\0|\0\0]\25\0}\1\0t\0\0|\1\0d\0\0A\203\1\0V\1q\3\0d\1\0S(\2\0\0\0i\\\0\0\0N(\1\0\0\0t\3\0\0\0chr(\2\0\0\0t\2\0\0\0.0t\1\0\0\0x(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/hashlib.pys\t\0\0\0<genexpr>\240\0\0\0s\2\0\0\0\6\0i\0\1\0\0c\1\0\0\0\2\0\0\0\4\0\0\0c\0\0\0s\37\0\0\0|\0\0]\25\0}\1\0t\0\0|\1\0d\0\0A\203\1\0V\1q\3\0d\1\0S(\2\0\0\0i6\0\0\0N(\1\0\0\0R(\0\0\0(\2\0\0\0R)\0\0\0R*\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/hashlib.pys\t\0\0\0<genexpr>\241\0\0\0s\2\0\0\0\6\0c\5\0\0\0\17\0\0\0\5\0\0\0C\0\0\0sC\2\0\0t\0\0|\0\0t\1\0\203\2\0s\36\0t\2\0|\0\0\203\1\0\202\1\0n\0\0t\0\0|\1\0t\3\0t\4\0f\2\0\203\2\0sH\0t\3\0t\5\0|\1\0\203\1\0\203\1\0}\1\0n\0\0t\0\0|\2\0t\3\0t\4\0f\2\0\203\2\0sr\0t\3\0t\5\0|\2\0\203\1\0\203\1\0}\2\0n\0\0t\6\0|\0\0\203\1\0}\5\0t\6\0|\0\0\203\1\0}\6\0t\7\0|\5\0d\1\0d\2\0\203\3\0}\7\0t\10\0|\1\0\203\1\0|\7\0k\4\0r\306\0t\6\0|\0\0|\1\0\203\2\0j\t\0\203\0\0}\1\0n\0\0|\1\0d\3\0|\7\0t\10\0|\1\0\203\1\0\30\24\27}\1\0|\5\0j\n\0|\1\0j\v\0t\f\0\203\1\0\203\1\0\1|\6\0j\n\0|\1\0j\v\0t\r\0\203\1\0\203\1\0\1|\5\0|\6\0d\4\0\204\2\0}\10\0|\3\0d\5\0k\0\0r4\1t\16\0|\3\0\203\1\0\202\1\0n\0\0|\4\0d\v\0k\10\0rL\1|\6\0j\20\0}\4\0n\0\0|\4\0d\5\0k\0\0rg\1t\16\0|\4\0\203\1\0\202\1\0n\0\0d\6\0t\6\0|\0\0\203\1\0j\20\0d\7\0\24\26}\t\0d\10\0}\n\0d\5\0}\v\0x\256\0t\10\0|\n\0\203\1\0|\4\0k\0\0r:\2|\10\0|\2\0t\21\0j\22\0d\t\0|\v\0\203\2\0\27\203\1\0}\f\0t\23\0t\24\0j\25\0|\f\0\203\1\0d\n\0\203\2\0}\r\0x@\0t\26\0|\3\0d\5\0\30\203\1\0D].\0}\16\0|\10\0|\f\0\203\1\0}\f\0|\r\0t\23\0t\24\0j\25\0|\f\0\203\1\0d\n\0\203\2\0N}\r\0q\344\1W|\v\0d\5\0007}\v\0|\n\0t\24\0j\27\0|\t\0|\r\0\26\203\1\0007}\n\0q\215\1W|\n\0|\4\0 S(\f\0\0\0s\363\0\0\0Password based key derivation function 2 (PKCS #5 v2.0)\n\n        This Python implementations based on the hmac module about as fast\n        as OpenSSL's PKCS5_PBKDF2_HMAC for short passwords and much faster\n        for long passwords.\n        t\n\0\0\0block_sizei@\0\0\0t\1\0\0\0\0c\3\0\0\0\5\0\0\0\2\0\0\0S\0\0\0sB\0\0\0|\1\0j\0\0\203\0\0}\3\0|\2\0j\0\0\203\0\0}\4\0|\3\0j\1\0|\0\0\203\1\0\1|\4\0j\1\0|\3\0j\2\0\203\0\0\203\1\0\1|\4\0j\2\0\203\0\0S(\1\0\0\0N(\3\0\0\0t\4\0\0\0copyt\6\0\0\0updatet\6\0\0\0digest(\5\0\0\0t\3\0\0\0msgt\5\0\0\0innert\5\0\0\0outert\4\0\0\0icpyt\4\0\0\0ocpy(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/hashlib.pyt\3\0\0\0prf\274\0\0\0s\n\0\0\0\0\3\f\1\f\1\r\1\23\1i\1\0\0\0s\6\0\0\0%%0%ixi\2\0\0\0R$\0\0\0s\2\0\0\0>Ii\20\0\0\0N(\30\0\0\0t\n\0\0\0isinstancet\3\0\0\0strt\t\0\0\0TypeErrort\5\0\0\0bytest\t\0\0\0bytearrayt\6\0\0\0bufferR\6\0\0\0R\37\0\0\0t\3\0\0\0lenR/\0\0\0R.\0\0\0t\t\0\0\0translatet\t\0\0\0_trans_36t\t\0\0\0_trans_5CR\32\0\0\0t\4\0\0\0Nonet\v\0\0\0digest_sizet\6\0\0\0structt\4\0\0\0packt\3\0\0\0intt\10\0\0\0binasciit\7\0\0\0hexlifyt\6\0\0\0xranget\t\0\0\0unhexlify(\17\0\0\0t\t\0\0\0hash_namet\10\0\0\0passwordt\4\0\0\0saltt\n\0\0\0iterationst\5\0\0\0dklenR1\0\0\0R2\0\0\0t\t\0\0\0blocksizeR5\0\0\0t\21\0\0\0hex_format_stringt\4\0\0\0dkeyt\4\0\0\0loopt\4\0\0\0prevt\4\0\0\0rkeyt\1\0\0\0i(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/hashlib.pyR\n\0\0\0\243\0\0\0sB\0\0\0\0\7\17\1\17\2\25\1\25\1\25\1\25\3\f\1\f\1\22\1\22\1\30\1\30\1\26\1\26\2\17\t\f\1\17\1\f\1\f\1\f\1\17\2\27\2\6\1\6\1\25\1\34\1\30\1\27\1\f\1 \1\n\1\33\2(\6\0\0\0s\3\0\0\0md5s\4\0\0\0sha1s\6\0\0\0sha224s\6\0\0\0sha256s\6\0\0\0sha384s\6\0\0\0sha512(\5\0\0\0s\3\0\0\0news\25\0\0\0algorithms_guaranteeds\24\0\0\0algorithms_availables\n\0\0\0algorithmss\v\0\0\0pbkdf2_hmac(\36\0\0\0t\7\0\0\0__doc__t\22\0\0\0__always_supportedt\3\0\0\0setR\7\0\0\0R\10\0\0\0R\t\0\0\0t\7\0\0\0__all__R\35\0\0\0R#\0\0\0R&\0\0\0R'\0\0\0R \0\0\0R\6\0\0\0t\n\0\0\0__get_hasht\5\0\0\0uniont\25\0\0\0openssl_md_meth_namesR\31\0\0\0t\v\0\0\0__func_namet\7\0\0\0globalsR\32\0\0\0t\7\0\0\0loggingt\t\0\0\0exceptionR\n\0\0\0RE\0\0\0RB\0\0\0t\4\0\0\0joint\5\0\0\0rangeR?\0\0\0R>\0\0\0R@\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\35\0\0\0/usr/lib/python2.7/hashlib.pyt\10\0\0\0<module>8\0\0\0sH\0\0\0\6\4\6\2\f\1\f\2\6\2\3\1\0\1\7\3\t\34\t\f\f\7\f\16\3\1\f\1\6\1\6\1\6\1\20\1\r\1\6\1\n\2\r\3\3\1\27\1\r\1\f\1\30\3\3\2\24\1\r\1\f\1\f\2\37\1\37\2\0209\t\1", 4096) = 2915
27308 read(8, "", 4096)                 = 0
27308 close(8)                          = 0
27308 munmap(0xb7fc8000, 4096)          = 0
27308 stat64("_hashlib", 0xbfffce1c)    = -1 ENOENT (No such file or directory)
27308 open("_hashlib.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("_hashlib.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("_hashlibmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("_hashlib.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("_hashlib.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/_hashlib", 0xbfffce1c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_hashlib.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_hashlib.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_hashlibmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_hashlib.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/_hashlib.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/plat-i386-linux-gnu/_hashlib", 0xbfffce1c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_hashlib.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_hashlib.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_hashlibmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_hashlib.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/_hashlib.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/lib-tk/_hashlib", 0xbfffce1c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/_hashlib.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/_hashlib.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/_hashlibmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/_hashlib.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/_hashlib.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/lib-dynload/_hashlib", 0xbfffce1c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/_hashlib.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = 8
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=662295, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=48, st_size=23964, st_atime=2017/04/26-21:00:29, st_mtime=2015/04/02-16:48:58, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/lib-dynload/_hashlib.i386-linux-gnu.so", O_RDONLY|O_CLOEXEC) = 9
27308 read(9, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\240\22\0\0004\0\0\0\214Y\0\0\0\0\0\0004\0 \0\7\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\354>\0\0\354>\0\0\5\0\0\0\0\20\0\0\1\0\0\0\340N\0\0\340N\0\0\340N\0\0\244\t\0\0h\n\0\0\6\0\0\0\0\20\0\0\2\0\0\0\354N\0\0\354N\0\0\354N\0\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345td\3602\0\0\3602\0\0\3602\0\0\264\0\0\0\264\0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\340N\0\0\340N\0\0\340N\0\0 \1\0\0 \1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\210:\tm/\304\200\224\3632\301Z\346\313\223.\272\216\350)\7\0\0\0=\0\0\0\2\0\0\0\6\0\0\0\210\200(\1\0\304@\t\0\0\0\0=\0\0\0>\0\0\0\0\0\0\0?\0\0\0A\0\0\0B\0\0\0\323\243\271\7\353\323\357\16\330qX\34CE\325\354\271\215\361\16\273\343\222|\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0?\4\0\0\0\0\0\0\0\0\0\0\20\0\0\0\343\2\0\0\0\0\0\0\0\0\0\0\20\0\0\0\265\1\0\0\0\0\0\0\0\0\0\0\20\0\0\0\3\4\0\0\0\0\0\0\0\0\0\0\20\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0[\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\250\2\0\0\0\0\0\0\0\0\0\0", 512) = 512
27308 fstat64(9, {st_dev=makedev(8, 1), st_ino=662295, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=48, st_size=23964, st_atime=2017/04/26-21:00:29, st_mtime=2015/04/02-16:48:58, st_ctime=2015/09/26-01:26:48}) = 0
27308 mmap2(NULL, 22856, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 9, 0) = 0xb7fc3000
27308 mmap2(0xb7fc7000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 9, 0x4000) = 0xb7fc7000
27308 close(9)                          = 0
27308 mprotect(0xb7fc7000, 4096, PROT_READ) = 0
27308 close(8)                          = 0
27308 close(7)                          = 0
27308 time([1493242230])                = 1493242230
27308 open("/dev/urandom", O_RDONLY|O_LARGEFILE) = 7
27308 fcntl64(7, F_GETFD)               = 0
27308 fcntl64(7, F_SETFD, FD_CLOEXEC)   = 0
27308 fstat64(7, {st_dev=makedev(0, 6), st_ino=7070, st_mode=S_IFCHR|0666, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=0, st_rdev=makedev(1, 9), st_atime=2017/04/05-20:18:20, st_mtime=2017/04/05-20:18:20, st_ctime=2017/04/05-20:18:20}) = 0
27308 read(7, "\205X\244\1}s\374\361\244\1]\31\3Qt\t\354^\0\"\200\203s\200H\17\222<Z\214F+T\241C\6\336.\235-\371f\344\"\257\33`>\2233\2149G\4\332^\250\374\fn\245\263\306\354\214\320\211k\263(\373\177S\374\24zj\32R\337l\343co\16\370\356\2\352\255\327\3746.Z~\211\333\276\17\34\3078x|\32`\224\340\353zD\300\365\276\327\336\355\v\35\334q\201\2148\367R\321Y\305\fbj\343\241m\212\373\226{\213Y\30\223K\272P\373\217F\2704\1\2\367/\312\265\270\177\2\314\256\354~n\366\252\351\261\346\33K\274'\16e\222\246j\315\245\3433Z\367h\272\351\375\275\372?8X\3\17}\211M~g\352\244Y\207\361\302F\241\361/k\363atd\362\362\35\237gy\341W\363\320\356p\246\01644 F\25\373\300\336\365\373\370\251\252\356\364Fp\262\203l\2375>\345\226L\365'\27\363\0}\3\30\367\314y\246\t\320\236A%\366\277VV\312\261\312H\213M-\336`\304\1R\210e\317\224\242\3169o\3!\203h\255\304V\32'\33\211,q\344\272\201\255\272\322\274\277\357\10\344\304\10|Wj\240.\t\r\365NR\312]\302\7\0267C\345\347G\340E\260^\363W\264'\22DZ]\251\332:]\375\242m\315\353\211\341!\351\326\230\273\30\244\304\221\204D\2048&\201\373h\2348\257\202j\6A\34\363\254\315\307\243\265Q]=w\3236\201V\t\276.,L\33\200\363\352|`\313\316c[^D\3755\346.\241\25515r\310\302\v\3\331\234\5N0d\300\360!\10g\371u\226\274\361\304K.\307_\362\377d\6\342#h=4\232\2\325UL!\302wD\337t\22\f.\372\32\0061\231MZk\34\303\272\340\3023O\16t\354\370\302\321<\5\251\370\343\32\"FJ\353\36\360n\244z\275g\262U\254z\223\341\353^\263\16\25u\316,\364\207B\306\276k\316\226\355sB\177\332\351\342\305\275}\177!\226\3065e~UL/qh\226\0346\364\0341\37&\t\342\226\336\213U\260;34\3\241\311\20\364T\261\221Af6\21\313@u\347\235\37\242\206\200\331\261\315\335\330d\371/0\356\230\351\205)d\216P\203Hq\353v\2424a\262\376\235\202i\3404%\303f\231#+\3=+\211\312\227\307\323\277\206\227\"]\316\343\27\363}G,\5\231\16\221\333f\10\276\335\0242\263G\205GqU6K\273\235\300\r2oP\366\301\310T:\257\376\"\264\247\333)\354\365\200\376\241\277;>#\263\26\363\243\354p/\340\1\r\215\237==4\376)\370C\200o\334\313\337Q\257\226\345Z\320\25\317\325\233\322TuxT\243\352\313!\241\277OCu>V\276\21\307t3PQt=\230-~\230\321\26\364\32\253f\352<\276\274\31\177~J4\330\216Z\365\325\330\232\0\262\224\352p\266\327\254`\257\260r\342\344\233\273B\203@\353\307\317t{\243\303\237\316^rh\266\0335\36W\207\263\377\307\252.\273\177y\36\26\204\247\254\10\273U?x:\2\313c\337\322\21\f\246\227\342pe\315\220\366\225\f\224\332\330\333\377\356\263\17\227\206\344\352B\376\r\234T\217ia\367\363~\304\375[<!\322\241:#\253\310yHhG\3\265w1&!K\241\364\233U\255\25\277y\365\336\364\333\241\22c\330\315\210Z\310\275\227L\226Q~\230\2575<\241z\307=\355U\373\276\225\233\22xz\324b\243\265\220\33\314\304^\347I\316Beh\3330\23\222W\275\33\262\277\350R*z\217\264\261\370\334wG\36380\366\317\34=\333c\23\22\f\232d5\377\371\227z\3049\310\250\4z\207\223yD\25\247\364z\355\240\362\202&+\233\f\262^#\320\256\366n\255B\326y\31\217\272=\22W\316\370\366\270\22\305\323*\265\262@\313R7\247jr\276\360[\262T\214F\262&\242\237@\v\334\271 \245qq\201\36\241\"\273g8\206C\323\375i\314\255\344d\345\250*]\212\1\314\272\310=\377iV\232\320\220\360\r\f\314\252\275E|,\355W\352\214\0178\313\317K\304eU\266(\366drn\266A\345D|uQ\343\274f*<\302.7d\354\34Q8\214\n\206+=]\327.N\352\30\257\220u\326~\23\177\230n\334\263q4\202N \354\337$\255L\0:L\226\377\241\273\vd;%\327\332\0045\306\271\275\26\2132\20k\364/\1/E\313\307\364\2504S\251\347{Y*\225Z\330\nDE\334ER\311PaV\364\275x\245\355\1\0240\334\3271\313\213\215\331P\314+\327\6\361\315\36\333\34\277\256\235\177\273\324z\256\265KBY<\313\276v\357\345|\356\277\361\300\3655\315F\274XF*\256\222\363Q\214M\307\303u\237\350\211\317\276\34`\272\304\361K\343\0061\2678zUn\250\36634\220tS.Hn\277B\200\276f\371\37^YbA\253.\221\273W\n\235\307\317\212\37!\335\356\32\371\305\276:\364\1h\371\300\237$\265KI\257\314\345ozS\214eC\332\"j\4\37\332\371\371\33J\254\26\263\320<<8~\315\3059\t\264\207\6\213\312\370\3436\273\r_\263B\226\230\224r\201\26Er\7no\262(uU\21\344\255\303\311\314\216\253\3\336\26\245\v@\251)A.\375\267\331\241\300\324\365\260\257\233\"r\373N\353\";\"\7Q@\243\2b\t+aV\311\307F\322\321\22FJB\222`\347g\346\364\"\326R\3/\10\256,\231C.\361?\24\312\373m\320\21\343\255KW5\316;]\227\206\255D1R\27\235\330\211&XD\340\r>\361\254\241\300\374\35\215+)2\7\n\277%\317\361\17\35\354b\310C>\304\251&n\271\316\221\353\232\37\0\266\307\330\271;\266eV,\316\212rbHN)9\r\306\314C:;]:\367\335<\"\306\5?\30k\224\272\266\"\325\262\30rj\2143M\233\201\223\335\272\245CKo\200\211'\253R\256\34\202\300\336\336\17\234\223E\242\t\323\34g\231\300\261\350\313<\310\243\231[mF\333?\336\376r\346\313X\2F\17\266\346u\365\21\376\320\177\340\264y\236$7P\332\t\235&\242\0t\341p\360Z\211*h\364\6sv\222\223\17D\33\362\26\36\264K\254\217\332\234\232\4\376\263\364LVV\251*b~\241\336\22\0011\302\316}\227\331\276\207\326\311G\220L\261\254\362\22{\216w\375\vM^\361z\213c\311\222\346~\371M\272\234\34\254\6\206\16\304B\370\337\263u\f\311k(\322\256\33r+\327\275\316\336\357*J\242?\17F\304\30\3\325\332\243\3071\35\233\312\27aqL\273\261Y\233e\307\377sf\221L\206\33\2\1y\2605\254y\314\376b\302\371\1\236\10\373H\364\16\24\330\210f\334-5'\202\354\224\223\336\357\267\245\206\23\36r\346\211Rr\27\4^\343h\v\31\227Oz\375p\212$v\355\360\363\275\203Dn-A\22L\36\31\273\335s&\320\214\34\327\360\253\370\215\"@\206X8U+\241\177\0\206:\217\314X\267{\321\5\306\216\203\32\376\24H\265\212J9\310\272\262\3117\236\345o\323\264\212\374\v\363\374\347\2348\2\212\tO;\263\32\206\207I\375FD\32Y\203\304\5\215\336c\253\243`\270t\251\343\t\224\335\307\206c\0\266k\346\273~\261x\352\vt5\36\274\325\362>9\263\17\321jk\2301\337\26\266\343\223\251\211\201_X\245\4\326Zd\365\223C\224U\vb\236\375\265\253\7!|\207\vn\22\325\27\233+\325\t\371\201\334\221W\200\302M\3 {\333\331\342l\266\26}*\306\243\267m\242U=\322a\261\276\316\330\200Q\263\271\302\374\242E(\4=P|\265\0\350f:+\241~x\301XO\272\232\303\372\22\346\0324gC\244\255\227g\243\3\275\251n\26$\250\355\232t\374\330e\3136\21A\241\353\244C{\220#\0i\25\355\335\341\331Cy\3219\336T\201\320bI)\235\20\32B\2\246q\35\322U\32oJ\3403=\250\251\273J2.t\351\251\17\207\265)\0\243|]I\332H\202\200\334\315\351\214\353\27`\251\335^\332\230xSOXk\353\256\303<ocET,T\362(\302\35n&\304I,\216\2m\33\t\261B^W|\32\330\260:tp|^O}\f\364\256\341\307\204\2776>\216\214\364\332kJd>\363\374\322#`\321\265I\335M\37lr`:\252\374\263\331\f9\16\16r\302`\244\264A\302\314\335\227E\314\257\332*\330\227\312N\4\214\276\203\362E\2673\270\254\357\356\34\272\222\262K\rFu\272\274\231\245\31\350\34=\223{3\20\210\321\23_'\362\345_u\37\334\1\260\22\250B\255I2\310\372D\26\267\341\253HO\253y\377\312\256U\235\212\332\331\330L\225\203K\3550\26-\254]\347\3174J\276\271]\213\346&\3544q\236E\214\255\315\317!`\305\272\326\323p\320x\3079|\213\f\243\265\236qU\206\376\223\316`\227U\204w+m\305T@\207L\202\202\3678\217P\0109\23\\z\267[.3@\273(\242\266\305\27\3030\27\335C\304N5\224t\1\224\365F\354\f", 2500) = 2500
27308 close(6)                          = 0
27308 close(5)                          = 0
27308 stat64("rfc822", 0xbfffd92c)      = -1 ENOENT (No such file or directory)
27308 open("rfc822.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("rfc822.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("rfc822module.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("rfc822.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("rfc822.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/rfc822", 0xbfffd92c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/rfc822.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/rfc822.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/rfc822module.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/rfc822.py", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=661566, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=72, st_size=33543, st_atime=2017/02/23-18:09:09, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/rfc822.pyc", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=707545, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=64, st_size=31751, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(6, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\30\0\0\0@\0\0\0s\271\3\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\3\0l\2\0m\3\0Z\3\0\1e\3\0d\4\0d\5\0d\6\0\203\1\1\1d\7\0d\10\0d\t\0d\n\0d\v\0g\5\0Z\4\0d\f\0d\r\0f\2\0Z\5\0d\7\0f\0\0d\16\0\204\0\0\203\0\0YZ\6\0d\17\0\204\0\0Z\7\0d\20\0\204\0\0Z\10\0d\21\0\204\0\0Z\t\0d\22\0f\0\0d\23\0\204\0\0\203\0\0YZ\n\0d\10\0e\n\0f\1\0d\24\0\204\0\0\203\0\0YZ\v\0d\25\0\204\0\0Z\f\0d\26\0d\27\0d\30\0d\31\0d\32\0d\33\0d\34\0d\35\0d\36\0d\37\0d \0d!\0d\"\0d#\0d$\0d%\0d\32\0d&\0d'\0d(\0d)\0d*\0d+\0d,\0g\30\0Z\r\0d-\0d.\0d/\0d0\0d1\0d2\0d3\0g\7\0Z\16\0i\16\0d4\0d5\0006d4\0d6\0006d4\0d7\0006d4\0d8\0006d9\0d:\0006d;\0d<\0006d=\0d>\0006d9\0d?\0006d@\0dA\0006d=\0dB\0006dC\0dD\0006d@\0dE\0006dF\0dG\0006dC\0dH\0006Z\17\0dI\0\204\0\0Z\20\0dJ\0\204\0\0Z\21\0dK\0\204\0\0Z\22\0e\23\0dL\0\204\1\0Z\24\0e\25\0dM\0k\2\0r\265\3d\1\0d\2\0l\26\0Z\26\0d\1\0d\2\0l\27\0Z\27\0e\27\0j\30\0j\31\0e\27\0j\32\0dN\0\31dO\0\203\2\0Z\33\0e\26\0j\34\0dP\0\37r\10\2e\26\0j\34\0dP\0\31Z\33\0n\0\0e\35\0e\33\0dQ\0\203\2\0Z\36\0e\6\0e\36\0\203\1\0Z\37\0dR\0Ge\37\0j \0dS\0\203\1\0GHdT\0Ge\37\0j!\0dU\0\203\1\0GHdV\0Ge\37\0j\"\0dW\0\203\1\0GHdX\0Ge\37\0j\"\0dY\0\203\1\0GHe\37\0j#\0dY\0\203\1\0Z$\0e$\0d\1\0\31Z%\0e\1\0j&\0e\22\0e$\0\203\1\0\203\1\0Z$\0e$\0r\3\3dZ\0Ge\1\0j'\0e$\0\203\1\0Ge%\0Z(\0e)\0e(\0d[\0\203\2\0\\\2\0Z*\0Z+\0e)\0e*\0d[\0\203\2\0\\\2\0Z,\0Z-\0d\\\0e,\0e-\0f\2\0\26Ge+\0r\377\2d]\0e+\0\26Gn\0\0Hn\t\0dZ\0Ge\23\0GHe\37\0j.\0\203\0\0\1d4\0Z/\0x\32\0e\36\0j0\0\203\0\0r8\3e/\0dP\0007Z/\0q\37\3Wd^\0Ge/\0GHd_\0d`\0\24GHda\0Ge1\0e\37\0\203\1\0GHdb\0e\37\0k\6\0rv\3dc\0Ge\37\0db\0\31GHn\0\0dd\0e\37\0k\6\0r\205\3n\0\0de\0Ge\37\0j2\0\203\0\0GHdf\0Ge\37\0j3\0\203\0\0GHdg\0Ge\37\0j4\0\203\0\0GHn\0\0d\2\0S(h\0\0\0s*\v\0\0RFC 2822 message manipulation.\n\nNote: This is only a very rough sketch of a full RFC-822 parser; in particular\nthe tokenizing of addresses does not adhere to all the quoting rules.\n\nNote: RFC 2822 is a long awaited update to RFC 822.  This module should\nconform to RFC 2822, and is thus mis-named (it's not worth renaming it).  Some\neffort at RFC 2822 updates have been made, but a thorough audit has not been\nperformed.  Consider any RFC 2822 non-conformance to be a bug.\n\n    RFC 2822: http://www.faqs.org/rfcs/rfc2822.html\n    RFC 822 : http://www.faqs.org/rfcs/rfc822.html (obsolete)\n\nDirections for use:\n\nTo create a Message object: first open a file, e.g.:\n\n  fp = open(file, 'r')\n\nYou can use any other legal way of getting an open file object, e.g. use\nsys.stdin or call os.popen().  Then pass the open file object to the Message()\nconstructor:\n\n  m = Message(fp)\n\nThis class can work with any input object that supports a readline method.  If\nthe input object has seek and tell capability, the rewindbody method will\nwork; also illegal lines will be pushed back onto the input stream.  If the\ninput object lacks seek but has an `unread' method that can push back a line\nof input, Message will use that to push back illegal lines.  Thus this class\ncan be used to parse messages coming from a buffered stream.\n\nThe optional `seekable' argument is provided as a workaround for certain stdio\nlibraries in which tell() discards buffered data before discovering that the\nlseek() system call doesn't work.  For maximum portability, you should set the\nseekable argument to zero to prevent that initial \\code{tell} when passing in\nan unseekable object such as a file object created from a socket object.  If\nit is 1 on entry -- which it is by default -- the tell() method of the open\nfile object is called once; if this raises an exception, seekable is reset to\n0.  For other nonzero values of seekable, this test is not made.\n\nTo get the text of a particular header there are several methods:\n\n  str = m.getheader(name)\n  str = m.getrawheader(name)\n\nwhere name is the name of the header, e.g. 'Subject'.  The difference is that\ngetheader() strips the leading and trailing whitespace, while getrawheader()\ndoesn't.  Both functions retain embedded whitespace (including newlines)\nexactly as they are specified in the header, and leave the case of the text\nunchanged.\n\nFor addresses and address lists there are functions\n\n  realname, mailaddress = m.getaddr(name)\n  list = m.getaddrlist(name)\n\nwhere the latter returns a list of (realname, mailaddr) tuples.\n\nThere is also a method\n\n  time = m.getdate(name)\n\nwhich parses a Date-like field and returns a time-compatible tuple,\ni.e. a tuple such as returned by time.localtime() or accepted by\ntime.mktime().\n\nSee the class definition for lower level access methods.\n\nThere are also some utility functions here.\ni\377\377\377\377N(\1\0\0\0t\10\0\0\0warnpy3ks=\0\0\0in 3.x, rfc822 has been removed in favor of the email packaget\n\0\0\0stackleveli\2\0\0\0t\7\0\0\0Messaget\v\0\0\0AddressListt\t\0\0\0parsedatet\f\0\0\0parsedate_tzt\t\0\0\0mktime_tzs\2\0\0\0\r\ns\1\0\0\0\nc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s\20\1\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0d\2\0\204\1\0Z\3\0d\3\0", 4096) = 4096
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=707545, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=64, st_size=31751, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 brk(0x851c000)                    = 0x851c000
27308 read(6, "\204\0\0Z\4\0d\4\0\204\0\0Z\5\0d\5\0\204\0\0Z\6\0d\6\0\204\0\0Z\7\0d\7\0\204\0\0Z\10\0d\10\0\204\0\0Z\t\0d\t\0\204\0\0Z\n\0d\n\0\204\0\0Z\v\0d\36\0d\v\0\204\1\0Z\r\0e\r\0Z\16\0d\f\0\204\0\0Z\17\0d\r\0\204\0\0Z\20\0d\16\0\204\0\0Z\21\0d\17\0\204\0\0Z\22\0d\20\0\204\0\0Z\23\0d\21\0\204\0\0Z\24\0d\22\0\204\0\0Z\25\0d\23\0\204\0\0Z\26\0d\24\0\204\0\0Z\27\0d\25\0d\26\0\204\1\0Z\30\0d\27\0\204\0\0Z\31\0d\30\0\204\0\0Z\32\0d\31\0\204\0\0Z\33\0d\32\0\204\0\0Z\34\0d\33\0\204\0\0Z\35\0d\34\0\204\0\0Z\36\0d\35\0\204\0\0Z\37\0RS(\37\0\0\0s/\0\0\0Represents a single RFC 2822-compliant message.i\1\0\0\0c\3\0\0\0\3\0\0\0\6\0\0\0C\0\0\0s\355\0\0\0|\2\0d\1\0k\2\0r=\0y\16\0|\1\0j\0\0\203\0\0\1Wq=\0\4t\1\0t\2\0f\2\0k\n\0r9\0\1\1\1d\2\0}\2\0q=\0Xn\0\0|\1\0|\0\0_\3\0|\2\0|\0\0_\4\0d\3\0|\0\0_\6\0d\3\0|\0\0_\7\0|\0\0j\4\0r\240\0y\26\0|\0\0j\3\0j\0\0\203\0\0|\0\0_\6\0Wq\240\0\4t\2\0k\n\0r\234\0\1\1\1d\2\0|\0\0_\4\0q\240\0Xn\0\0|\0\0j\10\0\203\0\0\1|\0\0j\4\0r\351\0y\26\0|\0\0j\3\0j\0\0\203\0\0|\0\0_\7\0Wq\351\0\4t\2\0k\n\0r\345\0\1\1\1d\2\0|\0\0_\4\0q\351\0Xn\0\0d\3\0S(\4\0\0\0s3\0\0\0Initialize the class instance and read the headers.i\1\0\0\0i\0\0\0\0N(\t\0\0\0t\4\0\0\0tellt\16\0\0\0AttributeErrort\7\0\0\0IOErrort\2\0\0\0fpt\10\0\0\0seekablet\4\0\0\0Nonet\16\0\0\0startofheaderst\v\0\0\0startofbodyt\v\0\0\0readheaders(\3\0\0\0t\4\0\0\0selfR\n\0\0\0R\v\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\10\0\0\0__init__X\0\0\0s(\0\0\0\0\2\f\3\3\1\16\1\23\1\r\1\t\1\t\1\t\1\t\2\t\1\3\1\26\1\r\1\20\2\n\2\t\1\3\1\26\1\r\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s,\0\0\0|\0\0j\0\0s\25\0t\1\0d\1\0\202\2\0n\0\0|\0\0j\2\0j\3\0|\0\0j\4\0\203\1\0\1d\2\0S(\3\0\0\0s7\0\0\0Rewind the file to the start of the body (if seekable).s\17\0\0\0unseekable fileN(\5\0\0\0R\v\0\0\0R\t\0\0\0R\n\0\0\0t\4\0\0\0seekR\16\0\0\0(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\n\0\0\0rewindbodyt\0\0\0s\6\0\0\0\0\2\t\1\f\1c\1\0\0\0\t\0\0\0\5\0\0\0C\0\0\0sK\2\0\0i\0\0|\0\0_\0\0d\1\0|\0\0_\1\0g\0\0\4|\0\0_\2\0}\1\0d\1\0|\0\0_\3\0d\1\0}\2\0d\2\0}\3\0d\f\0\4}\4\0\4}\5\0}\6\0t\5\0|\0\0j\6\0d\3\0\203\2\0rc\0|\0\0j\6\0j\7\0}\5\0n\30\0|\0\0j\10\0r{\0|\0\0j\6\0j\t\0}\6\0n\0\0x\311\1|\6\0r\273\0y\r\0|\6\0\203\0\0}\4\0Wq\273\0\4t\n\0k\n\0r\267\0\1\1\1d\f\0\4}\4\0}\6\0d\4\0|\0\0_\10\0q\273\0Xn\0\0|\0\0j\6\0j\v\0\203\0\0}\7\0|\7\0s\335\0d\5\0|\0\0_\3\0Pn\0\0|\3\0r\10\1|\7\0j\f\0d\6\0\203\1\0r\10\1|\0\0j\1\0|\7\0\27|\0\0_\1\0q~\0n\0\0d\4\0}\3\0|\2\0re\1|\7\0d\4\0\31d\7\0k\6\0re\1|\1\0j\r\0|\7\0\203\1\0\1|\0\0j\0\0|\2\0\31d\10\0\27|\7\0j\16\0\203\0\0\27}\10\0|\10\0j\16\0\203\0\0|\0\0j\0\0|\2\0<q~\0n(\0|\0\0j\17\0|\7\0\203\1\0rz\1q~\0n\23\0|\0\0j\20\0|\7\0\203\1\0r\215\1Pn\0\0|\0\0j\21\0|\7\0\203\1\0}\2\0|\2\0r\326\1|\1\0j\r\0|\7\0\203\1\0\1|\7\0t\22\0|\2\0\203\1\0d\2\0\27\37j\16\0\203\0\0|\0\0j\0\0|\2\0<q~\0q~\0|\2\0d\f\0k\t\0r\350\1q~\0q~\0|\0\0j\0\0s\375\1d\t\0|\0\0_\3\0n\t\0d\n\0|\0\0_\3\0|\5\0r\31\2|\5\0|\7\0\203\1\0\1n)\0|\6\0r2\2|\0\0j\6\0j\23\0|\4\0\203\1\0\1n\20\0|\0\0j\3\0d\v\0\27|\0\0_\3\0Pq~\0Wd\f\0S(\r\0\0\0s\276\2\0\0Read header lines.\n\n        Read header lines up to the entirely blank line that terminates them.\n        The (normally blank) line that ends the headers is skipped, but not\n        included in the returned list.  If a non-header line ends the headers,\n        (which is an error), an attempt is made to backspace over it; it is\n        never included in the returned list.\n\n        The variable self.status is set to the empty string if all went well,\n        otherwise it is an error message.  The variable self.headers is a\n        completely uninterpreted list of lines contained in the header (so\n        printing them will reproduce the header exactly as it appears in the\n        file).\n        t\0\0\0\0i\1\0\0\0t\6\0\0\0unreadi\0\0\0\0s\16\0\0\0EOF in headerss\5\0\0\0From s\2\0\0\0 \ts\2\0\0\0\n s\n\0\0\0No headerss%\0\0\0Non-header line where header expecteds\n\0\0\0; bad seekN(\24\0\0\0t\4\0\0\0dictt\10\0\0\0unixfromt\7\0\0\0headerst\6\0\0\0statusR\f\0\0\0t\7\0\0\0hasattrR\n\0\0\0R\25\0\0\0R\v\0\0\0R\7\0\0\0R\t\0\0\0t\10\0\0\0readlinet\n\0\0\0startswitht\6\0\0\0appendt\5\0\0\0stript\t\0\0\0iscommentt\6\0\0\0islastt\10\0\0\0isheadert\3\0\0\0lenR\22\0\0\0(\t\0\0\0R\20\0\0\0t\3\0\0\0lstt\n\0\0\0headerseent\t\0\0\0firstlinet\v\0\0\0startoflineR\25\0\0\0R\7\0\0\0t\4\0\0\0linet\1\0\0\0x(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\17\0\0\0z\0\0\0sf\0\0\0\0\17\t\1\t\1\r\1\t\1\6\1\6\1\16\1\22\1\17\1\t\1\17\1\3\1\6\1\3\1\r\1\r\1\n\1\20\1\17\1\6\1\t\1\4\2\25\1\20\1\6\1\6\1\26\2\r\1\33\1\23\1\6\1\17\2\6\1\17\2\4\1\17\1\6\2\r\1!\1\6\1\f\4\6\3\t\1\f\2\t\2\6\1\r\1\6\1\23\2\20\1c\2\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s-\0\0\0|\1\0j\0\0d\1\0\203\1\0}\2\0|\2\0d\2\0k\4\0r)\0|\1\0|\2\0 j\1\0\203\0\0Sd\3\0S(\4\0\0\0s\30\1\0\0Determine whether a given line is a legal header.\n\n        This method should return the header name, suitably canonicalized.\n        You may override this method in order to use Message parsing on tagged\n        data in RFC 2822-like formats with special header formats.\n        t\1\0\0\0:i\377\377\377\377N(\3\0\0\0t\4\0\0\0findt\5\0\0\0lowerR\f\0\0\0(\3\0\0\0R\20\0\0\0R'\0\0\0t\1\0\0\0i(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR!\0\0\0\312\0\0\0s\10\0\0\0\0\7\17\1\f\1\16\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0|\1\0t\0\0k\6\0S(\1\0\0\0sf\1\0\0Determine whether a line is a legal end of RFC 2822 headers.\n\n        You may override this method if your application wants to bend the\n        rules, e.g. to strip trailing whitespace, or to recognize MH template\n        separators ('--------').  For convenience (e.g. for code reading from\n        sockets) a line consisting of \\r\\n also matches.\n        (\1\0\0\0t\v\0\0\0_blanklines(\2\0\0\0R\20\0\0\0R'\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR \0\0\0\326\0\0\0s\2\0\0\0\0\10c\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0t\0\0S(\1\0\0\0s\355\0\0\0Determine whether a line should be skipped entirely.\n\n        You may override this method in order to use Message parsing on tagged\n        data in RFC 2822-like formats that support embedded comments or\n        free-text data.\n        (\1\0\0\0t\5\0\0\0False(\2\0\0\0R\20\0\0\0R'\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\37\0\0\0\340\0\0\0s\2\0\0\0\0\7c\2\0\0\0\6\0\0\0\3\0\0\0C\0\0\0s\216\0\0\0|\1\0j\0\0\203\0\0d\1\0\27}\1\0t\1\0|\1\0\203\1\0}\2\0g\0\0}\3\0d\2\0}\4\0x_\0|\0\0j\2\0D]T\0}\5\0|\5\0|\2\0 j\0\0\203\0\0|\1\0k\2\0rW\0d\3\0}\4\0n\31\0|\5\0d\3\0 j\3\0\203\0\0sp\0d\2\0}\4\0n\0\0|\4\0r2\0|\3\0j\4\0|\5\0\203\1\0\1q2\0q2\0W|\3\0S(\4\0\0\0s\271\1\0\0Find all header lines matching a given header name.\n\n        Look through the list of headers and find all lines matching a given\n        header name (and their continuation lines).  A list of the lines is\n        returned, without interpretation.  If the header does not occur, an\n        empty list is returned.  If the header occurs multiple times, all\n        occurrences are returned.  Case is not important in the header name.\n        R)\0\0\0i\0\0\0\0i\1\0\0\0(\5\0\0\0R+\0\0\0R\"\0\0\0R\30\0\0\0t\7\0\0\0isspaceR\35\0\0\0(\6\0\0\0R\20\0\0\0t\4\0\0\0namet\1\0\0\0nR#\0\0\0t\3\0\0\0hitR'\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\25\0\0\0getallmatchingheaders\351\0\0\0s\30\0\0\0\0\t\20\1\f\1\6\1\6\1\20\1\26\1\t\1\20\1\t\1\6\1\24\1c\2\0\0\0\6\0\0\0\3\0\0\0C\0\0\0s\222\0\0\0|\1\0j\0\0\203\0\0d\1\0\27}\1\0t\1\0|\1\0\203\1\0}\2\0g\0\0}\3\0d\2\0}\4\0xc\0|\0\0j\2\0D]X\0}\5\0|\4\0rU\0|\5\0d\3\0 j\3\0\203\0\0st\0Pqt\0n\37\0|\5\0|\2\0 j\0\0\203\0\0|\1\0k\2\0rt\0d\3\0}\4\0n\0\0|\4\0r2\0|\3\0j\4\0|\5\0\203\1\0\1q2\0q2\0W|\3\0S(\4\0\0\0s\270\0\0\0Get the first header line matching name.\n\n        This is similar to getallmatchingheaders, but it returns only the\n        first matching header (and its continuation lines).\n        R)\0\0\0i\0\0\0\0i\1\0\0\0(\5\0\0\0R+\0\0\0R\"\0\0\0R\30\0\0\0R/\0\0\0R\35\0\0\0(\6\0\0\0R\20\0\0\0R0\0\0\0R1\0\0\0R#\0\0\0R2\0\0\0R'\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\26\0\0\0getfirstmatchingheader\377\0\0\0s\32\0\0\0\0\6\20\1\f\1\6\1\6\1\20\1\6\1\20\1\7\1\26\1\t\1\6\1\24\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sB\0\0\0|\0\0j\0\0|\1\0\203\1\0}\2\0|\2\0s\31\0d\4\0S|\2\0d\1\0\31t\2\0|\1\0\203\1\0d\2\0\27\37|\2\0d\1\0<d\3\0j\3\0|\2\0\203\1\0S(\5\0\0\0s2\1\0\0A higher-level interface to getfirstmatchingheader().\n\n        Return a string containing the literal text of the header but with the\n        keyword stripped.  All leading, trailing and embedded whitespace is\n        kept in the string, however.  Return None if the header does not\n        occur.\n        i\0\0\0\0i\1\0\0\0R\24\0\0\0N(\4\0\0\0R4\0\0\0R\f\0\0\0R\"\0\0\0t\4\0\0\0join(\3\0\0\0R\20\0\0\0R0\0\0\0R#\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\f\0\0\0getrawheader\23\1\0\0s\n\0\0\0\0\t\17\1\6\1\4\1\34\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\31\0\0\0|\0\0j\0\0j\1\0|\1\0j\2\0\203\0\0|\2\0\203\2\0S(\1\0\0\0s\r\1\0\0Get the header value for a name.\n\n        This is the normal interface: it returns a stripped version of the\n        header value for a given header name, or None if it doesn't exist.\n        This uses the dictionary version which finds the *last* such header.\n        (\3\0\0\0R\26\0\0\0t\3\0\0\0getR+\0\0\0(\3\0\0\0R\20\0\0\0R0\0\0\0t\7\0\0\0default(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\t\0\0\0getheader\"\1\0\0s\2\0\0\0\0\7c\2\0\0\0\6\0\0\0\4\0\0\0C\0\0\0s\275\0\0\0g\0\0}\2\0d\1\0}\3\0d\2\0}\4\0x\216\0|\0\0j\0\0|\1\0\203\1\0D]}\0}\5\0|\5\0d\2\0\31j\1\0\203\0\0rf\0|\3\0rW\0d\3\0|\3\0|\5\0j\2\0\203\0\0f\2\0\26}\3\0q\237\0|\5\0j\2\0\203\0\0}\3\0q\"\0|\4\0r|\0|\2\0j\3\0|\3\0\203\1\0\1n\0\0|\5\0|\5\0j\4\0d\4\0\203\1\0d\5\0\27\37j\2\0\203\0\0}\3\0d\5\0}\4\0q\"\0W|\4\0r\271\0|\2\0j\3\0|\3\0\203\1\0\1n\0\0|\2\0S(\6\0\0\0s\t\1\0\0Get all values for a header.\n\n        This returns a list of values for headers given more than once; each\n        value in the result list is stripped in the same way as the result of\n        getheader().  If the header is not given, return an empty list.\n        R\24\0\0\0i\0\0\0\0s\6\0\0\0%s\n %sR)\0\0\0i\1\0\0\0(\5\0\0\0R3\0\0\0R/\0\0\0R\36\0\0\0R\35\0\0\0R*\0\0\0(\6\0\0\0R\20\0\0\0R0\0\0\0t\6\0\0\0resultt\7\0\0\0currentt\v\0\0\0have_headert\1\0\0\0s(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\n\0\0\0getheaders,\1\0\0s\36\0\0\0\0\7\6\1\6\1\6\1\26\1\20\1\6\1\31\2\17\2\6\1\20\1\35\1\n\1\6\1\20\1c\2\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s%\0\0\0|\0\0j\0\0|\1\0\203\1\0}\2\0|\2\0r\35\0|\2\0d\1\0\31Sd\3\0Sd\2\0S(\4\0\0\0s\207\0\0\0Get a single address from a header, as a tuple.\n\n        An example return value:\n        ('Guido van Rossum', 'guido@cwi.nl')\n        i\0\0\0\0N(\2\0\0\0NN(\2\0\0\0t\v\0\0\0getaddrlistR\f\0\0\0(\3\0\0\0R\20\0\0\0R0\0\0\0t\5\0\0\0alist(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\7\0\0\0getaddrE\1\0\0s\10\0\0\0\0\7\17\1\6\1\10\2c\2\0\0\0\10\0\0\0\4\0\0\0C\0\0\0s\261\0\0\0g\0\0}\2\0x\206\0|\0\0j\0\0|\1\0\203\1\0D]u\0}\3\0|\3\0d\1\0\31d\2\0k\6\0r<\0|\2\0j\1\0|\3\0\203\1\0\1q\26\0|\2\0rR\0|\2\0j\1\0d\3\0\203\1\0\1n\0\0|\3\0j\2\0d\4\0\203\1\0}\4\0|\4\0d\1\0k\4\0r~\0|\3\0|\4\0d\5\0\27\37}\5\0n\0\0|\2\0j\1\0|\5\0\203\1\0\1q\26\0Wd\6\0j\3\0|\2\0\203\1\0}\6\0t\4\0|\6\0\203\1\0}\7\0|\7\0j\5\0S(\7\0\0\0s\n\1\0\0Get a list of addresses from a header.\n\n        Retrieves a list of addresses from a header, where each address is a\n        tuple as returned by getaddr().  Scans all named headers, so it works\n        properly with multiple To: or Cc: headers for example.\n        i\0\0\0\0s\2\0\0\0 \ts\2\0\0\0, R)\0\0\0i\1\0\0\0R\24\0\0\0(\6\0\0\0R3\0\0\0R\35\0\0\0R*\0\0\0R5\0\0\0R\3\0\0\0t\v\0\0\0addresslist(\10\0\0\0R\20\0\0\0R0\0\0\0t\3\0\0\0rawt\1\0\0\0hR,\0\0\0t\4\0\0\0addrt\10\0\0\0alladdrst\1\0\0\0a(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR?\0\0\0R\1\0\0s\32\0\0\0\0\7\6\1\26\1\20\1\20\2\6\1\20\1\17\1\f\1\21\1\21\1\17\1\f\1c\2\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s-\0\0\0y\16\0|\0\0|\1\0\31}\2\0Wn\22\0\4t\0\0k\n\0r\"\0\1\1\1d\1\0SXt\2\0|\2\0\203\1\0S(\2\0\0\0s\235\0\0\0Retrieve a date field from a header.\n\n        Retrieves a date field from the named header, returning a tuple\n        compatible with time.mktime().\n        N(\3\0\0\0t\10\0\0\0KeyErrorR\f\0\0\0R\4\0\0\0(\3\0\0\0R\20\0\0\0R0\0\0\0t\4\0\0\0data(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\7\0\0\0getdateh\1\0\0s\n\0\0\0\0\6\3\1\16\1\r\1\5\1c\2\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s-\0\0\0y\16\0|\0\0|\1\0\31}\2\0Wn\22\0\4t\0\0k\n\0r\"\0\1\1\1d\1\0SXt\2\0|\2\0\203\1\0S(\2\0\0\0s\323\0\0\0Retrieve a date field from a header as a 10-tuple.\n\n        The first 9 elements make up a tuple compatible with time.mktime(),\n        and the 10th is the offset of the poster's time zone from GMT/UTC.\n        N(\3\0\0\0RH\0\0\0R\f\0\0\0R\5\0\0\0(\3\0\0\0R\20\0\0\0R0\0\0\0RI\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\n\0\0\0getdate_tzt\1\0\0s\n\0\0\0\0\6\3\1\16\1\r\1\5\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0j\1\0\203\1\0S(\1\0\0\0s'\0\0\0Get the number of headers in a message.(\2\0\0\0R\"\0\0\0R\26\0\0\0(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\7\0\0\0__len__\203\1\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\21\0\0\0|\0\0j\0\0|\1\0j\1\0\203\0\0\31S(\1\0\0\0s,\0\0\0Get a specific header, as from a dictionary.(\2\0\0\0R\26\0\0\0R+\0\0\0(\2\0\0\0R\20\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\v\0\0\0__getitem__\207\1\0\0s\2\0\0\0\0\2c\3\0\0\0\5\0\0\0\4\0\0\0C\0\0\0sZ\0\0\0|\0\0|\1\0=|\2\0|\0\0j\0\0|\1\0j\1\0\203\0\0<|\1\0d\1\0\27|\2\0\27}\3\0x+\0|\3\0j\2\0d\2\0\203\1\0D]\32\0}\4\0|\0\0j\3\0j\4\0|\4\0d\2\0\27\203\1\0\1q8\0Wd\3\0S(\4\0\0\0s\345\0\0\0Set the value of a header.\n\n        Note: This is not a perfect inversion of __getitem__, because any\n        changed headers get stuck at the end of the raw-headers list rather\n        than where the altered header was.\n        s\2\0\0\0: s\1\0\0\0\nN(\5\0\0\0R\26\0\0\0R+\0\0\0t\5\0\0\0splitR\30\0\0\0R\35\0\0\0(\5\0\0\0R\20\0\0\0R0\0\0\0t\5\0\0\0valuet\4\0\0\0textR'\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\v\0\0\0__setitem__\213\1\0\0s\n\0\0\0\0\7\7\1\23\1\16\1\26\1c\2\0\0\0\7\0\0\0\3\0\0\0C\0\0\0s\353\0\0\0|\1\0j\0\0\203\0\0}\1\0|\1\0|\0\0j\1\0k\7\0r\37\0d\1\0S|\0\0j\1\0|\1\0=|\1\0d\2\0\27}\1\0t\2\0|\1\0\203\1\0}\2\0g\0\0}\3\0d\3\0}\4\0xx\0t\3\0t\2\0|\0\0j\4\0\203\1\0\203\1\0D]a\0}\5\0|\0\0j\4\0|\5\0\31}\6\0|\6\0|\2\0 j\0\0\203\0\0|\1\0k\2\0r\223\0d\4\0}\4\0n\31\0|\6\0d\4\0 j\5\0\203\0\0s\254\0d\3\0}\4\0n\0\0|\4\0ra\0|\3\0j\6\0|\5\0\203\1\0\1qa\0qa\0Wx\36\0t\7\0|\3\0\203\1\0D]\20\0}\5\0|\0\0j\4\0|\5\0=q\323\0Wd\1\0S(\5\0\0\0s>\0\0\0Delete all occurrences of a specific header, if it is present.NR)\0\0\0i\0\0\0\0i\1\0\0\0(\10\0\0\0R+\0\0\0R\26\0\0\0R\"\0\0\0t\5\0\0\0rangeR\30\0\0\0R/\0\0\0R\35\0\0\0t\10\0\0\0reversed(\7\0\0\0R\20\0\0\0R0\0\0\0R1\0\0\0R#\0\0\0R2\0\0\0R,\0\0\0R'\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\v\0\0\0__delitem__\230\1\0\0s$\0\0\0\0\2\f\1\17\1\4\1\n\1\n\1\f\1\6\1\6\1\34\1\r\1\26\1\t\1\20\1\t\1\6\1\24\1\23\1R\24\0\0\0c\3\0\0\0\6\0\0\0\4\0\0\0C\0\0\0sw\0\0\0|\1\0j\0\0\203\0\0}\3\0|\3\0|\0\0j\1\0k\6\0r&\0|\0\0j\1\0|\3\0\31S|\1\0d\1\0\27|\2\0\27}\4\0x+\0|\4\0j\2\0d\2\0\203\1\0D]\32\0}\5\0|\0\0j\3\0j\4\0|\5\0d\2\0\27\203\1\0\1qD\0W|\2\0|\0\0j\1\0|\3\0<|\2\0Sd\0\0S(\3\0\0\0Ns\2\0\0\0: s\1\0\0\0\n(\5\0\0\0R+\0\0\0R\26\0\0\0RN\0\0\0R\30\0\0\0R\35\0\0\0(\6\0\0\0R\20\0\0\0R0\0\0\0R8\0\0\0t\t\0\0\0lowernameRP\0\0\0R'\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\n\0\0\0setdefault\255\1\0\0s\20\0\0\0\0\1\f\1\17\1\v\2\16\1\26\1\30\1\r\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\23\0\0\0|\1\0j\0\0\203\0\0|\0\0j\1\0k\6\0S(\1\0\0\0s6\0\0\0Determine whether a message contains the named header.(\2\0\0\0R+\0\0\0R\26\0\0\0(\2\0\0\0R\20\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\7\0\0\0has_key\270\1\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\23\0\0\0|\1\0j\0\0\203\0\0|\0\0j\1\0k\6\0S(\1\0\0\0s6\0\0\0Determine whether a message contains the named header.(\2\0\0\0R+\0\0\0R\26\0\0\0(\2\0\0\0R\20\0\0\0R0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\f\0\0\0__contains__\274\1\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0j\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0t\4\0\0\0iterR\26\0\0\0(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\10\0\0\0__iter__\300\1\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0s*\0\0\0Get all of a message's header field names.(\2\0\0\0R\26\0\0\0t\4\0\0\0keys(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR[\0\0\0\303\1\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0s+\0\0\0Get all of a message's header field values.(\2\0\0\0R\26\0\0\0t\6\0\0\0values(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\\\0\0\0\307\1\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0j\1\0\203\0\0S(\1\0\0\0sW\0\0\0Get all of a message's headers.\n\n        Returns a list of name, value tuples.\n        (\2\0\0\0R\26\0\0\0t\5\0\0\0items(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR]\0\0\0\313\1\0\0s\2\0\0\0\0\5c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\20\0\0\0d\1\0j\0\0|\0\0j\1\0\203\1\0S(\2\0\0\0NR\24\0\0\0(\2\0\0\0R5\0\0\0R\30\0\0\0(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\7\0\0\0__str__\322\1\0\0s\2\0\0\0\0\1N( \0\0\0t\10\0\0\0__name__t\n\0\0\0__module__t\7\0\0\0__doc__R\21\0\0\0R\23\0\0\0R\17\0\0\0R!\0\0\0R \0\0\0R\37\0\0\0R3\0\0\0R4\0\0\0R6\0\0\0R\f\0\0\0R9\0\0\0R7\0\0\0R>\0\0\0RA\0\0\0R?\0\0\0RJ\0\0\0RK\0\0\0RL\0\0\0RM\0\0\0RQ\0\0\0RT\0\0\0RV\0\0\0RW\0\0\0RX\0\0\0RZ\0\0\0R[\0\0\0R\\\0\0\0R]\0\0\0R^\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\2\0\0\0U\0\0\0s:\0\0\0\6\1\6\2\f\34\t\6\tP\t\f\t\n\t\t\t\26\t\24\t\17\f\10\6\2\t\31\t\r\t\26\t\f\t\17\t\4\t\4\t\r\t\25\f\v\t\4\t\4\t\3\t\4\t\4\t\7c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\203\0\0\0t\0\0|\0\0\203\1\0d\1\0k\4\0r\177\0|\0\0j\1\0d\2\0\203\1\0rS\0|\0\0j\2\0d\2\0\203\1\0rS\0|\0\0d\1\0d\3\0!j\3\0d\4\0d\5\0\203\2\0j\3\0d\6\0d\2\0\203\2\0S|\0\0j\1\0d\7\0\203\1\0r\177\0|\0\0j\2\0d\10\0\203\1\0r\177\0|\0\0d\1\0d\3\0!Sn\0\0|\0\0S(\t\0\0\0s\34\0\0\0Remove quotes from a string.i\1\0\0\0t\1\0\0\0\"i\377\377\377\377s\2\0\0\0\\\\s\1\0\0\0\\s\2\0\0\0\\\"t\1\0\0\0<t\1\0\0\0>(\4\0\0\0R\"\0\0\0R\34\0\0\0t\10\0\0\0endswitht\7\0\0\0replace(\1\0\0\0R=\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\7\0\0\0unquote\335\1\0\0s\f\0\0\0\0\2\22\1\36\1#\1\36\1\16\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\34\0\0\0|\0\0j\0\0d\1\0d\2\0\203\2\0j\0\0d\3\0d\4\0\203\2\0S(\5\0\0\0s\33\0\0\0Add quotes around a string.s\1\0\0\0\\s\2\0\0\0\\\\Rb\0\0\0s\2\0\0\0\\\"(\1\0\0\0Rf\0\0\0(\1\0\0\0R=\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\5\0\0\0quote\347\1\0\0s\2\0\0\0\0\2c\1\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s'\0\0\0t\0\0|\0\0\203\1\0}\1\0|\1\0j\1\0}\2\0|\2\0s\37\0d\3\0S|\2\0d\1\0\31S(\4\0\0\0s3\0\0\0Parse an address into a (realname, mailaddr) tuple.i\0\0\0\0N(\2\0\0\0NN(\3\0\0\0R\3\0\0\0RB\0\0\0R\f\0\0\0(\3\0\0\0t\7\0\0\0addressRG\0\0\0R#\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\t\0\0\0parseaddr\354\1\0\0s\n\0\0\0\0\2\f\1\t\1\6\1\4\1t\r\0\0\0AddrlistClassc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s\211\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0d\3\0\204\0\0Z\5\0d\4\0\204\0\0Z\6\0d\5\0\204\0\0Z\7\0d\6\0\204\0\0Z\10\0d\7\0\204\0\0Z\t\0d\10\0d\t\0\204\1\0Z\n\0d\n\0\204\0\0Z\v\0d\v\0\204\0\0Z\f\0d\f\0\204\0\0Z\r\0d\17\0d\r\0\204\1\0Z\17\0d\16\0\204\0\0Z\20\0RS(\20\0\0\0s)\1\0\0Address parser class by Ben Escoto.\n\n    To understand what this class does, it helps to have a copy of\n    RFC 2822 in front of you.\n\n    http://www.faqs.org/rfcs/rfc2822.html\n\n    Note: this class interface is deprecated and may be removed in the future.\n    Use rfc822.AddressList instead.\n    c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0sl\0\0\0d\1\0|\0\0_\0\0d\2\0|\0\0_\1\0d\3\0|\0\0_\2\0d\4\0|\0\0_\3\0|\0\0j\0\0|\0\0j\2\0\27|\0\0j\3\0\27|\0\0_\4\0|\0\0j\4\0j\5\0d\5\0d\6\0\203\2\0|\0\0_\6\0|\1\0|\0\0_\7\0g\0\0|\0\0_\10\0d\7\0S(\10\0\0\0s\203\0\0\0Initialize a new instance.\n\n        `field' is an unparsed address header field, containing one or more\n        addresses.\n        s\f\0\0\0()<>@,:;.\"[]i\0\0\0\0s\2\0\0\0 \ts\2\0\0\0\r\nt\1\0\0\0.R\24\0\0\0N(\t\0\0\0t\10\0\0\0specialst\3\0\0\0post\3\0\0\0LWSt\2\0\0\0CRt\10\0\0\0atomendsRf\0\0\0t\n\0\0\0phraseendst\5\0\0\0fieldt\v\0\0\0commentlist(\2\0\0\0R\20\0\0\0Rs\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\21\0\0\0\1\2\0\0s\20\0\0\0\0\6\t\1\t\1\t\1\t\1\32\4\30\1\t\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\203\0\0\0x|\0|\0\0j\0\0t\1\0|\0\0j\2\0\203\1\0k\0\0r~\0|\0\0j\2\0|\0\0j\0\0\31|\0\0j\3\0d\1\0\27k\6\0rK\0|\0\0j\0\0d\2\0\27|\0\0_\0\0q\3\0|\0\0j\2\0|\0\0j\0\0\31d\3\0k\2\0rz\0|\0\0j\4\0j\5\0|\0\0j\6\0\203\0\0\203\1\0\1q\3\0Pq\3\0Wd\4\0S(\5\0\0\0s*\0\0\0Parse up to the start of the next address.s\2\0\0\0\n\ri\1\0\0\0t\1\0\0\0(N(\7\0\0\0Rn\0\0\0R\"\0\0\0Rs\0\0\0Ro\0\0\0Rt\0\0\0R\35\0\0\0t\n\0\0\0getcomment(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\10\0\0\0gotonext\23\2\0\0s\f\0\0\0\0\2\33\1\35\1\23\1\26\1\31\1c\1\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s9\0\0\0g\0\0}\1\0|\0\0j\0\0\203\0\0}\2\0x \0|\2\0r4\0|\1\0|\2\0007}\1\0|\0\0j\0\0\203\0\0}\2\0q\25\0W|\1\0S(\1\0\0\0sV\0\0\0Parse all addresses.\n\n        Returns a list containing all of the addresses.\n        (\1\0\0\0t\n\0\0\0getaddress(\3\0\0\0R\20\0\0\0R:\0\0\0t\2\0\0\0ad(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR?\0\0\0\34\2\0\0s\f\0\0\0\0\5\6\1\f\1\t\1\n\1\20\1c\1\0\0\0\10\0\0\0\3\0\0\0C\0\0\0s\236\2\0\0g\0\0|\0\0_\0\0|\0\0j\1\0\203\0\0\1|\0\0j\2\0}\1\0|\0\0j\0\0}\2\0|\0\0j\3\0\203\0\0}\3\0|\0\0j\1\0\203\0\0\1g\0\0}\4\0|\0\0j\2\0t\4\0|\0\0j\5\0\203\1\0k\5\0r\204\0|\3\0rP\2d\1\0j\6\0|\0\0j\0\0\203\1\0|\3\0d\2\0\31f\2\0g\1\0}\4\0qP\2n\314\1|\0\0j\5\0|\0\0j\2\0\31d\3\0k\6\0r\326\0|\1\0|\0\0_\2\0|\2\0|\0\0_\0\0|\0\0j\7\0\203\0\0}\5\0d\1\0j\6\0|\0\0j\0\0\203\1\0|\5\0f\2\0g\1\0}\4\0nz\1|\0\0j\5\0|\0\0j\2\0\31d\4\0k\2\0r\204\1g\0\0}\4\0t\4\0|\0\0j\5\0\203\1\0}\6\0|\0\0\4j\2\0d\5\0007\2_\2\0x=\1|\0\0j\2\0t\4\0|\0\0j\5\0\203\1\0k\0\0r\200\1|\0\0j\1\0\203\0\0\1|\0\0j\2\0|\6\0k\0\0rm\1|\0\0j\5\0|\0\0j\2\0\31d\6\0k\2\0rm\1|\0\0\4j\2\0d\5\0007\2_\2\0Pn\0\0|\4\0|\0\0j\10\0\203\0\0\27}\4\0q\23\1Wn\314\0|\0\0j\5\0|\0\0j\2\0\31d\7\0k\2\0r\375\1|\0\0j\t\0\203\0\0}\7\0|\0\0j\0\0r\342\1d\1\0j\6\0|\3\0\203\1\0d\10\0\27d\1\0j\6\0|\0\0j\0\0\203\1\0\27d\t\0\27|\7\0f\2\0g\1\0}\4\0qP\2d\1\0j\6\0|\3\0\203\1\0|\7\0f\2\0g\1\0}\4\0nS\0|\3\0r%\2d\1\0j\6\0|\0\0j\0\0\203\1\0|\3\0d\2\0\31f\2\0g\1\0}\4\0n+\0|\0\0j\5\0|\0\0j\2\0\31|\0\0j\n\0k\6\0rP\2|\0\0\4j\2\0d\5\0007\2_\2\0n\0\0|\0\0j\1\0\203\0\0\1|\0\0j\2\0t\4\0|\0\0j\5\0\203\1\0k\0\0r\232\2|\0\0j\5\0|\0\0j\2\0\31d\n\0k\2\0r\232\2|\0\0\4j\2\0d\5\0007\2_\2\0n\0\0|\4\0S(\v\0\0\0s\27\0\0\0Parse the next address.t\1\0\0\0 i\0\0\0\0s\2\0\0\0.@R)\0\0\0i\1\0\0\0t\1\0\0\0;Rc\0\0\0s\2\0\0\0 (t\1\0\0\0)t\1\0\0\0,(\v\0\0\0Rt\0\0\0Rw\0\0\0Rn\0\0\0t\r\0\0\0getphraselistR\"\0\0\0Rs\0\0\0R5\0\0\0t\v\0\0\0getaddrspecRx\0\0\0t\f\0\0\0getrouteaddrRm\0\0\0(\10\0\0\0R\20\0\0\0t\6\0\0\0oldpost\5\0\0\0oldclt\5\0\0\0plistt\n\0\0\0returnlistt\10\0\0\0addrspect\10\0\0\0fieldlent\t\0\0\0routeaddr(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyRx\0\0\0(\2\0\0sL\0\0\0\0\2\t\1\n\2\t\1\t\1\f\2\n\1\6\2\30\2\6\1%\2\26\3\t\1\t\1\f\1\36\2\26\2\6\2\17\1\17\1\33\1\n\1%\1\17\1\4\1\27\2\26\2\f\2\t\0023\1\33\3\6\1\"\1\31\1\22\2\n\1.\1\22\1c\1\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s \1\0\0|\0\0j\0\0|\0\0j\1\0\31d\1\0k\3\0r\32\0d\2\0Sd\3\0}\1\0|\0\0\4j\1\0d\4\0007\2_\1\0|\0\0j\2\0\203\0\0\1d\5\0}\2\0x\332\0|\0\0j\1\0t\3\0|\0\0j\0\0\203\1\0k\0\0r\33\1|\1\0rs\0|\0\0j\4\0\203\0\0\1d\3\0}\1\0n\233\0|\0\0j\0\0|\0\0j\1\0\31d\6\0k\2\0r\234\0|\0\0\4j\1\0d\4\0007\2_\1\0Pnr\0|\0\0j\0\0|\0\0j\1\0\31d\7\0k\2\0r\312\0|\0\0\4j\1\0d\4\0007\2_\1\0d\4\0}\1\0nD\0|\0\0j\0\0|\0\0j\1\0\31d\10\0k\2\0r\362\0|\0\0\4j\1\0d\4\0007\2_\1\0n\34\0|\0\0j\5\0\203\0\0}\2\0|\0\0\4j\1\0d\4\0007\2_\1\0P|\0\0j\2\0\203\0\0\1qB\0W|\2\0S(\t\0\0\0s\201\0\0\0Parse a route address (Return-path value).\n\n        This method just skips all the route stuff and returns the addrspec.\n        Rc\0\0\0Ni\0\0\0\0i\1\0\0\0R\24\0\0\0Rd\0\0\0t\1\0\0\0@R)\0\0\0(\6\0\0\0Rs\0\0\0Rn\0\0\0Rw\0\0\0R\"\0\0\0t\t\0\0\0getdomainR\177\0\0\0(\3\0\0\0R\20\0\0\0t\v\0\0\0expectroutet\6\0\0\0adlist(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\200\0\0\0b\2\0\0s.\0\0\0\0\5\26\1\4\2\6\1\17\1\n\1\6\1\33\1\6\1\n\1\t\1\26\1\17\1\4\1\26\1\17\1\t\1\26\1\22\2\f\1\17\1\1\1\16\2c\1\0\0\0\2\0\0\0\3\0\0\0C\0\0\0sF\1\0\0g\0\0}\1\0|\0\0j\0\0\203\0\0\1x\273\0|\0\0j\1\0t\2\0|\0\0j\3\0\203\1\0k\0\0r\315\0|\0\0j\3\0|\0\0j\1\0\31d\1\0k\2\0r`\0|\1\0j\4\0d\1\0\203\1\0\1|\0\0\4j\1\0d\2\0007\2_\1\0n`\0|\0\0j\3\0|\0\0j\1\0\31d\3\0k\2\0r\220\0|\1\0j\4\0d\4\0|\0\0j\5\0\203\0\0\26\203\1\0\1n0\0|\0\0j\3\0|\0\0j\1\0\31|\0\0j\6\0k\6\0r\255\0Pn\23\0|\1\0j\4\0|\0\0j\7\0\203\0\0\203\1\0\1|\0\0j\0\0\203\0\0\1q\23\0W|\0\0j\1\0t\2\0|\0\0j\3\0\203\1\0k\5\0s\374\0|\0\0j\3\0|\0\0j\1\0\31d\5\0k\3\0r\t\1d\6\0j\10\0|\1\0\203\1\0S|\1\0j\4\0d\5\0\203\1\0\1|\0\0\4j\1\0d\2\0007\2_\1\0|\0\0j\0\0\203\0\0\1d\6\0j\10\0|\1\0\203\1\0|\0\0j\t\0\203\0\0\27S(\7\0\0\0s\34\0\0\0Parse an RFC 2822 addr-spec.Rl\0\0\0i\1\0\0\0Rb\0\0\0s\4\0\0\0\"%s\"R\210\0\0\0R\24\0\0\0(\n\0\0\0Rw\0\0\0Rn\0\0\0R\"\0\0\0Rs\0\0\0R\35\0\0\0t\10\0\0\0getquoteRq\0\0\0t\7\0\0\0getatomR5\0\0\0R\211\0\0\0(\2\0\0\0R\20\0\0\0t\6\0\0\0aslist(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\177\0\0\0\202\2\0\0s$\0\0\0\0\2\6\2\n\1\33\1\26\1\r\1\22\1\26\1\32\1\31\1\4\1\23\1\16\2.\1\r\2\r\1\17\1\n\1c\1\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\35\1\0\0g\0\0}\1\0x\7\1|\0\0j\0\0t\1\0|\0\0j\2\0\203\1\0k\0\0r\17\1|\0\0j\2\0|\0\0j\0\0\31|\0\0j\3\0k\6\0rL\0|\0\0\4j\0\0d\1\0007\2_\0\0q\t\0|\0\0j\2\0|\0\0j\0\0\31d\2\0k\2\0r{\0|\0\0j\4\0j\5\0|\0\0j\6\0\203\0\0\203\1\0\1q\t\0|\0\0j\2\0|\0\0j\0\0\31d\3\0k\2\0r\247\0|\1\0j\5\0|\0\0j\7\0\203\0\0\203\1\0\1q\t\0|\0\0j\2\0|\0\0j\0\0\31d\4\0k\2\0r\334\0|\0\0\4j\0\0d\1\0007\2_\0\0|\1\0j\5\0d\4\0\203\1\0\1q\t\0|\0\0j\2\0|\0\0j\0\0\31|\0\0j\10\0k\6\0r\371\0Pq\t\0|\1\0j\5\0|\0\0j\t\0\203\0\0\203\1\0\1q\t\0Wd\5\0j\n\0|\1\0\203\1\0S(\6\0\0\0s-\0\0\0Get the complete domain name from an address.i\1\0\0\0Ru\0\0\0t\1\0\0\0[Rl\0\0\0R\24\0\0\0(\v\0\0\0Rn\0\0\0R\"\0\0\0Rs\0\0\0Ro\0\0\0Rt\0\0\0R\35\0\0\0Rv\0\0\0t\20\0\0\0getdomainliteralRq\0\0\0R\215\0\0\0R5\0\0\0(\2\0\0\0R\20\0\0\0t\6\0\0\0sdlist(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\211\0\0\0\232\2\0\0s\36\0\0\0\0\2\6\1\33\1\31\1\22\1\26\1\31\1\26\1\26\1\26\1\17\1\20\1\31\1\4\1\27\1i\1\0\0\0c\4\0\0\0\6\0\0\0\3\0\0\0C\0\0\0s3\1\0\0|\0\0j\0\0|\0\0j\1\0\31|\1\0k\3\0r\32\0d\1\0Sd\1\0g\1\0}\4\0d\2\0}\5\0|\0\0\4j\1\0d\3\0007\2_\1\0x\353\0|\0\0j\1\0t\2\0|\0\0j\0\0\203\1\0k\0\0r%\1|\5\0d\3\0k\2\0r\177\0|\4\0j\3\0|\0\0j\0\0|\0\0j\1\0\31\203\1\0\1d\2\0}\5\0n\224\0|\0\0j\0\0|\0\0j\1\0\31|\2\0k\6\0r\250\0|\0\0\4j\1\0d\3\0007\2_\1\0Pnk\0|\3\0r\335\0|\0\0j\0\0|\0\0j\1\0\31d\4\0k\2\0r\335\0|\4\0j\3\0|\0\0j\4\0\203\0\0\203\1\0\1q;\0n6\0|\0\0j\0\0|\0\0j\1\0\31d\5\0k\2\0r\374\0d\3\0}\5\0n\27\0|\4\0j\3\0|\0\0j\0\0|\0\0j\1\0\31\203\1\0\1|\0\0\4j\1\0d\3\0007\2_\1\0q;\0Wd\1\0j\5\0|\4\0\203\1\0S(\6\0\0\0s\347\1\0\0Parse a header fragment delimited by special characters.\n\n        `beginchar' is the start character for the fragment.  If self is not\n        looking at an instance of `beginchar' then getdelimited returns the\n        empty string.\n\n        `endchars' is a sequence of allowable end-delimiting characters.\n        Parsing stops when one of these is encountered.\n\n        If `allowcomments' is non-zero, embedded RFC 2822 comments are allowed\n        within the parsed fragment.\n        R\24\0\0\0i\0\0\0\0i\1\0\0\0Ru\0\0\0s\1\0\0\0\\(\6\0\0\0Rs\0\0\0Rn\0\0\0R\"\0\0\0R\35\0\0\0Rv\0\0\0R5\0\0\0(\6\0\0\0R\20\0\0\0t\t\0\0\0beginchart\10\0\0\0endcharst\r\0\0\0allowcommentst\5\0\0\0slistRh\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\f\0\0\0getdelimited\254\2\0\0s(\0\0\0\0\r\26\1\4\2\t\1\6\1\17\1\33\1\f\1\27\1\t\1\26\1\17\1\4\1\34\1\23\1\6\1\26\1\t\2\27\1\23\2c\1\0\0\0\1\0\0\0\4\0\0\0C\0\0\0s\23\0\0\0|\0\0j\0\0d\1\0d\2\0d\3\0\203\3\0S(\4\0\0\0s1\0\0\0Get a quote-delimited fragment from self's field.Rb\0\0\0s\2\0\0\0\"\ri\0\0\0\0(\1\0\0\0R\226\0\0\0(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\214\0\0\0\321\2\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\4\0\0\0C\0\0\0s\23\0\0\0|\0\0j\0\0d\1\0d\2\0d\3\0\203\3\0S(\4\0\0\0s7\0\0\0Get a parenthesis-delimited fragment from self's field.Ru\0\0\0s\2\0\0\0)\ri\1\0\0\0(\1\0\0\0R\226\0\0\0(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyRv\0\0\0\325\2\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0s\27\0\0\0d\1\0|\0\0j\0\0d\2\0d\3\0d\4\0\203\3\0\26S(\5\0\0\0s!\0\0\0Parse an RFC 2822 domain-literal.s\4\0\0\0[%s]R\217\0\0\0s\2\0\0\0]\ri\0\0\0\0(\1\0\0\0R\226\0\0\0(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\220\0\0\0\331\2\0\0s\2\0\0\0\0\2c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\215\0\0\0d\1\0g\1\0}\2\0|\1\0d\3\0k\10\0r!\0|\0\0j\1\0}\1\0n\0\0x\\\0|\0\0j\2\0t\3\0|\0\0j\4\0\203\1\0k\0\0r\177\0|\0\0j\4\0|\0\0j\2\0\31|\1\0k\6\0rV\0Pn\27\0|\2\0j\5\0|\0\0j\4\0|\0\0j\2\0\31\203\1\0\1|\0\0\4j\2\0d\2\0007\2_\2\0q$\0Wd\1\0j\6\0|\2\0\203\1\0S(\4\0\0\0s\24\1\0\0Parse an RFC 2822 atom.\n\n        Optional atomends specifies a different set of end token delimiters\n        (the default is to use self.atomends).  This is used e.g. in\n        getphraselist() since phrase endings must not include the `.' (which\n        is legal in phrases).R\24\0\0\0i\1\0\0\0N(\7\0\0\0R\f\0\0\0Rq\0\0\0Rn\0\0\0R\"\0\0\0Rs\0\0\0R\35\0\0\0R5\0\0\0(\3\0\0\0R\20\0\0\0Rq\0\0\0t\10\0\0\0atomlist(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\215\0\0\0\335\2\0\0s\22\0\0\0\0\7\t\1\f\1\f\2\33\1\26\1\4\1\27\1\23\2c\1\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\345\0\0\0g\0\0}\1\0x\330\0|\0\0j\0\0t\1\0|\0\0j\2\0\203\1\0k\0\0r\340\0|\0\0j\2\0|\0\0j\0\0\31|\0\0j\3\0k\6\0rL\0|\0\0\4j\0\0d\1\0007\2_\0\0q\t\0|\0\0j\2\0|\0\0j\0\0\31d\2\0k\2\0rx\0|\1\0j\4\0|\0\0j\5\0\203\0\0\203\1\0\1q\t\0|\0\0j\2\0|\0\0j\0\0\31d\3\0k\2\0r\247\0|\0\0j\6\0j\4\0|\0\0j\7\0\203\0\0\203\1\0\1q\t\0|\0\0j\2\0|\0\0j\0\0\31|\0\0j\10\0k\6\0r\304\0Pq\t\0|\1\0j\4\0|\0\0j\t\0|\0\0j\10\0\203\1\0\203\1\0\1q\t\0W|\1\0S(\4\0\0\0s\375\0\0\0Parse a sequence of RFC 2822 phrases.\n\n        A phrase is a sequence of words, which are in turn either RFC 2822\n        atoms or quoted-strings.  Phrases are canonicalized by squeezing all\n        runs of continuous whitespace into one space.\n        i\1\0\0\0Rb\0\0\0Ru\0\0\0(\n\0\0\0Rn\0\0\0R\"\0\0\0Rs\0\0\0Ro\0\0\0R\35\0\0\0R\214\0\0\0Rt\0\0\0Rv\0\0\0Rr\0\0\0R\215\0\0\0(\2\0\0\0R\20\0\0\0R\203\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR~\0\0\0\360\2\0\0s\30\0\0\0\0\7\6\2\33\1\31\1\22\1\26\1\26\1\26\1\31\1\31\1\4\2\35\2N(\21\0\0\0R_\0\0\0R`\0\0\0Ra\0\0\0R\21\0\0\0Rw\0\0\0R?\0\0\0Rx\0\0\0R\200\0\0\0R\177\0\0\0R\211\0\0\0R\226\0\0\0R\214\0\0\0Rv\0\0\0R\220\0\0\0R\f\0\0\0R\215\0\0\0R~\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyRk\0\0\0\365\1\0\0s\34\0\0\0\6\n\6\2\t\22\t\t\t\f\t:\t \t\30\t\22\f%\t\4\t\4\t\4\f\23c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0sV\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0d\3\0\204\0\0Z\5\0d\4\0\204\0\0Z\6\0d\5\0\204\0\0Z\7\0d\6\0\204\0\0Z\10\0d\7\0\204\0\0Z\t\0d\10\0\204\0\0Z\n\0RS(\t\0\0\0s@\0\0\0An AddressList encapsulates a list of parsed RFC 2822 addresses.c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s5\0\0\0t\0\0j\1\0|\0\0|\1\0\203\2\0\1|\1\0r(\0|\0\0j\2\0\203\0\0|\0\0_\3\0n\t\0g\0\0|\0\0_\3\0d\0\0S(\1\0\0\0N(\4\0\0\0Rk\0\0\0R\21\0\0\0R?\0\0\0RB\0\0\0(\2\0\0\0R\20\0\0\0Rs\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\21\0\0\0\t\3\0\0s\10\0\0\0\0\1\20\1\6\1\22\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0j\1\0\203\1\0S(\1\0\0\0N(\2\0\0\0R\"\0\0\0RB\0\0\0(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyRL\0\0\0\20\3\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\4\0\0\0C\0\0\0s\31\0\0\0d\1\0j\0\0t\1\0t\2\0|\0\0j\3\0\203\2\0\203\1\0S(\2\0\0\0Ns\2\0\0\0, (\4\0\0\0R5\0\0\0t\3\0\0\0mapt\21\0\0\0dump_address_pairRB\0\0\0(\1\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR^\0\0\0\23\3\0\0s\2\0\0\0\0\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0sS\0\0\0t\0\0d\0\0\203\1\0}\2\0|\0\0j\2\0\36|\2\0_\2\0x3\0|\1\0j\2\0D](\0}\3\0|\3\0|\0\0j\2\0k\7\0r#\0|\2\0j\2\0j\3\0|\3\0\203\1\0\1q#\0q#\0W|\2\0S(\1\0\0\0N(\4\0\0\0R\3\0\0\0R\f\0\0\0RB\0\0\0R\35\0\0\0(\4\0\0\0R\20\0\0\0t\5\0\0\0othert\7\0\0\0newaddrR(\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\7\0\0\0__add__\26\3\0\0s\f\0\0\0\0\2\f\1\r\1\20\1\17\1\27\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s:\0\0\0x3\0|\1\0j\0\0D](\0}\2\0|\2\0|\0\0j\0\0k\7\0r\n\0|\0\0j\0\0j\1\0|\2\0\203\1\0\1q\n\0q\n\0W|\0\0S(\1\0\0\0N(\2\0\0\0RB\0\0\0R\35\0\0\0(\3\0\0\0R\20\0\0\0R\232\0\0\0R(\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\10\0\0\0__iadd__\37\3\0\0s\10\0\0\0\0\2\20\1\17\1\27\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0sF\0\0\0t\0\0d\0\0\203\1\0}\2\0x3\0|\0\0j\2\0D](\0}\3\0|\3\0|\1\0j\2\0k\7\0r\26\0|\2\0j\2\0j\3\0|\3\0\203\1\0\1q\26\0q\26\0W|\2\0S(\1\0\0\0N(\4\0\0\0R\3\0\0\0R\f\0\0\0RB\0\0\0R\35\0\0\0(\4\0\0\0R\20\0\0\0R\232\0\0\0R\233\0\0\0R(\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\7\0\0\0__sub__&\3\0\0s\n\0\0\0\0\2\f\1\20\1\17\1\27\1c\2\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s:\0\0\0x3\0|\1\0j\0\0D](\0}\2\0|\2\0|\0\0j\0\0k\6\0r\n\0|\0\0j\0\0j\1\0|\2\0\203\1\0\1q\n\0q\n\0W|\0\0S(\1\0\0\0N(\2\0\0\0RB\0\0\0t\6\0\0\0remove(\3\0\0\0R\20\0\0\0R\232\0\0\0R(\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\10\0\0\0__isub__.\3\0\0s\10\0\0\0\0\2\20\1\17\1\27\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\v\0\0\0|\0\0j\0\0|\1\0\31S(\1\0\0\0N(\1\0\0\0RB\0\0\0(\2\0\0\0R\20\0\0\0t\5\0\0\0index(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyRM\0\0\0005\3\0\0s\2\0\0\0\0\2(\v\0\0\0R_\0\0\0R`\0\0\0Ra\0\0\0R\21\0\0\0RL\0\0\0R^\0\0\0R\234\0\0\0R\235\0\0\0R\236\0\0\0R\240\0\0\0RM\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\3\0\0\0\7\3\0\0s\22\0\0\0\6\1\6\1\t\7\t\3\t\3\t\t\t\7\t\10\t\7c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s2\0\0\0|\0\0d\1\0\31r&\0d\2\0|\0\0d\1\0\31\27d\3\0\27|\0\0d\4\0\31\27d\5\0\27S|\0\0d\4\0\31Sd\6\0S(\7\0\0\0s4\0\0\0Dump a (name, address) pair in a canonicalized form.i\0\0\0\0Rb\0\0\0s\3\0\0\0\" <i\1\0\0\0Rd\0\0\0N(\0\0\0\0(\1\0\0\0t\4\0\0\0pair(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\231\0\0\0009\3\0\0s\6\0\0\0\0\2\n\1\34\2t\3\0\0\0jant\3\0\0\0febt\3\0\0\0mart\3\0\0\0aprt\3\0\0\0mayt\3\0\0\0junt\3\0\0\0jult\3\0\0\0augt\3\0\0\0sept\3\0\0\0octt\3\0\0\0novt\3\0\0\0dect\7\0\0\0januaryt\10\0\0\0februaryt\5\0\0\0marcht\5\0\0\0aprilt\4\0\0\0junet\4\0\0\0julyt\6\0\0\0augustt\t\0\0\0septembert\7\0\0\0octobert\10\0\0\0novembert\10\0\0\0decembert\3\0\0\0mont\3\0\0\0tuet\3\0\0\0wedt\3\0\0\0thut\3\0\0\0frit\3\0\0\0satt\3\0\0\0suni\0\0\0\0t\2\0\0\0UTt\3\0\0\0UTCt\3\0\0\0GMTt\1\0\0\0Zip\376\377\377t\3\0\0\0ASTi\324\376\377\377t\3\0\0\0ADTi\f\376\377\377t\3\0\0\0ESTt\3\0\0\0EDTi\250\375\377\377t\3\0\0\0CSTt\3\0\0\0CDTiD\375\377\377t\3\0\0\0MSTt\3\0\0\0MDTi\340\374\377\377t\3\0\0\0PSTt\3\0\0\0PDTc\1\0\0\0\16\0\0\0\n\0\0\0C\0\0\0s\341\3\0\0|\0\0s\n\0d\23\0S|\0\0j\1\0\203\0\0}\0\0|\0\0d\1\0\31d\2\0\31d\24\0k\6\0s@\0|\0\0d\1\0\31j\2\0\203\0\0t\3\0k\6\0rJ\0|\0\0d\1\0=n8\0|\0\0d\1\0\31j\4\0d\3\0\203\1\0}\1\0|\1\0d\1\0k\5\0r\202\0|\0\0d\1\0\31|\1\0d\5\0\27\37|\0\0d\1\0<n\0\0t\5\0|\0\0\203\1\0d\6\0k\2\0r\315\0|\0\0d\1\0\31j\1\0d\7\0\203\1\0}\2\0t\5\0|\2\0\203\1\0d\6\0k\2\0r\315\0|\2\0|\0\0d\5\0\37\27}\0\0q\315\0n\0\0t\5\0|\0\0\203\1\0d\10\0k\2\0r3\1|\0\0d\6\0\31}\3\0|\3\0j\6\0d\t\0\203\1\0}\1\0|\1\0d\1\0k\4\0r#\1|\3\0|\1\0 |\3\0|\1\0d\5\0\27\37g\2\0|\0\0d\6\0)q3\1|\0\0j\7\0d\n\0\203\1\0\1n\0\0t\5\0|\0\0\203\1\0d\v\0k\0\0rI\1d\23\0S|\0\0d\v\0 }\0\0|\0\0\\\5\0}\4\0}\5\0}\6\0}\7\0}\10\0|\5\0j\2\0\203\0\0}\5\0|\5\0t\10\0k\7\0r\246\1|\5\0|\4\0j\2\0\203\0\0\2}\4\0}\5\0|\5\0t\10\0k\7\0r\246\1d\23\0Sn\0\0t\10\0j\t\0|\5\0\203\1\0d\5\0\27}\5\0|\5\0d\f\0k\4\0r\322\1|\5\0d\f\0\30}\5\0n\0\0|\4\0d\2\0\31d\3\0k\2\0r\357\1|\4\0d\2\0 }\4\0n\0\0|\6\0j\6\0d\r\0\203\1\0}\1\0|\1\0d\1\0k\4\0r\32\2|\7\0|\6\0\2}\6\0}\7\0n\0\0|\6\0d\2\0\31d\3\0k\2\0r7\2|\6\0d\2\0 }\6\0n\0\0|\6\0d\1\0\31j\n\0\203\0\0sW\2|\10\0|\6\0\2}\6\0}\10\0n\0\0|\7\0d\2\0\31d\3\0k\2\0rt\2|\7\0d\2\0 }\7\0n\0\0|\7\0j\1\0d\r\0\203\1\0}\7\0t\5\0|\7\0\203\1\0d\16\0k\2\0r\252\2|\7\0\\\2\0}\t\0}\n\0d\17\0}\v\0n(\0t\5\0|\7\0\203\1\0d\6\0k\2\0r\316\2|\7\0\\\3\0}\t\0}\n\0}\v\0n\4\0d\23\0Sy@\0t\v\0|\6\0\203\1\0}\6\0t\v\0|\4\0\203\1\0}\4\0t\v\0|\t\0\203\1\0}\t\0t\v\0|\n\0\203\1\0}\n\0t\v\0|\v\0\203\1\0}\v\0Wn\22\0\4t\f\0k\n\0r&\3\1\1\1d\23\0SXd\23\0}\f\0|\10\0j\r\0\203\0\0}\10\0|\10\0t\16\0k\6\0rR\3t\16\0|\10\0\31}\f\0n$\0y\20\0t\v\0|\10\0\203\1\0}\f\0Wn\21\0\4t\f\0k\n\0ru\3\1\1\1n\1\0X|\f\0r\277\3|\f\0d\1\0k\0\0r\230\3d\2\0}\r\0|\f\0\v}\f\0n\6\0d\5\0}\r\0|\r\0|\f\0d\20\0\32d\21\0\24|\f\0d\20\0\26d\22\0\24\27\24}\f\0n\0\0|\6", 24576) = 24576
27308 read(6, "\0|\5\0|\4\0|\t\0|\n\0|\v\0d\1\0d\5\0d\1\0|\f\0f\n\0S(\25\0\0\0sQ\0\0\0Convert a date string to a time tuple.\n\n    Accounts for military timezones.\n    i\0\0\0\0i\377\377\377\377R}\0\0\0Rl\0\0\0i\1\0\0\0i\3\0\0\0t\1\0\0\0-i\4\0\0\0t\1\0\0\0+R\24\0\0\0i\5\0\0\0i\f\0\0\0R)\0\0\0i\2\0\0\0t\1\0\0\0000id\0\0\0i\20\16\0\0i<\0\0\0N(\2\0\0\0R}\0\0\0Rl\0\0\0(\17\0\0\0R\f\0\0\0RN\0\0\0R+\0\0\0t\t\0\0\0_daynamest\5\0\0\0rfindR\"\0\0\0R*\0\0\0R\35\0\0\0t\v\0\0\0_monthnamesR\241\0\0\0t\7\0\0\0isdigitt\3\0\0\0intt\n\0\0\0ValueErrort\5\0\0\0uppert\n\0\0\0_timezones(\16\0\0\0RI\0\0\0R,\0\0\0t\5\0\0\0stuffR=\0\0\0t\2\0\0\0ddt\2\0\0\0mmt\2\0\0\0yyt\2\0\0\0tmt\2\0\0\0tzt\3\0\0\0thht\3\0\0\0tmmt\3\0\0\0tsst\10\0\0\0tzoffsett\6\0\0\0tzsign(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\5\0\0\0W\3\0\0s\216\0\0\0\0\5\6\1\4\1\f\1*\2\n\3\23\1\f\1\31\1\22\1\23\1\22\1\24\1\22\1\n\1\17\1\f\1\37\2\20\1\22\1\4\1\n\1\25\1\f\1\f\1\23\1\f\1\7\1\23\1\f\0\r\1\20\1\r\1\17\1\f\1\20\1\20\1\r\1\20\1\20\1\20\1\r\1\17\1\22\1\f\1\t\1\22\1\22\2\4\1\3\1\f\1\f\1\f\1\f\1\20\1\r\1\5\1\6\1\f\1\f\1\r\2\3\1\20\1\r\1\4\2\6\1\f\1\6\1\n\2\6\1!\1c\1\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s$\0\0\0t\0\0|\0\0\203\1\0}\1\0|\1\0d\2\0k\10\0r\34\0|\1\0S|\1\0d\1\0 S(\3\0\0\0s&\0\0\0Convert a time string to a time tuple.i\t\0\0\0N(\2\0\0\0R\5\0\0\0R\f\0\0\0(\2\0\0\0RI\0\0\0t\1\0\0\0t(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\4\0\0\0\254\3\0\0s\10\0\0\0\0\2\f\1\f\1\4\1c\1\0\0\0\2\0\0\0\3\0\0\0C\0\0\0sS\0\0\0|\0\0d\1\0\31d\5\0k\10\0r%\0t\1\0j\2\0|\0\0d\2\0 d\6\0\27\203\1\0St\1\0j\2\0|\0\0d\2\0 d\7\0\27\203\1\0}\1\0|\1\0|\0\0d\1\0\31\30t\1\0j\3\0\30Sd\5\0S(\10\0\0\0sC\0\0\0Turn a 10-tuple as returned by parsedate_tz() into a UTC timestamp.i\t\0\0\0i\10\0\0\0i\377\377\377\377i\0\0\0\0N(\1\0\0\0i\377\377\377\377(\1\0\0\0i\0\0\0\0(\4\0\0\0R\f\0\0\0t\4\0\0\0timet\6\0\0\0mktimet\10\0\0\0timezone(\2\0\0\0RI\0\0\0R\345\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyR\6\0\0\0\264\3\0\0s\10\0\0\0\0\2\20\2\25\2\27\1c\1\0\0\0\1\0\0\0\17\0\0\0C\0\0\0so\0\0\0|\0\0d\34\0k\10\0r\33\0t\1\0j\1\0\203\0\0}\0\0n\0\0t\1\0j\2\0|\0\0\203\1\0}\0\0d\1\0d\35\0|\0\0d\t\0\31\31|\0\0d\n\0\31d\36\0|\0\0d\27\0\31d\27\0\30\31|\0\0d\30\0\31|\0\0d\31\0\31|\0\0d\32\0\31|\0\0d\33\0\31f\7\0\26S(\37\0\0\0s\\\1\0\0Returns time format preferred for Internet standards.\n\n    Sun, 06 Nov 1994 08:49:37 GMT  ; RFC 822, updated by RFC 1123\n\n    According to RFC 1123, day and month names must always be in\n    English.  If not for that, this code could use strftime().  It\n    can't because strftime() honors the locale and could generated\n    non-English names.\n    s#\0\0\0%s, %02d %s %04d %02d:%02d:%02d GMTt\3\0\0\0Mont\3\0\0\0Tuet\3\0\0\0Wedt\3\0\0\0Thut\3\0\0\0Frit\3\0\0\0Satt\3\0\0\0Suni\6\0\0\0i\2\0\0\0t\3\0\0\0Jant\3\0\0\0Febt\3\0\0\0Mart\3\0\0\0Aprt\3\0\0\0Mayt\3\0\0\0Junt\3\0\0\0Jult\3\0\0\0Augt\3\0\0\0Sept\3\0\0\0Octt\3\0\0\0Novt\3\0\0\0Deci\1\0\0\0i\0\0\0\0i\3\0\0\0i\4\0\0\0i\5\0\0\0N(\7\0\0\0s\3\0\0\0Mons\3\0\0\0Tues\3\0\0\0Weds\3\0\0\0Thus\3\0\0\0Fris\3\0\0\0Sats\3\0\0\0Sun(\f\0\0\0s\3\0\0\0Jans\3\0\0\0Febs\3\0\0\0Mars\3\0\0\0Aprs\3\0\0\0Mays\3\0\0\0Juns\3\0\0\0Juls\3\0\0\0Augs\3\0\0\0Seps\3\0\0\0Octs\3\0\0\0Novs\3\0\0\0Dec(\3\0\0\0R\f\0\0\0R\346\0\0\0t\6\0\0\0gmtime(\1\0\0\0t\7\0\0\0timeval(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\n\0\0\0formatdate\275\3\0\0s\22\0\0\0\0\n\f\1\17\1\17\1\3\1\v\1\7\1\0\1\17\1t\10\0\0\0__main__t\4\0\0\0HOMEs\f\0\0\0Mail/inbox/1i\1\0\0\0t\1\0\0\0rs\5\0\0\0From:t\4\0\0\0froms\3\0\0\0To:t\2\0\0\0tos\10\0\0\0Subject:t\7\0\0\0subjects\5\0\0\0Date:t\4\0\0\0dates\v\0\0\0ParsedDate:i<\0\0\0s\t\0\0\0%+03d%02ds\5\0\0\0.%02ds\6\0\0\0Lines:R\317\0\0\0iF\0\0\0s\5\0\0\0len =t\4\0\0\0Dates\6\0\0\0Date =s\n\0\0\0X-Nonsenses\6\0\0\0keys =s\10\0\0\0values =s\7\0\0\0items =(5\0\0\0Ra\0\0\0R\346\0\0\0t\10\0\0\0warningsR\0\0\0\0t\7\0\0\0__all__R-\0\0\0R\2\0\0\0Rg\0\0\0Rh\0\0\0Rj\0\0\0Rk\0\0\0R\3\0\0\0R\231\0\0\0R\324\0\0\0R\322\0\0\0R\331\0\0\0R\5\0\0\0R\4\0\0\0R\6\0\0\0R\f\0\0\0R\376\0\0\0R_\0\0\0t\3\0\0\0syst\2\0\0\0ost\4\0\0\0pathR5\0\0\0t\7\0\0\0environt\4\0\0\0filet\4\0\0\0argvt\4\0\0\0opent\1\0\0\0ft\1\0\0\0mRA\0\0\0R?\0\0\0R9\0\0\0RK\0\0\0R\5\1\0\0R\337\0\0\0t\t\0\0\0localtimet\7\0\0\0asctimet\6\0\0\0hhmmsst\6\0\0\0divmodt\4\0\0\0hhmmt\2\0\0\0sst\2\0\0\0hhR\334\0\0\0R\23\0\0\0R1\0\0\0R\33\0\0\0R\"\0\0\0R[\0\0\0R\\\0\0\0R]\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/rfc822.pyt\10\0\0\0<module>G\0\0\0s\210\0\0\0\6\3\f\2\20\1\t\1\7\2\25\2\f\3\23\377\0\211\t\n\t\5\t\t\23\377\0\23\0262\t\t\25\1\17\1\25\1\25\1\33\10\37\1\16\1\16\1\16\1\16\1\21\4\tU\t\10\t\t\f\31\f\1\30\1\34\1\r\0\20\1\17\1\f\1\22\1\22\1\22\1\22\1\17\1\n\1\25\1\6\1\21\1\6\1\25\1\25\1\16\1\6\0\v\1\4\2\t\1\n\1\6\1\17\1\16\1\t\1\t\1\17\1\f\0\20\1\f\0\3\1\17\1\17\1", 4096) = 3079
27308 read(6, "", 4096)                 = 0
27308 brk(0x8515000)                    = 0x8515000
27308 close(6)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 time(NULL)                        = 1493242230
27308 open("/etc/localtime", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 open("/etc/localtime", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 close(5)                          = 0
27308 close(4)                          = 0
27308 stat64("ssl", 0xbfffdcdc)         = -1 ENOENT (No such file or directory)
27308 open("ssl.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("ssl.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("sslmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("ssl.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("ssl.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/ssl", 0xbfffdcdc) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/ssl.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/ssl.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/sslmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/ssl.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661587, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=72, st_size=36583, st_atime=2017/02/23-18:09:09, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/ssl.pyc", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=707534, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=64, st_size=31482, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(5, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\n\0\0\0@\0\0\0s\32\4\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0d\1\0d\2\0l\3\0Z\3\0d\1\0d\2\0l\4\0Z\4\0d\1\0d\3\0l\5\0m\6\0Z\6\0\1d\1\0d\4\0l\7\0m\10\0Z\10\0\1d\1\0d\2\0l\t\0Z\t\0d\1\0d\5\0l\t\0m\n\0Z\n\0m\v\0Z\v\0m\f\0Z\f\0\1d\1\0d\6\0l\t\0m\r\0Z\r\0\1d\1\0d\7\0l\t\0m\16\0Z\16\0m\17\0Z\17\0m\20\0Z\20\0m\21\0Z\21\0m\22\0Z\22\0m\23\0Z\23\0\1d\1\0d\10\0l\t\0m\24\0Z\24\0m\25\0Z\25\0m\26\0Z\26\0\1d\1\0d\t\0l\t\0m\27\0Z\30\0m\31\0Z\32\0\1d\1\0d\n\0l\t\0m\33\0Z\33\0m\34\0Z\34\0\1y\24\0d\1\0d\v\0l\t\0m\35\0Z\35\0\1Wn\21\0\4e\36\0k\n\0r+\1\1\1\1n\1\0Xd\f\0\204\0\0Z\37\0e\37\0d\r\0\203\1\0\1e\37\0d\16\0\203\1\0\1e\37\0d\17\0\203\1\0\1e\37\0d\20\0\203\1\0\1e\37\0d\21\0\203\1\0\1d\1\0d\22\0l\t\0m \0Z \0m!\0Z!\0m\"\0Z\"\0m#\0Z#\0\1d\1\0d\23\0l\t\0m$\0Z$\0\1d\24\0\204\0\0e%\0\203\0\0j&\0\203\0\0D\203\1\0Z'\0y\n\0e(\0Z)\0Wn\27\0\4e*\0k\n\0r\325\1\1\1\1e+\0Z)\0n\1\0Xd\1\0d\25\0l,\0m,\0Z,\0m-\0Z-\0m.\0Z.\0m/\0Z0\0\1e\3\0j1\0d\26\0k\2\0r \2d\1\0d\27\0l\t\0m2\0Z2\0m3\0Z3\0\1n\0\0d\1\0d\30\0l,\0m,\0Z,\0m4\0Z4\0m5\0Z5\0m6\0Z6\0\1d\1\0d\31\0l,\0m7\0Z7\0m8\0Z8\0\1d\1\0d\2\0l9\0Z9\0d\1\0d\2\0l:\0Z:\0e\t\0j;\0r\205\2d\32\0g\1\0Z<\0n\6\0g\0\0Z<\0d\33\0Z=\0d\34\0Z>\0d\35\0e?\0f\1\0d\36\0\204\0\0\203\0\0YZ@\0d\37\0d \0\204\1\0ZA\0d!\0\204\0\0ZB\0e\6\0d\"\0d#\0\203\2\0ZC\0d$\0\204\0\0ZD\0d%\0e\6\0d%\0d&\0\203\2\0f\1\0d'\0\204\0\0\203\0\0YZE\0d(\0eE\0f\1\0d)\0\204\0\0\203\0\0YZF\0eF\0d*\0\203\1\0eF\0_G\0eF\0d+\0\203\1\0eF\0_H\0d,\0e\r\0f\1\0d-\0\204\0\0\203\0\0YZI\0eF\0jG\0e+\0e+\0e+\0d.\0\204\4\0ZJ\0eK\0e+\0eL\0eF\0jG\0e+\0e+\0e+\0e+\0e+\0d/\0\204\t\0ZM\0eJ\0ZN\0eM\0ZO\0d0\0e,\0f\1\0d1\0\204\0\0\203\0\0YZP\0e+\0e+\0eL\0e\24\0eK\0e+\0eQ\0eQ\0e+\0d2\0\204\t\0ZR\0d3\0\204\0\0ZS\0d4\0ZT\0d5\0ZU\0d6\0\204\0\0ZV\0d7\0\204\0\0ZW\0eK\0e+\0d8\0\204\2\0ZX\0d9\0\204\0\0ZY\0e+\0e+\0d:\0\204\2\0ZZ\0d\2\0S(;\0\0\0s\266\n\0\0This module provides some more Pythonic support for SSL.\n\nObject types:\n\n  SSLSocket -- subtype of socket.socket which does SSL over the socket\n\nExceptions:\n\n  SSLError -- exception raised for I/O errors\n\nFunctions:\n\n  cert_time_to_seconds -- convert time string used for certificate\n                          notBefore and notAfter functions to integer\n                          seconds past the Epoch (the time values\n                          returned from time.time())\n\n  fetch_server_certificate (HOST, PORT) -- fetch the certificate provided\n                          by the server running on HOST at port PORT.  No\n                          validation of the certificate is performed.\n\nInteger constants:\n\nSSL_ERROR_ZERO_RETURN\nSSL_ERROR_WANT_READ\nSSL_ERROR_WANT_WRITE\nSSL_ERROR_WANT_X509_LOOKUP\nSSL_ERROR_SYSCALL\nSSL_ERROR_SSL\nSSL_ERROR_WANT_CONNECT\n\nSSL_ERROR_EOF\nSSL_ERROR_INVALID_ERROR_CODE\n\nThe following group define certificate requirements that one side is\nallowing/requiring from the other side:\n\nCERT_NONE - no certificates from the other side are required (or will\n            be looked at if provided)\nCERT_OPTIONAL - certificates are not required, but if provided will be\n                validated, and if validation fails, the connection will\n                also fail\nCERT_REQUIRED - certificates are required, and will be validated, and\n                if validation fails, the connection will also fail\n\nThe following constants identify various SSL protocol variants:\n\nPROTOCOL_SSLv2\nPROTOCOL_SSLv3\nPROTOCOL_SSLv23\nPROTOCOL_TLSv1\nPROTOCOL_TLSv1_1\nPROTOCOL_TLSv1_2\n\nThe following constants identify various SSL alert message descriptions as per\nhttp://www.iana.org/assignments/tls-parameters/tls-parameters.xml#tls-parameters-6\n\nALERT_DESCRIPTION_CLOSE_NOTIFY\nALERT_DESCRIPTION_UNEXPECTED_MESSAGE\nALERT_DESCRIPTION_BAD_RECORD_MAC\nALERT_DESCRIPTION_RECORD_OVERFLOW\nALERT_DESCRIPTION_DECOMPRESSION_FAILURE\nALERT_DESCRIPTION_HANDSHAKE_FAILURE\nALERT_DESCRIPTION_BAD_CERTIFICATE\nALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE\nALERT_DESCRIPTION_CERTIFICATE_REVOKED\nALERT_DESCRIPTION_CERTIFICATE_EXPIRED\nALERT_DESCRIPTION_CERTIFICATE_UNKNOWN\nALERT_DESCRIPTION_ILLEGAL_PARAMETER\nALERT_DESCRIPTION_UNKNOWN_CA\nALERT_DESCRIPTION_ACCESS_DENIED\nALERT_DESCRIPTION_DECODE_ERROR\nALERT_DESCRIPTION_DECRYPT_ERROR\nALERT_DESCRIPTION_PROTOCOL_VERSION\nALERT_DESCRIPTION_INSUFFICIENT_SECURITY\nALERT_DESCRIPTION_INTERNAL_ERROR\nALERT_DESCRIPTION_USER_CANCELLED\nALERT_DESCRIPTION_NO_RENEGOTIATION\nALERT_DESCRIPTION_UNSUPPORTED_EXTENSION\nALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE\nALERT_DESCRIPTION_UNRECOGNIZED_NAME\nALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE\nALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE\nALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY\ni\377\377\377\377N(\1\0\0\0t\n\0\0\0namedtuple(\1\0\0\0t\7\0\0\0closing(\3\0\0\0t\26\0\0\0OPENSSL_VERSION_NUMBERt\24\0\0\0OPENSSL_VERSION_INFOt\17\0\0\0OPENSSL_VERSION(\1\0\0\0t\v\0\0\0_SSLContext(\6\0\0\0t\10\0\0\0SSLErrort\22\0\0\0SSLZeroReturnErrort\20\0\0\0SSLWantReadErrort\21\0\0\0SSLWantWriteErrort\17\0\0\0SSLSyscallErrort\v\0\0\0SSLEOFError(\3\0", 4096) = 4096
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=707534, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=64, st_size=31482, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 read(5, "\0\0t\t\0\0\0CERT_NONEt\r\0\0\0CERT_OPTIONALt\r\0\0\0CERT_REQUIRED(\2\0\0\0t\7\0\0\0txt2objt\7\0\0\0nid2obj(\2\0\0\0t\v\0\0\0RAND_statust\10\0\0\0RAND_add(\1\0\0\0t\10\0\0\0RAND_egdc\1\0\0\0\2\0\0\0\4\0\0\0C\0\0\0sC\0\0\0x<\0t\0\0t\1\0\203\1\0D].\0}\1\0|\1\0j\2\0|\0\0\203\1\0r\r\0t\3\0t\1\0|\1\0\203\2\0t\4\0\203\0\0|\1\0<q\r\0q\r\0Wd\0\0S(\1\0\0\0N(\5\0\0\0t\3\0\0\0dirt\4\0\0\0_sslt\n\0\0\0startswitht\7\0\0\0getattrt\7\0\0\0globals(\2\0\0\0t\6\0\0\0prefixt\1\0\0\0n(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\17\0\0\0_import_symbolsr\0\0\0s\6\0\0\0\0\1\23\1\17\1t\3\0\0\0OP_t\22\0\0\0ALERT_DESCRIPTION_t\n\0\0\0SSL_ERROR_t\t\0\0\0PROTOCOL_t\7\0\0\0VERIFY_(\4\0\0\0t\7\0\0\0HAS_SNIt\10\0\0\0HAS_ECDHt\7\0\0\0HAS_NPNt\10\0\0\0HAS_ALPN(\1\0\0\0t\24\0\0\0_OPENSSL_API_VERSIONc\1\0\0\0\3\0\0\0\4\0\0\0C\0\0\0s.\0\0\0i\0\0|\0\0]$\0\\\2\0}\1\0}\2\0|\1\0j\0\0d\0\0\203\1\0r\6\0|\1\0|\2\0\223\2\0q\6\0S(\1\0\0\0R\37\0\0\0(\1\0\0\0R\26\0\0\0(\3\0\0\0t\2\0\0\0.0t\4\0\0\0namet\5\0\0\0value(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pys\n\0\0\0<dictcomp>\201\0\0\0s\2\0\0\0\t\0(\4\0\0\0t\6\0\0\0sockett\v\0\0\0_fileobjectt\21\0\0\0_delegate_methodst\5\0\0\0errort\5\0\0\0win32(\2\0\0\0t\21\0\0\0enum_certificatest\t\0\0\0enum_crls(\4\0\0\0R)\0\0\0t\7\0\0\0AF_INETt\v\0\0\0SOCK_STREAMt\21\0\0\0create_connection(\2\0\0\0t\n\0\0\0SOL_SOCKETt\7\0\0\0SO_TYPEs\n\0\0\0tls-uniques\232\0\0\0ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+HIGH:DH+HIGH:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+HIGH:RSA+3DES:!aNULL:!eNULL:!MD5s\244\0\0\0ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+HIGH:DH+HIGH:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+HIGH:RSA+3DES:!aNULL:!eNULL:!MD5:!DSS:!RC4t\20\0\0\0CertificateErrorc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__(\0\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR5\0\0\0\267\0\0\0s\2\0\0\0\6\1i\1\0\0\0c\3\0\0\0\n\0\0\0\4\0\0\0C\0\0\0sR\1\0\0g\0\0}\3\0|\0\0s\20\0t\0\0S|\0\0j\1\0d\1\0\203\1\0}\4\0|\4\0d\2\0\31}\5\0|\4\0d\3\0\37}\6\0|\5\0j\2\0d\4\0\203\1\0}\7\0|\7\0|\2\0k\4\0rg\0t\3\0d\5\0t\4\0|\0\0\203\1\0\27\203\1\0\202\1\0n\0\0|\7\0s\203\0|\0\0j\5\0\203\0\0|\1\0j\5\0\203\0\0k\2\0S|\5\0d\4\0k\2\0r\237\0|\3\0j\6\0d\6\0\203\1\0\1nY\0|\5\0j\7\0d\7\0\203\1\0s\275\0|\1\0j\7\0d\7\0\203\1\0r\326\0|\3\0j\6\0t\10\0j\t\0|\5\0\203\1\0\203\1\0\1n\"\0|\3\0j\6\0t\10\0j\t\0|\5\0\203\1\0j\n\0d\10\0d\t\0\203\2\0\203\1\0\1x$\0|\6\0D]\34\0}\10\0|\3\0j\6\0t\10\0j\t\0|\10\0\203\1\0\203\1\0\1q\377\0Wt\10\0j\v\0d\n\0d\v\0j\f\0|\3\0\203\1\0\27d\f\0\27t\10\0j\r\0\203\2\0}\t\0|\t\0j\16\0|\1\0\203\1\0S(\r\0\0\0sh\0\0\0Matching according to RFC 6125, section 6.4.3\n\n    http://tools.ietf.org/html/rfc6125#section-6.4.3\n    t\1\0\0\0.i\0\0\0\0i\1\0\0\0t\1\0\0\0*s,\0\0\0too many wildcards in certificate DNS name: s\5\0\0\0[^.]+s\4\0\0\0xn--s\2\0\0\0\\*s\5\0\0\0[^.]*s\2\0\0\0\\As\2\0\0\0\\.s\2\0\0\0\\Z(\17\0\0\0t\5\0\0\0Falset\5\0\0\0splitt\5\0\0\0countR5\0\0\0t\4\0\0\0reprt\5\0\0\0lowert\6\0\0\0appendR\26\0\0\0t\2\0\0\0ret\6\0\0\0escapet\7\0\0\0replacet\7\0\0\0compilet\4\0\0\0joint\n\0\0\0IGNORECASEt\5\0\0\0match(\n\0\0\0t\2\0\0\0dnt\10\0\0\0hostnamet\r\0\0\0max_wildcardst\4\0\0\0patst\6\0\0\0piecest\10\0\0\0leftmostt\t\0\0\0remaindert\t\0\0\0wildcardst\4\0\0\0fragt\3\0\0\0pat(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\16\0\0\0_dnsname_match\273\0\0\0s*\0\0\0\0\5\6\1\6\1\4\2\17\1\n\1\n\2\17\1\f\5\3\1\26\3\6\1\26\5\f\3\20\1\36\5\31\3\"\3\r\1\32\2&\1c\2\0\0\0\7\0\0\0\7\0\0\0C\0\0\0s[\1\0\0|\0\0s\25\0t\0\0d\1\0\203\1\0\202\1\0n\0\0g\0\0}\2\0|\0\0j\1\0d\2\0d\r\0\203\2\0}\3\0xC\0|\3\0D];\0\\\2\0}\4\0}\5\0|\4\0d\3\0k\2\0r4\0t\2\0|\5\0|\1\0\203\2\0r_\0d\4\0S|\2\0j\3\0|\5\0\203\1\0\1q4\0q4\0W|\2\0s\337\0xc\0|\0\0j\1\0d\5\0d\16\0\203\2\0D]L\0}\6\0xC\0|\6\0D];\0\\\2\0}\4\0}\5\0|\4\0d\6\0k\2\0r\231\0t\2\0|\5\0|\1\0\203\2\0r\304\0d\4\0S|\2\0j\3\0|\5\0\203\1\0\1q\231\0q\231\0Wq\214\0Wn\0\0t\4\0|\2\0\203\1\0d\7\0k\4\0r\34\1t\5\0d\10\0|\1\0d\t\0j\6\0t\7\0t\10\0|\2\0\203\2\0\203\1\0f\2\0\26\203\1\0\202\1\0n;\0t\4\0|\2\0\203\1\0d\7\0k\2\0rK\1t\5\0d\n\0|\1\0|\2\0d\v\0\31f\2\0\26\203\1\0\202\1\0n\f\0t\5\0d\f\0\203\1\0\202\1\0d\4\0S(\17\0\0\0s)\1\0\0Verify that *cert* (in decoded format as returned by\n    SSLSocket.getpeercert()) matches the *hostname*.  RFC 2818 and RFC 6125\n    rules are followed, but IP addresses are not accepted for *hostname*.\n\n    CertificateError is raised on failure. On success, the function\n    returns nothing.\n    st\0\0\0empty or no certificate, match_hostname needs a SSL socket or SSL context with either CERT_OPTIONAL or CERT_REQUIREDt\16\0\0\0subjectAltNamet\3\0\0\0DNSNt\7\0\0\0subjectt\n\0\0\0commonNamei\1\0\0\0s&\0\0\0hostname %r doesn't match either of %ss\2\0\0\0, s\34\0\0\0hostname %r doesn't match %ri\0\0\0\0s=\0\0\0no appropriate commonName or subjectAltName fields were found(\0\0\0\0(\0\0\0\0(\t\0\0\0t\n\0\0\0ValueErrort\3\0\0\0getRQ\0\0\0R?\0\0\0t\3\0\0\0lenR5\0\0\0RD\0\0\0t\3\0\0\0mapR=\0\0\0(\7\0\0\0t\4\0\0\0certRH\0\0\0t\10\0\0\0dnsnamest\3\0\0\0sant\3\0\0\0keyR(\0\0\0t\3\0\0\0sub(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\16\0\0\0match_hostname\356\0\0\0s.\0\0\0\0\10\6\1\17\3\6\1\22\1\23\1\f\1\17\1\4\1\24\1\6\3\31\1\23\3\f\1\17\1\4\1\33\1\22\1\6\2%\1\22\1\6\2\27\2t\22\0\0\0DefaultVerifyPathssQ\0\0\0cafile capath openssl_cafile_env openssl_cafile openssl_capath_env openssl_capathc\0\0\0\0\3\0\0\0\4\0\0\0C\0\0\0s\206\0\0\0t\0\0j\1\0\203\0\0}\0\0t\2\0j\3\0j\4\0|\0\0d\1\0\31|\0\0d\2\0\31\203\2\0}\1\0t\2\0j\3\0j\4\0|\0\0d\3\0\31|\0\0d\4\0\31\203\2\0}\2\0t\5\0t\2\0j\6\0j\7\0|\1\0\203\1\0ra\0|\1\0n\3\0d\5\0t\2\0j\6\0j\t\0|\2\0\203\1\0r|\0|\2\0n\3\0d\5\0|\0\0\214\2\0S(\6\0\0\0s/\0\0\0Return paths to default cafile and capath.\n    i\0\0\0\0i\1\0\0\0i\2\0\0\0i\3\0\0\0N(\n\0\0\0R\25\0\0\0t\30\0\0\0get_default_verify_pathst\2\0\0\0ost\7\0\0\0environRW\0\0\0R`\0\0\0t\4\0\0\0patht\6\0\0\0isfilet\4\0\0\0Nonet\5\0\0\0isdir(\3\0\0\0t\5\0\0\0partst\6\0\0\0cafilet\6\0\0\0capath(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyRa\0\0\0\35\1\0\0s\f\0\0\0\0\3\f\3\35\1\35\2\36\1\33\1t\v\0\0\0_ASN1Objects\32\0\0\0nid shortname longname oidc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s;\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\4\0Z\3\0d\1\0\204\0\0Z\4\0e\5\0d\2\0\204\0\0\203\1\0Z\6\0e\5\0d\3\0\204\0\0\203\1\0Z\7\0RS(\5\0\0\0s#\0\0\0ASN.1 object identifier lookup\n    c\2\0\0\0\2\0\0\0\6\0\0\0C\0\0\0s%\0\0\0t\0\0t\1\0|\0\0\203\2\0j\2\0|\0\0t\3\0|\1\0d\1\0t\4\0\203\1\1\214\1\0S(\2\0\0\0NR'\0\0\0(\5\0\0\0t\5\0\0\0superRk\0\0\0t\7\0\0\0__new__t\10\0\0\0_txt2objR:\0\0\0(\2\0\0\0t\3\0\0\0clst\3\0\0\0oid(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyRm\0\0\0000\1\0\0s\2\0\0\0\0\1c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s\37\0\0\0t\0\0t\1\0|\0\0\203\2\0j\2\0|\0\0t\3\0|\1\0\203\1\0\214\1\0S(\1\0\0\0s3\0\0\0Create _ASN1Object from OpenSSL numeric ID\n        (\4\0\0\0Rl\0\0\0Rk\0\0\0Rm\0\0\0t\10\0\0\0_nid2obj(\2\0\0\0Ro\0\0\0t\3\0\0\0nid(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\7\0\0\0fromnid3\1\0\0s\2\0\0\0\0\4c\2\0\0\0\2\0\0\0\6\0\0\0C\0\0\0s%\0\0\0t\0\0t\1\0|\0\0\203\2\0j\2\0|\0\0t\3\0|\1\0d\1\0t\4\0\203\1\1\214\1\0S(\2\0\0\0s=\0\0\0Create _ASN1Object from short name, long name or OID\n        R'\0\0\0(\5\0\0\0Rl\0\0\0Rk\0\0\0Rm\0\0\0Rn\0\0\0t\4\0\0\0True(\2\0\0\0Ro\0\0\0R'\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\10\0\0\0fromname9\1\0\0s\2\0\0\0\0\4(\0\0\0\0(\10\0\0\0R6\0\0\0R7\0\0\0t\7\0\0\0__doc__t\t\0\0\0__slots__Rm\0\0\0t\v\0\0\0classmethodRs\0\0\0Ru\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyRk\0\0\0+\1\0\0s\n\0\0\0\6\2\6\1\6\2\t\3\17\6t\7\0\0\0Purposec\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\16\0\0\0e\0\0Z\1\0d\0\0Z\2\0RS(\1\0\0\0sD\0\0\0SSLContext purpose flags with X509v3 Extended Key Usage objects\n    (\3\0\0\0R6\0\0\0R7\0\0\0Rv\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyRy\0\0\0@\1\0\0s\2\0\0\0\6\2s\21\0\0\0001.3.6.1.5.5.7.3.1s\21\0\0\0001.3.6.1.5.5.7.3.2t\n\0\0\0SSLContextc\0\0\0\0\0\0\0\0\5\0\0\0B\0\0\0sk\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\f\0Z\3\0d\r\0Z\4\0d\5\0\204\0\0Z\5\0d\6\0\204\0\0Z\6\0e\7\0e\10\0e\10\0d\16\0d\7\0\204\4\0Z\n\0d\10\0\204\0\0Z\v\0d\t\0\204\0\0Z\f\0d\n\0\204\0\0Z\r\0e\16\0j\17\0d\v\0\204\1\0Z\20\0RS(\17\0\0\0s|\0\0\0An SSLContext holds various SSL-related configuration options and\n    data, such as certificates and possibly a private key.t\10\0\0\0protocolt\v\0\0\0__weakref__t\2\0\0\0CAt\4\0\0\0ROOTc\2\0\0\0\5\0\0\0\3\0\0\0O\0\0\0s2\0\0\0t\0\0j\1\0|\0\0|\1\0\203\2\0}\4\0|\1\0t\2\0k\3\0r.\0|\4\0j\3\0t\4\0\203\1\0\1n\0\0|\4\0S(\1\0\0\0N(\5\0\0\0R\5\0\0\0Rm\0\0\0t\20\0\0\0_SSLv2_IF_EXISTSt\v\0\0\0set_cipherst\20\0\0\0_DEFAULT_CIPHERS(\5\0\0\0Ro\0\0\0R{\0\0\0t\4\0\0\0argst\6\0\0\0kwargst\4\0\0\0self(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyRm\0\0\0O\1\0\0s\10\0\0\0\0\1\22\1\f\1\20\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\1\0|\0\0_\0\0d\0\0S(\1\0\0\0N(\1\0\0\0R{\0\0\0(\2\0\0\0R\204\0\0\0R{\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\10\0\0\0__init__U\1\0\0s\2\0\0\0\0\1c\6\0\0\0\6\0\0\0\r\0\0\0C\0\0\0s+\0\0\0t\0\0d\1\0|\1\0d\2\0|\2\0d\3\0|\3\0d\4\0|\4\0d\5\0|\5\0d\6\0|\0\0\203\0\6S(\7\0\0\0Nt\4\0\0\0sockt\v\0\0\0server_sidet\27\0\0\0do_handshake_on_connectt\24\0\0\0suppress_ragged_eofst\17\0\0\0server_hostnamet\10\0\0\0_context(\1\0\0\0t\t\0\0\0SSLSocket(\6\0\0\0R\204\0\0\0R\206\0\0\0R\207\0\0\0R\210\0\0\0R\211\0\0\0R\212\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\v\0\0\0wrap_socketX\1\0\0s\n\0\0\0\0\4\22\1\6\1\6\1\6\1c\2\0\0\0\5\0\0\0\4\0\0\0C\0\0\0s\215\0\0\0t\0\0\203\0\0}\2\0xp\0|\1\0D]h\0}\3\0|\3\0j\1\0d\1\0\203\1\0}\4\0t\2\0|\4\0\203\1\0d\2\0k\2\0sI\0t\2\0|\4\0\203\1\0d\3\0k\4\0rX\0t\3\0d\4\0\203\1\0\202\1\0n\0\0|\2\0j\4\0t\2\0|\4\0\203\1\0\203\1\0\1|\2\0j\5\0|\4\0\203\1\0\1q\20\0W|\0\0j\6\0|\2\0\203\1\0\1d\0\0S(\5\0\0\0Nt\5\0\0\0asciii\0\0\0\0i\377\0\0\0s(\0\0\0NPN protocols must be 1 to 255 in length(\7\0\0\0t\t\0\0\0bytearrayt\6\0\0\0encodeRX\0\0\0R\6\0\0\0R?\0\0\0t\6\0\0\0extendt\22\0\0\0_set_npn_protocols(\5\0\0\0R\204\0\0\0t\r\0\0\0npn_protocolst\6\0\0\0protosR{\0\0\0t\1\0\0\0b(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\21\0\0\0set_npn_protocolsb\1\0\0s\20\0\0\0\0\1\t\1\r\1\17\1$\1\17\1\23\1\21\2c\2\0\0\0\5\0\0\0\4\0\0\0C\0\0\0s\215\0\0\0t\0\0\203\0\0}\2\0xp\0|\1\0D]h\0}\3\0|\3\0j\1\0d\1\0\203\1\0}\4\0t\2\0|\4\0\203\1\0d\2\0k\2\0sI\0t\2\0|\4\0\203\1\0d\3\0k\4\0rX\0t\3\0d\4\0\203\1\0\202\1\0n\0\0|\2\0j\4\0t\2\0|\4\0\203\1\0\203\1\0\1|\2\0j\5\0|\4\0\203\1\0\1q\20\0W|\0\0j\6\0|\2\0\203\1\0\1d\0\0S(\5\0\0\0NR\216\0\0\0i\0\0\0\0i\377\0\0\0s)\0\0\0ALPN protocols must be 1 to 255 in length(\7\0\0\0R\217\0\0\0R\220\0\0\0RX\0\0\0R\6\0\0\0R?\0\0\0R\221\0\0\0t\23\0\0\0_set_alpn_protocols(\5\0\0\0R\204\0\0\0t\16\0\0\0alpn_protocolsR\224\0\0\0R{\0\0\0R\225\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\22\0\0\0set_alpn_protocolsm\1\0\0s\20\0\0\0\0\1\t\1\r\1\17\1$\1\17\1\23\1\21\2c\3\0\0\0\7\0\0\0\4\0\0\0C\0\0\0sw\0\0\0t\0\0\203\0\0}\3\0xW\0t\1\0|\1\0\203\1\0D]I\0\\\3\0}\4\0}\5\0}\6\0|\5\0d\1\0k\2\0r\26\0|\6\0t\2\0k\10\0sL\0|\2\0j\3\0|\6\0k\6\0r_\0|\3\0j\4\0|\4\0\203\1\0\1q_\0q\26\0q\26\0W|\0\0j\5\0d\2\0|\3\0\203\0\1\1|\3\0S(\3\0\0\0Nt\10\0\0\0x509_asnt\6\0\0\0cadata(\6\0\0\0R\217\0\0\0R.\0\0\0Rt\0\0\0Rp\0\0\0R\221\0\0\0t\25\0\0\0load_verify_locations(\7\0\0\0R\204\0\0\0t\t\0\0\0storenamet\7\0\0\0purposet\5\0\0\0certsRZ\0\0\0t\10\0\0\0encodingt\5\0\0\0trust(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\31\0\0\0_load_windows_store_certsx\1\0\0s\16\0\0\0\0\1\t\1\34\2\f\1\33\1\27\1\20\1c\2\0\0\0\3\0\0\0\4\0\0\0C\0\0\0sb\0\0\0t\0\0|\1\0t\1\0\203\2\0s\36\0t\2\0|\1\0\203\1\0\202\1\0n\0\0t\3\0j\4\0d\1\0k\2\0rT\0x$\0|\0\0j\5\0D]\26\0}\2\0|\0\0j\6\0|\2\0|\1\0\203\2\0\1q7\0Wn\0\0|\0\0j\7\0\203\0\0\1d\0\0S(\2\0\0\0NR-\0\0\0(\10\0\0\0t\n\0\0\0isinstanceRk\0\0\0t\t\0\0\0TypeErrort\3\0\0\0syst\10\0\0\0platformt\24\0\0\0_windows_cert_storesR\242\0\0\0t\30\0\0\0set_default_verify_paths(\3\0\0\0R\204\0\0\0R\236\0\0\0R\235\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\22\0\0\0load_default_certs\202\1\0\0s\f\0\0\0\0\1\17\1\17\1\17\1\20\1\27\1(\2\0\0\0s\10\0\0\0protocols\v\0\0\0__weakref__(\2\0\0\0R}\0\0\0R~\0\0\0N(\21\0\0\0R6\0\0\0R7\0\0\0Rv\0\0\0Rw\0\0\0R\247\0\0\0Rm\0\0\0R\205\0\0\0R:\0\0\0Rt\0\0\0Rf\0\0\0R\215\0\0\0R\226\0\0\0R\231\0\0\0R\242\0\0\0Ry\0\0\0t\v\0\0\0SERVER_AUTHR\251\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyRz\0\0\0H\1\0\0s\32\0\0\0\6\2\6\2\6\1\6\2\t\6\t\3\3\1\3\1\3\1\f\7\t\v\t\v\t\nc\4\0\0\0\5\0\0\0\6\0\0\0C\0\0\0sB\1\0\0t\0\0|\0\0t\1\0\203\2\0s\36\0t\2\0|\0\0\203\1\0\202\1\0n\0\0t\3\0t\4\0\203\1\0}\4\0|\4\0\4j\5\0t\6\0O\2_\5\0|\4\0\4j\5\0t\7\0O\2_\5\0|\4\0\4j\5\0t\10\0t\t\0d\1\0d\2\0\203\3\0O\2_\5\0|\0\0t\n\0j\v\0k\2\0r\207\0t\f\0|\4\0_\r\0t\16\0|\4\0_\17\0np\0|\0\0t\n\0j\20\0k\2\0r\367\0|\4\0\4j\5\0t\10\0t\t\0d\3\0d\2\0\203\3\0O\2_\5\0|\4\0\4j\5\0t\10\0t\t\0d\4\0d\2\0\203\3\0O\2_\5\0|\4\0\4j\5\0t\10\0t\t\0d\5\0d\2\0\203\3\0O\2_\5\0|\4\0j\21\0t\22\0\203\1\0\1n\0\0|\1\0s\t\1|\2\0s\t\1|\3\0r\37\1|\4\0j\23\0|\1\0|\2\0|\3\0\203\3\0\1n\37\0|\4\0j\r\0t\24\0k\3\0r>\1|\4\0j\25\0|\0\0\203\1\0\1n\0\0|\4\0S(\6\0\0\0s\355\0\0\0Create a SSLContext object with default settings.\n\n    NOTE: The protocol and settings may change anytime without prior\n          deprecation. The values represent a fair balance between maximum\n          compatibility and security.\n    t\21\0\0\0OP_NO_COMPRESSIONi\0\0\0\0t\33\0\0\0OP_CIPHER_SERVER_PREFERENCEt\20\0\0\0OP_SINGLE_DH_USEt\22\0\0\0OP_SINGLE_ECDH_USE(\26\0\0\0R\243\0\0\0Rk\0\0\0R\244\0\0\0Rz\0\0\0t\17\0\0\0PROTOCOL_SSLv23t\7\0\0\0optionst\v\0\0\0OP_NO_SSLv2t\v\0\0\0OP_NO_SSLv3R\27\0\0\0R\25\0\0\0Ry\0\0\0R\252\0\0\0R\16\0\0\0t\v\0\0\0verify_modeRt\0\0\0t\16\0\0\0check_hostnamet\v\0\0\0CLIENT_AUTHR\200\0\0\0t\32\0\0\0_RESTRICTED_SERVER_CIPHERSR\234\0\0\0R\f\0\0\0R\251\0\0\0(\5\0\0\0R\236\0\0\0Ri\0\0\0Rj\0\0\0R\233\0\0\0t\7\0\0\0context(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\26\0\0\0create_default_context\213\1\0\0s&\0\0\0\0\10\17\1\17\2\f\3\17\4\17\3\33\2\17\2\t\1\f\1\17\3\33\3\33\1\33\3\20\2\22\1\26\1\17\4\20\1c\t\0\0\0\n\0\0\0\4\0\0\0C\0\0\0s\357\0\0\0t\0\0|\3\0t\1\0\203\2\0s\36\0t\2\0|\3\0\203\1\0\202\1\0n\0\0t\3\0|\0\0\203\1\0}\t\0|\t\0\4j\4\0t\5\0O\2_\4\0|\t\0\4j\4\0t\6\0O\2_\4\0|\1\0d\2\0k\t\0r`\0|\1\0|\t\0_\10\0n\0\0|\2\0|\t\0_\t\0|\5\0r\205\0|\4\0\fr\205\0t\n\0d\1\0\203\1\0\202\1\0n\0\0|\4\0s\221\0|\5\0r\244\0|\t\0j\v\0|\4\0|\5\0\203\2\0\1n\0\0|\6\0s\266\0|\7\0s\266\0|\10\0r\314\0|\t\0j\f\0|\6\0|\7\0|\10\0\203\3\0\1n\37\0|\t\0j\10\0t\r\0k\3\0r\353\0|\t\0j\16\0|\3\0\203\1\0\1n\0\0|\t\0S(\3\0\0\0s/\1\0\0Create a SSLContext object for Python stdlib modules\n\n    All Python stdlib modules shall use this function to create SSLContext\n    objects in order to keep common settings in one place. The configuration\n    is less restrict than create_default_context()'s to increase backward\n    compatibility.\n    s\32\0\0\0certfile must be specifiedN(\17\0\0\0R\243\0\0\0Rk\0\0\0R\244\0\0\0Rz\0\0\0R\260\0\0\0R\261\0\0\0R\262\0\0\0Rf\0\0\0R\263\0\0\0R\264\0\0\0RV\0\0\0t\17\0\0\0load_cert_chainR\234\0\0\0R\f\0\0\0R\251\0\0\0(\n\0\0\0R{\0\0\0t\t\0\0\0cert_reqsR\264\0\0\0R\236\0\0\0t\10\0\0\0certfilet\7\0\0\0keyfileRi\0\0\0Rj\0\0\0R\233\0\0\0R\267\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\32\0\0\0_create_unverified_context\273\1\0\0s\"\0\0\0\0\v\17\1\17\2\f\2\17\3\17\2\f\1\f\1\t\2\r\1\17\1\f\1\23\3\22\1\26\1\17\4\20\2R\214\0\0\0c\0\0\0\0\0\0\0\0\22\0\0\0B\0\0\0s\262\1\0\0e\0\0Z\1\0d\0\0Z\2\0d'\0d'\0d'\0e\4\0e\5\0e\6\0d'\0e\7\0e\10\0e\t\0d\1\0d'\0e\7\0d'\0d'\0d'\0d'\0d\2\0\204\21\0Z\n\0e\v\0d\3\0\204\0\0\203\1\0Z\f\0e\f\0j\r\0d\4\0\204\0\0\203\1\0Z\f\0d\5\0\204\0\0Z\16\0d'\0d\6\0\204\1\0Z\17\0d\7\0\204\0\0Z\20\0d\1\0d'\0d\10\0\204\2\0Z\21\0d\t\0\204\0\0Z\22\0e\4\0d\n\0\204\1\0Z\23\0d\v\0\204\0\0Z\24\0d\f\0\204\0\0Z\25\0d\r\0\204\0\0Z\26\0d\16\0\204\0\0Z\27\0d\1\0d\17\0\204\1\0Z\30\0d'\0d\20\0\204\1\0Z\31\0d\1\0d\21\0\204\1\0Z\32\0d\22\0d\1\0d\23\0\204\2\0Z\33\0d'\0d\1\0d\24\0\204\2\0Z\34\0d\22\0d\1\0d\25\0\204\2\0Z\35\0d'\0d\1\0d\26\0\204\2\0Z\36\0d\27\0\204\0\0Z\37\0d\30\0\204\0\0Z \0d\31\0\204\0\0Z!\0d\32\0\204\0\0Z\"\0d\33\0\204\0\0Z#\0e\4\0d\34\0\204\1\0Z$\0d\35\0\204\0\0Z%\0d\36\0\204\0\0Z&\0d\37\0\204\0\0Z'\0d \0\204\0\0Z(\0d!\0d\"\0d#\0\204\2\0Z)\0d$\0d%\0\204\1\0Z*\0d&\0\204\0\0Z+\0RS((\0\0\0s\265\0\0\0This class implements a subtype of socket.socket that wraps\n    the underlying OS socket in an SSL context when necessary, and\n    provides read and write methods over that channel.i\0\0\0\0c\22\0\0\0\26\0\0\0\6\0\0\0C\0\0\0s\356\2\0\0d\1\0|\0\0_\0\0|\21\0r\33\0|\21\0|\0\0_\1\0n\6\1|\4\0r7\0|\3\0\fr7\0t\2\0d\2\0\203\1\0\202\1\0n\0\0|\2\0rS\0|\3\0\frS\0t\2\0d\3\0\203\1\0\202\1\0n\0\0|\3\0ri\0|\2\0\fri\0|\3\0}\2\0n\0\0t\3\0|\6\0\203\1\0|\0\0_\1\0|\5\0|\0\0j\1\0_\4\0|\7\0r\235\0|\0\0j\1\0j\5\0|\7\0\203\1\0\1n\0\0|\3\0r\271\0|\0\0j\1\0j\6\0|\3\0|\2\0\203\2\0\1n\0\0|\16\0r\322\0|\0\0j\1\0j\7\0|\16\0\203\1\0\1n\0\0|\17\0r\353\0|\0\0j\1\0j\10\0|\17\0\203\1\0\1n\0\0|\2\0|\0\0_\t\0|\3\0|\0\0_\n\0|\5\0|\0\0_\v\0|\6\0|\0\0_\f\0|\7\0|\0\0_\r\0|\17\0|\0\0_\16\0|\1\0j\17\0t\20\0t\21\0\203\2\0t\22\0k\3\0rH\1t\23\0d\4\0\203\1\0\202\1\0n\0\0t\24\0j\25\0|\0\0d\5\0|\1\0j\26\0\203\1\1\1x3\0t\27\0D]+\0}\22\0y\21\0t\30\0|\0\0|\22\0\203\2\0\1Wqe\1\4t\31\0k\n\0r\217\1\1\1\1qe\1Xqe\1W|\4\0r\257\1|\20\0r\257\1t\2\0d\6\0\203\1\0\202\1\0n\0\0|\0\0j\1\0j\32\0r\321\1|\20\0\fr\321\1t\2\0d\7\0\203\1\0\202\1\0n\0\0|\4\0|\0\0_\33\0|\20\0|\0\0_\34\0|\10\0|\0\0_\35\0|\r\0|\0\0_\36\0y\16\0|\0\0j\37\0\203\0\0\1Wn1\0\4t \0k\n\0r6\2\1}\23\0\1|\23\0j!\0t!\0j\"\0k\3\0r-\2\202\0\0n\0\0t#\0}\24\0n\7\0Xt$\0}\24\0t#\0|\0\0_%\0d\0\0|\0\0_'\0|\24\0|\0\0_(\0|\24\0r\352\2yb\0|\0\0j\1\0j)\0|\0\0j\26\0|\4\0|\20\0d\10\0|\0\0\203\3\1|\0\0_'\0|\10\0r\277\2|\0\0j*\0\203\0\0}\25\0|\25\0d\t\0k\2\0r\262\2t\2\0d\n\0\203\1\0\202\1\0n\0\0|\0\0j+\0\203\0\0\1n\0\0Wq\352\2\4t,\0t\2\0f\2\0k\n\0r\346\2\1\1\1|\0\0j-\0\203\0\0\1\202\0\0q\352\2Xn\0\0d\0\0S(\v\0\0\0Ni\0\0\0\0s5\0\0\0certfile must be specified for server-side operationss\32\0\0\0certfile must be specifieds!\0\0\0only stream sockets are supportedt\5\0\0\0_socks4\0\0\0server_hostname can only be specified in client modes'\0\0\0check_hostname requires server_hostnamet\10\0\0\0ssl_sockg\0\0\0\0\0\0\0\0sH\0\0\0do_handshake_on_connect should not be specified for non-blocking sockets(.\0\0\0t\16\0\0\0_makefile_refsR\213\0\0\0RV\0\0\0Rz\0\0\0R\263\0\0\0R\234\0\0\0R\271\0\0\0R\226\0\0\0R\200\0\0\0R\274\0\0\0R\273\0\0\0R\272\0\0\0t\v\0\0\0ssl_versiont\10\0\0\0ca_certst\7\0\0\0cipherst\n\0\0\0getsockoptR3\0\0\0R4\0\0\0R1\0\0\0t\23\0\0\0NotImplementedErrorR)\0\0\0R\205\0\0\0R\276\0\0\0R+\0\0\0t\7\0\0\0delattrt\16\0\0\0AttributeErrorR\264\0\0\0R\207\0\0\0R\212\0\0\0R\210\0\0\0R\211\0\0\0t\v\0\0\0getpeernamet\f\0\0\0socket_errort\5\0\0\0errnot\10\0\0\0ENOTCONNR:\0\0\0Rt\0\0\0t\7\0\0\0_closedRf\0\0\0t\7\0\0\0_sslobjt\n\0\0\0_connectedt\f\0\0\0_wrap_sockett\n\0\0\0gettimeoutt\f\0\0\0do_handshaket\7\0\0\0OSErrort\5\0\0\0close(\26\0\0\0R\204\0\0\0R\206\0\0\0R\274\0\0\0R\273\0\0\0R\207\0\0\0R\272\0\0\0R\301\0\0\0R\302\0\0\0R\210\0\0\0t\6\0\0\0familyt\4\0\0\0typet\5\0\0\0protot\6\0\0\0filenoR\211\0\0\0R\223\0\0\0R\303\0\0\0R\212\0\0\0R\213\0\0\0t\4\0\0\0attrt\1\0\0\0et\t\0\0\0connectedt\7\0\0\0timeout(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\205\0\0\0\361\1\0\0s~\0\0\0\0\t\t\1\6\1\f\2\r\1\17\2\r\1\17\1\r\1\t\1\17\1\f\1\6\1\23\1\6\1\26\1\6\1\23\1\6\1\23\1\t\1\t\1\t\1\t\1\t\1\t\3\30\1\17\1\26\4\r\1\3\1\21\1\r\1\10\1\f\1\17\2\23\1\17\1\t\1\t\1\t\1\t\3\3\1\16\1\17\1\22\1\6\1\n\2\6\2\t\1\t\1\t\1\6\2\3\1\22\1\22\1\6\1\f\1\f\2\17\1\21\2\23\1\n\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\7\0\0\0|\0\0j\0\0S(\1\0\0\0N(\1\0\0\0R\213\0\0\0(\1\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\267\0\0\0I\2\0\0s\2\0\0\0\0\2c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\31\0\0\0|\1\0|\0\0_\0\0|\1\0|\0\0j\1\0_\2\0d\0\0S(\1\0\0\0N(\3\0\0\0R\213\0\0\0R\315\0\0\0R\267\0\0\0(\2\0\0\0R\204\0\0\0t\3\0\0\0ctx(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\267\0\0\0M\2\0\0s\4\0\0\0\0\2\t\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\32\0\0\0t\0\0d\1\0|\0\0j\1\0j\2\0\26\203\1\0\202\1\0d\0\0S(\2\0\0\0Ns\30\0\0\0Can't dup() %s instances(\3\0\0\0t\16\0\0\0NotImplementedt\t\0\0\0__class__R6\0\0\0(\1\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\3\0\0\0dupR\2\0\0s\4\0\0\0\0\1\6\1c\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\0\0S(\1\0\0\0N(\0\0\0\0(\2\0\0\0R\204\0\0\0t\3\0\0\0msg(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\f\0\0\0_checkClosedV\2\0\0s\2\0\0\0\0\2c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\32\0\0\0|\0\0j\0\0s\26\0|\0\0j\1\0\203\0\0\1n\0\0d\0\0S(\1\0\0\0N(\2\0\0\0R\316\0\0\0R\310\0\0\0(\1\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\20\0\0\0_check_connectedZ\2\0\0s\4\0\0\0\0\1\t\5c\3\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\266\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0s\"\0t\2\0d\1\0\203\1\0\202\1\0n\0\0yD\0|\2\0d\5\0k\t\0rI\0|\0\0j\1\0j\4\0|\1\0|\2\0\203\2\0}\3\0n\30\0|\0\0j\1\0j\4\0|\1\0p[\0d\2\0\203\1\0}\3\0|\3\0SWnI\0\4t\5\0k\n\0r\261\0\1}\4\0\1|\4\0j\6\0d\3\0\31t\7\0k\2\0r\253\0|\0\0j\10\0r\253\0|\2\0d\5\0k\t\0r\244\0d\3\0Sd\4\0Sq\262\0\202\0\0n\1\0Xd\5\0S(\6\0\0\0sO\0\0\0Read up to LEN bytes and return them.\n        Return zero-length string on EOF.s'\0\0\0Read on closed or unwrapped SSL socket.i\0\4\0\0i\0\0\0\0t\0\0\0\0N(\t\0\0\0R\341\0\0\0R\315\0\0\0RV\0\0\0Rf\0\0\0t\4\0\0\0readR\6\0\0\0R\202\0\0\0t\r\0\0\0SSL_ERROR_EOFR\211\0\0\0(\5\0\0\0R\204\0\0\0RX\0\0\0t\6\0\0\0buffert\1\0\0\0vt\1\0\0\0x(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\344\0\0\0b\2\0\0s\34\0\0\0\0\4\n\1\t\1\17\1\3\1\f\1\30\2\30\1\10\1\17\1\34\1\f\1\4\2\7\2c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s2\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0s\"\0t\2\0d\1\0\203\1\0\202\1\0n\0\0|\0\0j\1\0j\3\0|\1\0\203\1\0S(\2\0\0\0sh\0\0\0Write DATA to the underlying SSL channel.  Returns\n        number of bytes of DATA actually transmitted.s(\0\0\0Write on closed or unwrapped SSL socket.(\4\0\0\0R\341\0\0\0R\315\0\0\0RV\0\0\0t\5\0\0\0write(\2\0\0\0R\204\0\0\0t\4\0\0\0data(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\351\0\0\0x\2\0\0s\10\0\0\0\0\4\n\1\t\1\17\1c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s$\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0\203\0\0\1|\0\0j\2\0j\3\0|\1\0\203\1\0S(\1\0\0\0s\341\0\0\0Returns a formatted version of the data in the\n        certificate provided by the other end of the SSL channel.\n        Return None if no certificate was provided, {} if a\n        certificate was provided, but not validated.(\4\0\0\0R\341\0\0\0R\342\0\0\0R\315\0\0\0t\20\0\0\0peer_certificate(\2\0\0\0R\204\0\0\0t\v\0\0\0binary_form(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\v\0\0\0getpeercert\201\2\0\0s\6\0\0\0\0\6\n\1\n\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s3\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0\fs\36\0t\2\0j\3\0\fr\"\0d\0\0S|\0\0j\1\0j\5\0\203\0\0Sd\0\0S(\1\0\0\0N(\6\0\0\0R\341\0\0\0R\315\0\0\0R\25\0\0\0R#\0\0\0Rf\0\0\0t\25\0\0\0selected_npn_protocol(\1\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\356\0\0\0\213\2\0\0s\10\0\0\0\0\1\n\1\24\1\4\2c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s3\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0\fs\36\0t\2\0j\3\0\fr\"\0d\0\0S|\0\0j\1\0j\5\0\203\0\0Sd\0\0S(\1\0\0\0N(\6\0\0\0R\341\0\0\0R\315\0\0\0R\25\0\0\0R$\0\0\0Rf\0\0\0t\26\0\0\0selected_alpn_protocol(\1\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\357\0\0\0\222\2\0\0s\10\0\0\0\0\1\n\1\24\1\4\2c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s(\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0s\27\0d\0\0S|\0\0j\1\0j\3\0\203\0\0Sd\0\0S(\1\0\0\0N(\4\0\0\0R\341\0\0\0R\315\0\0\0Rf\0\0\0t\6\0\0\0cipher(\1\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\360\0\0\0\231\2\0\0s\10\0\0\0\0\1\n\1\t\1\4\2c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s(\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0s\27\0d\0\0S|\0\0j\1\0j\3\0\203\0\0Sd\0\0S(\1\0\0\0N(\4\0\0\0R\341\0\0\0R\315\0\0\0Rf\0\0\0t\v\0\0\0compression(\1\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\361\0\0\0\240\2\0\0s\10\0\0\0\0\1\n\1\t\1\4\2c\3\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\260\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0r\231\0|\2\0d\1\0k\3\0r5\0t\2\0d\2\0|\0\0j\3\0\26\203\1\0\202\1\0n\0\0y\26\0|\0\0j\1\0j\4\0|\1\0\203\1\0}\3\0WnD\0\4t\5\0k\n\0r\221\0\1}\4\0\1|\4\0j\6\0d\1\0\31t\7\0k\2\0rt\0d\1\0S|\4\0j\6\0d\1\0\31t\10\0k\2\0r\213\0d\1\0S\202\0\0q\254\0X|\3\0Sn\23\0|\0\0j\t\0j\n\0|\1\0|\2\0\203\2\0Sd\0\0S(\3\0\0\0Ni\0\0\0\0s3\0\0\0non-zero flags not allowed in calls to send() on %s(\v\0\0\0R\341\0\0\0R\315\0\0\0RV\0\0\0R\336\0\0\0R\351\0\0\0R\6\0\0\0R\202\0\0\0t\23\0\0\0SSL_ERROR_WANT_READt\24\0\0\0SSL_ERROR_WANT_WRITER\276\0\0\0t\4\0\0\0send(\5\0\0\0R\204\0\0\0R\352\0\0\0t\5\0\0\0flagsR\347\0\0\0R\350\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\364\0\0\0\247\2\0\0s \0\0\0\0\1\n\1\t\1\f\1\3\1\3\1\20\1\3\1\26\1\17\1\23\1\4\1\23\1\4\2\7\2\7\2c\4\0\0\0\4\0\0\0\4\0\0\0C\0\0\0sb\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0r)\0t\2\0d\1\0|\0\0j\3\0\26\203\1\0\202\1\0n5\0|\3\0d\0\0k\10\0rH\0|\0\0j\5\0j\6\0|\1\0|\2\0\203\2\0S|\0\0j\5\0j\6\0|\1\0|\2\0|\3\0\203\3\0Sd\0\0S(\2\0\0\0Ns%\0\0\0sendto not allowed on instances of %s(\7\0\0\0R\341\0\0\0R\315\0\0\0RV\0\0\0R\336\0\0\0Rf\0\0\0R\276\0\0\0t\6\0\0\0sendto(\4\0\0\0R\204\0\0\0R\352\0\0\0t\r\0\0\0flags_or_addrt\4\0\0\0addr(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\366\0\0\0\274\2\0\0s\16\0\0\0\0\1\n\1\t\1\6\1\20\1\f\1\23\2c\3\0\0\0\6\0\0\0\4\0\0\0C\0\0\0s\222\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0r{\0|\2\0d\1\0k\3\0r5\0t\2\0d\2\0|\0\0j\3\0\26\203\1\0\202\1\0n\0\0t\4\0|\1\0\203\1\0}\3\0d\1\0}\4\0x-\0|\4\0|\3\0k\0\0rv\0|\0\0j\5\0|\1\0|\4\0\37\203\1\0}\5\0|\4\0|\5\0007}\4\0qJ\0W|\3\0St\6\0j\7\0|\0\0|\1\0|\2\0\203\3\0Sd\0\0S(\3\0\0\0Ni\0\0\0\0s6\0\0\0non-zero flags not allowed in calls to sendall() on %s(\10\0\0\0R\341\0\0\0R\315\0\0\0RV\0\0\0R\336\0\0\0RX\0\0\0R\364\0\0\0R)\0\0\0t\7\0\0\0sendall(\6\0\0\0R\204\0\0\0R\352\0\0\0R\365\0\0\0t\6\0\0\0amountR<\0\0\0R\347\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\371\0\0\0\307\2\0\0s\32\0\0\0\0\1\n\1\t\1\f\1\3\1\3\1\20\1\f\1\6\1\17\1\23\1\16\1\4\2i\0\4\0\0c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sY\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0rB\0|\2\0d\1\0k\3\0r5\0t\2\0d\2\0|\0\0j\3\0\26\203\1\0\202\1\0n\0\0|\0\0j\4\0|\1\0\203\1\0S|\0\0j\5\0j\6\0|\1\0|\2\0\203\2\0Sd\0\0S(\3\0\0\0Ni\0\0\0\0s3\0\0\0non-zero flags not allowed in calls to recv() on %s(\7\0\0\0R\341\0\0\0R\315\0\0\0RV\0\0\0R\336\0\0\0R\344\0\0\0R\276\0\0\0t\4\0\0\0recv(\3\0\0\0R\204\0\0\0t\6\0\0\0buflenR\365\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\373\0\0\0\327\2\0\0s\20\0\0\0\0\1\n\1\t\1\f\1\3\1\3\1\20\1\r\2c\4\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s\225\0\0\0|\0\0j\0\0\203\0\0\1|\1\0r+\0|\2\0d\0\0k\10\0r+\0t\2\0|\1\0\203\1\0}\2\0n\25\0|\2\0d\0\0k\10\0r@\0d\1\0}\2\0n\0\0|\0\0j\3\0r{\0|\3\0d\2\0k\3\0rk\0t\4\0d\3\0|\0\0j\5\0\26\203\1\0\202\1\0n\0\0|\0\0j\6\0|\2\0|\1\0\203\2\0S|\0\0j\7\0j\10\0|\1\0|\2\0|\3\0\203\3\0Sd\0\0S(\4\0\0\0Ni\0\4\0\0i\0\0\0\0s8\0\0\0non-zero flags not allowed in calls to recv_into() on %s(\t\0\0\0R\341\0\0\0Rf\0\0\0RX\0\0\0R\315\0\0\0RV\0\0\0R\336\0\0\0R\344\0\0\0R\276\0\0\0t\t\0\0\0recv_into(\4\0\0\0R\204\0\0\0R\346\0\0\0t\6\0\0\0nbytesR\365\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\375\0\0\0\342\2\0\0s\30\0\0\0\0\1\n\1\22\1\17\1\f\1\t\1\t\1\f\1\3\1\3\1\20\1\20\2c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s@\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0r)\0t\2\0d\1\0|\0\0j\3\0\26\203\1\0\202\1\0n\23\0|\0\0j\4\0j\5\0|\1\0|\2\0\203\2\0Sd\0\0S(\2\0\0\0Ns'\0\0\0recvfrom not allowed on instances of %s(\6\0\0\0R\341\0\0\0R\315\0\0\0RV\0\0\0R\336\0\0\0R\276\0\0\0t\10\0\0\0recvfrom(\3\0\0\0R\204\0\0\0R\374\0\0\0R\365\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\377\0\0\0\361\2\0\0s\n\0\0\0\0\1\n\1\t\1\6\1\20\2c\4\0\0\0\4\0\0\0\4\0\0\0C\0\0\0sC\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0r)\0t\2\0d\1\0|\0\0j\3\0\26\203\1\0\202\1\0n\26\0|\0\0j\4\0j\5\0|\1\0|\2\0|\3\0\203\3\0Sd\0\0S(\2\0\0\0Ns,\0\0\0recvfrom_into not allowed on instances of %s(\6\0\0\0R\341\0\0\0R\315\0\0\0RV\0\0\0R\336\0\0\0R\276\0\0\0t\r\0\0\0recvfrom_into(\4\0\0\0R\204\0\0\0R\346\0\0\0R\376\0\0\0R\365\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\0\1\0\0\371\2\0\0s\n\0\0\0\0\1\n\1\t\1\6\1\20\2c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s(\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0r \0|\0\0j\1\0j\2\0\203\0\0Sd\1\0Sd\0\0S(\2\0\0\0Ni\0\0\0\0(\3\0\0\0R\341\0\0\0R\315\0\0\0t\7\0\0\0pending(\1\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\1\1\0\0\2\3\0\0s\10\0\0\0\0\1\n\1\t\1\r\2c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s'\0\0\0|\0\0j\0\0\203\0\0\1d\0\0|\0\0_\2\0t\3\0j\4\0|\0\0|\1\0\203\2\0\1d\0\0S(\1\0\0\0N(\5\0\0\0R\341\0\0\0Rf\0\0\0R\315\0\0\0R)\0\0\0t\10\0\0\0shutdown(\2\0\0\0R\204\0\0\0t\3\0\0\0how(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\2\1\0\0\t\3\0\0s\6\0\0\0\0\1\n\1\t\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s;\0\0\0|\0\0j\0\0d\1\0k\0\0r(\0d\0\0|\0\0_\2\0t\3\0j\4\0|\0\0\203\1\0\1n\17\0|\0\0\4j\0\0d\1\0008\2_\0\0d\0\0S(\2\0\0\0Ni\1\0\0\0(\5\0\0\0R\300\0\0\0Rf\0\0\0R\315\0\0\0R)\0\0\0R\323\0\0\0(\1\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\323\0\0\0\16\3\0\0s\10\0\0\0\0\1\17\1\t\1\20\2c\1\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s?\0\0\0|\0\0j\0\0r%\0|\0\0j\0\0j\1\0\203\0\0}\1\0d\0\0|\0\0_\0\0|\1\0St\3\0d\1\0t\4\0|\0\0\203\1\0\27\203\1\0\202\1\0d\0\0S(\2\0\0\0Ns\26\0\0\0No SSL wrapper around (\5\0\0\0R\315\0\0\0R\2\1\0\0Rf\0\0\0RV\0\0\0t\3\0\0\0str(\2\0\0\0R\204\0\0\0t\1\0\0\0s(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\6\0\0\0unwrap\25\3\0\0s\n\0\0\0\0\1\t\1\17\1\t\1\4\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\32\0\0\0d\0\0|\0\0_\1\0t\2\0j\3\0|\0\0\203\1\0\1d\0\0S(\1\0\0\0N(\4\0\0\0Rf\0\0\0R\315\0\0\0R)\0\0\0t\v\0\0\0_real_close(\1\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\7\1\0\0\35\3\0\0s\4\0\0\0\0\1\t\1c\2\0\0\0\3\0\0\0\5\0\0\0C\0\0\0s\233\0\0\0|\0\0j\0\0\203\0\0\1|\0\0j\1\0\203\0\0}\2\0z3\0|\2\0d\1\0k\2\0r;\0|\1\0r;\0|\0\0j\2\0d\2\0\203\1\0\1n\0\0|\0\0j\4\0j\5\0\203\0\0\1Wd\2\0|\0\0j\2\0|\2\0\203\1\0\1X|\0\0j\6\0j\7\0r\227\0|\0\0j\10\0s~\0t\t\0d\3\0\203\1\0\202\1\0n\0\0t\n\0|\0\0j\v\0\203\0\0|\0\0j\10\0\203\2\0\1n\0\0d\2\0S(\4\0\0\0s\34\0\0\0Perform a TLS/SSL handshake.g\0\0\0\0\0\0\0\0Ns-\0\0\0check_hostname needs server_hostname argument(\f\0\0\0R\342\0\0\0R\320\0\0\0t\n\0\0\0settimeoutRf\0\0\0R\315\0\0\0R\321\0\0\0R\267\0\0\0R\264\0\0\0R\212\0\0\0RV\0\0\0R_\0\0\0R\355\0\0\0(\3\0\0\0R\204\0\0\0t\5\0\0\0blockR\333\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\321\0\0\0!\3\0\0s\26\0\0\0\0\2\n\1\f\1\3\1\22\1\20\1\21\2\16\2\f\1\t\1\17\2c\3\0\0\0\4\0\0\0\6\0\0\0C\0\0\0s\342\0\0\0|\0\0j\0\0r\30\0t\1\0d\1\0\203\1\0\202\1\0n\0\0|\0\0j\2\0r0\0t\1\0d\2\0\203\1\0\202\1\0n\0\0|\0\0j\3\0j\4\0|\0\0j\5\0t\6\0|\0\0j\7\0d\3\0|\0\0\203\3\1|\0\0_\10\0ya\0|\2\0ru\0t\t\0j\n\0|\0\0|\1\0\203\2\0}\3\0n\26\0d\0\0}\3\0t\t\0j\f\0|\0\0|\1\0\203\2\0\1|\3\0s\263\0t\r\0|\0\0_\2\0|\0\0j\16\0r\263\0|\0\0j\17\0\203\0\0\1q\263\0n\0\0|\3\0SWn#\0\4t\20\0t\1\0f\2\0k\n\0r\335\0\1\1\1d\0\0|\0\0_\10\0\202\0\0n\1\0Xd\0\0S(\4\0\0\0Ns!\0\0\0can't connect in server-side modes/\0\0\0attempt to connect already-connected SSLSocket!R\277\0\0\0(\21\0\0\0R\207\0\0\0RV\0\0\0R\316\0\0\0R\267\0\0\0R\317\0\0\0R\276\0\0\0R:\0\0\0R\212\0\0\0R\315\0\0\0R)\0\0\0t\n\0\0\0connect_exRf\0\0\0t\7\0\0\0connectRt\0\0\0R\210\0\0\0R\321\0\0\0R\322\0\0\0(\4\0\0\0R\204\0\0\0R\370\0\0\0R\n\1\0\0t\2\0\0\0rc(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\r\0\0\0_real_connect2\3\0\0s$\0\0\0\0\1\t\1\17\3\t\1\17\1'\1\3\1\6\1\25\2\6\1\20\1\6\1\t\1\t\1\20\1\10\1\23\1\t\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\24\0\0\0|\0\0j\0\0|\1\0t\1\0\203\2\0\1d\1\0S(\2\0\0\0sQ\0\0\0Connects to remote ADDR, and then wraps the connection in\n        an SSL channel.N(\2\0\0\0R\r\1\0\0R:\0\0\0(\2\0\0\0R\204\0\0\0R\370\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\v\1\0\0I\3\0\0s\2\0\0\0\0\3c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\20\0\0\0|\0\0j\0\0|\1\0t\1\0\203\2\0S(\1\0\0\0sQ\0\0\0Connects to remote ADDR, and then wraps the connection in\n        an SSL channel.(\2\0\0\0R\r\1\0\0Rt\0\0\0(\2\0\0\0R\204\0\0\0R\370\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\n\1\0\0N\3\0\0s\2\0\0\0\0\3c\1\0\0\0\3\0\0\0\10\0\0\0C\0\0\0sI\0\0\0t\0\0j\1\0|\0\0\203\1\0\\\2\0}\1\0}\2\0|\0\0j\2\0j\3\0|\1\0d\1\0|\0\0j\4\0d\2\0|\0\0j\5\0d\3\0t\6\0\203\1\3}\1\0|\1\0|\2\0f\2\0S(\4\0\0\0s\277\0\0\0Accepts a new connection from a remote client, and returns\n        a tuple containing that new connection wrapped with a server-side\n        SSL channel, and the address of the remote client.R\210\0\0\0R\211\0\0\0R\207\0\0\0(\7\0\0\0R)\0\0\0t\6\0\0\0acceptR\267\0\0\0R\215\0\0\0R\210\0\0\0R\211\0\0\0Rt\0\0\0(\3\0\0\0R\204\0\0\0t\7\0\0\0newsockR\370\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\16\1\0\0S\3\0\0s\f\0\0\0\0\5\25\1\17\1\t\1\t\1\t\1t\1\0\0\0ri\377\377\377\377c\3\0\0\0\3\0\0\0\6\0\0\0C\0\0\0s%\0\0\0|\0\0\4j\0\0d\1\0007\2_\0\0t\1\0|\0\0|\1\0|\2\0d\2\0t\2\0\203\3\1S(\3\0\0\0s\201\0\0\0Make and return a file-like object that\n        works with the SSL connection.  Just use the code\n        from the socket module.i\1\0\0\0R\323\0\0\0(\3\0\0\0R\300\0\0\0R*\0\0\0Rt\0\0\0(\3\0\0\0R\204\0\0\0t\4\0\0\0modet\7\0\0\0bufsize(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\10\0\0\0makefile_\3\0\0s\4\0\0\0\0\6\17\3s\n\0\0\0tls-uniquec\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s_\0\0\0|\1\0t\0\0k\7\0r\33\0t\1\0d\1\0\203\1\0\202\1\0n\0\0|\1\0d\2\0k\3\0r?\0t\2\0d\3\0j\3\0|\1\0\203\1\0\203\1\0\202\1\0n\0\0|\0\0j\4\0d\4\0k\10\0rR\0d\4\0S|\0\0j\4\0j\6\0\203\0\0S(\5\0\0\0s\344\0\0\0Get channel binding data for current connection.  Raise ValueError\n        if the requested `cb_type` is not supported.  Return bytes of the data\n        or None if the data is not available (e.g. before the handshake).\n        s \0\0\0Unsupported channel binding types\n\0\0\0tls-uniques(\0\0\0{0} channel binding type not implementedN(\7\0\0\0t\25\0\0\0CHANNEL_BINDING_TYPESRV\0\0\0R\305\0\0\0t\6\0\0\0formatR\315\0\0\0Rf\0\0\0t\r\0\0\0tls_unique_cb(\2\0\0\0R\204\0\0\0t\7\0\0\0cb_type(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\23\0\0\0get_channel_bindingj\3\0\0s\22\0\0\0\0\5\f\1\17\1\f\1\3\1\6\1\17\1\17\1\4\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s \0\0\0|\0\0j\0\0d\1\0k\10\0r\23\0d\1\0S|\0\0j\0\0j\2\0\203\0\0S(\2\0\0\0s\227\0\0\0\n        Return a string identifying the protocol version used by the\n        current SSL channel, or None if there is no established channel.\n        N(\3\0\0\0R\315\0\0\0Rf\0\0\0t\7\0\0\0version(\1\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\31\1\0\0y\3\0\0s\6\0\0\0\0\5\17\1\4\1N(,\0\0\0R6\0\0\0R7\0\0\0Rv\0\0\0Rf\0\0\0R:\0\0\0R\f\0\0\0R\257\0\0\0Rt\0\0\0R0\0\0\0R1\0\0\0R\205\0\0\0t\10\0\0\0propertyR\267\0\0\0t\6\0\0\0setterR\337\0\0\0R\341\0\0\0R\342\0\0\0R\344\0\0\0R\351\0\0\0R\355\0\0\0R\356\0\0\0R\357\0\0\0R\360\0\0\0R\361\0\0\0R\364\0\0\0R\366\0\0\0R\371\0\0\0R\373\0\0\0R\375\0\0\0R\377\0\0\0R\0\1\0\0R\1\1\0\0R\2\1\0\0R\323\0\0\0R\6\1\0\0R\7\1\0\0R\321\0\0\0R\r\1\0\0R\v\1\0\0R\n\1\0\0R\16\1\0\0R\23\1\0\0R\30\1\0\0R\31\1\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\214\0\0\0\354\1\0\0sR\0\0\0\6\3\6\2\t\1\6\1\6\1\3\1\f\1\t\1\3\1\fQ\17\4\22\5\t\4\f\4\t\10\17\26\t\t\f\n\t\7\t\7\t\7\t\7\f\25\f\v\f\20\17\v\17\17\17\10\17\t\t\7\t\5\t\7\t\10\t\4\f\21\t\27\t\5\t\5\t\f\17\v\f\17c\n\0\0\0\n\0\0\0\25\0\0\0C\0\0\0sC\0\0\0t\0\0d\1\0|\0\0d\2\0|\1\0d\3\0|\2\0d\4\0|\3\0d\5\0|\4\0d\6\0|\5\0d\7\0|\6\0d\10\0|\7\0d\t\0|\10\0d\n\0|\t\0\203\0\nS(\v\0\0\0NR\206\0\0\0R\274\0\0\0R\273\0\0\0R\207\0\0\0R\272\0\0\0R\301\0\0\0R\302\0\0\0R\210\0\0\0R\211\0\0\0R\303\0\0\0(\1\0\0\0R\214\0\0\0(\n\0\0\0R\206\0\0\0R\274\0\0\0R\273\0\0\0R\207\0\0\0R\272\0\0\0R\301\0\0\0R\302\0\0\0R\210\0\0\0R\211\0\0\0R\303\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyR\215\0\0\0\203\3\0\0s\f\0\0\0\0\7\30\1\f\1\f\1\6\1\6\1c\1\0\0\0\7\0\0\0\f\0\0\0C\0\0\0s\255\0\0\0d\1\0d\2\0l\0\0m\1\0}\1\0\1d\1\0d\3\0l\2\0m\3\0}\2\0\1d\30\0}\3\0d\20\0}\4\0y!\0|\3\0j\4\0|\0\0d\21\0 j\5\0\203\0\0\203\1\0d\22\0\27}\5\0Wn'\0\4t\6\0k\n\0rv\0\1\1\1t\6\0d\23\0|\0\0|\4\0f\2\0\26\203\1\0\202\1\0n3\0X|\1\0|\0\0d\21\0\37|\4\0\203\2\0}\6\0|\2\0|\6\0d\24\0\31|\5\0f\2\0|\6\0d\25\0d\26\0!\27\203\1\0Sd\27\0S(\31\0\0\0s\211\1\0\0Return the time in seconds since the Epoch, given the timestring\n    representing the \"notBefore\" or \"notAfter\" date from a certificate\n    in ``\"%b %d %H:%M:%S %Y %Z\"`` strptime format (C locale).\n\n    \"notBefore\" or \"notAfter\" dates must use UTC (RFC 5280).\n\n    Month is one of: Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n    UTC should be specified as GMT (see ASN1_TIME_print())\n    i\377\377\377\377(\1\0\0\0t\10\0\0\0strptime(\1\0\0\0t\6\0\0\0timegmt\3\0\0\0Jant\3\0\0\0Febt\3\0\0\0Mart\3\0\0\0Aprt\3\0\0\0Mayt\3\0\0\0Junt\3\0\0\0Jult\3\0\0\0Augt\3\0\0\0Sept\3\0\0\0Octt\3\0\0\0Novt\3\0\0\0Decs\23\0\0\0 %d %H:%M:%S %Y GMTi\3\0\0\0i\1\0\0\0s*\0\0\0time data %r does not match format \"%%b%s\"i\0\0\0\0i\2\0\0\0i\6\0\0\0N(\f\0\0\0s\3\0\0\0Jans\3\0\0\0Febs\3\0\0\0Mars\3\0\0\0Aprs\3\0\0\0Mays\3\0\0\0Juns\3\0\0\0Juls\3\0\0\0Augs\3\0\0\0Seps\3\0\0\0Octs\3\0\0\0Novs\3\0\0\0Dec(\7\0\0\0t\4\0\0\0timeR\34\1\0\0t\10\0\0\0calendarR\35\1\0\0t\5\0\0\0indext\5\0\0\0titleRV\0\0\0(\7\0\0\0t\t\0\0\0cert_timeR\34\1\0\0R\35\1\0\0t\6\0\0\0monthst\v\0\0\0time_formatt\f\0\0\0month_numbert\2\0\0\0tt(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\24\0\0\0cert_time_to_seconds\223\3\0\0s\30\0\0\0\0\n\20\1\20\3\0\1\6\2\6\1\3\1!\1\r\1\6\1\24\3\23\3s\33\0\0\0-----BEGIN CERTIFICATE-----s\31\0\0\0-----END CERTIFICATE-----c\1\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s<\0\0\0t\0\0j\1\0|\0\0\203\1\0j\2\0d\1\0\203\1\0}\1\0t\3\0d\2\0\27t\4\0j\5\0|\1\0d\3\0\203\2\0\27d\2\0\27t\6\0\27d\2\0\27S(\4\0\0\0s[\0\0\0Takes a certificate in binary DER format and returns the\n    PEM version of it as a string.R\216\0\0\0s\1\0\0\0\ni@\0\0\0(\7\0\0\0t\6\0\0\0base64t\22\0\0\0standard_b64encodet\6\0\0\0decodet\n\0\0\0PEM_HEADERt\10\0\0\0textwrapt\4\0\0\0fillt\n\0\0\0PEM_FOOTER(\2\0\0\0t\16\0\0\0der_cert_bytest\1\0\0\0f(\0\0\0\0", 24576) = 24576
27308 read(5, "(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\24\0\0\0DER_cert_to_PEM_cert\264\3\0\0s\4\0\0\0\0\4\30\3c\1\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s\203\0\0\0|\0\0j\0\0t\1\0\203\1\0s\"\0t\2\0d\1\0t\1\0\26\203\1\0\202\1\0n\0\0|\0\0j\3\0\203\0\0j\4\0t\5\0\203\1\0sJ\0t\2\0d\2\0t\5\0\26\203\1\0\202\1\0n\0\0|\0\0j\3\0\203\0\0t\6\0t\1\0\203\1\0t\6\0t\5\0\203\1\0\v!}\1\0t\7\0j\10\0|\1\0j\t\0d\3\0d\4\0\203\2\0\203\1\0S(\5\0\0\0sh\0\0\0Takes a certificate in ASCII PEM format and returns the\n    DER-encoded version of it as a byte sequences(\0\0\0Invalid PEM encoding; must start with %ss&\0\0\0Invalid PEM encoding; must end with %st\5\0\0\0ASCIIt\6\0\0\0strict(\n\0\0\0R\26\0\0\0R7\1\0\0RV\0\0\0t\5\0\0\0stript\10\0\0\0endswithR:\1\0\0RX\0\0\0R4\1\0\0t\f\0\0\0decodestringR\220\0\0\0(\2\0\0\0t\17\0\0\0pem_cert_stringt\1\0\0\0d(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\24\0\0\0PEM_cert_to_DER_cert\275\3\0\0s\20\0\0\0\0\4\17\1\6\1\r\1\25\1\6\1\r\1 \1c\3\0\0\0\n\0\0\0\n\0\0\0C\0\0\0s\221\0\0\0|\0\0\\\2\0}\3\0}\4\0|\2\0d\3\0k\t\0r!\0t\1\0}\5\0n\6\0t\2\0}\5\0t\3\0|\1\0d\1\0|\5\0d\2\0|\2\0\203\1\2}\6\0t\4\0t\5\0|\0\0\203\1\0\203\1\0\2174\0}\7\0t\4\0|\6\0j\6\0|\7\0\203\1\0\203\1\0\217\26\0}\10\0|\10\0j\7\0t\10\0\203\1\0}\t\0Wd\3\0QXWd\3\0QXt\t\0|\t\0\203\1\0S(\4\0\0\0s\367\0\0\0Retrieve the certificate from the server at the specified address,\n    and return it as a PEM-encoded string.\n    If 'ca_certs' is specified, validate the server cert against it.\n    If 'ssl_version' is specified, use it in the connection attempt.R\272\0\0\0Ri\0\0\0N(\n\0\0\0Rf\0\0\0R\16\0\0\0R\f\0\0\0t\26\0\0\0_create_stdlib_contextR\1\0\0\0R2\0\0\0R\215\0\0\0R\355\0\0\0Rt\0\0\0R=\1\0\0(\n\0\0\0R\370\0\0\0R\301\0\0\0R\302\0\0\0t\4\0\0\0hostt\4\0\0\0portR\272\0\0\0R\267\0\0\0R\206\0\0\0t\7\0\0\0sslsockt\7\0\0\0dercert(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\26\0\0\0get_server_certificate\312\3\0\0s\26\0\0\0\0\6\f\1\f\1\t\2\6\1\t\1\6\1\t\1\25\1\30\1\33\1c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\20\0\0\0t\0\0j\1\0|\0\0d\1\0\203\2\0S(\2\0\0\0Ns\t\0\0\0<unknown>(\2\0\0\0t\17\0\0\0_PROTOCOL_NAMESRW\0\0\0(\1\0\0\0t\r\0\0\0protocol_code(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\21\0\0\0get_protocol_name\335\3\0\0s\2\0\0\0\0\1c\3\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\213\0\0\0t\0\0|\0\0d\1\0\203\2\0r\33\0|\0\0j\1\0}\0\0n\0\0t\2\0t\3\0\203\1\0}\3\0|\1\0s3\0|\2\0rF\0|\3\0j\4\0|\2\0|\1\0\203\2\0\1n\0\0|\3\0j\5\0|\0\0d\2\0t\6\0\203\1\1}\4\0y\16\0|\0\0j\7\0\203\0\0\1Wn\21\0\4t\10\0k\n\0r|\0\1\1\1n\v\0X|\4\0j\t\0\203\0\0\1|\4\0S(\3\0\0\0s\214\0\0\0A replacement for the old socket.ssl function.  Designed\n    for compability with Python 2.5 and earlier.  Will disappear in\n    Python 3.0.R\276\0\0\0R\207\0\0\0(\n\0\0\0t\7\0\0\0hasattrR\276\0\0\0Rz\0\0\0R\257\0\0\0R\271\0\0\0R\317\0\0\0R:\0\0\0R\310\0\0\0R\311\0\0\0R\321\0\0\0(\5\0\0\0R\206\0\0\0R\274\0\0\0R\273\0\0\0R\334\0\0\0R\277\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\16\0\0\0sslwrap_simple\343\3\0\0s\30\0\0\0\0\4\17\1\f\2\f\1\f\1\23\1\25\1\3\1\16\1\r\2\4\3\n\2([\0\0\0Rv\0\0\0R8\1\0\0R@\0\0\0R\245\0\0\0Rb\0\0\0t\v\0\0\0collectionsR\0\0\0\0t\n\0\0\0contextlibR\1\0\0\0R\25\0\0\0R\2\0\0\0R\3\0\0\0R\4\0\0\0R\5\0\0\0R\6\0\0\0R\7\0\0\0R\10\0\0\0R\t\0\0\0R\n\0\0\0R\v\0\0\0R\f\0\0\0R\r\0\0\0R\16\0\0\0R\17\0\0\0Rn\0\0\0R\20\0\0\0Rq\0\0\0R\21\0\0\0R\22\0\0\0R\23\0\0\0t\v\0\0\0ImportErrorR\33\0\0\0R!\0\0\0R\"\0\0\0R#\0\0\0R$\0\0\0R%\0\0\0R\30\0\0\0t\5\0\0\0itemsRL\1\0\0t\16\0\0\0PROTOCOL_SSLv2R\177\0\0\0t\t\0\0\0NameErrorRf\0\0\0R)\0\0\0R*\0\0\0R+\0\0\0R,\0\0\0R\311\0\0\0R\246\0\0\0R.\0\0\0R/\0\0\0R0\0\0\0R1\0\0\0R2\0\0\0R3\0\0\0R4\0\0\0R4\1\0\0R\312\0\0\0t\16\0\0\0HAS_TLS_UNIQUER\24\1\0\0R\201\0\0\0R\266\0\0\0RV\0\0\0R5\0\0\0RQ\0\0\0R_\0\0\0R`\0\0\0Ra\0\0\0Rk\0\0\0Ry\0\0\0R\252\0\0\0R\265\0\0\0Rz\0\0\0R\270\0\0\0R\257\0\0\0R:\0\0\0R\275\0\0\0t\35\0\0\0_create_default_https_contextRF\1\0\0R\214\0\0\0Rt\0\0\0R\215\0\0\0R3\1\0\0R7\1\0\0R:\1\0\0R=\1\0\0RE\1\0\0RK\1\0\0RN\1\0\0RP\1\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\31\0\0\0/usr/lib/python2.7/ssl.pyt\10\0\0\0<module>X\0\0\0s\232\0\0\0\6\2\f\1\f\1\f\1\f\1\20\1\20\2\f\2\34\1\20\1.\4\34\1\26\1\26\1\3\1\24\1\r\2\4\2\t\5\n\1\n\1\n\1\n\1\n\2\"\2\20\2\31\2\3\1\n\1\r\1\n\2\"\1\17\1\31\2\"\1\26\1\f\1\f\2\t\1\f\2\6\16\6\17\6\6\26\4\f3\t+\6\1\t\3\t\16\37\25\26\4\17\1\17\3\26C\t\1\17/\6\1\t\1\6\1\22'\6\4\6\3\26\377\0\230\6\1\6\1\6\1\3\1\3\1\f\v\t\36\6\1\6\2\t\t\t\r\17\23\t\6", 4096) = 2810
27308 read(5, "", 4096)                 = 0
27308 close(5)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 stat64("textwrap", 0xbfffd92c)    = -1 ENOENT (No such file or directory)
27308 open("textwrap.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("textwrap.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("textwrapmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("textwrap.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("textwrap.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/textwrap", 0xbfffd92c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/textwrap.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/textwrap.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/textwrapmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/textwrap.py", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=661604, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=17037, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/textwrap.pyc", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669372, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=11871, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(6, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\5\0\0\0@\0\0\0s\354\0\0\0d\0\0Z\0\0d\1\0Z\1\0d\2\0d\3\0l\2\0Z\2\0d\2\0d\3\0l\3\0Z\3\0y\n\0e\4\0Z\5\0Wn'\0\4e\6\0k\n\0rW\0\1\1\1d\4\0e\7\0f\1\0d\5\0\204\0\0\203\0\0YZ\5\0n\1\0Xd\6\0d\7\0d\10\0d\t\0g\4\0Z\10\0d\n\0Z\t\0d\6\0f\0\0d\v\0\204\0\0\203\0\0YZ\n\0d\f\0d\r\0\204\1\0Z\v\0d\f\0d\16\0\204\1\0Z\f\0e\3\0j\r\0d\17\0e\3\0j\16\0\203\2\0Z\17\0e\3\0j\r\0d\20\0e\3\0j\16\0\203\2\0Z\20\0d\21\0\204\0\0Z\21\0e\22\0d\22\0k\2\0r\350\0e\21\0d\23\0\203\1\0GHn\0\0d\3\0S(\24\0\0\0s\33\0\0\0Text wrapping and filling.\ns\4\0\0\0$Id$i\377\377\377\377Nt\10\0\0\0_unicodec\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyR\0\0\0\0\21\0\0\0s\2\0\0\0\6\1t\v\0\0\0TextWrappert\4\0\0\0wrapt\4\0\0\0fillt\6\0\0\0dedents\6\0\0\0\t\n\v\f\r c\0\0\0\0\0\0\0\0\n\0\0\0B\0\0\0s\367\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0j\4\0e\5\0d\1\0e\6\0e\5\0\203\1\0\24\203\2\0Z\7\0i\0\0Z\10\0e\t\0d\2\0\203\1\0Z\n\0x!\0e\v\0e\t\0e\5\0\203\2\0D]\20\0Z\f\0e\n\0e\10\0e\f\0<qJ\0We\r\0j\16\0d\3\0\203\1\0Z\17\0e\r\0j\16\0d\4\0\203\1\0Z\20\0e\r\0j\16\0d\5\0e\3\0j\21\0\26\203\1\0Z\22\0d\6\0d\7\0d\7\0e\23\0e\23\0e\24\0e\23\0e\23\0e\23\0d\10\0\204\t\0Z\25\0d\t\0\204\0\0Z\26\0d\n\0\204\0\0Z\27\0d\v\0\204\0\0Z\30\0d\f\0\204\0\0Z\31\0d\r\0\204\0\0Z\32\0d\16\0\204\0\0Z\33\0d\17\0\204\0\0Z\34\0RS(\20\0\0\0s\367\7\0\0\n    Object for wrapping/filling text.  The public interface consists of\n    the wrap() and fill() methods; the other methods are just there for\n    subclasses to override in order to tweak the default behaviour.\n    If you want to completely replace the main wrapping algorithm,\n    you'll probably have to override _wrap_chunks().\n\n    Several instance attributes control various aspects of wrapping:\n      width (default: 70)\n        the maximum width of wrapped lines (unless break_long_words\n        is false)\n      initial_indent (default: \"\")\n        string that will be prepended to the first line of wrapped\n        output.  Counts towards the line's width.\n      subsequent_indent (default: \"\")\n        string that will be prepended to all lines save the first\n        of wrapped output; also counts towards each line's width.\n      expand_tabs (default: true)\n        Expand tabs in input text to spaces before further processing.\n        Each tab will become 1 .. 8 spaces, depending on its position in\n        its line.  If false, each tab is treated as a single character.\n      replace_whitespace (default: true)\n        Replace all whitespace characters in the input text by spaces\n        after tab expansion.  Note that if expand_tabs is false and\n        replace_whitespace is true, every tab will be converted to a\n        single space!\n      fix_sentence_endings (default: false)\n        Ensure that sentence-ending punctuation is always followed\n        by two spaces.  Off by default because the algorithm is\n        (unavoidably) imperfect.\n      break_long_words (default: true)\n        Break words longer than 'width'.  If false, those words will not\n        be broken, and some lines might be longer than 'width'.\n      break_on_hyphens (default: true)\n        Allow breaking hyphenated words. If true, wrapping will occur\n        preferably on whitespaces and right after hyphens part of\n        compound words.\n      drop_whitespace (default: true)\n        Drop leading and trailing whitespace from lines.\n    t\1\0\0\0 u\1\0\0\0 sL\0\0\0(\\s+|[^\\s\\w]*\\w+[^0-9\\W]-(?=\\w+[^0-9\\W])|(?<=[\\w\\!\\\"\\'\\&\\.\\,\\?])-{2,}(?=\\w))s\5\0\0\0(\\s+)s\25\0\0\0[%s][\\.\\!\\?][\\\"\\']?\\ZiF\0\0\0t\0\0\0\0c\n\0\0\0\n\0\0\0\3\0\0\0C\0\0\0s\221\0\0\0|\1\0|\0\0_\0\0|\2\0|\0\0_\1\0|\3\0|\0\0_\2\0|\4\0|\0\0_\3\0|\5\0|\0\0_\4\0|\6\0|\0\0_\5\0|\7\0|\0\0_\6\0|\10\0|\0\0_\7\0|\t\0|\0\0_\10\0t\t\0j\n\0|\0\0j\v\0j\f\0t\t\0j\r\0\203\2\0|\0\0_\16\0t\t\0j\n\0|\0\0j\17\0j\f\0t\t\0j\r\0\203\2\0|\0\0_\20\0d\0\0S(\1\0\0\0N(\21\0\0\0t\5\0\0\0widtht\16\0\0\0initial_indentt\21\0\0\0subsequent_indentt\v\0\0\0expand_tabst\22\0\0\0replace_whitespacet\24\0\0\0fix_sentence_endingst\20\0\0\0break_long_wordst\17\0\0\0drop_whitespacet\20\0\0\0break_on_hyphenst\2\0\0\0ret\7\0\0\0compilet\n\0\0\0wordsep_ret\7\0\0\0patternt\1\0\0\0Ut\16\0\0\0wordsep_re_unit\21\0\0\0wordsep_simple_ret\25\0\0\0wordsep_simple_re_uni(\n\0\0\0t\4\0\0\0selfR\t\0\0\0R\n\0\0\0R\v\0\0\0R\f\0\0\0R\r\0\0\0R\16\0\0\0R\17\0\0\0R\20\0\0\0R\21\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyt\10\0\0\0__init__s\0\0\0s\30\0\0\0\0\n\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\1\t\5\36\1\6\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0sp\0\0\0|\0\0j\0\0r\30\0|\1\0j\1\0\203\0\0}\1\0n\0\0|\0\0j\2\0rl\0t\3\0|\1\0t\4\0\203\2\0rE\0|\1\0j\5\0|\0\0j\6\0\203\1\0}\1\0ql\0t\3\0|\1\0t\7\0\203\2\0rl\0|\1\0j\5\0|\0\0j\10\0\203\1\0}\1\0ql\0n\0\0|\1\0S(\1\0\0\0s\332\0\0\0_munge_whitespace(text : string) -> string\n\n        Munge whitespace in text: expand tabs and convert all other\n        whitespace characters to spaces.  Eg. \" foo\tbar\n\nbaz\"\n        becomes \" foo    bar  baz\".\n        (\t\0\0\0R\f\0\0\0t\n\0\0\0expandtabsR\r\0\0\0t\n\0\0\0isinstancet\3\0\0\0strt\t\0\0\0translatet\20\0\0\0whitespace_transR\0\0\0\0t\30\0\0\0unicode_whitespace_trans(\2\0\0\0R\32\0\0\0", 4096) = 4096
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=669372, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=11871, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(6, "t\4\0\0\0text(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyt\21\0\0\0_munge_whitespace\222\0\0\0s\20\0\0\0\0\7\t\1\17\1\t\1\17\1\25\1\17\1\30\1c\2\0\0\0\4\0\0\0\3\0\0\0C\0\0\0sp\0\0\0t\0\0|\1\0t\1\0\203\2\0r0\0|\0\0j\2\0r$\0|\0\0j\3\0}\2\0qN\0|\0\0j\4\0}\2\0n\36\0|\0\0j\2\0rE\0|\0\0j\5\0}\2\0n\t\0|\0\0j\6\0}\2\0|\2\0j\7\0|\1\0\203\1\0}\3\0t\10\0d\1\0|\3\0\203\2\0}\3\0|\3\0S(\2\0\0\0sN\2\0\0_split(text : string) -> [string]\n\n        Split the text to wrap into indivisible chunks.  Chunks are\n        not quite the same as words; see _wrap_chunks() for full\n        details.  As an example, the text\n          Look, goof-ball -- use the -b option!\n        breaks into the following chunks:\n          'Look,', ' ', 'goof-', 'ball', ' ', '--', ' ',\n          'use', ' ', 'the', ' ', '-b', ' ', 'option!'\n        if break_on_hyphens is True, or in:\n          'Look,', ' ', 'goof-ball', ' ', '--', ' ',\n          'use', ' ', 'the', ' ', '-b', ' ', option!'\n        otherwise.\n        N(\n\0\0\0R\35\0\0\0R\0\0\0\0R\21\0\0\0R\27\0\0\0R\31\0\0\0R\24\0\0\0R\30\0\0\0t\5\0\0\0splitt\6\0\0\0filtert\4\0\0\0None(\4\0\0\0R\32\0\0\0R\"\0\0\0t\3\0\0\0patt\6\0\0\0chunks(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyt\6\0\0\0_split\243\0\0\0s\24\0\0\0\0\17\17\1\t\1\f\2\f\2\t\1\f\2\t\1\17\1\17\1c\2\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s|\0\0\0d\1\0}\2\0|\0\0j\0\0j\1\0}\3\0xc\0|\2\0t\2\0|\1\0\203\1\0d\2\0\30k\0\0rw\0|\1\0|\2\0d\2\0\27\31d\3\0k\2\0rj\0|\3\0|\1\0|\2\0\31\203\1\0rj\0d\4\0|\1\0|\2\0d\2\0\27<|\2\0d\5\0007}\2\0q\25\0|\2\0d\2\0007}\2\0q\25\0Wd\6\0S(\7\0\0\0sf\1\0\0_fix_sentence_endings(chunks : [string])\n\n        Correct for sentence endings buried in 'chunks'.  Eg. when the\n        original text contains \"... foo.\nBar ...\", munge_whitespace()\n        and split() will convert that to [..., \"foo.\", \" \", \"Bar\", ...]\n        which has one too few spaces; this method simply changes the one\n        space to two.\n        i\0\0\0\0i\1\0\0\0R\7\0\0\0s\2\0\0\0  i\2\0\0\0N(\3\0\0\0t\17\0\0\0sentence_end_ret\6\0\0\0searcht\3\0\0\0len(\4\0\0\0R\32\0\0\0R(\0\0\0t\1\0\0\0it\t\0\0\0patsearch(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyt\25\0\0\0_fix_sentence_endings\300\0\0\0s\16\0\0\0\0\t\6\1\f\1\31\1$\1\16\1\r\2c\5\0\0\0\6\0\0\0\3\0\0\0C\0\0\0sr\0\0\0|\4\0d\1\0k\0\0r\25\0d\1\0}\5\0n\n\0|\4\0|\3\0\30}\5\0|\0\0j\0\0rR\0|\2\0j\1\0|\1\0d\2\0\31|\5\0 \203\1\0\1|\1\0d\2\0\31|\5\0\37|\1\0d\2\0<n\34\0|\2\0sn\0|\2\0j\1\0|\1\0j\2\0\203\0\0\203\1\0\1n\0\0d\3\0S(\4\0\0\0s\n\1\0\0_handle_long_word(chunks : [string],\n                             cur_line : [string],\n                             cur_len : int, width : int)\n\n        Handle a chunk of text (most likely a word, not whitespace) that\n        is too long to fit in any line.\n        i\1\0\0\0i\377\377\377\377N(\3\0\0\0R\17\0\0\0t\6\0\0\0appendt\3\0\0\0pop(\6\0\0\0R\32\0\0\0t\17\0\0\0reversed_chunkst\10\0\0\0cur_linet\7\0\0\0cur_lenR\t\0\0\0t\n\0\0\0space_left(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyt\21\0\0\0_handle_long_word\322\0\0\0s\20\0\0\0\0\n\f\1\t\2\n\4\t\1\25\1\25\5\6\1c\2\0\0\0\10\0\0\0\5\0\0\0C\0\0\0s\204\1\0\0g\0\0}\2\0|\0\0j\0\0d\1\0k\1\0r+\0t\1\0d\2\0|\0\0j\0\0\26\203\1\0\202\1\0n\0\0|\1\0j\2\0\203\0\0\1xH\1|\1\0r\177\1g\0\0}\3\0d\1\0}\4\0|\2\0r\\\0|\0\0j\3\0}\5\0n\t\0|\0\0j\4\0}\5\0|\0\0j\0\0t\5\0|\5\0\203\1\0\30}\6\0|\0\0j\6\0r\247\0|\1\0d\3\0\31j\7\0\203\0\0d\4\0k\2\0r\247\0|\2\0r\247\0|\1\0d\3\0=n\0\0xK\0|\1\0r\364\0t\5\0|\1\0d\3\0\31\203\1\0}\7\0|\4\0|\7\0\27|\6\0k\1\0r\360\0|\3\0j\10\0|\1\0j\t\0\203\0\0\203\1\0\1|\4\0|\7\0007}\4\0q\252\0Pq\252\0W|\1\0r*\1t\5\0|\1\0d\3\0\31\203\1\0|\6\0k\4\0r*\1|\0\0j\n\0|\1\0|\3\0|\4\0|\6\0\203\4\0\1n\0\0|\0\0j\6\0rY\1|\3\0rY\1|\3\0d\3\0\31j\7\0\203\0\0d\4\0k\2\0rY\1|\3\0d\3\0=n\0\0|\3\0r8\0|\2\0j\10\0|\5\0d\4\0j\v\0|\3\0\203\1\0\27\203\1\0\1q8\0q8\0W|\2\0S(\5\0\0\0s\237\2\0\0_wrap_chunks(chunks : [string]) -> [string]\n\n        Wrap a sequence of text chunks and return a list of lines of\n        length 'self.width' or less.  (If 'break_long_words' is false,\n        some lines may be longer than this.)  Chunks correspond roughly\n        to words and the whitespace between them: each chunk is\n        indivisible (modulo 'break_long_words'), but a line break can\n        come between any two chunks.  Chunks should not have internal\n        whitespace; ie. a chunk is either all whitespace or a \"word\".\n        Whitespace chunks will be removed from the beginning and end of\n        lines, but apart from that whitespace is preserved.\n        i\0\0\0\0s\36\0\0\0invalid width %r (must be > 0)i\377\377\377\377R\10\0\0\0(\f\0\0\0R\t\0\0\0t\n\0\0\0ValueErrort\7\0\0\0reverseR\v\0\0\0R\n\0\0\0R,\0\0\0R\20\0\0\0t\5\0\0\0stripR0\0\0\0R1\0\0\0R6\0\0\0t\4\0\0\0join(\10\0\0\0R\32\0\0\0R(\0\0\0t\5\0\0\0linesR3\0\0\0R4\0\0\0t\6\0\0\0indentR\t\0\0\0t\1\0\0\0l(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyt\f\0\0\0_wrap_chunks\363\0\0\0s4\0\0\0\0\r\6\1\17\1\26\4\n\2\t\4\6\1\6\3\6\1\f\2\t\3\23\4%\1\n\2\t\1\20\3\20\1\23\1\r\4\5\4\34\1\31\3%\1\n\4\6\1!\2c\2\0\0\0\3\0\0\0\2\0\0\0C\0\0\0sD\0\0\0|\0\0j\0\0|\1\0\203\1\0}\1\0|\0\0j\1\0|\1\0\203\1\0}\2\0|\0\0j\2\0r7\0|\0\0j\3\0|\2\0\203\1\0\1n\0\0|\0\0j\4\0|\2\0\203\1\0S(\1\0\0\0s^\1\0\0wrap(text : string) -> [string]\n\n        Reformat the single paragraph in 'text' so it fits in lines of\n        no more than 'self.width' columns, and return a list of wrapped\n        lines.  Tabs in 'text' are expanded with ", 4096) = 4096
27308 read(6, "string.expandtabs(),\n        and all other whitespace characters (including newline) are\n        converted to space.\n        (\5\0\0\0R#\0\0\0R)\0\0\0R\16\0\0\0R/\0\0\0R>\0\0\0(\3\0\0\0R\32\0\0\0R\"\0\0\0R(\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyR\4\0\0\0<\1\0\0s\n\0\0\0\0\t\17\1\17\1\t\1\20\1c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\26\0\0\0d\1\0j\0\0|\0\0j\1\0|\1\0\203\1\0\203\1\0S(\2\0\0\0s\336\0\0\0fill(text : string) -> string\n\n        Reformat the single paragraph in 'text' to fit in lines of no\n        more than 'self.width' columns, and return a new string\n        containing the entire wrapped paragraph.\n        s\1\0\0\0\n(\2\0\0\0R:\0\0\0R\4\0\0\0(\2\0\0\0R\32\0\0\0R\"\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyR\5\0\0\0K\1\0\0s\2\0\0\0\0\7(\35\0\0\0R\1\0\0\0R\2\0\0\0t\7\0\0\0__doc__t\6\0\0\0stringt\t\0\0\0maketranst\v\0\0\0_whitespaceR,\0\0\0R \0\0\0R!\0\0\0t\3\0\0\0ordt\6\0\0\0uspacet\3\0\0\0mapt\1\0\0\0xR\22\0\0\0R\23\0\0\0R\24\0\0\0R\30\0\0\0t\t\0\0\0lowercaseR*\0\0\0t\4\0\0\0Truet\5\0\0\0FalseR\33\0\0\0R#\0\0\0R)\0\0\0R/\0\0\0R6\0\0\0R>\0\0\0R\4\0\0\0R\5\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyR\3\0\0\0(\0\0\0s6\0\0\0\6(\6\2\34\2\6\1\f\1\26\1\16\10\6\1\t\10\17\4\t\4\r\4\3\1\3\1\3\1\3\1\3\1\3\1\3\1\3\1\f\26\t\21\t\35\t\22\t!\tI\t\17iF\0\0\0c\2\0\0\0\4\0\0\0\4\0\0\0K\0\0\0s\37\0\0\0t\0\0d\1\0|\1\0|\2\0\215\0\1}\3\0|\3\0j\1\0|\0\0\203\1\0S(\2\0\0\0s\310\1\0\0Wrap a single paragraph of text, returning a list of wrapped lines.\n\n    Reformat the single paragraph in 'text' so it fits in lines of no\n    more than 'width' columns, and return a list of wrapped lines.  By\n    default, tabs in 'text' are expanded with string.expandtabs(), and\n    all other whitespace characters (including newline) are converted to\n    space.  See TextWrapper class for available keyword args to customize\n    wrapping behaviour.\n    R\t\0\0\0(\2\0\0\0R\3\0\0\0R\4\0\0\0(\4\0\0\0R\"\0\0\0R\t\0\0\0t\6\0\0\0kwargst\1\0\0\0w(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyR\4\0\0\0W\1\0\0s\4\0\0\0\0\n\22\1c\2\0\0\0\4\0\0\0\4\0\0\0K\0\0\0s\37\0\0\0t\0\0d\1\0|\1\0|\2\0\215\0\1}\3\0|\3\0j\1\0|\0\0\203\1\0S(\2\0\0\0s\226\1\0\0Fill a single paragraph of text, returning a new string.\n\n    Reformat the single paragraph in 'text' to fit in lines of no more\n    than 'width' columns, and return a new string containing the entire\n    wrapped paragraph.  As with wrap(), tabs are expanded and other\n    whitespace characters converted to space.  See TextWrapper class for\n    available keyword args to customize wrapping behaviour.\n    R\t\0\0\0(\2\0\0\0R\3\0\0\0R\5\0\0\0(\4\0\0\0R\"\0\0\0R\t\0\0\0RJ\0\0\0RK\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyR\5\0\0\0d\1\0\0s\4\0\0\0\0\t\22\1s\7\0\0\0^[ \t]+$s\22\0\0\0(^[ \t]*)(?:[^ \t\n])c\1\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\371\0\0\0d\6\0}\1\0t\1\0j\2\0d\1\0|\0\0\203\2\0}\0\0t\3\0j\4\0|\0\0\203\1\0}\2\0xT\0|\2\0D]L\0}\3\0|\1\0d\6\0k\10\0rI\0|\3\0}\1\0q.\0|\3\0j\5\0|\1\0\203\1\0r[\0q.\0|\1\0j\5\0|\3\0\203\1\0rs\0|\3\0}\1\0q.\0d\1\0}\1\0Pq.\0Wd\2\0r\323\0|\1\0r\323\0xF\0|\0\0j\6\0d\3\0\203\1\0D]2\0}\4\0|\4\0\fs\232\0|\4\0j\5\0|\1\0\203\1\0s\232\0t\7\0d\4\0|\4\0|\1\0f\2\0\26\203\1\0\202\1\0q\232\0Wn\0\0|\1\0r\365\0t\10\0j\2\0d\5\0|\1\0\27d\1\0|\0\0\203\3\0}\0\0n\0\0|\0\0S(\7\0\0\0s9\2\0\0Remove any common leading whitespace from every line in `text`.\n\n    This can be used to make triple-quoted strings line up with the left\n    edge of the display, while still presenting them in the source code\n    in indented form.\n\n    Note that tabs and spaces are both treated as whitespace, but they\n    are not equal: the lines \"  hello\" and \"\thello\" are\n    considered to have no common leading whitespace.  (This behaviour is\n    new in Python 2.5; older versions of this module incorrectly\n    expanded tabs before searching for common leading whitespace.)\n    R\10\0\0\0i\0\0\0\0s\1\0\0\0\ns\26\0\0\0line = %r, margin = %rs\5\0\0\0(?m)^N(\t\0\0\0R&\0\0\0t\23\0\0\0_whitespace_only_ret\3\0\0\0subt\26\0\0\0_leading_whitespace_ret\7\0\0\0findallt\n\0\0\0startswithR$\0\0\0t\16\0\0\0AssertionErrorR\22\0\0\0(\5\0\0\0R\"\0\0\0t\6\0\0\0margint\7\0\0\0indentsR<\0\0\0t\4\0\0\0line(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyR\6\0\0\0v\1\0\0s&\0\0\0\0\17\6\1\22\1\17\1\r\1\f\1\t\4\17\1\3\4\17\1\t\5\6\1\5\3\f\1\26\1\31\1\32\2\6\1\34\1t\10\0\0\0__main__s \0\0\0Hello there.\n  This is indented.(\23\0\0\0R?\0\0\0t\f\0\0\0__revision__R@\0\0\0R\22\0\0\0t\7\0\0\0unicodeR\0\0\0\0t\t\0\0\0NameErrort\6\0\0\0objectt\7\0\0\0__all__RB\0\0\0R\3\0\0\0R\4\0\0\0R\5\0\0\0R\23\0\0\0t\t\0\0\0MULTILINERL\0\0\0RN\0\0\0R\6\0\0\0R\1\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\36\0\0\0/usr/lib/python2.7/textwrap.pyt\10\0\0\0<module>\2\0\0\0s\"\0\0\0\6\6\6\2\30\2\3\1\n\1\r\3\32\v\22\n\6\2\23\377\0000\f\r\f\17\25\1\25\2\t0\f\3", 4096) = 3679
27308 read(6, "", 4096)                 = 0
27308 mmap2(NULL, 262144, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7727000
27308 munmap(0xb7727000, 262144)        = 0
27308 mmap2(NULL, 262144, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7727000
27308 close(6)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 stat64("string", 0xbfffd57c)      = -1 ENOENT (No such file or directory)
27308 open("string.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("string.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("stringmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("string.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("string.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/string", 0xbfffd57c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/string.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/string.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/stringmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/string.py", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=661590, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=48, st_size=21548, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/string.pyc", O_RDONLY|O_LARGEFILE) = 8
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669373, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=20357, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(8, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\5\0\0\0@\0\0\0s\226\2\0\0d\0\0Z\0\0d\1\0Z\1\0d\2\0Z\2\0d\3\0Z\3\0e\2\0e\3\0\27Z\4\0e\2\0Z\5\0e\3\0Z\6\0e\5\0e\6\0\27Z\7\0d\4\0Z\10\0e\10\0d\5\0\27d\6\0\27Z\t\0d\7\0Z\n\0d\10\0Z\v\0e\10\0e\4\0\27e\v\0\27e\1\0\27Z\f\0e\r\0e\16\0e\17\0d\t\0\203\1\0\203\2\0Z\20\0e\21\0d\n\0\203\1\0j\22\0e\20\0\203\1\0Z\23\0[\20\0d\16\0d\v\0\204\1\0Z\25\0d\16\0a\26\0d\f\0\204\0\0Z\27\0d\r\0d\16\0l\30\0Z\31\0d\17\0d4\0d\20\0\204\0\0\203\0\0YZ\32\0d\21\0e\33\0f\1\0d\22\0\204\0\0\203\0\0YZ\34\0d\23\0d5\0d\24\0\204\0\0\203\0\0YZ\35\0e\36\0Z\37\0e\36\0Z \0e\36\0Z!\0e\36\0Z\"\0d\25\0\204\0\0Z#\0d\26\0\204\0\0Z$\0d\27\0\204\0\0Z%\0d\16\0d\30\0\204\1\0Z&\0d\16\0d\31\0\204\1\0Z'\0d\16\0d\32\0\204\1\0Z(\0d\16\0d\r\0d\33\0\204\2\0Z)\0e)\0Z*\0d\16\0d\r\0d\34\0\204\2\0Z+\0d\35\0d\36\0\204\1\0Z\22\0e\22\0Z,\0d\37\0\204\0\0Z-\0d \0\204\0\0Z.\0d!\0\204\0\0Z/\0d\"\0\204\0\0Z0\0d#\0\204\0\0Z1\0e2\0Z3\0e4\0Z5\0e6\0Z7\0d$\0\204\0\0Z8\0d%\0d&\0\204\1\0Z9\0d%\0d'\0\204\1\0Z:\0d(\0\204\0\0Z;\0d)\0\204\0\0Z<\0d*\0\204\0\0Z=\0d+\0\204\0\0Z>\0d,\0d-\0\204\1\0Z?\0d\n\0d.\0\204\1\0Z@\0d/\0\204\0\0ZA\0d\r\0d0\0\204\1\0ZB\0y0\0d\r\0d1\0lC\0m\27\0Z\27\0m\2\0Z\2\0m\3\0Z\3\0m\1\0Z\1\0\1e\2\0e\3\0\27Z\4\0Wn\21\0\4eD\0k\n\0r{\2\1\1\1n\1\0Xd2\0eE\0f\1\0d3\0\204\0\0\203\0\0YZF\0d\16\0S(6\0\0\0s\372\3\0\0A collection of string operations (most are no longer used).\n\nWarning: most of the code you see here isn't normally used nowadays.\nBeginning with Python 1.6, many of these functions are implemented as\nmethods on the standard string object. They used to be implemented by\na built-in module called strop, but strop is now obsolete itself.\n\nPublic module variables:\n\nwhitespace -- a string containing all characters considered whitespace\nlowercase -- a string containing all characters considered lowercase letters\nuppercase -- a string containing all characters considered uppercase letters\nletters -- a string containing all characters considered letters\ndigits -- a string containing all characters considered decimal digits\nhexdigits -- a string containing all characters considered hexadecimal digits\noctdigits -- a string containing all characters considered octal digits\npunctuation -- a string containing all characters considered punctuation\nprintable -- a string containing all characters considered printable\n\ns\6\0\0\0 \t\n\r\v\ft\32\0\0\0abcdefghijklmnopqrstuvwxyzt\32\0\0\0ABCDEFGHIJKLMNOPQRSTUVWXYZt\n\0\0\0000123456789t\6\0\0\0abcdeft\6\0\0\0ABCDEFt\10\0\0\00001234567s \0\0\0!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~i\0\1\0\0t\0\0\0\0c\2\0\0\0\2\0\0\0\4\0\0\0C\0\0\0s&\0\0\0|\1\0p\t\0d\1\0j\0\0d\2\0\204\0\0|\0\0j\1\0|\1\0\203\1\0D\203\1\0\203\1\0S(\3\0\0\0s\221\1\0\0capwords(s [,sep]) -> string\n\n    Split the argument into words using split, capitalize each\n    word using capitalize, and join the capitalized words using\n    join.  If the optional second argument sep is absent or None,\n    runs of whitespace characters are replaced by a single space\n    and leading and trailing whitespace are removed, otherwise\n    sep is used to split and join the words.\n\n    t\1\0\0\0 c\1\0\0\0\2\0\0\0\2\0\0\0s\0\0\0s\33\0\0\0|\0\0]\21\0}\1\0|\1\0j\0\0\203\0\0V\1q\3\0d\0\0S(\1\0\0\0N(\1\0\0\0t\n\0\0\0capitalize(\2\0\0\0t\2\0\0\0.0t\1\0\0\0x(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pys\t\0\0\0<genexpr>8\0\0\0s\2\0\0\0\6\0(\2\0\0\0t\4\0\0\0joint\5\0\0\0split(\2\0\0\0t\1\0\0\0st\3\0\0\0sep(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\10\0\0\0capwords-\0\0\0s\2\0\0\0\0\vc\2\0\0\0\4\0\0\0\5\0\0\0C\0\0\0s\213\0\0\0t\0\0|\0\0\203\1\0t\0\0|\1\0\203\1\0k\3\0r$\0t\1\0d\1\0\202\2\0n\0\0t\2\0s9\0t\3\0t\4\0\203\1\0a\2\0n\0\0t\2\0\36}\2\0t\5\0t\6\0|\0\0\203\2\0}\0\0x,\0t\7\0t\0\0|\0\0\203\1\0\203\1\0D]\30\0}\3\0|\1\0|\3\0\31|\2\0|\0\0|\3\0\31<qb\0Wd\2\0j\10\0|\2\0\203\1\0S(\3\0\0\0s\301\0\0\0maketrans(frm, to) -> string\n\n    Return a translation table (a string of 256 bytes long)\n    suitable for use in string.translate.  The strings frm and to\n    must be of the same length.\n\n    s)\0\0\0maketrans arguments must have same lengthR\6\0\0\0(\t\0\0\0t\3\0\0\0lent\n\0\0\0ValueErrort\7\0\0\0_idmapLt\4\0\0\0listt\6\0\0\0_idmapt\3\0\0\0mapt\3\0\0\0ordt\5\0\0\0rangeR\v\0\0\0(\4\0\0\0t\7\0\0\0fromstrt\5\0\0\0tostrt\1\0\0\0Lt\1\0\0\0i(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\t\0\0\0maketrans=\0\0\0s\22\0\0\0\0\10\30\1\f\2\6\1\17\1\7\1\17\1\31\1\26\1i\377\377\377\377Nt\t\0\0\0_multimapc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s \0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0RS(\3\0\0\0s\207\0\0\0Helper class for combining multiple mappings.\n\n    Used by .{safe_,}substitute() to combine the mapping and keyword\n    arguments.\n    c\3\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s\26\0\0\0|\1\0|\0\0_\0\0|\2\0|\0\0_\1\0d\0\0S(\1\0\0\0N(\2\0\0\0t\10\0\0\0_primaryt\n\0\0\0_secondary(\3\0\0\0t\4\0\0\0selft\7\0\0\0primaryt\t\0\0\0secondary(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\10\0\0\0__init__[\0\0\0s\4\0\0\0\0\1\t\1c\2\0\0\0\2\0\0\0\5\0\0\0C\0\0\0s/\0\0\0y\17\0|\0\0j\0\0|\1\0\31SWn\31\0\4t\1\0k\n\0r*\0\1\1\1|\0\0j\2\0|\1\0\31SXd\0\0S(\1\0\0\0N(\3\0\0\0R\36\0\0\0t\10\0\0\0KeyErrorR\37\0\0\0(\2\0\0\0R \0\0\0t\3\0\0\0key(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\v\0\0\0__getitem___\0\0\0s\10\0\0\0\0\1\3\1\17\1\r\1(\5\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__t\7\0\0\0__doc__R#\0\0\0R&\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR\35\0\0\0U\0\0\0s\6\0\0\0\6\5\6\1\t\4t\22\0\0\0_TemplateMetaclassc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\27\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0\204\0\0Z\3\0RS(\2\0\0\0s/\1\0\0\n    %(delim)s(?:\n  ", 4096) = 4096
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669373, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=20357, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(8, "    (?P<escaped>%(delim)s) |   # Escape sequence of two delimiters\n      (?P<named>%(id)s)      |   # delimiter and a Python identifier\n      {(?P<braced>%(id)s)}   |   # delimiter and a braced identifier\n      (?P<invalid>)              # Other ill-formed delimiter exprs\n    )\n    c\4\0\0\0\5\0\0\0\4\0\0\0C\0\0\0s\201\0\0\0t\0\0t\1\0|\0\0\203\2\0j\2\0|\1\0|\2\0|\3\0\203\3\0\1d\1\0|\3\0k\6\0r4\0|\0\0j\3\0}\4\0n*\0t\1\0j\3\0i\2\0t\4\0j\5\0|\0\0j\6\0\203\1\0d\2\0006|\0\0j\7\0d\3\0006\26}\4\0t\4\0j\10\0|\4\0t\4\0j\t\0t\4\0j\n\0B\203\2\0|\0\0_\3\0d\0\0S(\4\0\0\0Nt\7\0\0\0patternt\5\0\0\0delimt\2\0\0\0id(\v\0\0\0t\5\0\0\0superR*\0\0\0R#\0\0\0R+\0\0\0t\3\0\0\0_ret\6\0\0\0escapet\t\0\0\0delimitert\t\0\0\0idpatternt\7\0\0\0compilet\n\0\0\0IGNORECASEt\7\0\0\0VERBOSE(\5\0\0\0t\3\0\0\0clst\4\0\0\0namet\5\0\0\0basest\3\0\0\0dctR+\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR#\0\0\0p\0\0\0s\16\0\0\0\0\1\34\1\f\1\f\2\t\1\23\1\16\2(\4\0\0\0R'\0\0\0R(\0\0\0R+\0\0\0R#\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR*\0\0\0f\0\0\0s\4\0\0\0\6\10\6\2t\10\0\0\0Templatec\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0sD\0\0\0e\0\0Z\1\0d\0\0Z\2\0e\3\0Z\4\0d\1\0Z\5\0d\2\0Z\6\0d\3\0\204\0\0Z\7\0d\4\0\204\0\0Z\10\0d\5\0\204\0\0Z\t\0d\6\0\204\0\0Z\n\0RS(\7\0\0\0s.\0\0\0A string class for supporting $-substitutions.t\1\0\0\0$s\20\0\0\0[_a-z][_a-z0-9]*c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\1\0|\0\0_\0\0d\0\0S(\1\0\0\0N(\1\0\0\0t\10\0\0\0template(\2\0\0\0R \0\0\0R<\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR#\0\0\0\203\0\0\0s\2\0\0\0\0\1c\2\0\0\0\6\0\0\0\5\0\0\0C\0\0\0s}\0\0\0|\1\0j\0\0d\1\0\203\1\0}\2\0|\0\0j\1\0|\2\0 j\2\0t\3\0\203\1\0}\3\0|\3\0s:\0d\2\0}\4\0d\2\0}\5\0n)\0|\2\0t\4\0d\3\0j\5\0|\3\0d\4\0 \203\1\0\203\1\0\30}\4\0t\4\0|\3\0\203\1\0}\5\0t\6\0d\5\0|\5\0|\4\0f\2\0\26\203\1\0\202\1\0d\0\0S(\6\0\0\0Nt\7\0\0\0invalidi\1\0\0\0R\6\0\0\0i\377\377\377\377s.\0\0\0Invalid placeholder in string: line %d, col %d(\7\0\0\0t\5\0\0\0startR<\0\0\0t\n\0\0\0splitlinest\4\0\0\0TrueR\20\0\0\0R\v\0\0\0R\21\0\0\0(\6\0\0\0R \0\0\0t\2\0\0\0moR\33\0\0\0t\5\0\0\0linest\5\0\0\0colnot\6\0\0\0lineno(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\10\0\0\0_invalid\210\0\0\0s\22\0\0\0\0\1\17\1\26\1\6\1\6\1\t\2\35\1\f\1\6\1c\0\0\0\0\3\0\0\0\4\0\0\0\17\0\0\0s\250\0\0\0|\0\0s\25\0t\0\0d\1\0\203\1\0\202\1\0n\0\0|\0\0d\2\0\31|\0\0d\3\0\37\2\211\1\0}\0\0t\1\0|\0\0\203\1\0d\3\0k\4\0rK\0t\0\0d\4\0\203\1\0\202\1\0n\0\0|\0\0sZ\0|\1\0\211\0\0n&\0|\1\0rv\0t\2\0|\1\0|\0\0d\2\0\31\203\2\0\211\0\0n\n\0|\0\0d\2\0\31\211\0\0\207\0\0\207\1\0f\2\0d\5\0\206\0\0}\2\0\210\1\0j\3\0j\4\0|\2\0\210\1\0j\5\0\203\2\0S(\6\0\0\0Ns>\0\0\0descriptor 'substitute' of 'Template' object needs an argumenti\0\0\0\0i\1\0\0\0s\35\0\0\0Too many positional argumentsc\1\0\0\0\3\0\0\0\3\0\0\0\23\0\0\0s\226\0\0\0|\0\0j\0\0d\1\0\203\1\0p\33\0|\0\0j\0\0d\2\0\203\1\0}\1\0|\1\0d\0\0k\t\0r?\0\210\0\0|\1\0\31}\2\0d\3\0|\2\0f\1\0\26S|\0\0j\0\0d\4\0\203\1\0d\0\0k\t\0r[\0\210\1\0j\2\0S|\0\0j\0\0d\5\0\203\1\0d\0\0k\t\0r\200\0\210\1\0j\3\0|\0\0\203\1\0\1n\0\0t\4\0d\6\0\210\1\0j\5\0\203\2\0\202\1\0d\0\0S(\7\0\0\0Nt\5\0\0\0namedt\6\0\0\0braceds\2\0\0\0%st\7\0\0\0escapedR=\0\0\0s#\0\0\0Unrecognized named group in pattern(\6\0\0\0t\5\0\0\0groupt\4\0\0\0NoneR1\0\0\0RE\0\0\0R\21\0\0\0R+\0\0\0(\3\0\0\0RA\0\0\0RF\0\0\0t\3\0\0\0val(\2\0\0\0t\7\0\0\0mappingR \0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\7\0\0\0convert\242\0\0\0s\24\0\0\0\0\2\36\1\f\1\n\3\v\1\25\1\7\1\25\1\20\1\6\1(\6\0\0\0t\t\0\0\0TypeErrorR\20\0\0\0R\35\0\0\0R+\0\0\0t\3\0\0\0subR<\0\0\0(\3\0\0\0t\4\0\0\0argst\3\0\0\0kwsRM\0\0\0(\0\0\0\0(\2\0\0\0RL\0\0\0R \0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\n\0\0\0substitute\224\0\0\0s\30\0\0\0\0\1\6\1\17\2\25\1\22\1\17\1\6\1\t\1\6\1\26\2\n\2\22\16c\0\0\0\0\3\0\0\0\4\0\0\0\17\0\0\0s\250\0\0\0|\0\0s\25\0t\0\0d\1\0\203\1\0\202\1\0n\0\0|\0\0d\2\0\31|\0\0d\3\0\37\2\211\1\0}\0\0t\1\0|\0\0\203\1\0d\3\0k\4\0rK\0t\0\0d\4\0\203\1\0\202\1\0n\0\0|\0\0sZ\0|\1\0\211\0\0n&\0|\1\0rv\0t\2\0|\1\0|\0\0d\2\0\31\203\2\0\211\0\0n\n\0|\0\0d\2\0\31\211\0\0\207\0\0\207\1\0f\2\0d\5\0\206\0\0}\2\0\210\1\0j\3\0j\4\0|\2\0\210\1\0j\5\0\203\2\0S(\6\0\0\0NsC\0\0\0descriptor 'safe_substitute' of 'Template' object needs an argumenti\0\0\0\0i\1\0\0\0s\35\0\0\0Too many positional argumentsc\1\0\0\0\2\0\0\0\5\0\0\0\23\0\0\0s\254\0\0\0|\0\0j\0\0d\1\0\203\1\0p\33\0|\0\0j\0\0d\2\0\203\1\0}\1\0|\1\0d\0\0k\t\0r[\0y\23\0d\3\0\210\0\0|\1\0\31f\1\0\26SWq[\0\4t\2\0k\n\0rW\0\1\1\1|\0\0j\0\0\203\0\0SXn\0\0|\0\0j\0\0d\4\0\203\1\0d\0\0k\t\0rw\0\210\1\0j\3\0S|\0\0j\0\0d\5\0\203\1\0d\0\0k\t\0r\226\0|\0\0j\0\0\203\0\0St\4\0d\6\0\210\1\0j\5\0\203\2\0\202\1\0d\0\0S(\7\0\0\0NRF\0\0\0RG\0\0\0s\2\0\0\0%sRH\0\0\0R=\0\0\0s#\0\0\0Unrecognized named group in pattern(\6\0\0\0RI\0\0\0RJ\0\0\0R$\0\0\0R1\0\0\0R\21\0\0\0R+\0\0\0(\2\0\0\0RA\0\0\0RF\0\0\0(\2\0\0\0RL\0\0\0R \0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRM\0\0\0\300\0\0\0s\30\0\0\0\0\1\36\1\f\1\3\3\23\1\r\1\16\1\25\1\7\1\25\1\n\1\6\1(\6\0\0\0RN\0\0\0R\20\0\0\0R\35\0\0\0R+\0\0\0RO\0\0\0R<\0\0\0(\3\0\0\0RP\0\0\0RQ\0\0\0RM\0\0\0(\0\0\0\0(\2\0\0\0RL\0\0\0R \0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\17\0\0\0safe_substitute\262\0\0\0s\30\0\0\0\0\1\6\1\17\2\25\1\22\1\17\1\6\1\t\1\6\1\26\2\n\2\22\17(\v\0\0\0R'\0\0\0R(\0\0\0R)\0\0\0R*\0\0\0t\r\0\0\0__metaclass__R1\0\0\0R2\0\0\0R#\0\0\0RE\0\0\0RR\0\0\0RS\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR:\0\0\0|\0\0\0s\20\0\0\0\6\1\6\1\6\2\6\1\6\2\t\5\t\f\t\36c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0|\0\0j\0\0\203\0\0S(\1\0\0\0sS\0\0\0lower(s) -> string\n\n    Return a copy of the string s converted to lowercase.\n\n    (\1\0\0\0t\5\0\0\0lower(\1\0\0\0R\r\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRU\0\0\0\336\0\0\0s\2\0\0\0\0\6c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0|\0\0j\0\0\203\0\0S(\1\0\0\0sS\0\0\0upper(s) -> string\n\n    Return a copy of the string s converted to uppercase.\n\n    (\1\0\0\0t\5\0\0\0upper(\1\0\0\0R\r\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRV\0\0\0\347\0\0\0s\2\0\0\0\0\6c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0|\0\0j\0\0\203\0\0S(\1\0\0\0s\204\0\0\0swapcase(s) -> string\n\n    Return a copy of the string s with upper case characters\n    converted to lowercase and vice versa.\n\n    (\1\0\0\0t\10\0\0\0swapcase(\1\0\0\0R\r\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRW\0\0\0\360\0\0\0s\2\0\0\0\0\7c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0|\1\0\203\1\0S(\1\0\0\0s\10\1\0\0strip(s [,chars]) -> string\n\n    Return a copy of the string s with leading and trailing\n    whitespace removed.\n    If chars is given and not None, remove characters in chars instead.\n    If chars is unicode, S will be converted to unicode before stripping.\n\n    (\1\0\0\0t\5\0\0\0strip(\2\0\0\0R\r\0\0\0t\5\0\0\0chars(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRX\0\0\0\372\0\0\0s\2\0\0\0\0\tc\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0|\1\0\203\1\0S(\1\0\0\0s\256\0\0\0lstrip(s [,chars]) -> string\n\n    Return a copy of the string s with leading whitespace removed.\n    If chars is given and not None, remove characters in chars instead.\n\n    (\1\0\0\0t\6\0\0\0lstrip(\2\0\0\0R\r\0\0\0RY\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRZ\0\0\0\6\1\0\0s\2\0\0\0\0\7c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0|\1\0\203\1\0S(\1\0\0\0s\257\0\0\0rstrip(s [,chars]) -> string\n\n    Return a copy of the string s with trailing whitespace removed.\n    If chars is given and not None, remove characters in chars instead.\n\n    (\1\0\0\0t\6\0\0\0rstrip(\2\0\0\0R\r\0\0\0RY\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR[\0\0\0\20\1\0\0s\2\0\0\0\0\7c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\20\0\0\0|\0\0j\0\0|\1\0|\2\0\203\2\0S(\1\0\0\0sr\1\0\0split(s [,sep [,maxsplit]]) -> list of strings\n\n    Return a list of the words in the string s, using sep as the\n    delimiter string.  If maxsplit is given, splits at no more than\n    maxsplit places (resulting in at most maxsplit+1 words).  If sep\n    is not specified or is None, any whitespace string is a separator.\n\n    (split and splitfields are synonymous)\n\n    (\1\0\0\0R\f\0\0\0(\3\0\0\0R\r\0\0\0R\16\0\0\0t\10\0\0\0maxsplit(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR\f\0\0\0\33\1\0\0s\2\0\0\0\0\vc\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\20\0\0\0|\0\0j\0\0|\1\0|\2\0\203\2\0S(\1\0\0\0sW\1\0\0rsplit(s [,sep [,maxsplit]]) -> list of strings\n\n    Return a list of the words in the string s, using sep as the\n    delimiter string, starting at the end of the string and working\n    to the front.  If maxsplit is given, at most maxsplit splits are\n    done. If sep is not specified or is None, any whitespace string\n    is a separator.\n    (\1\0\0\0t\6\0\0\0rsplit(\3\0\0\0R\r\0\0\0R\16\0\0\0R\\\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR]\0\0\0*\1\0\0s\2\0\0\0\0\tR\7\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\1\0j\0\0|\0\0\203\1\0S(\1\0\0\0s\326\0\0\0join(list [,sep]) -> string\n\n    Return a string composed of the words in list, with\n    intervening occurrences of sep.  The default separator is a\n    single space.\n\n    (joinfields and join are synonymous)\n\n    (\1\0\0\0R\v\0\0\0(\2\0\0\0t\5\0\0\0wordsR\16\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR\v\0\0\0006\1\0\0s\2\0\0\0\0\nc\1\0\0\0\2\0\0\0\2\0\0\0G\0\0\0s\r\0\0\0|\0\0j\0\0|\1\0\214\0\0S(\1\0\0\0sp\0\0\0index(s, sub [,start [,end]]) -> int\n\n    Like find but raises ValueError when the substring is not found.\n\n    (\1\0\0\0t\5\0\0\0index(\2\0\0\0R\r\0\0\0RP\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR_\0\0\0D\1\0\0s\2\0\0\0\0\6c\1\0\0\0\2\0\0\0\2\0\0\0G\0\0\0s\r\0\0\0|\0\0j\0\0|\1\0\214\0\0S(\1\0\0\0sr\0\0\0rindex(s, sub [,start [,end]]) -> int\n\n    Like rfind but raises ValueError when the substring is not found.\n\n    (\1\0\0\0t\6\0\0\0rindex(\2\0\0\0R\r\0\0\0RP\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR`\0\0\0M\1\0\0s\2\0\0\0\0\6c\1\0\0\0\2\0\0\0\2\0\0\0G\0\0\0s\r\0\0\0|\0\0j\0\0|\1\0\214\0\0S(\1\0\0\0s\310\0\0\0count(s, sub[, start[,end]]) -> int\n\n    Return the number of occurrences of substring sub in string\n    s[start:end].  Optional arguments start and end are\n    interpreted as in slice notation.\n\n    (\1\0\0\0t\5\0\0\0count(\2\0\0\0R\r\0\0\0RP\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRa\0\0\0V\1\0\0s\2\0\0\0\0\10c\1\0\0\0\2\0\0\0\2\0\0\0G\0\0\0s\r\0\0\0|\0\0j\0\0|\1\0\214\0\0S(\1\0\0\0s\3\1\0\0find(s, sub [,start [,end]]) -> in\n\n    Return the lowest index in s where substring sub is found,\n    such that sub is contained within s[start,end].  Optional\n    arguments start and end are interpreted as in slice notation.\n\n    Return -1 on failure.\n\n    (\1\0\0\0t\4\0\0\0find(\2\0\0\0R\r\0\0\0RP\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRb\0\0\0a\1\0\0s\2\0\0\0\0\nc\1\0\0\0\2\0\0\0\2\0\0\0G\0\0\0s\r\0\0\0|\0\0j\0\0|\1\0\214\0\0S(\1\0\0\0s\6\1\0\0rfind(s, sub [,start [,end]]) -> int\n\n    Return the highest index in s where substring sub is found,\n    such that sub is contained within s[start,end].  Optional\n    arguments start and end are interpreted as in slice notation.\n\n    Return -1 on failure.\n\n    (\1\0\0\0t\5\0\0\0rfind(\2\0\0\0R\r\0\0\0RP\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRc\0\0\0n\1\0\0s\2\0\0\0\0\nc\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0sY\0\0\0atof(s) -> float\n\n    Return the floating point number represented by the string s.\n\n    (\1\0\0\0t\6\0\0\0_float(\1\0\0\0R\r\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\4\0\0\0atof\200\1\0\0s\2\0\0\0\0\6i\n\0\0\0c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0|\1\0\203\2\0S(\1\0\0\0ss\1\0\0atoi(s [,base]) -> int\n\n    Return the integer represented by the string s in the given\n    base, which defaults to 10.  The string s must consist of one\n    or more digits, possibly preceded by a sign.  If base is 0, it\n    is chosen from the leading characters of s, 0 for octal, 0x or\n    0X for hexadecimal.  If base is 16, a preceding 0x or 0X is\n    accepted.\n\n    (\1\0\0\0t\4\0\0\0_int(\2\0\0\0R\r\0\0\0t\4\0\0\0base(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\4\0\0\0atoi\212\1\0\0s\2\0\0\0\0\vc\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0|\1\0\203\2\0S(\1\0\0\0s\263\1\0\0atol(s [,base]) -> long\n\n    Return the long integer represented by the string s in the\n    given base, which defaults to 10.  The string s must consist\n    of one or more digits, possibly preceded by a sign.  If base\n    is 0, it is chosen from the leading characters of s, 0 for\n    octal, 0x or 0X for hexadecimal.  If base is 16, a preceding\n    0x or 0X is accepted.  A trailing L or l is not accepted,\n    unless base is 0.\n\n    (\1\0\0\0t\5\0\0\0_long(\2\0\0\0R\r\0\0\0Rg\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\4\0\0\0atol\231\1\0\0s\2\0\0\0\0\fc\2\0\0\0\3\0\0\0\3\0\0\0G\0\0\0s\20\0\0\0|\0\0j\0\0|\1\0|\2\0\214\1\0S(\1\0\0\0s\365\0\0\0ljust(s, width[, fillchar]) -> string\n\n    Return a left-justified version of s, in a field of the\n    specified width, padded with spaces as needed.  The string is\n    never truncated.  If specified the fillchar is used instead of spaces.\n\n    (\1\0\0\0t\5\0\0\0ljust(\3\0\0\0R\r\0\0\0t\5\0\0\0widthRP\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRk\0\0\0\251\1\0\0s\2\0\0\0\0\10c\2\0\0\0\3\0\0\0\3\0\0\0G\0\0\0s\20\0\0\0|\0\0j\0\0|\1\0|\2\0\214\1\0S(\1\0\0\0s\366\0\0\0rjust(s, width[, fillchar]) -> string\n\n    Return a right-justified version of s, in a field of the\n    specified width, padded with spaces as needed.  The string is\n    never truncated.  If specified the fillchar is used instead of spaces.\n\n    (\1\0\0\0t\5\0\0\0rjust(\3\0\0\0R\r\0\0\0Rl\0\0\0RP\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRm\0\0\0\264\1\0\0s\2\0\0\0\0\10c\2\0\0\0\3\0\0\0\3\0\0\0G\0\0\0s\20\0\0\0|\0\0j\0\0|\1\0|\2\0\214\1\0S(\1\0\0\0s\356\0\0\0center(s, width[, fillchar]) -> string\n\n    Return a center version of s, in a field of the specified\n    width. padded with spaces as needed.  The string is never\n    truncated.  If specified the fillchar is used instead of spaces.\n\n    (\1\0\0\0t\6\0\0\0center(\3\0\0\0R\r\0\0\0Rl\0\0\0RP\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRn\0\0\0\277\1\0\0s\2\0\0\0\0\10c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0s+\0\0\0t\0\0|\0\0t\1\0\203\2\0s\36\0t\2\0|\0\0\203\1\0}\0\0n\0\0|\0\0j\3\0|\1\0\203\1\0S(\1\0\0\0s\241\0\0\0zfill(x, width) -> string\n\n    Pad a numeric string x with zeros on the left, to fill a field\n    of the specified width.  The string x is never truncated.\n\n    (\4\0\0\0t\n\0\0\0isinstancet\n\0\0\0basestringt\4\0\0\0reprt\5\0\0\0zfill(\2\0\0\0R\n\0\0\0Rl\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRr\0\0\0\314\1\0\0s\6\0\0\0\0\7\17\1\17\1i\10\0\0\0c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\0\0j\0\0|\1\0\203\1\0S(\1\0\0\0s\327\0\0\0expandtabs(s [,tabsize]) -> string\n\n    Return a copy of the string s with all tab characters replaced\n    by the appropriate number of spaces, depending on the current\n    column, and the tabsize (default 8).\n\n    (\1\0\0\0t\n\0\0\0expandtabs(\2\0\0\0R\r\0\0\0t\7\0\0\0tabsize(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRs\0\0\0\331\1\0\0s\2\0\0\0\0\10c\3\0\0\0\3\0\0\0\4\0\0\0C\0\0\0s;\0\0\0|\2\0s\22\0|\1\0d\2\0k\10\0r\"\0|\0\0j\1\0|\1\0|\2\0\203\2\0S|\0\0j\1\0|\1\0|\0\0d\1\0 \27\203\1\0Sd\2\0S(\3\0\0\0sg\1\0\0translate(s,table [,deletions]) -> string\n\n    Return a copy of the string s, where all characters occurring\n    in the optional argument deletions are removed, and the\n    remaining characters have been mapped through the given\n    translation table, which must be a string of length 256.  The\n    deletions argument is not allowed for Unicode strings.\n\n    i\0\0\0\0N(\2\0\0\0RJ\0\0\0t\t\0\0\0translate(\3\0\0\0R\r\0\0\0t\5\0\0\0tablet\t\0\0\0deletions(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRu\0\0\0\344\1\0\0s\6\0\0\0\0\n\22\1\20\5c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0|\0\0j\0\0\203\0\0S(\1\0\0\0so\0\0\0capitalize(s) -> string\n\n    Return a copy of the string s with only its first character\n    capitalized.\n\n    (\1\0\0\0R\10\0\0\0(\1\0\0\0R\r\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR\10\0\0\0\367\1\0\0s\2\0\0\0\0\7c\4\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s\23\0\0\0|\0\0j\0\0|\1\0|\2\0|\3\0\203\3\0S(\1\0\0\0s\367\0\0\0replace (str, old, new[, maxreplace]) -> string\n\n    Return a copy of", 12288) = 12288
27308 read(8, " string str with all occurrences of substring\n    old replaced by new. If the optional argument maxreplace is\n    given, only the first maxreplace occurrences are replaced.\n\n    (\1\0\0\0t\7\0\0\0replace(\4\0\0\0R\r\0\0\0t\3\0\0\0oldt\3\0\0\0newt\n\0\0\0maxreplace(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyRx\0\0\0\1\2\0\0s\2\0\0\0\0\10(\4\0\0\0R\34\0\0\0t\t\0\0\0lowercaset\t\0\0\0uppercaset\n\0\0\0whitespacet\t\0\0\0Formatterc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0sY\0\0\0e\0\0Z\1\0d\0\0\204\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0d\3\0\204\0\0Z\5\0d\4\0\204\0\0Z\6\0d\5\0\204\0\0Z\7\0d\6\0\204\0\0Z\10\0d\7\0\204\0\0Z\t\0d\10\0\204\0\0Z\n\0RS(\t\0\0\0c\0\0\0\0\4\0\0\0\5\0\0\0O\0\0\0s\224\0\0\0|\0\0s\25\0t\0\0d\1\0\203\1\0\202\1\0n\0\0|\0\0d\2\0\31|\0\0d\3\0\37\2}\2\0}\0\0y\31\0|\0\0d\2\0\31|\0\0d\3\0\37\2}\3\0}\0\0Wn;\0\4t\1\0k\n\0r\200\0\1\1\1d\4\0|\1\0k\6\0rq\0|\1\0j\2\0d\4\0\203\1\0}\3\0q\201\0t\0\0d\5\0\203\1\0\202\1\0n\1\0X|\2\0j\3\0|\3\0|\0\0|\1\0\203\3\0S(\6\0\0\0Ns;\0\0\0descriptor 'format' of 'Formatter' object needs an argumenti\0\0\0\0i\1\0\0\0t\r\0\0\0format_strings@\0\0\0format() missing 1 required positional argument: 'format_string'(\4\0\0\0RN\0\0\0t\n\0\0\0IndexErrort\3\0\0\0popt\7\0\0\0vformat(\4\0\0\0RP\0\0\0t\6\0\0\0kwargsR \0\0\0R\200\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\6\0\0\0format\"\2\0\0s\24\0\0\0\0\1\6\1\17\2\25\1\3\1\31\1\r\1\f\1\22\2\20\2c\4\0\0\0\6\0\0\0\6\0\0\0C\0\0\0s;\0\0\0t\0\0\203\0\0}\4\0|\0\0j\1\0|\1\0|\2\0|\3\0|\4\0d\1\0\203\5\0}\5\0|\0\0j\2\0|\4\0|\2\0|\3\0\203\3\0\1|\5\0S(\2\0\0\0Ni\2\0\0\0(\3\0\0\0t\3\0\0\0sett\10\0\0\0_vformatt\21\0\0\0check_unused_args(\6\0\0\0R \0\0\0R\200\0\0\0RP\0\0\0R\204\0\0\0t\t\0\0\0used_argst\6\0\0\0result(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR\203\0\0\0001\2\0\0s\10\0\0\0\0\1\t\1\33\1\23\1c\6\0\0\0\r\0\0\0\10\0\0\0C\0\0\0s\353\0\0\0|\5\0d\1\0k\0\0r\33\0t\0\0d\2\0\203\1\0\202\1\0n\0\0g\0\0}\6\0x\272\0|\0\0j\1\0|\1\0\203\1\0D]\251\0\\\4\0}\7\0}\10\0}\t\0}\n\0|\7\0rY\0|\6\0j\2\0|\7\0\203\1\0\1n\0\0|\10\0d\0\0k\t\0r1\0|\0\0j\4\0|\10\0|\2\0|\3\0\203\3\0\\\2\0}\v\0}\f\0|\4\0j\5\0|\f\0\203\1\0\1|\0\0j\6\0|\v\0|\n\0\203\2\0}\v\0|\0\0j\7\0|\t\0|\2\0|\3\0|\4\0|\5\0d\3\0\30\203\5\0}\t\0|\6\0j\2\0|\0\0j\10\0|\v\0|\t\0\203\2\0\203\1\0\1q1\0q1\0Wd\4\0j\t\0|\6\0\203\1\0S(\5\0\0\0Ni\0\0\0\0s\35\0\0\0Max string recursion exceededi\1\0\0\0R\6\0\0\0(\n\0\0\0R\21\0\0\0t\5\0\0\0parset\6\0\0\0appendRJ\0\0\0t\t\0\0\0get_fieldt\3\0\0\0addt\r\0\0\0convert_fieldR\207\0\0\0t\f\0\0\0format_fieldR\v\0\0\0(\r\0\0\0R \0\0\0R\200\0\0\0RP\0\0\0R\204\0\0\0R\211\0\0\0t\17\0\0\0recursion_depthR\212\0\0\0t\f\0\0\0literal_textt\n\0\0\0field_namet\v\0\0\0format_spect\n\0\0\0conversiont\3\0\0\0objt\10\0\0\0arg_used(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR\207\0\0\0007\2\0\0s\36\0\0\0\0\1\f\1\17\1\6\1\3\1\37\3\6\1\20\3\f\6\33\1\r\3\22\3\17\1\20\3 \2c\4\0\0\0\4\0\0\0\4\0\0\0C\0\0\0s)\0\0\0t\0\0|\1\0t\1\0t\2\0f\2\0\203\2\0r\35\0|\2\0|\1\0\31S|\3\0|\1\0\31Sd\0\0S(\1\0\0\0N(\3\0\0\0Ro\0\0\0t\3\0\0\0intt\4\0\0\0long(\4\0\0\0R \0\0\0R%\0\0\0RP\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\t\0\0\0get_valueY\2\0\0s\6\0\0\0\0\1\25\1\10\2c\4\0\0\0\4\0\0\0\1\0\0\0C\0\0\0s\4\0\0\0d\0\0S(\1\0\0\0N(\0\0\0\0(\4\0\0\0R \0\0\0R\211\0\0\0RP\0\0\0R\204\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR\210\0\0\0`\2\0\0s\2\0\0\0\0\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\r\0\0\0t\0\0|\1\0|\2\0\203\2\0S(\1\0\0\0N(\1\0\0\0R\205\0\0\0(\3\0\0\0R \0\0\0t\5\0\0\0valueR\224\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR\220\0\0\0d\2\0\0s\2\0\0\0\0\1c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0sU\0\0\0|\2\0d\0\0k\10\0r\20\0|\1\0S|\2\0d\1\0k\2\0r&\0t\1\0|\1\0\203\1\0S|\2\0d\2\0k\2\0r<\0t\2\0|\1\0\203\1\0St\3\0d\3\0j\4\0|\2\0\203\1\0\203\1\0\202\1\0d\0\0S(\4\0\0\0NR\r\0\0\0t\1\0\0\0rs\"\0\0\0Unknown conversion specifier {0!s}(\5\0\0\0RJ\0\0\0t\3\0\0\0strRq\0\0\0R\21\0\0\0R\205\0\0\0(\3\0\0\0R \0\0\0R\233\0\0\0R\225\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR\217\0\0\0h\2\0\0s\16\0\0\0\0\2\f\1\4\1\f\1\n\1\f\1\n\1c\2\0\0\0\2\0\0\0\1\0\0\0C\0\0\0s\n\0\0\0|\1\0j\0\0\203\0\0S(\1\0\0\0N(\1\0\0\0t\21\0\0\0_formatter_parser(\2\0\0\0R \0\0\0R\200\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR\213\0\0\0z\2\0\0s\2\0\0\0\0\1c\4\0\0\0\t\0\0\0\4\0\0\0C\0\0\0sj\0\0\0|\1\0j\0\0\203\0\0\\\2\0}\4\0}\5\0|\0\0j\1\0|\4\0|\2\0|\3\0\203\3\0}\6\0x6\0|\5\0D].\0\\\2\0}\7\0}\10\0|\7\0rR\0t\2\0|\6\0|\10\0\203\2\0}\6\0q.\0|\6\0|\10\0\31}\6\0q.\0W|\6\0|\4\0f\2\0S(\1\0\0\0N(\3\0\0\0t\33\0\0\0_formatter_field_name_splitR\232\0\0\0t\7\0\0\0getattr(\t\0\0\0R \0\0\0R\223\0\0\0RP\0\0\0R\204\0\0\0t\5\0\0\0firstt\4\0\0\0restR\226\0\0\0t\7\0\0\0is_attrR\33\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR\215\0\0\0\203\2\0\0s\16\0\0\0\0\1\22\2\25\4\23\1\6\1\22\2\16\2(\v\0\0\0R'\0\0\0R(\0\0\0R\205\0\0\0R\203\0\0\0R\207\0\0\0R\232\0\0\0R\210\0\0\0R\220\0\0\0R\217\0\0\0R\213\0\0\0R\215\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyR\177\0\0\0!\2\0\0s\22\0\0\0\6\1\t\17\t\6\t\"\t\7\t\4\t\4\t\22\t\t(\0\0\0\0(\0\0\0\0(G\0\0\0R)\0\0\0R~\0\0\0R|\0\0\0R}\0\0\0t\7\0\0\0letterst\17\0\0\0ascii_lowercaset\17\0\0\0ascii_uppercaset\r\0\0\0ascii_letterst\6\0\0\0digitst\t\0\0\0hexdigitst\t\0\0\0octdigitst\v\0\0\0punctuationt\t\0\0\0printableR\25\0\0\0t\3\0\0\0chrt\6\0\0\0xranget\1\0\0\0lR\235\0\0\0R\v\0\0\0R\24\0\0\0RJ\0\0\0R\17\0\0\0R\22\0\0\0R\34\0\0\0t\2\0\0\0reR/\0\0\0R\35\0\0\0t\4\0\0\0typeR*\0\0\0R:\0\0\0R\21\0\0\0t\v\0\0\0index_errort\n\0\0\0atoi_errort\n\0\0\0atof_errort\n\0\0\0atol_errorRU\0\0\0RV\0\0\0RW\0\0\0RX\0\0\0RZ\0\0\0R[\0\0\0R\f\0\0\0t\v\0\0\0splitfieldsR]\0\0\0t\n\0\0\0joinfieldsR_\0\0\0R`\0\0\0Ra\0\0\0Rb\0\0\0Rc\0\0\0t\5\0\0\0floatRd\0\0\0R\230\0\0\0Rf\0\0\0R\231\0\0\0Ri\0\0\0Re\0\0\0Rh\0\0\0Rj\0\0\0Rk\0\0\0Rm\0\0\0Rn\0\0\0Rr\0\0\0Rs\0\0\0Ru\0\0\0R\10\0\0\0Rx\0\0\0t\5\0\0\0stropt\v\0\0\0ImportErrort\6\0\0\0objectR\177\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/string.pyt\10\0\0\0<module>\24\0\0\0s|\0\0\0\6\3\6\1\6\1\6\1\n\1\6\1\6\1\n\1\6\1\16\1\6\1\6\1\22\4\25\1\25\1\3\5\f\17\6\1\t\26\f\2\23\21\26\26\23\\\6\1\6\1\6\1\6\3\t\t\t\t\t\n\f\f\f\n\f\v\17\f\6\3\17\f\f\v\6\3\t\t\t\t\t\v\t\r\t\r\6\1\6\1\6\3\t\n\f\17\f\20\t\v\t\v\t\r\t\r\f\v\f\23\t\n\f\20\3\1\"\1\16\1\r\1\4\f", 4096) = 3973
27308 read(8, "", 4096)                 = 0
27308 close(8)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 close(6)                          = 0
27308 close(5)                          = 0
27308 stat64("contextlib", 0xbfffd92c)  = -1 ENOENT (No such file or directory)
27308 open("contextlib.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("contextlib.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("contextlibmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("contextlib.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("contextlib.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/contextlib", 0xbfffd92c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/contextlib.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/contextlib.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/contextlibmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/contextlib.py", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=661476, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=4424, st_atime=2017/02/23-18:09:09, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/contextlib.pyc", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=707535, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=4430, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(6, "\3\363\r\n\200r\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0s\211\0\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\3\0l\2\0m\3\0Z\3\0\1d\1\0d\4\0l\4\0m\5\0Z\5\0\1d\5\0d\6\0d\7\0g\3\0Z\6\0d\10\0e\7\0f\1\0d\t\0\204\0\0\203\0\0YZ\10\0d\n\0\204\0\0Z\t\0e\t\0d\v\0\204\0\0\203\1\0Z\n\0d\7\0e\7\0f\1\0d\f\0\204\0\0\203\0\0YZ\v\0d\2\0S(\r\0\0\0s4\0\0\0Utilities for with-statement contexts.  See PEP 343.i\377\377\377\377N(\1\0\0\0t\5\0\0\0wraps(\1\0\0\0t\4\0\0\0warnt\16\0\0\0contextmanagert\6\0\0\0nestedt\7\0\0\0closingt\27\0\0\0GeneratorContextManagerc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s)\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0d\3\0\204\0\0Z\5\0RS(\4\0\0\0s%\0\0\0Helper for @contextmanager decorator.c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\1\0|\0\0_\0\0d\0\0S(\1\0\0\0N(\1\0\0\0t\3\0\0\0gen(\2\0\0\0t\4\0\0\0selfR\6\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/contextlib.pyt\10\0\0\0__init__\f\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\5\0\0\0C\0\0\0s5\0\0\0y\21\0|\0\0j\0\0j\1\0\203\0\0SWn\35\0\4t\2\0k\n\0r0\0\1\1\1t\3\0d\1\0\203\1\0\202\1\0n\1\0Xd\0\0S(\2\0\0\0Ns\26\0\0\0generator didn't yield(\4\0\0\0R\6\0\0\0t\4\0\0\0nextt\r\0\0\0StopIterationt\f\0\0\0RuntimeError(\1\0\0\0R\7\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/contextlib.pyt\t\0\0\0__enter__\17\0\0\0s\10\0\0\0\0\1\3\1\21\1\r\1c\4\0\0\0\5\0\0\0\5\0\0\0C\0\0\0s\302\0\0\0|\1\0d\0\0k\10\0rA\0y\21\0|\0\0j\1\0j\2\0\203\0\0\1Wn\22\0\4t\3\0k\n\0r1\0\1\1\1d\0\0SXt\4\0d\1\0\203\1\0\202\1\0n}\0|\2\0d\0\0k\10\0rY\0|\1\0\203\0\0}\2\0n\0\0y&\0|\0\0j\1\0j\5\0|\1\0|\2\0|\3\0\203\3\0\1t\4\0d\2\0\203\1\0\202\1\0Wn<\0\4t\3\0k\n\0r\233\0\1}\4\0\1|\4\0|\2\0k\t\0S\1\1\1t\6\0j\7\0\203\0\0d\3\0\31|\2\0k\t\0r\276\0\202\0\0q\276\0n\1\0Xd\0\0S(\4\0\0\0Ns\25\0\0\0generator didn't stops#\0\0\0generator didn't stop after throw()i\1\0\0\0(\10\0\0\0t\4\0\0\0NoneR\6\0\0\0R\t\0\0\0R\n\0\0\0R\v\0\0\0t\5\0\0\0throwt\3\0\0\0syst\10\0\0\0exc_info(\5\0\0\0R\7\0\0\0t\4\0\0\0typet\5\0\0\0valuet\t\0\0\0tracebackt\3\0\0\0exc(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/contextlib.pyt\10\0\0\0__exit__\25\0\0\0s \0\0\0\0\1\f\1\3\1\21\1\r\1\5\2\17\2\f\3\f\1\3\1\26\1\20\1\17\4\n\1\3\10\26\1(\6\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__t\7\0\0\0__doc__R\10\0\0\0R\f\0\0\0R\25\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/contextlib.pyR\5\0\0\0\t\0\0\0s\10\0\0\0\6\1\6\2\t\3\t\6c\1\0\0\0\2\0\0\0\3\0\0\0\3\0\0\0s\37\0\0\0t\0\0\210\0\0\203\1\0\207\0\0f\1\0d\1\0\206\0\0\203\1\0}\1\0|\1\0S(\2\0\0\0s\334\1\0\0@contextmanager decorator.\n\n    Typical usage:\n\n        @contextmanager\n        def some_generator(<arguments>):\n            <setup>\n            try:\n                yield <value>\n            finally:\n                <cleanup>\n\n    This makes this:\n\n        with some_generator(<arguments>) as <variable>:\n            <body>\n\n    equivalent to this:\n\n        <setup>\n        try:\n            <variable> = <value>\n            <body>\n        finally:\n            <cleanup>\n\n    c\0\0\0\0\2\0\0\0\4\0\0\0\37\0\0\0s\23\0\0\0t\0\0\210\0\0|\0\0|\1\0\216\0\0\203\1\0S(\1\0\0\0N(\1\0\0\0R\5\0\0\0(\2\0\0\0t\4\0\0\0argst\4\0\0\0kwds(\1\0\0\0t\4\0\0\0func(\0\0\0\0s \0\0\0/usr/lib/python2.7/contextlib.pyt\6\0\0\0helperR\0\0\0s\2\0\0\0\0\2(\1\0\0\0R\0\0\0\0(\2\0\0\0R\33\0\0\0R\34\0\0\0(\0\0\0\0(\1\0\0\0R\33\0\0\0s \0\0\0/usr/lib/python2.7/contextlib.pyR\2\0\0\0006\0\0\0s\4\0\0\0\0\34\33\3c\0\0\0\0\7\0\0\0\7\0\0\0g\0\0\0s\374\0\0\0t\0\0d\1\0t\1\0d\2\0\203\3\0\1g\0\0}\1\0g\0\0}\2\0d\7\0}\3\0zc\0yI\0x=\0|\0\0D]5\0}\4\0|\4\0j\3\0}\5\0|\4\0j\4\0}\6\0|\2\0j\5\0|\6\0\203\0\0\203\1\0\1|\1\0j\5\0|\5\0\203\1\0\1q/\0W|\2\0V\1Wn\23\0\1\1\1t\6\0j\7\0\203\0\0}\3\0n\1\0XWd\3\0xE\0|\1\0r\317\0|\1\0j\10\0\203\0\0}\5\0y\31\0|\5\0|\3\0\214\0\0r\265\0d\10\0}\3\0n\0\0Wq\213\0\1\1\1t\6\0j\7\0\203\0\0}\3\0q\213\0Xq\213\0W|\3\0d\t\0k\3\0r\367\0|\3\0d\4\0\31|\3\0d\5\0\31|\3\0d\6\0\31\202\3\0n\0\0Xd\3\0S(\n\0\0\0s\265\1\0\0Combine multiple context managers into a single nested context manager.\n\n   This function has been deprecated in favour of the multiple manager form\n   of the with statement.\n\n   The one advantage of this function over the multiple manager form of the\n   with statement is that argument unpacking allows it to be\n   used with a variable number of context managers as follows:\n\n      with nested(*managers):\n          do_something()\n\n    s>\0\0\0With-statements now directly support multiple context managersi\3\0\0\0Ni\0\0\0\0i\1\0\0\0i\2\0\0\0(\3\0\0\0NNN(\3\0\0\0NNN(\3\0\0\0NNN(\t\0\0\0R\1\0\0\0t\22\0\0\0DeprecationWarningR\r\0\0\0R\25\0\0\0R\f\0\0\0t\6\0\0\0appendR\17\0\0\0R\20\0\0\0t\3\0\0\0pop(\7\0\0\0t\10\0\0\0managerst\5\0\0\0exitst\4\0\0\0varsR\24\0\0\0t\3\0\0\0mgrt\4\0\0\0exitt\5\0\0\0enter(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/contextlib.pyR\3\0\0\0X\0\0\0s0\0\0\0\0\17\6\1\n\1\6\1\6\1\6\1\3\0\3\1\r\1\t\1\t\1\20\1\21\1\t\1\3\1\24\2\t\1\f\1\3\1\f\1\r\1\3\1\24\1\f\4c\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s)\0\0\0e\0\0Z\1\0d\0\0Z\2\0d\1\0\204\0\0Z\3\0d\2\0\204\0\0Z\4\0d\3\0\204\0\0Z\5\0RS(\4\0\0\0s2\1\0\0Context to automatically close something at the end of a block.\n\n    Code like this:\n\n        with closing(<module>.open(<arguments>)) as f:\n            <block>\n\n    is equivalent to this:\n\n        f = <module>.open(<arguments>)\n        try:\n            <block>\n        finally:\n            f.close()\n\n    c\2\0\0\0\2\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0|\1\0|\0\0_\0\0d\0\0S(\1\0\0\0N(\1\0\0\0t\5\0\0\0thing(\2\0\0\0R\7\0\0\0R&\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/contextlib.pyR\10\0\0\0\225\0\0\0s\2\0\0\0\0\1c\1\0\0\0\1\0\0\0\1\0\0\0C\0\0\0s\7\0\0\0|\0\0j\0\0S(\1\0\0\0N(\1\0\0\0R&\0\0\0(\1\0\0\0R\7\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/contextlib.pyR\f\0\0\0\227\0\0\0s\2\0\0\0\0\1c\1\0\0\0\2\0\0\0\1\0\0\0G\0\0\0s\21\0\0\0|\0\0j\0\0j\1\0\203\0\0\1d\0\0S(\1\0\0\0N(\2\0\0\0R&\0\0\0t\5\0\0\0close(\2\0\0\0R\7\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib", 4096) = 4096
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=707535, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=16, st_size=4430, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 read(6, "/python2.7/contextlib.pyR\25\0\0\0\231\0\0\0s\2\0\0\0\0\1(\6\0\0\0R\26\0\0\0R\27\0\0\0R\30\0\0\0R\10\0\0\0R\f\0\0\0R\25\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/contextlib.pyR\4\0\0\0\204\0\0\0s\10\0\0\0\6\20\6\1\t\2\t\2(\f\0\0\0R\30\0\0\0R\17\0\0\0t\t\0\0\0functoolsR\0\0\0\0t\10\0\0\0warningsR\1\0\0\0t\7\0\0\0__all__t\6\0\0\0objectR\5\0\0\0R\2\0\0\0R\3\0\0\0R\4\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s \0\0\0/usr/lib/python2.7/contextlib.pyt\10\0\0\0<module>\1\0\0\0s\20\0\0\0\6\2\f\1\20\1\20\2\17\2\26-\t\"\17,", 4096) = 334
27308 read(6, "", 4096)                 = 0
27308 close(6)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 close(5)                          = 0
27308 stat64("base64", 0xbfffd92c)      = -1 ENOENT (No such file or directory)
27308 open("base64.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("base64.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("base64module.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("base64.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("base64.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/base64", 0xbfffd92c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/base64.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/base64.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/base64module.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/base64.py", O_RDONLY|O_LARGEFILE) = 5
27308 fstat64(5, {st_dev=makedev(8, 1), st_ino=661459, st_mode=S_IFREG|0755, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=11356, st_atime=2017/02/23-18:09:09, st_mtime=2015/04/02-16:47:31, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/base64.pyc", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=707531, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=10852, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(6, "\3\363\r\n\243r\35Uc\0\0\0\0\0\0\0\0\16\0\0\0@\0\0\0s\255\2\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\1\0d\2\0l\2\0Z\2\0d\1\0d\2\0l\3\0Z\3\0d\3\0d\4\0d\5\0d\6\0d\7\0d\10\0d\t\0d\n\0d\v\0d\f\0d\r\0d\16\0d\17\0d\20\0g\16\0Z\4\0g\0\0e\5\0d\21\0\203\1\0D]\22\0Z\6\0e\7\0e\6\0\203\1\0^\2\0qg\0Z\10\0d\22\0Z\t\0d\23\0\204\0\0Z\n\0d\2\0d\24\0\204\1\0Z\f\0d\2\0d\25\0\204\1\0Z\r\0d\26\0\204\0\0Z\16\0d\27\0\204\0\0Z\17\0d\30\0\204\0\0Z\20\0d\31\0\204\0\0Z\21\0i \0d\32\0d\33\0006d\34\0d\35\0006d\36\0d\37\0006d \0d!\0006d\"\0d#\0006d$\0d%\0006d&\0d'\0006d(\0d)\0006d*\0d+\0006d,\0d-\0006d.\0d/\0006d0\0d1\0006d2\0d3\0006d4\0d5\0006d6\0d7\0006d8\0d9\0006d:\0d;\0006d<\0d=\0006d>\0d?\0006d@\0dA\0006dB\0dC\0006dD\0dE\0006dF\0dG\0006dH\0dI\0006dJ\0dK\0006dL\0dM\0006dN\0dO\0006dP\0dQ\0006dR\0dS\0006dT\0dU\0006dV\0dW\0006dX\0dY\0006Z\22\0e\22\0j\23\0\203\0\0Z\24\0e\24\0j\25\0\203\0\0\1g\0\0e\24\0D]\22\0\\\2\0Z\26\0Z\27\0e\27\0^\2\0q\315\1Z\24\0e\30\0g\0\0e\22\0j\23\0\203\0\0D]\36\0\\\2\0Z\26\0Z\27\0e\27\0e\31\0e\26\0\203\1\0f\2\0^\2\0q\365\1\203\1\0Z\32\0dZ\0\204\0\0Z\33\0e\34\0d\2\0d[\0\204\2\0Z\35\0d\\\0\204\0\0Z\36\0e\34\0d]\0\204\1\0Z\37\0d^\0Z \0e \0d;\0\32d3\0\24Z!\0d_\0\204\0\0Z\"\0d`\0\204\0\0Z#\0da\0\204\0\0Z$\0db\0\204\0\0Z%\0dc\0\204\0\0Z&\0dd\0\204\0\0Z'\0e(\0de\0k\2\0r\251\2e&\0\203\0\0\1n\0\0d\2\0S(f\0\0\0s/\0\0\0RFC 3548: Base16, Base32, Base64 Data Encodingsi\377\377\377\377Nt\6\0\0\0encodet\6\0\0\0decodet\f\0\0\0encodestringt\f\0\0\0decodestringt\t\0\0\0b64encodet\t\0\0\0b64decodet\t\0\0\0b32encodet\t\0\0\0b32decodet\t\0\0\0b16encodet\t\0\0\0b16decodet\22\0\0\0standard_b64encodet\22\0\0\0standard_b64decodet\21\0\0\0urlsafe_b64encodet\21\0\0\0urlsafe_b64decodei\0\1\0\0t\0\0\0\0c\2\0\0\0\5\0\0\0\5\0\0\0C\0\0\0sJ\0\0\0t\0\0\36}\2\0x*\0|\1\0j\1\0\203\0\0D]\34\0\\\2\0}\3\0}\4\0|\4\0|\2\0t\2\0|\3\0\203\1\0<q\24\0W|\0\0j\3\0d\1\0j\4\0|\2\0\203\1\0\203\1\0S(\2\0\0\0NR\16\0\0\0(\5\0\0\0t\f\0\0\0_translationt\5\0\0\0itemst\3\0\0\0ordt\t\0\0\0translatet\4\0\0\0join(\5\0\0\0t\1\0\0\0st\10\0\0\0altcharst\v\0\0\0translationt\1\0\0\0kt\1\0\0\0v(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyt\n\0\0\0_translate \0\0\0s\10\0\0\0\0\1\7\1\31\1\24\1c\2\0\0\0\3\0\0\0\5\0\0\0C\0\0\0sF\0\0\0t\0\0j\1\0|\0\0\203\1\0d\1\0 }\2\0|\1\0d\6\0k\t\0rB\0t\3\0|\2\0i\2\0|\1\0d\2\0\31d\3\0006|\1\0d\4\0\31d\5\0006\203\2\0S|\2\0S(\7\0\0\0sl\1\0\0Encode a string using Base64.\n\n    s is the string to encode.  Optional altchars must be a string of at least\n    length 2 (additional characters are ignored) which specifies an\n    alternative alphabet for the '+' and '/' characters.  This allows an\n    application to e.g. generate url or filesystem safe Base64 strings.\n\n    The encoded string is returned.\n    i\377\377\377\377i\0\0\0\0t\1\0\0\0+i\1\0\0\0t\1\0\0\0/N(\4\0\0\0t\10\0\0\0binasciit\n\0\0\0b2a_base64t\4\0\0\0NoneR\31\0\0\0(\3\0\0\0R\24\0\0\0R\25\0\0\0t\7\0\0\0encoded(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\4\0\0\0*\0\0\0s\10\0\0\0\0\v\23\1\f\1#\1c\2\0\0\0\3\0\0\0\6\0\0\0C\0\0\0sn\0\0\0|\1\0d\5\0k\t\0r4\0t\1\0|\0\0i\2\0d\1\0|\1\0d\2\0\0316d\3\0|\1\0d\4\0\0316\203\2\0}\0\0n\0\0y\21\0t\2\0j\3\0|\0\0\203\1\0SWn\"\0\4t\2\0j\4\0k\n\0ri\0\1}\2\0\1t\5\0|\2\0\203\1\0\202\1\0n\1\0Xd\5\0S(\6\0\0\0s\236\1\0\0Decode a Base64 encoded string.\n\n    s is the string to decode.  Optional altchars must be a string of at least\n    length 2 (additional characters are ignored) which specifies the\n    alternative alphabet used instead of the '+' and '/' characters.\n\n    The decoded string is returned.  A TypeError is raised if s were\n    incorrectly padded or if there are non-alphabet characters present in the\n    string.\n    R\32\0\0\0i\0\0\0\0R\33\0\0\0i\1\0\0\0N(\6\0\0\0R\36\0\0\0R\31\0\0\0R\34\0\0\0t\n\0\0\0a2b_base64t\5\0\0\0Errort\t\0\0\0TypeError(\3\0\0\0R\24\0\0\0R\25\0\0\0t\3\0\0\0msg(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\5\0\0\0;\0\0\0s\f\0\0\0\0\v\f\1(\1\3\1\21\1\22\2c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0sy\0\0\0Encode a string using the standard Base64 alphabet.\n\n    s is the string to encode.  The encoded string is returned.\n    (\1\0\0\0R\4\0\0\0(\1\0\0\0R\24\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\n\0\0\0O\0\0\0s\2\0\0\0\0\5c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\n\0\0\0t\0\0|\0\0\203\1\0S(\1\0\0\0s\2\1\0\0Decode a string encoded with the standard Base64 alphabet.\n\n    s is the string to decode.  The decoded string is returned.  A TypeError\n    is raised if the string is incorrectly padded or if there are non-alphabet\n    characters present in the string.\n    (\1\0\0\0R\5\0\0\0(\1\0\0\0R\24\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\v\0\0\0V\0\0\0s\2\0\0\0\0\7c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0d\1\0\203\2\0S(\2\0\0\0s\271\0\0\0Encode a string using a url-safe Base64 alphabet.\n\n    s is the string to encode.  The encoded string is returned.  The alphabet\n    uses '-' instead of '+' and '_' instead of '/'.\n    s\2\0\0\0-_(\1\0\0\0R\4\0\0\0(\1\0\0\0R\24\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\f\0\0\0_\0\0\0s\2\0\0\0\0\6c\1\0\0\0\1\0\0\0\3\0\0\0C\0\0\0s\r\0\0\0t\0\0|\0\0d\1\0\203\2\0S(\2\0\0\0sD\1\0\0Decode a string encoded with the standard Base64 alphabet.\n\n    s is the string to decode.  The decoded string is returned.  A TypeError\n    is raised if the string is incorrectly padded or if there are non-alphabet\n    characters present in the string.\n\n    The alphabet uses '-' instead of '+' and '_' instead of '/'.\n    s\2\0\0\0-_(\1\0\0\0R\5\0\0\0(\1\0\0\0R\24\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\r\0\0\0g\0\0\0s\2\0\0\0\0\tt\1\0\0\0Ai\0\0\0\0t\1\0\0\0Ji\t\0\0\0t\1\0\0\0S", 4096) = 4096
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=707531, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=10852, st_atime=2017/04/26-21:22:49, st_mtime=2017/02/23-22:48:24, st_ctime=2017/02/23-22:48:24}) = 0
27308 read(6, "i\22\0\0\0t\1\0\0\0003i\33\0\0\0t\1\0\0\0Bi\1\0\0\0t\1\0\0\0Ki\n\0\0\0t\1\0\0\0Ti\23\0\0\0t\1\0\0\0004i\34\0\0\0t\1\0\0\0Ci\2\0\0\0t\1\0\0\0Li\v\0\0\0t\1\0\0\0Ui\24\0\0\0t\1\0\0\0005i\35\0\0\0t\1\0\0\0Di\3\0\0\0t\1\0\0\0Mi\f\0\0\0t\1\0\0\0Vi\25\0\0\0t\1\0\0\0006i\36\0\0\0t\1\0\0\0Ei\4\0\0\0t\1\0\0\0Ni\r\0\0\0t\1\0\0\0Wi\26\0\0\0t\1\0\0\0007i\37\0\0\0t\1\0\0\0Fi\5\0\0\0t\1\0\0\0Oi\16\0\0\0t\1\0\0\0Xi\27\0\0\0t\1\0\0\0Gi\6\0\0\0t\1\0\0\0Pi\17\0\0\0t\1\0\0\0Yi\30\0\0\0t\1\0\0\0Hi\7\0\0\0t\1\0\0\0Qi\20\0\0\0t\1\0\0\0Zi\31\0\0\0t\1\0\0\0Ii\10\0\0\0t\1\0\0\0Ri\21\0\0\0t\1\0\0\0002i\32\0\0\0c\1\0\0\0\t\0\0\0\f\0\0\0C\0\0\0s\227\1\0\0g\0\0}\1\0t\0\0t\1\0|\0\0\203\1\0d\1\0\203\2\0\\\2\0}\2\0}\3\0|\3\0rF\0|\0\0d\2\0d\1\0|\3\0\30\0247}\0\0|\2\0d\3\0007}\2\0n\0\0x\333\0t\2\0|\2\0\203\1\0D]\315\0}\4\0t\3\0j\4\0d\4\0|\0\0|\4\0d\1\0\24|\4\0d\3\0\27d\1\0\24!\203\2\0\\\3\0}\5\0}\6\0}\7\0|\6\0|\5\0d\3\0@d\5\0>7}\6\0|\7\0|\6\0d\6\0@d\7\0>7}\7\0|\1\0j\5\0t\6\0|\5\0d\10\0?\31t\6\0|\5\0d\t\0?d\n\0@\31t\6\0|\5\0d\3\0?d\n\0@\31t\6\0|\6\0d\v\0?\31t\6\0|\6\0d\f\0?d\n\0@\31t\6\0|\6\0d\r\0?d\n\0@\31t\6\0|\7\0d\1\0?\31t\6\0|\7\0d\n\0@\31g\10\0\203\1\0\1qS\0Wt\7\0j\10\0|\1\0\203\1\0}\10\0|\3\0d\3\0k\2\0rK\1|\10\0d\16\0 d\17\0\27S|\3\0d\r\0k\2\0rc\1|\10\0d\20\0 d\21\0\27S|\3\0d\6\0k\2\0r{\1|\10\0d\22\0 d\23\0\27S|\3\0d\24\0k\2\0r\223\1|\10\0d\25\0 d\26\0\27S|\10\0S(\27\0\0\0sc\0\0\0Encode a string using Base32.\n\n    s is the string to encode.  The encoded string is returned.\n    i\5\0\0\0t\1\0\0\0\0i\1\0\0\0s\4\0\0\0!HHBi\20\0\0\0i\3\0\0\0i\10\0\0\0i\v\0\0\0i\6\0\0\0i\37\0\0\0i\f\0\0\0i\7\0\0\0i\2\0\0\0i\372\377\377\377s\6\0\0\0======i\374\377\377\377s\4\0\0\0====i\375\377\377\377s\3\0\0\0===i\4\0\0\0i\377\377\377\377t\1\0\0\0=(\t\0\0\0t\6\0\0\0divmodt\3\0\0\0lent\5\0\0\0ranget\6\0\0\0structt\6\0\0\0unpackt\6\0\0\0extendt\7\0\0\0_b32tabt\v\0\0\0EMPTYSTRINGR\23\0\0\0(\t\0\0\0R\24\0\0\0t\5\0\0\0partst\6\0\0\0quantat\10\0\0\0leftovert\1\0\0\0it\2\0\0\0c1t\2\0\0\0c2t\2\0\0\0c3R\37\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\6\0\0\0\207\0\0\0s6\0\0\0\0\5\6\1\33\2\6\1\22\1\r\1\23\6.\1\22\1\22\1\21\1\17\1\17\1\v\1\17\1\17\1\v\1\26\2\17\2\f\1\f\1\f\1\f\1\f\1\f\1\f\1\f\1c\3\0\0\0\r\0\0\0\5\0\0\0C\0\0\0s\v\2\0\0t\0\0t\1\0|\0\0\203\1\0d\1\0\203\2\0\\\2\0}\3\0}\4\0|\4\0r0\0t\2\0d\2\0\203\1\0\202\1\0n\0\0|\2\0rV\0t\3\0|\0\0i\2\0d\3\0d\4\0006|\2\0d\5\0006\203\2\0}\0\0n\0\0|\1\0rk\0|\0\0j\4\0\203\0\0}\0\0n\0\0d\6\0}\5\0t\5\0j\6\0d\7\0|\0\0\203\2\0}\6\0|\6\0r\273\0t\1\0|\6\0j\7\0d\10\0\203\1\0\203\1\0}\5\0|\5\0d\6\0k\4\0r\273\0|\0\0|\5\0\v }\0\0q\273\0n\0\0g\0\0}\7\0d\6\0}\10\0d\t\0}\t\0x\211\0|\0\0D]\201\0}\n\0t\10\0j\t\0|\n\0\203\1\0}\v\0|\v\0d\26\0k\10\0r\4\1t\2\0d\n\0\203\1\0\202\1\0n\0\0|\10\0t\10\0|\n\0\31|\t\0>7}\10\0|\t\0d\v\0008}\t\0|\t\0d\6\0k\0\0r\324\0|\7\0j\v\0t\f\0j\r\0d\f\0|\10\0\26\203\1\0\203\1\0\1d\6\0}\10\0d\t\0}\t\0q\324\0q\324\0Wt\f\0j\r\0d\f\0|\10\0\26\203\1\0}\f\0|\5\0d\6\0k\2\0r\201\1d\r\0}\f\0np\0|\5\0d\16\0k\2\0r\232\1|\f\0d\17\0 }\f\0nW\0|\5\0d\20\0k\2\0r\263\1|\f\0d\21\0 }\f\0n>\0|\5\0d\22\0k\2\0r\314\1|\f\0d\23\0 }\f\0n%\0|\5\0d\24\0k\2\0r\345\1|\f\0d\25\0 }\f\0n\f\0t\2\0d\2\0\203\1\0\202\1\0|\7\0j\v\0|\f\0\203\1\0\1t\16\0j\17\0|\7\0\203\1\0S(\27\0\0\0sG\3\0\0Decode a Base32 encoded string.\n\n    s is the string to decode.  Optional casefold is a flag specifying whether\n    a lowercase alphabet is acceptable as input.  For security purposes, the\n    default is False.\n\n    RFC 3548 allows for optional mapping of the digit 0 (zero) to the letter O\n    (oh), and for optional mapping of the digit 1 (one) to either the letter I\n    (eye) or letter L (el).  The optional argument map01 when not None,\n    specifies which letter the digit 1 should be mapped to (when map01 is not\n    None, the digit 0 is always mapped to the letter O).  For security\n    purposes the default is None, so that 0 and 1 are not allowed in the\n    input.\n\n    The decoded string is returned.  A TypeError is raised if s were\n    incorrectly padded or if there are non-alphabet characters present in the\n    string.\n    i\10\0\0\0s\21\0\0\0Incorrect paddingR9\0\0\0t\1\0\0\0000t\1\0\0\0001i\0\0\0\0s\16\0\0\0(?P<pad>[=]*)$t\3\0\0\0padi#\0\0\0s\26\0\0\0Non-base32 digit foundi\5\0\0\0s\5\0\0\0%010xR\16\0\0\0i\1\0\0\0i\377\377\377\377i\3\0\0\0i\376\377\377\377i\4\0\0\0i\375\377\377\377i\6\0\0\0i\374\377\377\377N(\20\0\0\0RF\0\0\0RG\0\0\0R\"\0\0\0R\31\0\0\0t\5\0\0\0uppert\2\0\0\0ret\6\0\0\0searcht\5\0\0\0groupt\7\0\0\0_b32revt\3\0\0\0getR\36\0\0\0t\6\0\0\0appendR\34\0\0\0t\t\0\0\0unhexlifyRM\0\0\0R\23\0\0\0(\r\0\0\0R\24\0\0\0t\10\0\0\0casefoldt\5\0\0\0map01RO\0\0\0RP\0\0\0t\10\0\0\0padcharst\2\0\0\0moRN\0\0\0t\3\0\0\0acct\5\0\0\0shiftt\1\0\0\0ct\3\0\0\0valt\4\0\0\0last(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\7\0\0\0\261\0\0\0sP\0\0\0\0\23\33\1\6\1\17\4\6\1 \1\6\1\17\4\6\1\22\1\6\1\25\1\f\1\21\2\6\1\6\1\6\1\r\1\17\1\f\1\17\1\22\1\n\1\f\1\32\1\6\1\r\2\23\1\f\1\t\1\f\1\r\1\f\1\r\1\f\1\r\1\f\1\r\2\f\1\r\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\23\0\0\0t\0\0j\1\0|\0\0\203\1\0j\2\0\203\0\0S(\1\0\0\0sc\0\0\0Encode a string using Base16.\n\n    s is the string to encode.  The encoded string is returned.\n    (\3\0\0\0R\34\0\0\0t\7\0\0\0hexlifyRX\0\0\0(\1\0\0\0R\24\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\10\0\0\0\373\0\0\0s\2\0\0\0\0\5c\2\0\0\0\2\0\0\0\3\0\0\0C\0\0\0sC\0\0\0|\1\0r\25\0|\0\0j\0\0\203\0\0}\0\0n\0\0t\1\0j\2\0d\1\0|\0\0\203\2\0r6\0t\3\0d\2\0\203\1\0\202\1\0n\0\0t\4\0j\5\0|\0\0\203\1\0S(\3\0\0\0sw\1\0\0Decode a Base16 encoded string.\n\n    s is the string to decode.  Optional casefold is a flag specifying whether\n    a lowercase alphabet is acceptable as input.  For security purposes, the\n    default is False.\n\n    The decoded string is returned.  A TypeError is raised if s were\n    incorrectly padded or if there are non-alphabet characters present in the\n    string.\n    s\t\0\0\0[^0-9A-F]s\26\0\0\0Non-base16 digit found(\6\0\0\0RX\0\0\0RY\0\0\0RZ\0\0\0R\"\0\0\0R\34\0\0\0R_\0\0\0(\2\0\0\0R\24\0\0\0R`\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\t\0\0\0\3\1\0\0s\n\0\0\0\0\v\6\1\17\1\22\1\17\1iL\0", 4096) = 4096
27308 read(6, "\0\0c\2\0\0\0\5\0\0\0\4\0\0\0C\0\0\0s\214\0\0\0x\205\0t\0\0r\207\0|\0\0j\1\0t\2\0\203\1\0}\2\0|\2\0s\"\0Pn\0\0xC\0t\3\0|\2\0\203\1\0t\2\0k\0\0rg\0|\0\0j\1\0t\2\0t\3\0|\2\0\203\1\0\30\203\1\0}\3\0|\3\0sZ\0Pn\0\0|\2\0|\3\0007}\2\0q%\0Wt\4\0j\5\0|\2\0\203\1\0}\4\0|\1\0j\6\0|\4\0\203\1\0\1q\3\0Wd\1\0S(\2\0\0\0s\16\0\0\0Encode a file.N(\7\0\0\0t\4\0\0\0Truet\4\0\0\0readt\n\0\0\0MAXBINSIZERG\0\0\0R\34\0\0\0R\35\0\0\0t\5\0\0\0write(\5\0\0\0t\5\0\0\0inputt\6\0\0\0outputR\24\0\0\0t\2\0\0\0nst\4\0\0\0line(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\0\0\0\0\35\1\0\0s\26\0\0\0\0\2\t\1\17\1\6\1\4\1\25\1\31\1\6\1\4\1\16\1\17\1c\2\0\0\0\4\0\0\0\2\0\0\0C\0\0\0sC\0\0\0x<\0t\0\0r>\0|\0\0j\1\0\203\0\0}\2\0|\2\0s\37\0Pn\0\0t\2\0j\3\0|\2\0\203\1\0}\3\0|\1\0j\4\0|\3\0\203\1\0\1q\3\0Wd\1\0S(\2\0\0\0s\16\0\0\0Decode a file.N(\5\0\0\0Rj\0\0\0t\10\0\0\0readlineR\34\0\0\0R \0\0\0Rm\0\0\0(\4\0\0\0Rn\0\0\0Ro\0\0\0Rq\0\0\0R\24\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\1\0\0\0,\1\0\0s\f\0\0\0\0\2\t\1\f\1\6\1\4\1\17\1c\1\0\0\0\4\0\0\0\5\0\0\0C\0\0\0s]\0\0\0g\0\0}\1\0xG\0t\0\0d\1\0t\1\0|\0\0\203\1\0t\2\0\203\3\0D]-\0}\2\0|\0\0|\2\0|\2\0t\2\0\27!}\3\0|\1\0j\3\0t\4\0j\5\0|\3\0\203\1\0\203\1\0\1q\37\0Wd\2\0j\6\0|\1\0\203\1\0S(\3\0\0\0s4\0\0\0Encode a string into multiple lines of base-64 data.i\0\0\0\0R\16\0\0\0(\7\0\0\0RH\0\0\0RG\0\0\0Rl\0\0\0R^\0\0\0R\34\0\0\0R\35\0\0\0R\23\0\0\0(\4\0\0\0R\24\0\0\0t\6\0\0\0piecesRQ\0\0\0t\5\0\0\0chunk(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\2\0\0\0006\1\0\0s\n\0\0\0\0\2\6\1\37\1\21\1\32\1c\1\0\0\0\1\0\0\0\2\0\0\0C\0\0\0s\r\0\0\0t\0\0j\1\0|\0\0\203\1\0S(\1\0\0\0s\20\0\0\0Decode a string.(\2\0\0\0R\34\0\0\0R \0\0\0(\1\0\0\0R\24\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\3\0\0\0?\1\0\0s\2\0\0\0\0\2c\0\0\0\0\t\0\0\0\7\0\0\0C\0\0\0sQ\1\0\0d\1\0d\2\0l\0\0}\0\0d\1\0d\2\0l\1\0}\1\0y#\0|\1\0j\1\0|\0\0j\2\0d\3\0\37d\4\0\203\2\0\\\2\0}\2\0}\3\0WnD\0\4|\1\0j\3\0k\n\0r\201\0\1}\4\0\1|\0\0j\4\0|\0\0_\5\0|\4\0GHd\5\0|\0\0j\2\0d\6\0\31\26GH|\0\0j\6\0d\7\0\203\1\0\1n\1\0Xt\7\0}\5\0xj\0|\2\0D]b\0\\\2\0}\6\0}\7\0|\6\0d\10\0k\2\0r\260\0t\7\0}\5\0n\0\0|\6\0d\t\0k\2\0r\305\0t\10\0}\5\0n\0\0|\6\0d\n\0k\2\0r\332\0t\10\0}\5\0n\0\0|\6\0d\v\0k\2\0r\217\0t\t\0\203\0\0\1d\2\0Sq\217\0W|\3\0r:\1|\3\0d\6\0\31d\f\0k\3\0r:\1t\n\0|\3\0d\6\0\31d\r\0\203\2\0\217\27\0}\10\0|\5\0|\10\0|\0\0j\5\0\203\2\0\1Wd\2\0QXn\23\0|\5\0|\0\0j\v\0|\0\0j\5\0\203\2\0\1d\2\0S(\16\0\0\0s\22\0\0\0Small test programi\377\377\377\377Ni\1\0\0\0t\4\0\0\0deuts\217\0\0\0usage: %s [-d|-e|-u|-t] [file|-]\n        -d, -u: decode\n        -e: encode (default)\n        -t: encode and decode string 'Aladdin:open sesame'i\0\0\0\0i\2\0\0\0s\2\0\0\0-es\2\0\0\0-ds\2\0\0\0-us\2\0\0\0-tt\1\0\0\0-t\2\0\0\0rb(\f\0\0\0t\3\0\0\0syst\6\0\0\0getoptt\4\0\0\0argvt\5\0\0\0errort\6\0\0\0stderrt\6\0\0\0stdoutt\4\0\0\0exitR\0\0\0\0R\1\0\0\0t\5\0\0\0test1t\4\0\0\0opent\5\0\0\0stdin(\t\0\0\0Rx\0\0\0Ry\0\0\0t\4\0\0\0optst\4\0\0\0argsR#\0\0\0t\4\0\0\0funct\1\0\0\0ot\1\0\0\0at\1\0\0\0f(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyt\4\0\0\0testF\1\0\0s.\0\0\0\0\2\30\1\3\1#\1\22\1\f\1\5\4\20\1\21\1\6\1\23\1\f\0\t\1\f\0\t\1\f\0\t\1\f\0\7\0\10\1\26\1\26\1\31\2c\0\0\0\0\3\0\0\0\2\0\0\0C\0\0\0s5\0\0\0d\1\0}\0\0t\0\0|\0\0\203\1\0}\1\0t\1\0|\1\0\203\1\0}\2\0|\0\0Gt\2\0|\1\0\203\1\0G|\2\0GHd\0\0S(\2\0\0\0Ns\23\0\0\0Aladdin:open sesame(\3\0\0\0R\2\0\0\0R\3\0\0\0t\4\0\0\0repr(\3\0\0\0t\2\0\0\0s0t\2\0\0\0s1t\2\0\0\0s2(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyR\177\0\0\0`\1\0\0s\10\0\0\0\0\1\6\1\f\1\f\1t\10\0\0\0__main__()\0\0\0t\7\0\0\0__doc__RY\0\0\0RI\0\0\0R\34\0\0\0t\7\0\0\0__all__RH\0\0\0t\2\0\0\0_xt\3\0\0\0chrR\17\0\0\0RM\0\0\0R\31\0\0\0R\36\0\0\0R\4\0\0\0R\5\0\0\0R\n\0\0\0R\v\0\0\0R\f\0\0\0R\r\0\0\0t\f\0\0\0_b32alphabetR\20\0\0\0RL\0\0\0t\4\0\0\0sortR\27\0\0\0R\30\0\0\0t\4\0\0\0dictt\4\0\0\0longR\\\0\0\0R\6\0\0\0t\5\0\0\0FalseR\7\0\0\0R\10\0\0\0R\t\0\0\0t\v\0\0\0MAXLINESIZERl\0\0\0R\0\0\0\0R\1\0\0\0R\2\0\0\0R\3\0\0\0R\210\0\0\0R\177\0\0\0t\10\0\0\0__name__(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/base64.pyt\10\0\0\0<module>\3\0\0\0sZ\0\0\0\6\5\f\1\f\1\f\5\f\2\f\1\6\2\6\5\f\3%\1\6\3\t\n\f\21\f\24\t\7\t\t\t\10\t\16\3\1\34\1\34\1\34\1\34\1\34\1\25\1\25\1\25\1\30\3\f\1\n\1\37\0017\3\t*\17J\t\10\f\27\6\1\16\2\t\17\t\n\t\t\t\7\t\32\t\7\f\1", 4096) = 2660
27308 read(6, "", 4096)                 = 0
27308 close(6)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 stat64("struct", 0xbfffd57c)      = -1 ENOENT (No such file or directory)
27308 open("struct.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("struct.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("structmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("struct.py", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("struct.pyc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/python2.7/struct", 0xbfffd57c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/struct.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/struct.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/structmodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/struct.py", O_RDONLY|O_LARGEFILE) = 6
27308 fstat64(6, {st_dev=makedev(8, 1), st_ino=661593, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=82, st_atime=2016/11/27-18:46:40, st_mtime=2015/04/02-16:46:57, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/struct.pyc", O_RDONLY|O_LARGEFILE) = 8
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669379, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=237, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(8, "\3\363\r\n\201r\35Uc\0\0\0\0\0\0\0\0\2\0\0\0@\0\0\0s.\0\0\0d\0\0d\1\0l\0\0Td\0\0d\2\0l\0\0m\1\0Z\1\0\1d\0\0d\3\0l\0\0m\2\0Z\2\0\1d\4\0S(\5\0\0\0i\377\377\377\377(\1\0\0\0t\1\0\0\0*(\1\0\0\0t\v\0\0\0_clearcache(\1\0\0\0t\7\0\0\0__doc__N(\3\0\0\0t\7\0\0\0_structR\1\0\0\0R\2\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s\34\0\0\0/usr/lib/python2.7/struct.pyt\10\0\0\0<module>\1\0\0\0s\4\0\0\0\n\1\20\1", 4096) = 237
27308 fstat64(8, {st_dev=makedev(8, 1), st_ino=669379, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=237, st_atime=2017/04/26-21:00:29, st_mtime=2015/09/26-01:31:33, st_ctime=2015/09/26-01:31:33}) = 0
27308 read(8, "", 4096)                 = 0
27308 close(8)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 close(6)                          = 0
27308 close(5)                          = 0
27308 close(4)                          = 0
27308 close(3)                          = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "h", 1)                   = 1
27308 write(1, "h", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "1", 1)                   = 1
27308 write(1, "1", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, " ", 1)                   = 1
27308 write(1, " ", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "=", 1)                   = 1
27308 write(1, "=", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, " ", 1)                   = 1
27308 write(1, " ", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "h", 1)                   = 1
27308 write(1, "h", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "p", 1)                   = 1
27308 write(1, "p", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "l", 1)                   = 1
27308 write(1, "l", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "i", 1)                   = 1
27308 write(1, "i", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "b", 1)                   = 1
27308 write(1, "b", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "H", 1)                   = 1
27308 write(1, "H", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "T", 1)                   = 1
27308 write(1, "T", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "T", 1)                   = 1
27308 write(1, "T", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "P", 1)                   = 1
27308 write(1, "P", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "C", 1)                   = 1
27308 write(1, "C", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "O", 1)                   = 1
27308 write(1, "O", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "o", 1)                   = 1
27308 write(1, "o", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "n", 1)                   = 1
27308 write(1, "n", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "n", 1)                   = 1
27308 write(1, "n", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "c", 1)                   = 1
27308 write(1, "c", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "i", 1)                   = 1
27308 write(1, "i", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "o", 1)                   = 1
27308 write(1, "o", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "n", 1)                   = 1
27308 write(1, "n", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "*", 1)                   = 1
27308 write(1, "*", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "(", 1)                   = 1
27308 write(1, "(", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "'", 1)                   = 1
27308 write(1, "'", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "w", 1)                   = 1
27308 write(1, "w", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "w", 1)                   = 1
27308 write(1, "w", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "w", 1)                   = 1
27308 write(1, "w", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "c", 1)                   = 1
27308 write(1, "c", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "w", 1)                   = 1
27308 write(1, "w", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "i", 1)                   = 1
27308 write(1, "i", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, " ", 1)                   = 1
27308 write(1, " ", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "l", 1)                   = 1
27308 write(1, "l", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "n", 1)                   = 1
27308 write(1, "n", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "l", 1)                   = 1
27308 write(1, "l", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "'", 1)                   = 1
27308 write(1, "'", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ")", 1)                   = 1
27308 write(1, ")", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242248
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "h", 1)                   = 1
27308 write(1, "h", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "1", 1)                   = 1
27308 write(1, "1", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "q", 1)                   = 1
27308 write(1, "q", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "(", 1)                   = 1
27308 write(1, "(", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "q", 1)                   = 1
27308 write(1, "q", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "u", 1)                   = 1
27308 write(1, "u", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "(", 1)                   = 1
27308 write(1, "(", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "'", 1)                   = 1
27308 write(1, "'", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "g", 1)                   = 1
27308 write(1, "g", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "G", 1)                   = 1
27308 write(1, "G", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "E", 1)                   = 1
27308 write(1, "E", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "T", 1)                   = 1
27308 write(1, "T", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "'", 1)                   = 1
27308 write(1, "'", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ",", 1)                   = 1
27308 write(1, ",", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, " ", 1)                   = 1
27308 write(1, " ", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "'", 1)                   = 1
27308 write(1, "'", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "/", 1)                   = 1
27308 write(1, "/", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "'", 1)                   = 1
27308 write(1, "'", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ")", 1)                   = 1
27308 write(1, ")", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242285
27308 stat64("/usr/lib/python2.7/encodings/ascii", 0xbfffdb6c) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/ascii.i386-linux-gnu.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/ascii.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/asciimodule.so", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/encodings/ascii.py", O_RDONLY|O_LARGEFILE) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=662150, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1248, st_atime=2016/11/27-18:46:41, st_mtime=2015/04/02-16:46:59, st_ctime=2015/09/26-01:26:48}) = 0
27308 open("/usr/lib/python2.7/encodings/ascii.pyc", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=669405, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2261, st_atime=2017/04/22-18:29:54, st_mtime=2015/09/26-01:34:14, st_ctime=2015/09/26-01:34:14}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(4, "\3\363\r\n\203r\35Uc\0\0\0\0\0\0\0\0\3\0\0\0@\0\0\0s\273\0\0\0d\0\0Z\0\0d\1\0d\2\0l\1\0Z\1\0d\3\0e\1\0j\2\0f\1\0d\4\0\204\0\0\203\0\0YZ\2\0d\5\0e\1\0j\3\0f\1\0d\6\0\204\0\0\203\0\0YZ\3\0d\7\0e\1\0j\4\0f\1\0d\10\0\204\0\0\203\0\0YZ\4\0d\t\0e\2\0e\1\0j\5\0f\2\0d\n\0\204\0\0\203\0\0YZ\5\0d\v\0e\2\0e\1\0j\6\0f\2\0d\f\0\204\0\0\203\0\0YZ\6\0d\r\0e\5\0e\6\0f\2\0d\16\0\204\0\0\203\0\0YZ\7\0d\17\0\204\0\0Z\10\0d\2\0S(\20\0\0\0s\201\0\0\0 Python 'ascii' Codec\n\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\ni\377\377\377\377Nt\5\0\0\0Codecc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\32\0\0\0e\0\0Z\1\0e\2\0j\3\0Z\4\0e\2\0j\5\0Z\6\0RS(\0\0\0\0(\7\0\0\0t\10\0\0\0__name__t\n\0\0\0__module__t\6\0\0\0codecst\f\0\0\0ascii_encodet\6\0\0\0encodet\f\0\0\0ascii_decodet\6\0\0\0decode(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/ascii.pyR\0\0\0\0\r\0\0\0s\4\0\0\0\6\4\t\1t\22\0\0\0IncrementalEncoderc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s\24\0\0\0e\0\0Z\1\0e\2\0d\0\0\204\1\0Z\3\0RS(\1\0\0\0c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\27\0\0\0t\0\0j\1\0|\1\0|\0\0j\2\0\203\2\0d\1\0\31S(\2\0\0\0Ni\0\0\0\0(\3\0\0\0R\3\0\0\0R\4\0\0\0t\6\0\0\0errors(\3\0\0\0t\4\0\0\0selft\5\0\0\0inputt\5\0\0\0final(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/ascii.pyR\5\0\0\0\25\0\0\0s\2\0\0\0\0\1(\4\0\0\0R\1\0\0\0R\2\0\0\0t\5\0\0\0FalseR\5\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/ascii.pyR\10\0\0\0\24\0\0\0s\2\0\0\0\6\1t\22\0\0\0IncrementalDecoderc\0\0\0\0\0\0\0\0\2\0\0\0B\0\0\0s\24\0\0\0e\0\0Z\1\0e\2\0d\0\0\204\1\0Z\3\0RS(\1\0\0\0c\3\0\0\0\3\0\0\0\3\0\0\0C\0\0\0s\27\0\0\0t\0\0j\1\0|\1\0|\0\0j\2\0\203\2\0d\1\0\31S(\2\0\0\0Ni\0\0\0\0(\3\0\0\0R\3\0\0\0R\6\0\0\0R\t\0\0\0(\3\0\0\0R\n\0\0\0R\v\0\0\0R\f\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/ascii.pyR\7\0\0\0\31\0\0\0s\2\0\0\0\0\1(\4\0\0\0R\1\0\0\0R\2\0\0\0R\r\0\0\0R\7\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/ascii.pyR\16\0\0\0\30\0\0\0s\2\0\0\0\6\1t\f\0\0\0StreamWriterc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0R\1\0\0\0R\2\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/ascii.pyR\17\0\0\0\34\0\0\0s\2\0\0\0\6\1t\f\0\0\0StreamReaderc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\10\0\0\0e\0\0Z\1\0RS(\0\0\0\0(\2\0\0\0R\1\0\0\0R\2\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/ascii.pyR\20\0\0\0\37\0\0\0s\2\0\0\0\6\1t\17\0\0\0StreamConverterc\0\0\0\0\0\0\0\0\1\0\0\0B\0\0\0s\32\0\0\0e\0\0Z\1\0e\2\0j\3\0Z\4\0e\2\0j\5\0Z\6\0RS(\0\0\0\0(\7\0\0\0R\1\0\0\0R\2\0\0\0R\3\0\0\0R\6\0\0\0R\5\0\0\0R\4\0\0\0R\7\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/ascii.pyR\21\0\0\0\"\0\0\0s\4\0\0\0\6\2\t\1c\0\0\0\0\0\0\0\0\17\0\0\0C\0\0\0s:\0\0\0t\0\0j\1\0d\1\0d\2\0d\3\0t\2\0j\3\0d\4\0t\2\0j\4\0d\5\0t\5\0d\6\0t\6\0d\7\0t\7\0d\10\0t\10\0\203\0\7S(\t\0\0\0Nt\4\0\0\0namet\5\0\0\0asciiR\5\0\0\0R\7\0\0\0t\22\0\0\0incrementalencodert\22\0\0\0incrementaldecodert\f\0\0\0streamwritert\f\0\0\0streamreader(\t\0\0\0R\3\0\0\0t\t\0\0\0CodecInfoR\0\0\0\0R\5\0\0\0R\7\0\0\0R\10\0\0\0R\16\0\0\0R\17\0\0\0R\20\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/ascii.pyt\v\0\0\0getregentry)\0\0\0s\20\0\0\0\0\1\t\1\6\1\t\1\t\1\6\1\6\1\6\1(\t\0\0\0t\7\0\0\0__doc__R\3\0\0\0R\0\0\0\0R\10\0\0\0R\16\0\0\0R\17\0\0\0R\20\0\0\0R\21\0\0\0R\31\0\0\0(\0\0\0\0(\0\0\0\0(\0\0\0\0s%\0\0\0/usr/lib/python2.7/encodings/ascii.pyt\10\0\0\0<module>\10\0\0\0s\20\0\0\0\6\1\f\4\31\7\31\4\31\4\34\3\34\3\31\7", 4096) = 2261
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=669405, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2261, st_atime=2017/04/26-21:31:25, st_mtime=2015/09/26-01:34:14, st_ctime=2015/09/26-01:34:14}) = 0
27308 read(4, "", 4096)                 = 0
27308 close(4)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 close(3)                          = 0
27308 socket(PF_LOCAL, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 3
27308 connect(3, {sa_family=AF_LOCAL, sun_path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
27308 close(3)                          = 0
27308 socket(PF_LOCAL, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0) = 3
27308 connect(3, {sa_family=AF_LOCAL, sun_path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
27308 close(3)                          = 0
27308 open("/etc/nsswitch.conf", O_RDONLY|O_CLOEXEC) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1072827, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=467, st_atime=2017/04/26-21:10:52, st_mtime=2017/04/26-21:10:49, st_ctime=2017/04/26-21:10:49}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(3, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference' and `info' packages installed, try:\n# `info libc \"Name Service Switch\"' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\nhosts:          files, dns\nnetworks:       files, dns\nprotocols:      files\nservices:       files\nethers:         files\nrpc:            files\n\nnetgroup:       nis\n", 4096) = 467
27308 read(3, "", 4096)                 = 0
27308 close(3)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 open("/etc/host.conf", O_RDONLY|O_CLOEXEC) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1072825, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=93, st_atime=2017/04/26-21:10:41, st_mtime=2017/04/26-21:10:34, st_ctime=2017/04/26-21:10:34}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(3, "# The \"order\" line is only used by old versions of the C library.\norder hosts, bind\nmulti on\n", 4096) = 93
27308 read(3, "", 4096)                 = 0
27308 close(3)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 futex(0xb7fa3304, FUTEX_WAKE_PRIVATE, 2147483647) = 0
27308 open("/etc/resolv.conf", O_RDONLY|O_CLOEXEC) = 3
27308 fstat64(3, {st_dev=makedev(0, 17), st_ino=16571, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=185, st_atime=2017/04/26-19:25:17, st_mtime=2017/04/05-20:18:24, st_ctime=2017/04/05-20:18:24}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(3, "# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)\n#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN\nnameserver 127.0.1.1\nsearch local\n", 4096) = 185
27308 read(3, "", 4096)                 = 0
27308 close(3)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1072777, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=200, st_size=101810, st_atime=2017/04/26-21:18:06, st_mtime=2017/04/26-21:18:06, st_ctime=2017/04/26-21:18:06}) = 0
27308 mmap2(NULL, 101810, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb79db000
27308 close(3)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/tls/i686/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/tls/i686/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/tls/i686/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/tls/i686/sse2", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/tls/i686/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/tls/i686/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/tls/i686/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/tls/i686", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/tls/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/tls/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/tls/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/tls/sse2", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/tls/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/tls/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/tls/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/tls", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/i686/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/i686/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/i686/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/i686/sse2", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/i686/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/i686/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/i686/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/i686", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/sse2", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i386-linux-gnu", {st_dev=makedev(8, 1), st_ino=1050813, st_mode=S_IFDIR|0755, st_nlink=5, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=12288, st_atime=2017/04/26-21:16:43, st_mtime=2017/04/26-21:16:40, st_ctime=2017/04/26-21:16:40}) = 0
27308 open("/usr/lib/i386-linux-gnu/tls/i686/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/tls/i686/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i386-linux-gnu/tls/i686/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/tls/i686/sse2", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i386-linux-gnu/tls/i686/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/tls/i686/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i386-linux-gnu/tls/i686/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/tls/i686", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i386-linux-gnu/tls/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/tls/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i386-linux-gnu/tls/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/tls/sse2", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i386-linux-gnu/tls/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/tls/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i386-linux-gnu/tls/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/tls", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i386-linux-gnu/i686/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/i686/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i386-linux-gnu/i686/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/i686/sse2", {st_dev=makedev(8, 1), st_ino=659720, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:16:43, st_mtime=2015/04/22-12:04:04, st_ctime=2015/09/26-01:27:19}) = 0
27308 open("/usr/lib/i386-linux-gnu/i686/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/i686/cmov", {st_dev=makedev(8, 1), st_ino=659719, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:16:43, st_mtime=2015/04/22-12:04:26, st_ctime=2015/09/26-01:27:19}) = 0
27308 open("/usr/lib/i386-linux-gnu/i686/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/i686", {st_dev=makedev(8, 1), st_ino=657944, st_mode=S_IFDIR|0755, st_nlink=4, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:16:43, st_mtime=2015/04/22-12:04:04, st_ctime=2015/09/26-01:27:19}) = 0
27308 open("/usr/lib/i386-linux-gnu/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i386-linux-gnu/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/sse2", {st_dev=makedev(8, 1), st_ino=657975, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:16:43, st_mtime=2015/09/26-01:39:59, st_ctime=2015/09/26-01:39:59}) = 0
27308 open("/usr/lib/i386-linux-gnu/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i386-linux-gnu/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i386-linux-gnu", {st_dev=makedev(8, 1), st_ino=656715, st_mode=S_IFDIR|0755, st_nlink=83, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=144, st_size=69632, st_atime=2017/04/26-21:16:43, st_mtime=2017/03/28-06:01:00, st_ctime=2017/03/28-06:01:00}) = 0
27308 open("/lib/tls/i686/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/tls/i686/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/tls/i686/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/tls/i686/sse2", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/tls/i686/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/tls/i686/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/tls/i686/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/tls/i686", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/tls/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/tls/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/tls/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/tls/sse2", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/tls/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/tls/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/tls/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/tls", 0xbfffdd50)    = -1 ENOENT (No such file or directory)
27308 open("/lib/i686/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i686/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i686/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i686/sse2", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i686/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i686/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/i686/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/i686", 0xbfffdd50)   = -1 ENOENT (No such file or directory)
27308 open("/lib/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/lib/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/sse2", 0xbfffdd50)   = -1 ENOENT (No such file or directory)
27308 open("/lib/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib/cmov", 0xbfffdd50)   = -1 ENOENT (No such file or directory)
27308 open("/lib/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/lib", {st_dev=makedev(8, 1), st_ino=1048579, st_mode=S_IFDIR|0755, st_nlink=22, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:16:43, st_mtime=2017/04/13-17:43:17, st_ctime=2017/04/13-17:43:17}) = 0
27308 open("/usr/lib/tls/i686/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/tls/i686/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/tls/i686/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/tls/i686/sse2", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/tls/i686/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/tls/i686/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/tls/i686/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/tls/i686", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/tls/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/tls/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/tls/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/tls/sse2", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/tls/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/tls/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/tls/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/tls", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i686/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i686/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i686/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i686/sse2", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i686/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i686/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/i686/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/i686", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/sse2/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/sse2/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/sse2/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/sse2", {st_dev=makedev(8, 1), st_ino=656763, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2017/04/26-21:16:43, st_mtime=2015/04/22-12:05:15, st_ctime=2015/09/26-01:27:19}) = 0
27308 open("/usr/lib/cmov/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib/cmov", 0xbfffdd50) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/libnss_files,.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)
27308 stat64("/usr/lib", {st_dev=makedev(8, 1), st_ino=655369, st_mode=S_IFDIR|0755, st_nlink=139, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=40, st_size=20480, st_atime=2017/04/26-21:18:06, st_mtime=2017/04/26-21:18:05, st_ctime=2017/04/26-21:18:05}) = 0
27308 munmap(0xb79db000, 101810)        = 0
27308 open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1072777, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=200, st_size=101810, st_atime=2017/04/26-21:18:06, st_mtime=2017/04/26-21:18:06, st_ctime=2017/04/26-21:18:06}) = 0
27308 mmap2(NULL, 101810, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb79db000
27308 close(3)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libnss_dns.so.2", O_RDONLY|O_CLOEXEC) = 3
27308 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\360\v\0\0004\0\0\0\234Q\0\0\0\0\0\0004\0 \0\7\0(\0\35\0\34\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\264F\0\0\264F\0\0\5\0\0\0\0\20\0\0\1\0\0\0\274N\0\0\274^\0\0\274^\0\0\304\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\310N\0\0\310^\0\0\310^\0\0\20\1\0\0\20\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0P\345td\f;\0\0\f;\0\0\f;\0\0|\0\0\0|\0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\274N\0\0\274^\0\0\274^\0\0D\1\0\0D\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0[\360\202\346]\372\261\241\273]\243\234\32\23P\214c\2447\374\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0\r\0\0\0#\0\0\0\2\0\0\0\6\0\0\0M\1\6\7\1\302\10\21\0\0\0\0#\0\0\0$\0\0\0%\0\0\0\0\0\0\0&\0\0\0'\0\0\0\0\0\0\0(\0\0\0)\0\0\0*\0\0\0\0\0\0\0,\0\0\0\1\222\206\321Yl\251\344)\316gq\31h\251\344\307\20\250\357\357L\211\217a\242\222\6\274\313\17\272\223\20X\2\233p\251\344\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\315\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\20\0\0\0\0\0\0\0\0\0\0\0 \0\0\0t\0\0\0", 512) = 512
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1051964, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=48, st_size=22052, st_atime=2017/04/26-19:25:17, st_mtime=2015/03/26-07:01:21, st_ctime=2015/09/26-01:26:32}) = 0
27308 mmap2(NULL, 24708, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7720000
27308 mmap2(0xb7725000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4000) = 0xb7725000
27308 close(3)                          = 0
27308 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27308 open("/lib/i386-linux-gnu/libresolv.so.2", O_RDONLY|O_CLOEXEC) = 3
27308 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\260&\0\0004\0\0\0\250R\1\0\0\0\0\0004\0 \0\7\0(\0\36\0\35\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3347\1\0\3347\1\0\5\0\0\0\0\20\0\0\1\0\0\0\3009\1\0\300I\1\0\300I\1\0\300\27\0\0\10?\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\10\1\0\0\10\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0P\345tdp\0\1\0p\0\1\0p\0\1\0\314\3\0\0\314\3\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\3009\1\0\300I\1\0\300I\1\0@\26\0\0@\26\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0>\244'.\262\212\371\227\20\273\360*8\363\344\325m\\q\234\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0\321\0\0\0?\0\0\0 \0\0\0\n\0\0\0@\0\300\20\20\0\20\0\0\0 \26\1w\244\230\202\204\20\0\2\203\1\20 \2\34\200!\220X\7\200@\0\0\20\0\0 \200\10\0\24D\20\0\2\2\20\2\20\20\30H\0 \304\340@`\0\0021\4B\34\200>\30@4\200\0\30\221\21\1\10\f\200\0\0\4\300\t\0\0D\10\0\0\4\0\20\201\20\0\0@\220\334\32\n\20\20\30\20\201\23A\30\344\f6\4\0\200\0\20\1\1$\4\0\241\21\v?\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1052013, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=176, st_size=87896, st_atime=2017/04/26-19:25:17, st_mtime=2015/03/26-07:01:21, st_ctime=2015/09/26-01:26:32}) = 0
27308 mmap2(NULL, 100552, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7707000
27308 mmap2(0xb771b000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13000) = 0xb771b000
27308 mmap2(0xb771e000, 6344, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb771e000
27308 close(3)                          = 0
27308 mprotect(0xb771b000, 8192, PROT_READ) = 0
27308 mprotect(0xb7725000, 4096, PROT_READ) = 0
27308 munmap(0xb79db000, 101810)        = 0
27308 stat64("/etc/resolv.conf", {st_dev=makedev(0, 17), st_ino=16571, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=185, st_atime=2017/04/26-19:25:17, st_mtime=2017/04/05-20:18:24, st_ctime=2017/04/05-20:18:24}) = 0
27308 open("/etc/resolv.conf", O_RDONLY|O_CLOEXEC) = 3
27308 fstat64(3, {st_dev=makedev(0, 17), st_ino=16571, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=185, st_atime=2017/04/26-19:25:17, st_mtime=2017/04/05-20:18:24, st_ctime=2017/04/05-20:18:24}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(3, "# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)\n#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN\nnameserver 127.0.1.1\nsearch local\n", 4096) = 185
27308 read(3, "", 4096)                 = 0
27308 close(3)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 socket(PF_INET, SOCK_DGRAM|SOCK_NONBLOCK, IPPROTO_IP) = 3
27308 connect(3, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr("127.0.1.1")}, 16) = 0
27308 gettimeofday({1493242285, 909997}, NULL) = 0
27308 poll([{fd=3, events=POLLOUT}], 1, 0) = 1 ([{fd=3, revents=POLLOUT}])
27308 sendmmsg(3, {{{msg_name(0)=NULL, msg_iov(1)=[{"T\233\1\0\0\1\0\0\0\0\0\0\3www\3cwi\2nl\0\0\1\0\1", 28}], msg_controllen=0, msg_flags=0}, 28}, {{msg_name(0)=NULL, msg_iov(1)=[{"\251%\1\0\0\1\0\0\0\0\0\0\3www\3cwi\2nl\0\0\34\0\1", 28}], msg_controllen=0, msg_flags=MSG_TRUNC|MSG_DONTWAIT|MSG_WAITALL|MSG_FIN|MSG_SYN|MSG_CONFIRM|MSG_NOSIGNAL|MSG_MORE|MSG_WAITFORONE|MSG_FASTOPEN|0x9ffe0010}, 28}}, 2, MSG_NOSIGNAL) = 2
27308 poll([{fd=3, events=POLLIN}], 1, 5000) = 1 ([{fd=3, revents=POLLIN}])
27308 ioctl(3, FIONREAD, [64])          = 0
27308 recvfrom(3, "T\233\201\200\0\1\0\2\0\0\0\0\3www\3cwi\2nl\0\0\1\0\1\300\f\0\5\0\1\0\0\273D\0\10\5samen\300\20\300(\0\1\0\1\0\0\327\204\0\4\300\20\2775", 2048, 0, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr("127.0.1.1")}, [16]) = 64
27308 gettimeofday({1493242285, 929355}, NULL) = 0
27308 poll([{fd=3, events=POLLIN}], 1, 4980) = 1 ([{fd=3, revents=POLLIN}])
27308 ioctl(3, FIONREAD, [76])          = 0
27308 recvfrom(3, "\251%\201\200\0\1\0\2\0\0\0\0\3www\3cwi\2nl\0\0\34\0\1\300\f\0\5\0\1\0\0.%\0\10\5samen\300\20\300(\0\34\0\1\0\0.%\0\20 \1\6\20\1(\301\22\1\222\0\26\1\227\2H", 1984, 0, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr("127.0.1.1")}, [16]) = 76
27308 close(3)                          = 0
27308 open("/etc/gai.conf", O_RDONLY|O_CLOEXEC) = 3
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1048718, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2584, st_atime=2017/04/26-19:25:17, st_mtime=2015/02/06-06:40:18, st_ctime=2015/09/26-01:26:30}) = 0
27308 fstat64(3, {st_dev=makedev(8, 1), st_ino=1048718, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2584, st_atime=2017/04/26-19:25:17, st_mtime=2015/02/06-06:40:18, st_ctime=2015/09/26-01:26:30}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(3, "# Configuration for getaddrinfo(3).\n#\n# So far only configuration for the destination address sorting is needed.\n# RFC 3484 governs the sorting.  But the RFC also says that system\n# administrators should be able to overwrite the defaults.  This can be\n# achieved here.\n#\n# All lines have an initial identifier specifying the option followed by\n# up to two values.  Information specified in this file replaces the\n# default information.  Complete absence of data of one kind causes the\n# appropriate default information to be used.  The supported commands include:\n#\n# reload  <yes|no>\n#    If set to yes, each getaddrinfo(3) call will check whether this file\n#    changed and if necessary reload.  This option should not really be\n#    used.  There are possible runtime problems.  The default is no.\n#\n# label   <mask>   <value>\n#    Add another rule to the RFC 3484 label table.  See section 2.1 in\n#    RFC 3484.  The default is:\n#\n#label ::1/128       0\n#label ::/0          1\n#label 2002::/16     2\n#label ::/96         3\n#label ::ffff:0:0/96 4\n#label fec0::/10     5\n#label fc00::/7      6\n#label 2001:0::/32   7\n#\n#    This default differs from the tables given in RFC 3484 by handling\n#    (now obsolete) site-local IPv6 addresses and Unique Local Addresses.\n#    The reason for this difference is that these addresses are never\n#    NATed while IPv4 site-local addresses most probably are.  Given\n#    the precedence of IPv6 over IPv4 (see below) on machines having only\n#    site-local IPv4 and IPv6 addresses a lookup for a global address would\n#    see the IPv6 be preferred.  The result is a long delay because the\n#    site-local IPv6 addresses cannot be used while the IPv4 address is\n#    (at least for the foreseeable future) NATed.  We also treat Teredo\n#    tunnels special.\n#\n# precedence  <mask>   <value>\n#    Add another rule to the RFC 3484 precedence table.  See section 2.1\n#    and 10.3 in RFC 3484.  The default is:\n#\n#precedence  ::1/128       50\n#precedence  ::/0          40\n#precedence  2002::/16     30\n#precedence ::/96          20\n#precedence ::ffff:0:0/96  10\n#\n#    For sites which prefer IPv4 connections change the last line to\n#\n#precedence ::ffff:0:0/96  100\n\n#\n# scopev4  <mask>  <value>\n#    Add another rule to the RFC 6724 scope table for IPv4 addresses.\n#    By default the scope IDs described in section 3.2 in RFC 6724 are\n#    used.  Changing these defaults should hardly ever be necessary.\n#    The defaults are equivalent to:\n#\n#scopev4 ::ffff:169.254.0.0/112  2\n#scopev4 ::ffff:127.0.0.0/104    2\n#scopev4 ::ffff:0.0.0.0/96       14\n", 4096) = 2584
27308 read(3, "", 4096)                 = 0
27308 close(3)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 futex(0xb7fa2070, FUTEX_WAKE_PRIVATE, 2147483647) = 0
27308 socket(PF_NETLINK, SOCK_RAW, 0)   = 3
27308 bind(3, {sa_family=AF_NETLINK, pid=0, groups=00000000}, 12) = 0
27308 getsockname(3, {sa_family=AF_NETLINK, pid=27308, groups=00000000}, [12]) = 0
27308 time(NULL)                        = 1493242285
27308 sendto(3, "\24\0\0\0\26\0\1\3\255\21\1Y\0\0\0\0\0\0\0\0", 20, 0, {sa_family=AF_NETLINK, pid=0, groups=00000000}, 12) = 20
27308 recvmsg(3, {msg_name(12)={sa_family=AF_NETLINK, pid=0, groups=00000000}, msg_iov(1)=[{"L\0\0\0\24\0\2\0\255\21\1Y\254j\0\0\2\10\200\376\1\0\0\0\10\0\1\0\177\0\0\1\10\0\2\0\177\0\0\1\7\0\3\0lo\0\0\10\0\10\0\200\0\0\0\24\0\6\0\377\377\377\377\377\377\377\377\266\1\0\0\266\1\0\0X\0\0\0\24\0\2\0\255\21\1Y\254j\0\0\2\30\200\0\2\0\0\0\10\0\1\0\254\0200\214\10\0\2\0\254\0200\214\10\0\4\0\254\0200\377\t\0\3\0eth0\0\0\0\0\10\0\10\0\200\0\0\0\24\0\6\0\377\377\377\377\377\377\377\377s\320|\0s\320|\0", 4096}], msg_controllen=0, msg_flags=0}, 0) = 164
27308 recvmsg(3, {msg_name(12)={sa_family=AF_NETLINK, pid=0, groups=00000000}, msg_iov(1)=[{"\24\0\0\0\3\0\2\0\255\21\1Y\254j\0\0\0\0\0\0", 4096}], msg_controllen=0, msg_flags=0}, 0) = 20
27308 close(3)                          = 0
27308 socket(PF_INET, SOCK_DGRAM, IPPROTO_IP) = 3
27308 connect(3, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr("192.16.191.53")}, 16) = 0
27308 getsockname(3, {sa_family=AF_INET, sin_port=htons(45458), sin_addr=inet_addr("172.16.48.140")}, [16]) = 0
27308 close(3)                          = 0
27308 socket(PF_INET6, SOCK_DGRAM, IPPROTO_IP) = 3
27308 connect(3, {sa_family=AF_INET6, sin6_port=htons(80), inet_pton(AF_INET6, "2001:610:128:c112:192:16:197:248", &sin6_addr), sin6_flowinfo=0, sin6_scope_id=0}, 28) = -1 ENETUNREACH (Network is unreachable)
27308 close(3)                          = 0
27308 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 3
27308 connect(3, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr("192.16.191.53")}, 16) = 0
27308 send(3, "GET / HTTP/1.1\r\nHost: www.cwi.nl\r\nAccept-Encoding: identity\r\n\r\n", 63, 0) = 63
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "m", 1)                   = 1
27308 write(1, "m", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, " ", 1)                   = 1
27308 write(1, " ", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(2, "\7", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "p", 1)                   = 1
27308 write(1, "p", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "i", 1)                   = 1
27308 write(1, "i", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "n", 1)                   = 1
27308 write(1, "n", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, " ", 1)                   = 1
27308 write(1, " ", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "c", 1)                   = 1
27308 write(1, "c", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "o", 1)                   = 1
27308 write(1, "o", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "n", 1)                   = 1
27308 write(1, "n", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "n", 1)                   = 1
27308 write(1, "n", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "g", 1)                   = 1
27308 write(1, "g", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "p", 1)                   = 1
27308 write(1, "p", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "o", 1)                   = 1
27308 write(1, "o", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "n", 1)                   = 1
27308 write(1, "n", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "(", 1)                   = 1
27308 write(1, "(", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ")", 1)                   = 1
27308 write(1, ")", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242294
27308 write(2, "Traceback (most recent call last):\n", 35) = 35
27308 write(2, "  File \"<stdin>\", line 1, in <module>\n", 38) = 38
27308 open("<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-old/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 write(2, "NameError", 9)          = 9
27308 write(2, ": ", 2)                 = 2
27308 write(2, "name 'conn' is not defined", 26) = 26
27308 write(2, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "h", 1)                   = 1
27308 write(1, "h", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "1", 1)                   = 1
27308 write(1, "1", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "g", 1)                   = 1
27308 write(1, "g", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "p", 1)                   = 1
27308 write(1, "p", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "o", 1)                   = 1
27308 write(1, "o", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "n", 1)                   = 1
27308 write(1, "n", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "(", 1)                   = 1
27308 write(1, "(", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ")", 1)                   = 1
27308 write(1, ")", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242298
27308 recv(3, "H", 1, 0)                = 1
27308 recv(3, "T", 1, 0)                = 1
27308 recv(3, "T", 1, 0)                = 1
27308 recv(3, "P", 1, 0)                = 1
27308 recv(3, "/", 1, 0)                = 1
27308 recv(3, "1", 1, 0)                = 1
27308 recv(3, ".", 1, 0)                = 1
27308 recv(3, "1", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "3", 1, 0)                = 1
27308 recv(3, "0", 1, 0)                = 1
27308 recv(3, "1", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "M", 1, 0)                = 1
27308 recv(3, "o", 1, 0)                = 1
27308 recv(3, "v", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "d", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "P", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "r", 1, 0)                = 1
27308 recv(3, "m", 1, 0)                = 1
27308 recv(3, "a", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "l", 1, 0)                = 1
27308 recv(3, "y", 1, 0)                = 1
27308 recv(3, "\r", 1, 0)               = 1
27308 recv(3, "\n", 1, 0)               = 1
27308 recv(3, "S", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "r", 1, 0)                = 1
27308 recv(3, "v", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "r", 1, 0)                = 1
27308 recv(3, ":", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, "g", 1, 0)                = 1
27308 recv(3, "i", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, "x", 1, 0)                = 1
27308 recv(3, "\r", 1, 0)               = 1
27308 recv(3, "\n", 1, 0)               = 1
27308 recv(3, "D", 1, 0)                = 1
27308 recv(3, "a", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, ":", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "W", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "d", 1, 0)                = 1
27308 recv(3, ",", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "2", 1, 0)                = 1
27308 recv(3, "6", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "A", 1, 0)                = 1
27308 recv(3, "p", 1, 0)                = 1
27308 recv(3, "r", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "2", 1, 0)                = 1
27308 recv(3, "0", 1, 0)                = 1
27308 recv(3, "1", 1, 0)                = 1
27308 recv(3, "7", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "2", 1, 0)                = 1
27308 recv(3, "1", 1, 0)                = 1
27308 recv(3, ":", 1, 0)                = 1
27308 recv(3, "3", 1, 0)                = 1
27308 recv(3, "1", 1, 0)                = 1
27308 recv(3, ":", 1, 0)                = 1
27308 recv(3, "2", 1, 0)                = 1
27308 recv(3, "6", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "G", 1, 0)                = 1
27308 recv(3, "M", 1, 0)                = 1
27308 recv(3, "T", 1, 0)                = 1
27308 recv(3, "\r", 1, 0)               = 1
27308 recv(3, "\n", 1, 0)               = 1
27308 recv(3, "C", 1, 0)                = 1
27308 recv(3, "o", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "-", 1, 0)                = 1
27308 recv(3, "T", 1, 0)                = 1
27308 recv(3, "y", 1, 0)                = 1
27308 recv(3, "p", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, ":", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "x", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "/", 1, 0)                = 1
27308 recv(3, "h", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "m", 1, 0)                = 1
27308 recv(3, "l", 1, 0)                = 1
27308 recv(3, "\r", 1, 0)               = 1
27308 recv(3, "\n", 1, 0)               = 1
27308 recv(3, "C", 1, 0)                = 1
27308 recv(3, "o", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "-", 1, 0)                = 1
27308 recv(3, "L", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, "g", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "h", 1, 0)                = 1
27308 recv(3, ":", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "1", 1, 0)                = 1
27308 recv(3, "8", 1, 0)                = 1
27308 recv(3, "1", 1, 0)                = 1
27308 recv(3, "\r", 1, 0)               = 1
27308 recv(3, "\n", 1, 0)               = 1
27308 recv(3, "C", 1, 0)                = 1
27308 recv(3, "o", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "c", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "i", 1, 0)                = 1
27308 recv(3, "o", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, ":", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "k", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "p", 1, 0)                = 1
27308 recv(3, "-", 1, 0)                = 1
27308 recv(3, "a", 1, 0)                = 1
27308 recv(3, "l", 1, 0)                = 1
27308 recv(3, "i", 1, 0)                = 1
27308 recv(3, "v", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "\r", 1, 0)               = 1
27308 recv(3, "\n", 1, 0)               = 1
27308 recv(3, "L", 1, 0)                = 1
27308 recv(3, "o", 1, 0)                = 1
27308 recv(3, "c", 1, 0)                = 1
27308 recv(3, "a", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "i", 1, 0)                = 1
27308 recv(3, "o", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, ":", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "h", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "t", 1, 0)                = 1
27308 recv(3, "p", 1, 0)                = 1
27308 recv(3, "s", 1, 0)                = 1
27308 recv(3, ":", 1, 0)                = 1
27308 recv(3, "/", 1, 0)                = 1
27308 recv(3, "/", 1, 0)                = 1
27308 recv(3, "w", 1, 0)                = 1
27308 recv(3, "w", 1, 0)                = 1
27308 recv(3, "w", 1, 0)                = 1
27308 recv(3, ".", 1, 0)                = 1
27308 recv(3, "c", 1, 0)                = 1
27308 recv(3, "w", 1, 0)                = 1
27308 recv(3, "i", 1, 0)                = 1
27308 recv(3, ".", 1, 0)                = 1
27308 recv(3, "n", 1, 0)                = 1
27308 recv(3, "l", 1, 0)                = 1
27308 recv(3, "/", 1, 0)                = 1
27308 recv(3, "\r", 1, 0)               = 1
27308 recv(3, "\n", 1, 0)               = 1
27308 recv(3, "E", 1, 0)                = 1
27308 recv(3, "T", 1, 0)                = 1
27308 recv(3, "a", 1, 0)                = 1
27308 recv(3, "g", 1, 0)                = 1
27308 recv(3, ":", 1, 0)                = 1
27308 recv(3, " ", 1, 0)                = 1
27308 recv(3, "\"", 1, 0)               = 1
27308 recv(3, "5", 1, 0)                = 1
27308 recv(3, "8", 1, 0)                = 1
27308 recv(3, "c", 1, 0)                = 1
27308 recv(3, "3", 1, 0)                = 1
27308 recv(3, "e", 1, 0)                = 1
27308 recv(3, "b", 1, 0)                = 1
27308 recv(3, "f", 1, 0)                = 1
27308 recv(3, "4", 1, 0)                = 1
27308 recv(3, "-", 1, 0)                = 1
27308 recv(3, "b", 1, 0)                = 1
27308 recv(3, "5", 1, 0)                = 1
27308 recv(3, "\"", 1, 0)               = 1
27308 recv(3, "\r", 1, 0)               = 1
27308 recv(3, "\n", 1, 0)               = 1
27308 recv(3, "\r", 1, 0)               = 1
27308 recv(3, "\n", 1, 0)               = 1
27308 write(1, "<httplib.HTTPResponse instance at 0xb7a81f8c>\n", 46) = 46
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "d", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "A", 1)                   = 1
27308 write(1, "h1.getresponse()", 16)  = 16
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "a", 1)                   = 1
27308 write(1, "a", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "d", 1)                   = 1
27308 write(1, "d", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242306
27308 write(2, "Traceback (most recent call last):\n", 35) = 35
27308 write(2, "  File \"<stdin>\", line 1, in <module>\n", 38) = 38
27308 open("<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-old/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 write(2, "  File \"/usr/lib/python2.7/httplib.py\", line 1114, in getresponse\n", 66) = 66
27308 open("/usr/lib/python2.7/httplib.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661509, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=104, st_size=50788, st_atime=2017/02/23-18:09:09, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(4, "r\"\"\"HTTP/1.1 client library\n\n<intro stuff goes here>\n<other stuff, too>\n\nHTTPConnection goes through a number of \"states\", which define when a client\nmay legally make another request or fetch the response for a particular\nrequest. This diagram details these state transitions:\n\n    (null)\n      |\n      | HTTPConnection()\n      v\n    Idle\n      |\n      | putrequest()\n      v\n    Request-started\n      |\n      | ( putheader() )*  endheaders()\n      v\n    Request-sent\n      |\n      | response = getresponse()\n      v\n    Unread-response   [Response-headers-read]\n      |\\____________________\n      |                     |\n      | response.read()     | putrequest()\n      v                     v\n    Idle                  Req-started-unread-response\n                     ______/|\n                   /        |\n   response.read() |        | ( putheader() )*  endheaders()\n                   v        v\n       Request-started    Req-sent-unread-response\n                            |\n                            | response.read()\n                            v\n                          Request-sent\n\nThis diagram presents the following rules:\n  -- a second request may not be started until {response-headers-read}\n  -- a response [object] cannot be retrieved until {request-sent}\n  -- there is no differentiation between an unread response body and a\n     partially read response body\n\nNote: this enforcement is applied by the HTTPConnection class. The\n      HTTPResponse class does not enforce this state machine, which\n      implies sophisticated clients may accelerate the request/response\n      pipeline. Caution should be taken, though: accelerating the states\n      beyond the above pattern may imply knowledge of the server's\n      connection-close behavior for certain requests. For example, it\n      is impossible to tell whether the server will close the connection\n      UNTIL the response headers have been read; this means that further\n      requests cannot be placed into the pipeline until it is known that\n      the server will NOT be closing the connection.\n\nLogical State                  __state            __response\n-------------                  -------            ----------\nIdle                           _CS_IDLE           None\nRequest-started                _CS_REQ_STARTED    None\nRequest-sent                   _CS_REQ_SENT       None\nUnread-response                _CS_IDLE           <response_class>\nReq-started-unread-response    _CS_REQ_STARTED    <response_class>\nReq-sent-unread-response       _CS_REQ_SENT       <response_class>\n\"\"\"\n\nfrom array import array\nimport os\nimport re\nimport socket\nfrom sys import py3kwarning\nfrom urlparse import urlsplit\nimport warnings\nwith warnings.catch_warnings():\n    if py3kwarning:\n        warnings.filterwarnings(\"ignore\", \".*mimetools has been removed\",\n                                DeprecationWarning)\n    import mimetools\n\ntry:\n    from cStringIO import StringIO\nexcept ImportError:\n    from StringIO import StringIO\n\n__all__ = [\"HTTP\", \"HTTPResponse\", \"HTTPConnection\",\n           \"HTTPException\", \"NotConnected\", \"UnknownProtocol\",\n           \"UnknownTransferEncoding\", \"UnimplementedFileMode\",\n           \"IncompleteRead\", \"InvalidURL\", \"ImproperConnectionState\",\n           \"CannotSendRequest\", \"CannotSendHeader\", \"ResponseNotReady\",\n           \"BadStatusLine\", \"error\", \"responses\"]\n\nHTTP_PORT = 80\nHTTPS_PORT = 443\n\n_UNKNOWN = 'UNKNOWN'\n\n# connection states\n_CS_IDLE = 'Idle'\n_CS_REQ_STARTED = 'Request-started'\n_CS_REQ_SENT = 'Request-sent'\n\n# status codes\n# informational\nCONTINUE = 100\nSWITCHING_PROTOCOLS = 101\nPROCESSING = 102\n\n# successful\nOK = 200\nCREATED = 201\nACCEPTED = 202\nNON_AUTHORITATIVE_INFORMATION = 203\nNO_CONTENT = 204\nRESET_CONTENT = 205\nPARTIAL_CONTENT = 206\nMULTI_STATUS = 207\nIM_USED = 226\n\n# redirection\nMULTIPLE_CHOICES = 300\nMOVED_PERMANENTLY = 301\nFOUND = 302\nSEE_OTHER = 303\nNOT_MODIFIED = 304\nUSE_PROXY = 305\nTEMPORARY_REDIRECT = 307\n\n# client error\nBAD_REQUEST = 400\nUNAUTHORIZED = 401\nPAYMENT_REQUIRED = 402\nFORBIDDEN = 403\nNOT_FOUND = 404\nMETHOD_NOT_ALLOWED = 405\nNOT_ACCEPTABLE = 40", 4096) = 4096
27308 read(4, "6\nPROXY_AUTHENTICATION_REQUIRED = 407\nREQUEST_TIMEOUT = 408\nCONFLICT = 409\nGONE = 410\nLENGTH_REQUIRED = 411\nPRECONDITION_FAILED = 412\nREQUEST_ENTITY_TOO_LARGE = 413\nREQUEST_URI_TOO_LONG = 414\nUNSUPPORTED_MEDIA_TYPE = 415\nREQUESTED_RANGE_NOT_SATISFIABLE = 416\nEXPECTATION_FAILED = 417\nUNPROCESSABLE_ENTITY = 422\nLOCKED = 423\nFAILED_DEPENDENCY = 424\nUPGRADE_REQUIRED = 426\n\n# server error\nINTERNAL_SERVER_ERROR = 500\nNOT_IMPLEMENTED = 501\nBAD_GATEWAY = 502\nSERVICE_UNAVAILABLE = 503\nGATEWAY_TIMEOUT = 504\nHTTP_VERSION_NOT_SUPPORTED = 505\nINSUFFICIENT_STORAGE = 507\nNOT_EXTENDED = 510\n\n# Mapping status codes to official W3C names\nresponses = {\n    100: 'Continue',\n    101: 'Switching Protocols',\n\n    200: 'OK',\n    201: 'Created',\n    202: 'Accepted',\n    203: 'Non-Authoritative Information',\n    204: 'No Content',\n    205: 'Reset Content',\n    206: 'Partial Content',\n\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Found',\n    303: 'See Other',\n    304: 'Not Modified',\n    305: 'Use Proxy',\n    306: '(Unused)',\n    307: 'Temporary Redirect',\n\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Request Entity Too Large',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Requested Range Not Satisfiable',\n    417: 'Expectation Failed',\n\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n}\n\n# maximal amount of data to read at one time in _safe_read\nMAXAMOUNT = 1048576\n\n# maximal line length when calling readline().\n_MAXLINE = 65536\n\n# maximum amount of headers accepted\n_MAXHEADERS = 100\n\n# Header name/value ABNF (http://tools.ietf.org/html/rfc7230#section-3.2)\n#\n# VCHAR          = %x21-7E\n# obs-text       = %x80-FF\n# header-field   = field-name \":\" OWS field-value OWS\n# field-name     = token\n# field-value    = *( field-content / obs-fold )\n# field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n# field-vchar    = VCHAR / obs-text\n#\n# obs-fold       = CRLF 1*( SP / HTAB )\n#                ; obsolete line folding\n#                ; see Section 3.2.4\n\n# token          = 1*tchar\n#\n# tchar          = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n#                / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n#                / DIGIT / ALPHA\n#                ; any VCHAR, except delimiters\n#\n# VCHAR defined in http://tools.ietf.org/html/rfc5234#appendix-B.1\n\n# the patterns for both name and value are more leniant than RFC\n# definitions to allow for backwards compatibility\n_is_legal_header_name = re.compile(r'\\A[^:\\s][^:\\r\\n]*\\Z').match\n_is_illegal_header_value = re.compile(r'\\n(?![ \\t])|\\r(?![ \\t\\n])').search\n\n# We always set the Content-Length header for these methods because some\n# servers will otherwise respond with a 411\n_METHODS_EXPECTING_BODY = {'PATCH', 'POST', 'PUT'}\n\n\nclass HTTPMessage(mimetools.Message):\n\n    def addheader(self, key, value):\n        \"\"\"Add header for field key handling repeats.\"\"\"\n        prev = self.dict.get(key)\n        if prev is None:\n            self.dict[key] = value\n        else:\n            combined = \", \".join((prev, value))\n            self.dict[key] = combined\n\n    def addcontinue(self, key, more):\n        \"\"\"Add more field data from a continuation line.\"\"\"\n        prev = self.dict[key]\n        self.dict[key] = prev + \"\\n \" + more\n\n    def readheaders(self):\n        \"\"\"Read header lines.\n\n        Read header lines up to the entirely blank line that terminates them.\n        The (normally blank) line that ends the headers is skipped, but not\n        included in the returned list.  If a non-header line ends the headers,\n        (which is an error), an attempt is made to backspace over it; it is\n        never included in the", 4096) = 4096
27308 read(4, " returned list.\n\n        The variable self.status is set to the empty string if all went well,\n        otherwise it is an error message.  The variable self.headers is a\n        completely uninterpreted list of lines contained in the header (so\n        printing them will reproduce the header exactly as it appears in the\n        file).\n\n        If multiple header fields with the same name occur, they are combined\n        according to the rules in RFC 2616 sec 4.2:\n\n        Appending each subsequent field-value to the first, each separated\n        by a comma. The order in which header fields with the same field-name\n        are received is significant to the interpretation of the combined\n        field value.\n        \"\"\"\n        # XXX The implementation overrides the readheaders() method of\n        # rfc822.Message.  The base class design isn't amenable to\n        # customized behavior here so the method here is a copy of the\n        # base class code with a few small changes.\n\n        self.dict = {}\n        self.unixfrom = ''\n        self.headers = hlist = []\n        self.status = ''\n        headerseen = \"\"\n        firstline = 1\n        startofline = unread = tell = None\n        if hasattr(self.fp, 'unread'):\n            unread = self.fp.unread\n        elif self.seekable:\n            tell = self.fp.tell\n        while True:\n            if len(hlist) > _MAXHEADERS:\n                raise HTTPException(\"got more than %d headers\" % _MAXHEADERS)\n            if tell:\n                try:\n                    startofline = tell()\n                except IOError:\n                    startofline = tell = None\n                    self.seekable = 0\n            line = self.fp.readline(_MAXLINE + 1)\n            if len(line) > _MAXLINE:\n                raise LineTooLong(\"header line\")\n            if not line:\n                self.status = 'EOF in headers'\n                break\n            # Skip unix From name time lines\n            if firstline and line.startswith('From '):\n                self.unixfrom = self.unixfrom + line\n                continue\n            firstline = 0\n            if headerseen and line[0] in ' \\t':\n                # XXX Not sure if continuation lines are handled properly\n                # for http and/or for repeating headers\n                # It's a continuation line.\n                hlist.append(line)\n                self.addcontinue(headerseen, line.strip())\n                continue\n            elif self.iscomment(line):\n                # It's a comment.  Ignore it.\n                continue\n            elif self.islast(line):\n                # Note! No pushback here!  The delimiter line gets eaten.\n                break\n            headerseen = self.isheader(line)\n            if headerseen:\n                # It's a legal header line, save it.\n                hlist.append(line)\n                self.addheader(headerseen, line[len(headerseen)+1:].strip())\n                continue\n            elif headerseen is not None:\n                # An empty header name. These aren't allowed in HTTP, but it's\n                # probably a benign mistake. Don't add the header, just keep\n                # going.\n                continue\n            else:\n                # It's not a header line; throw it back and stop here.\n                if not self.dict:\n                    self.status = 'No headers'\n                else:\n                    self.status = 'Non-header line where header expected'\n                # Try to undo the read.\n                if unread:\n                    unread(line)\n                elif tell:\n                    self.fp.seek(startofline)\n                else:\n                    self.status = self.status + '; bad seek'\n                break\n\nclass HTTPResponse:\n\n    # strict: If true, raise BadStatusLine if the status line can't be\n    # parsed as a valid HTTP/1.0 or 1.1 status line.  By default it is\n    # false because it prevents clients from talking to HTTP/0.9\n    # servers.  Note that a response with a sufficiently corrupted\n    # status line will look like an HTTP/0.9 response.\n\n    # See RFC", 4096) = 4096
27308 read(4, " 2616 sec 19.6 and RFC 1945 sec 6 for details.\n\n    def __init__(self, sock, debuglevel=0, strict=0, method=None, buffering=False):\n        if buffering:\n            # The caller won't be using any sock.recv() calls, so buffering\n            # is fine and recommended for performance.\n            self.fp = sock.makefile('rb')\n        else:\n            # The buffer size is specified as zero, because the headers of\n            # the response are read with readline().  If the reads were\n            # buffered the readline() calls could consume some of the\n            # response, which make be read via a recv() on the underlying\n            # socket.\n            self.fp = sock.makefile('rb', 0)\n        self.debuglevel = debuglevel\n        self.strict = strict\n        self._method = method\n\n        self.msg = None\n\n        # from the Status-Line of the response\n        self.version = _UNKNOWN # HTTP-Version\n        self.status = _UNKNOWN  # Status-Code\n        self.reason = _UNKNOWN  # Reason-Phrase\n\n        self.chunked = _UNKNOWN         # is \"chunked\" being used?\n        self.chunk_left = _UNKNOWN      # bytes left to read in current chunk\n        self.length = _UNKNOWN          # number of bytes left in response\n        self.will_close = _UNKNOWN      # conn will close at end of response\n\n    def _read_status(self):\n        # Initialize with Simple-Response defaults\n        line = self.fp.readline(_MAXLINE + 1)\n        if len(line) > _MAXLINE:\n            raise LineTooLong(\"header line\")\n        if self.debuglevel > 0:\n            print \"reply:\", repr(line)\n        if not line:\n            # Presumably, the server closed the connection before\n            # sending a valid response.\n            raise BadStatusLine(line)\n        try:\n            [version, status, reason] = line.split(None, 2)\n        except ValueError:\n            try:\n                [version, status] = line.split(None, 1)\n                reason = \"\"\n            except ValueError:\n                # empty version will cause next test to fail and status\n                # will be treated as 0.9 response.\n                version = \"\"\n        if not version.startswith('HTTP/'):\n            if self.strict:\n                self.close()\n                raise BadStatusLine(line)\n            else:\n                # assume it's a Simple-Response from an 0.9 server\n                self.fp = LineAndFileWrapper(line, self.fp)\n                return \"HTTP/0.9\", 200, \"\"\n\n        # The status code is a three-digit number\n        try:\n            status = int(status)\n            if status < 100 or status > 999:\n                raise BadStatusLine(line)\n        except ValueError:\n            raise BadStatusLine(line)\n        return version, status, reason\n\n    def begin(self):\n        if self.msg is not None:\n            # we've already started reading the response\n            return\n\n        # read until we get a non-100 response\n        while True:\n            version, status, reason = self._read_status()\n            if status != CONTINUE:\n                break\n            # skip the header from the 100 response\n            while True:\n                skip = self.fp.readline(_MAXLINE + 1)\n                if len(skip) > _MAXLINE:\n                    raise LineTooLong(\"header line\")\n                skip = skip.strip()\n                if not skip:\n                    break\n                if self.debuglevel > 0:\n                    print \"header:\", skip\n\n        self.status = status\n        self.reason = reason.strip()\n        if version == 'HTTP/1.0':\n            self.version = 10\n        elif version.startswith('HTTP/1.'):\n            self.version = 11   # use HTTP/1.1 code for HTTP/1.x where x>=1\n        elif version == 'HTTP/0.9':\n            self.version = 9\n        else:\n            raise UnknownProtocol(version)\n\n        if self.version == 9:\n            self.length = None\n            self.chunked = 0\n            self.will_close = 1\n            self.msg = HTTPMessage(StringIO())\n            return\n\n        self.msg = HTTPMessage(self.fp, 0)\n        if self.debuglevel > ", 4096) = 4096
27308 read(4, "0:\n            for hdr in self.msg.headers:\n                print \"header:\", hdr,\n\n        # don't let the msg keep an fp\n        self.msg.fp = None\n\n        # are we using the chunked-style of transfer encoding?\n        tr_enc = self.msg.getheader('transfer-encoding')\n        if tr_enc and tr_enc.lower() == \"chunked\":\n            self.chunked = 1\n            self.chunk_left = None\n        else:\n            self.chunked = 0\n\n        # will the connection close at the end of the response?\n        self.will_close = self._check_close()\n\n        # do we have a Content-Length?\n        # NOTE: RFC 2616, S4.4, #3 says we ignore this if tr_enc is \"chunked\"\n        length = self.msg.getheader('content-length')\n        if length and not self.chunked:\n            try:\n                self.length = int(length)\n            except ValueError:\n                self.length = None\n            else:\n                if self.length < 0:  # ignore nonsensical negative lengths\n                    self.length = None\n        else:\n            self.length = None\n\n        # does the body have a fixed length? (of zero)\n        if (status == NO_CONTENT or status == NOT_MODIFIED or\n            100 <= status < 200 or      # 1xx codes\n            self._method == 'HEAD'):\n            self.length = 0\n\n        # if the connection remains open, and we aren't using chunked, and\n        # a content-length was not provided, then assume that the connection\n        # WILL close.\n        if not self.will_close and \\\n           not self.chunked and \\\n           self.length is None:\n            self.will_close = 1\n\n    def _check_close(self):\n        conn = self.msg.getheader('connection')\n        if self.version == 11:\n            # An HTTP/1.1 proxy is assumed to stay open unless\n            # explicitly closed.\n            conn = self.msg.getheader('connection')\n            if conn and \"close\" in conn.lower():\n                return True\n            return False\n\n        # Some HTTP/1.0 implementations have support for persistent\n        # connections, using rules different than HTTP/1.1.\n\n        # For older HTTP, Keep-Alive indicates persistent connection.\n        if self.msg.getheader('keep-alive'):\n            return False\n\n        # At least Akamai returns a \"Connection: Keep-Alive\" header,\n        # which was supposed to be sent by the client.\n        if conn and \"keep-alive\" in conn.lower():\n            return False\n\n        # Proxy-Connection is a netscape hack.\n        pconn = self.msg.getheader('proxy-connection')\n        if pconn and \"keep-alive\" in pconn.lower():\n            return False\n\n        # otherwise, assume it will close\n        return True\n\n    def close(self):\n        if self.fp:\n            self.fp.close()\n            self.fp = None\n\n    def isclosed(self):\n        # NOTE: it is possible that we will not ever call self.close(). This\n        #       case occurs when will_close is TRUE, length is None, and we\n        #       read up to the last byte, but NOT past it.\n        #\n        # IMPLIES: if will_close is FALSE, then self.close() will ALWAYS be\n        #          called, meaning self.isclosed() is meaningful.\n        return self.fp is None\n\n    # XXX It would be nice to have readline and __iter__ for this, too.\n\n    def read(self, amt=None):\n        if self.fp is None:\n            return ''\n\n        if self._method == 'HEAD':\n            self.close()\n            return ''\n\n        if self.chunked:\n            return self._read_chunked(amt)\n\n        if amt is None:\n            # unbounded read\n            if self.length is None:\n                s = self.fp.read()\n            else:\n                try:\n                    s = self._safe_read(self.length)\n                except IncompleteRead:\n                    self.close()\n                    raise\n                self.length = 0\n            self.close()        # we read everything\n            return s\n\n        if self.length is not None:\n            if amt > self.length:\n                # clip the read to the \"end of response\"\n                amt = self.length\n\n        # we do not ", 4096) = 4096
27308 read(4, "use _safe_read() here because this may be a .will_close\n        # connection, and the user is reading more bytes than will be provided\n        # (for example, reading in 1k chunks)\n        s = self.fp.read(amt)\n        if not s and amt:\n            # Ideally, we would raise IncompleteRead if the content-length\n            # wasn't satisfied, but it might break compatibility.\n            self.close()\n        if self.length is not None:\n            self.length -= len(s)\n            if not self.length:\n                self.close()\n\n        return s\n\n    def _read_chunked(self, amt):\n        assert self.chunked != _UNKNOWN\n        chunk_left = self.chunk_left\n        value = []\n        while True:\n            if chunk_left is None:\n                line = self.fp.readline(_MAXLINE + 1)\n                if len(line) > _MAXLINE:\n                    raise LineTooLong(\"chunk size\")\n                i = line.find(';')\n                if i >= 0:\n                    line = line[:i] # strip chunk-extensions\n                try:\n                    chunk_left = int(line, 16)\n                except ValueError:\n                    # close the connection as protocol synchronisation is\n                    # probably lost\n                    self.close()\n                    raise IncompleteRead(''.join(value))\n                if chunk_left == 0:\n                    break\n            if amt is None:\n                value.append(self._safe_read(chunk_left))\n            elif amt < chunk_left:\n                value.append(self._safe_read(amt))\n                self.chunk_left = chunk_left - amt\n                return ''.join(value)\n            elif amt == chunk_left:\n                value.append(self._safe_read(amt))\n                self._safe_read(2)  # toss the CRLF at the end of the chunk\n                self.chunk_left = None\n                return ''.join(value)\n            else:\n                value.append(self._safe_read(chunk_left))\n                amt -= chunk_left\n\n            # we read the whole chunk, get another\n            self._safe_read(2)      # toss the CRLF at the end of the chunk\n            chunk_left = None\n\n        # read and discard trailer up to the CRLF terminator\n        ### note: we shouldn't have any trailers!\n        while True:\n            line = self.fp.readline(_MAXLINE + 1)\n            if len(line) > _MAXLINE:\n                raise LineTooLong(\"trailer line\")\n            if not line:\n                # a vanishingly small number of sites EOF without\n                # sending the trailer\n                break\n            if line == '\\r\\n':\n                break\n\n        # we read everything; close the \"file\"\n        self.close()\n\n        return ''.join(value)\n\n    def _safe_read(self, amt):\n        \"\"\"Read the number of bytes requested, compensating for partial reads.\n\n        Normally, we have a blocking socket, but a read() can be interrupted\n        by a signal (resulting in a partial read).\n\n        Note that we cannot distinguish between EOF and an interrupt when zero\n        bytes have been read. IncompleteRead() will be raised in this\n        situation.\n\n        This function should be used when <amt> bytes \"should\" be present for\n        reading. If the bytes are truly not available (due to EOF), then the\n        IncompleteRead exception can be used to detect the problem.\n        \"\"\"\n        # NOTE(gps): As of svn r74426 socket._fileobject.read(x) will never\n        # return less than x bytes unless EOF is encountered.  It now handles\n        # signal interruptions (socket.error EINTR) internally.  This code\n        # never caught that exception anyways.  It seems largely pointless.\n        # self.fp.read(amt) will work fine.\n        s = []\n        while amt > 0:\n            chunk = self.fp.read(min(amt, MAXAMOUNT))\n            if not chunk:\n                raise IncompleteRead(''.join(s), amt)\n            s.append(chunk)\n            amt -= len(chunk)\n        return ''.join(s)\n\n    def fileno(self):\n        return self.fp.fileno()\n\n    def getheader(self, name, default=None):\n        if self.msg is None:\n ", 4096) = 4096
27308 read(4, "           raise ResponseNotReady()\n        return self.msg.getheader(name, default)\n\n    def getheaders(self):\n        \"\"\"Return list of (header, value) tuples.\"\"\"\n        if self.msg is None:\n            raise ResponseNotReady()\n        return self.msg.items()\n\n\nclass HTTPConnection:\n\n    _http_vsn = 11\n    _http_vsn_str = 'HTTP/1.1'\n\n    response_class = HTTPResponse\n    default_port = HTTP_PORT\n    auto_open = 1\n    debuglevel = 0\n    strict = 0\n\n    def __init__(self, host, port=None, strict=None,\n                 timeout=socket._GLOBAL_DEFAULT_TIMEOUT, source_address=None):\n        self.timeout = timeout\n        self.source_address = source_address\n        self.sock = None\n        self._buffer = []\n        self.__response = None\n        self.__state = _CS_IDLE\n        self._method = None\n        self._tunnel_host = None\n        self._tunnel_port = None\n        self._tunnel_headers = {}\n        if strict is not None:\n            self.strict = strict\n\n        (self.host, self.port) = self._get_hostport(host, port)\n\n        # This is stored as an instance variable to allow unittests\n        # to replace with a suitable mock\n        self._create_connection = socket.create_connection\n\n    def set_tunnel(self, host, port=None, headers=None):\n        \"\"\" Set up host and port for HTTP CONNECT tunnelling.\n\n        In a connection that uses HTTP Connect tunneling, the host passed to the\n        constructor is used as proxy server that relays all communication to the\n        endpoint passed to set_tunnel. This is done by sending a HTTP CONNECT\n        request to the proxy server when the connection is established.\n\n        This method must be called before the HTTP connection has been\n        established.\n\n        The headers argument should be a mapping of extra HTTP headers\n        to send with the CONNECT request.\n        \"\"\"\n        # Verify if this is required.\n        if self.sock:\n            raise RuntimeError(\"Can't setup tunnel for established connection.\")\n\n        self._tunnel_host = host\n        self._tunnel_port = port\n        if headers:\n            self._tunnel_headers = headers\n        else:\n            self._tunnel_headers.clear()\n\n    def _get_hostport(self, host, port):\n        if port is None:\n            i = host.rfind(':')\n            j = host.rfind(']')         # ipv6 addresses have [...]\n            if i > j:\n                try:\n                    port = int(host[i+1:])\n                except ValueError:\n                    if host[i+1:] == \"\":  # http://foo.com:/ == http://foo.com/\n                        port = self.default_port\n                    else:\n                        raise InvalidURL(\"nonnumeric port: '%s'\" % host[i+1:])\n                host = host[:i]\n            else:\n                port = self.default_port\n            if host and host[0] == '[' and host[-1] == ']':\n                host = host[1:-1]\n        return (host, port)\n\n    def set_debuglevel(self, level):\n        self.debuglevel = level\n\n    def _tunnel(self):\n        (host, port) = self._get_hostport(self._tunnel_host, self._tunnel_port)\n        self.send(\"CONNECT %s:%d HTTP/1.0\\r\\n\" % (host, port))\n        for header, value in self._tunnel_headers.iteritems():\n            self.send(\"%s: %s\\r\\n\" % (header, value))\n        self.send(\"\\r\\n\")\n        response = self.response_class(self.sock, strict = self.strict,\n                                       method = self._method)\n        (version, code, message) = response._read_status()\n\n        if code != 200:\n            self.close()\n            raise socket.error(\"Tunnel connection failed: %d %s\" % (code,\n                                                                    message.strip()))\n        while True:\n            line = response.fp.readline(_MAXLINE + 1)\n            if len(line) > _MAXLINE:\n                raise LineTooLong(\"header line\")\n            if not line:\n                # for sites which EOF without sending trailer\n                break\n            if line == '\\r\\n':\n                break\n\n\n    def connect(self):\n        \"\"\"Connect to the host and port specified", 4096) = 4096
27308 read(4, " in __init__.\"\"\"\n        self.sock = self._create_connection((self.host,self.port),\n                                           self.timeout, self.source_address)\n\n        if self._tunnel_host:\n            self._tunnel()\n\n    def close(self):\n        \"\"\"Close the connection to the HTTP server.\"\"\"\n        if self.sock:\n            self.sock.close()   # close it manually... there may be other refs\n            self.sock = None\n        if self.__response:\n            self.__response.close()\n            self.__response = None\n        self.__state = _CS_IDLE\n\n    def send(self, data):\n        \"\"\"Send `data' to the server.\"\"\"\n        if self.sock is None:\n            if self.auto_open:\n                self.connect()\n            else:\n                raise NotConnected()\n\n        if self.debuglevel > 0:\n            print \"send:\", repr(data)\n        blocksize = 8192\n        if hasattr(data,'read') and not isinstance(data, array):\n            if self.debuglevel > 0: print \"sendIng a read()able\"\n            datablock = data.read(blocksize)\n            while datablock:\n                self.sock.sendall(datablock)\n                datablock = data.read(blocksize)\n        else:\n            self.sock.sendall(data)\n\n    def _output(self, s):\n        \"\"\"Add a line of output to the current request buffer.\n\n        Assumes that the line does *not* end with \\\\r\\\\n.\n        \"\"\"\n        self._buffer.append(s)\n\n    def _send_output(self, message_body=None):\n        \"\"\"Send the currently buffered request and clear the buffer.\n\n        Appends an extra \\\\r\\\\n to the buffer.\n        A message_body may be specified, to be appended to the request.\n        \"\"\"\n        self._buffer.extend((\"\", \"\"))\n        msg = \"\\r\\n\".join(self._buffer)\n        del self._buffer[:]\n        # If msg and message_body are sent in a single send() call,\n        # it will avoid performance problems caused by the interaction\n        # between delayed ack and the Nagle algorithm.\n        if isinstance(message_body, str):\n            msg += message_body\n            message_body = None\n        self.send(msg)\n        if message_body is not None:\n            #message_body was not a string (i.e. it is a file) and\n            #we must run the risk of Nagle\n            self.send(message_body)\n\n    def putrequest(self, method, url, skip_host=0, skip_accept_encoding=0):\n        \"\"\"Send a request to the server.\n\n        `method' specifies an HTTP request method, e.g. 'GET'.\n        `url' specifies the object being requested, e.g. '/index.html'.\n        `skip_host' if True does not add automatically a 'Host:' header\n        `skip_accept_encoding' if True does not add automatically an\n           'Accept-Encoding:' header\n        \"\"\"\n\n        # if a prior response has been completed, then forget about it.\n        if self.__response and self.__response.isclosed():\n            self.__response = None\n\n\n        # in certain cases, we cannot issue another request on this connection.\n        # this occurs when:\n        #   1) we are in the process of sending a request.   (_CS_REQ_STARTED)\n        #   2) a response to a previous request has signalled that it is going\n        #      to close the connection upon completion.\n        #   3) the headers for the previous response have not been read, thus\n        #      we cannot determine whether point (2) is true.   (_CS_REQ_SENT)\n        #\n        # if there is no prior response, then we can request at will.\n        #\n        # if point (2) is true, then we will have passed the socket to the\n        # response (effectively meaning, \"there is no prior response\"), and\n        # will open a new one when a new request is made.\n        #\n        # Note: if a prior response exists, then we *can* start a new request.\n        #       We are not allowed to begin fetching the response to this new\n        #       request, however, until that prior response is complete.\n        #\n        if self.__state == _CS_IDLE:\n            self.__state = _CS_REQ_STARTED\n        else:\n            raise CannotSendRequest()\n\n        # Save the method we use, we need it later i", 4096) = 4096
27308 read(4, "n the response phase\n        self._method = method\n        if not url:\n            url = '/'\n        hdr = '%s %s %s' % (method, url, self._http_vsn_str)\n\n        self._output(hdr)\n\n        if self._http_vsn == 11:\n            # Issue some standard headers for better HTTP/1.1 compliance\n\n            if not skip_host:\n                # this header is issued *only* for HTTP/1.1\n                # connections. more specifically, this means it is\n                # only issued when the client uses the new\n                # HTTPConnection() class. backwards-compat clients\n                # will be using HTTP/1.0 and those clients may be\n                # issuing this header themselves. we should NOT issue\n                # it twice; some web servers (such as Apache) barf\n                # when they see two Host: headers\n\n                # If we need a non-standard port,include it in the\n                # header.  If the request is going through a proxy,\n                # but the host of the actual URL, not the host of the\n                # proxy.\n\n                netloc = ''\n                if url.startswith('http'):\n                    nil, netloc, nil, nil, nil = urlsplit(url)\n\n                if netloc:\n                    try:\n                        netloc_enc = netloc.encode(\"ascii\")\n                    except UnicodeEncodeError:\n                        netloc_enc = netloc.encode(\"idna\")\n                    self.putheader('Host', netloc_enc)\n                else:\n                    if self._tunnel_host:\n                        host = self._tunnel_host\n                        port = self._tunnel_port\n                    else:\n                        host = self.host\n                        port = self.port\n\n                    try:\n                        host_enc = host.encode(\"ascii\")\n                    except UnicodeEncodeError:\n                        host_enc = host.encode(\"idna\")\n                    # Wrap the IPv6 Host Header with [] (RFC 2732)\n                    if host_enc.find(':') >= 0:\n                        host_enc = \"[\" + host_enc + \"]\"\n                    if port == self.default_port:\n                        self.putheader('Host', host_enc)\n                    else:\n                        self.putheader('Host', \"%s:%s\" % (host_enc, port))\n\n            # note: we are assuming that clients will not attempt to set these\n            #       headers since *this* library must deal with the\n            #       consequences. this also means that when the supporting\n            #       libraries are updated to recognize other forms, then this\n            #       code should be changed (removed or updated).\n\n            # we only want a Content-Encoding of \"identity\" since we don't\n            # support encodings such as x-gzip or x-deflate.\n            if not skip_accept_encoding:\n                self.putheader('Accept-Encoding', 'identity')\n\n            # we can accept \"chunked\" Transfer-Encodings, but no others\n            # NOTE: no TE header implies *only* \"chunked\"\n            #self.putheader('TE', 'chunked')\n\n            # if TE is supplied in the header, then it must appear in a\n            # Connection header.\n            #self.putheader('Connection', 'TE')\n\n        else:\n            # For HTTP/1.0, the server will assume \"not chunked\"\n            pass\n\n    def putheader(self, header, *values):\n        \"\"\"Send a request header line to the server.\n\n        For example: h.putheader('Accept', 'text/html')\n        \"\"\"\n        if self.__state != _CS_REQ_STARTED:\n            raise CannotSendHeader()\n\n        header = '%s' % header\n        if not _is_legal_header_name(header):\n            raise ValueError('Invalid header name %r' % (header,))\n\n        values = [str(v) for v in values]\n        for one_value in values:\n            if _is_illegal_header_value(one_value):\n                raise ValueError('Invalid header value %r' % (one_value,))\n\n        hdr = '%s: %s' % (header, '\\r\\n\\t'.join(values))\n        self._output(hdr)\n\n    def endheaders(self, message_body=None):\n        \"\"\"Indicate that the last header ", 4096) = 4096
27308 read(4, "line has been sent to the server.\n\n        This method sends the request to the server.  The optional\n        message_body argument can be used to pass a message body\n        associated with the request.  The message body will be sent in\n        the same packet as the message headers if it is string, otherwise it is\n        sent as a separate packet.\n        \"\"\"\n        if self.__state == _CS_REQ_STARTED:\n            self.__state = _CS_REQ_SENT\n        else:\n            raise CannotSendHeader()\n        self._send_output(message_body)\n\n    def request(self, method, url, body=None, headers={}):\n        \"\"\"Send a complete request to the server.\"\"\"\n        self._send_request(method, url, body, headers)\n\n    def _set_content_length(self, body, method):\n        # Set the content-length based on the body. If the body is \"empty\", we\n        # set Content-Length: 0 for methods that expect a body (RFC 7230,\n        # Section 3.3.2). If the body is set for other methods, we set the\n        # header provided we can figure out what the length is.\n        thelen = None\n        if body is None and method.upper() in _METHODS_EXPECTING_BODY:\n            thelen = '0'\n        elif body is not None:\n            try:\n                thelen = str(len(body))\n            except TypeError:\n                # If this is a file-like object, try to\n                # fstat its file descriptor\n                try:\n                    thelen = str(os.fstat(body.fileno()).st_size)\n                except (AttributeError, OSError):\n                    # Don't send a length if this failed\n                    if self.debuglevel > 0: print \"Cannot stat!!\"\n\n        if thelen is not None:\n            self.putheader('Content-Length', thelen)\n\n    def _send_request(self, method, url, body, headers):\n        # Honor explicitly requested Host: and Accept-Encoding: headers.\n        header_names = dict.fromkeys([k.lower() for k in headers])\n        skips = {}\n        if 'host' in header_names:\n            skips['skip_host'] = 1\n        if 'accept-encoding' in header_names:\n            skips['skip_accept_encoding'] = 1\n\n        self.putrequest(method, url, **skips)\n\n        if 'content-length' not in header_names:\n            self._set_content_length(body, method)\n        for hdr, value in headers.iteritems():\n            self.putheader(hdr, value)\n        self.endheaders(body)\n\n    def getresponse(self, buffering=False):\n        \"Get the response from the server.\"\n\n        # if a prior response has been completed, then forget about it.\n        if self.__response and self.__response.isclosed():\n            self.__response = None\n\n        #\n        # if a prior response exists, then it must be completed (otherwise, we\n        # cannot read this response's header to determine the connection-close\n        # behavior)\n        #\n        # note: if a prior response existed, but was connection-close, then the\n        # socket and response were made independent of this HTTPConnection\n        # object since a new request requires that we open a whole new\n        # connection\n        #\n        # this means the prior response had one of two states:\n        #   1) will_close: this connection was reset and the prior socket and\n        #                  response operate independently\n        #   2) persistent: the response was retained and we await its\n        #                  isclosed() status to become true.\n        #\n        if self.__state != _CS_REQ_SENT or self.__response:\n            raise ResponseNotReady()\n\n        args = (self.sock,)\n        kwds = {\"strict\":self.strict, \"method\":self._method}\n        if self.debuglevel > 0:\n            args += (self.debuglevel,)\n        if buffering:\n            #only add this keyword if non-default, for compatibility with\n            #other response_classes.\n            kwds[\"buffering\"] = True;\n        response = self.response_class(*args, **kwds)\n\n        try:\n            response.begin()\n            assert response.will_close != _UNKNOWN\n            self.__state = _CS_IDLE\n\n            if response.will_close:\n                # th", 4096) = 4096
27308 write(2, "    ", 4)               = 4
27308 write(2, "raise ResponseNotReady()\n", 25) = 25
27308 close(4)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 write(2, "httplib", 7)            = 7
27308 write(2, ".", 1)                  = 1
27308 write(2, "ResponseNotReady", 16)  = 16
27308 write(2, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "A", 1)                   = 1
27308 write(1, "h1.getresponse().read", 21) = 21
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "(", 1)                   = 1
27308 write(1, "(", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ")", 1)                   = 1
27308 write(1, ")", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242308
27308 write(2, "Traceback (most recent call last):\n", 35) = 35
27308 write(2, "  File \"<stdin>\", line 1, in <module>\n", 38) = 38
27308 open("<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-old/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 write(2, "  File \"/usr/lib/python2.7/httplib.py\", line 1114, in getresponse\n", 66) = 66
27308 open("/usr/lib/python2.7/httplib.py", O_RDONLY|O_LARGEFILE) = 4
27308 fstat64(4, {st_dev=makedev(8, 1), st_ino=661509, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=104, st_size=50788, st_atime=2017/04/26-21:31:46, st_mtime=2015/04/02-16:46:56, st_ctime=2015/09/26-01:26:48}) = 0
27308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
27308 read(4, "r\"\"\"HTTP/1.1 client library\n\n<intro stuff goes here>\n<other stuff, too>\n\nHTTPConnection goes through a number of \"states\", which define when a client\nmay legally make another request or fetch the response for a particular\nrequest. This diagram details these state transitions:\n\n    (null)\n      |\n      | HTTPConnection()\n      v\n    Idle\n      |\n      | putrequest()\n      v\n    Request-started\n      |\n      | ( putheader() )*  endheaders()\n      v\n    Request-sent\n      |\n      | response = getresponse()\n      v\n    Unread-response   [Response-headers-read]\n      |\\____________________\n      |                     |\n      | response.read()     | putrequest()\n      v                     v\n    Idle                  Req-started-unread-response\n                     ______/|\n                   /        |\n   response.read() |        | ( putheader() )*  endheaders()\n                   v        v\n       Request-started    Req-sent-unread-response\n                            |\n                            | response.read()\n                            v\n                          Request-sent\n\nThis diagram presents the following rules:\n  -- a second request may not be started until {response-headers-read}\n  -- a response [object] cannot be retrieved until {request-sent}\n  -- there is no differentiation between an unread response body and a\n     partially read response body\n\nNote: this enforcement is applied by the HTTPConnection class. The\n      HTTPResponse class does not enforce this state machine, which\n      implies sophisticated clients may accelerate the request/response\n      pipeline. Caution should be taken, though: accelerating the states\n      beyond the above pattern may imply knowledge of the server's\n      connection-close behavior for certain requests. For example, it\n      is impossible to tell whether the server will close the connection\n      UNTIL the response headers have been read; this means that further\n      requests cannot be placed into the pipeline until it is known that\n      the server will NOT be closing the connection.\n\nLogical State                  __state            __response\n-------------                  -------            ----------\nIdle                           _CS_IDLE           None\nRequest-started                _CS_REQ_STARTED    None\nRequest-sent                   _CS_REQ_SENT       None\nUnread-response                _CS_IDLE           <response_class>\nReq-started-unread-response    _CS_REQ_STARTED    <response_class>\nReq-sent-unread-response       _CS_REQ_SENT       <response_class>\n\"\"\"\n\nfrom array import array\nimport os\nimport re\nimport socket\nfrom sys import py3kwarning\nfrom urlparse import urlsplit\nimport warnings\nwith warnings.catch_warnings():\n    if py3kwarning:\n        warnings.filterwarnings(\"ignore\", \".*mimetools has been removed\",\n                                DeprecationWarning)\n    import mimetools\n\ntry:\n    from cStringIO import StringIO\nexcept ImportError:\n    from StringIO import StringIO\n\n__all__ = [\"HTTP\", \"HTTPResponse\", \"HTTPConnection\",\n           \"HTTPException\", \"NotConnected\", \"UnknownProtocol\",\n           \"UnknownTransferEncoding\", \"UnimplementedFileMode\",\n           \"IncompleteRead\", \"InvalidURL\", \"ImproperConnectionState\",\n           \"CannotSendRequest\", \"CannotSendHeader\", \"ResponseNotReady\",\n           \"BadStatusLine\", \"error\", \"responses\"]\n\nHTTP_PORT = 80\nHTTPS_PORT = 443\n\n_UNKNOWN = 'UNKNOWN'\n\n# connection states\n_CS_IDLE = 'Idle'\n_CS_REQ_STARTED = 'Request-started'\n_CS_REQ_SENT = 'Request-sent'\n\n# status codes\n# informational\nCONTINUE = 100\nSWITCHING_PROTOCOLS = 101\nPROCESSING = 102\n\n# successful\nOK = 200\nCREATED = 201\nACCEPTED = 202\nNON_AUTHORITATIVE_INFORMATION = 203\nNO_CONTENT = 204\nRESET_CONTENT = 205\nPARTIAL_CONTENT = 206\nMULTI_STATUS = 207\nIM_USED = 226\n\n# redirection\nMULTIPLE_CHOICES = 300\nMOVED_PERMANENTLY = 301\nFOUND = 302\nSEE_OTHER = 303\nNOT_MODIFIED = 304\nUSE_PROXY = 305\nTEMPORARY_REDIRECT = 307\n\n# client error\nBAD_REQUEST = 400\nUNAUTHORIZED = 401\nPAYMENT_REQUIRED = 402\nFORBIDDEN = 403\nNOT_FOUND = 404\nMETHOD_NOT_ALLOWED = 405\nNOT_ACCEPTABLE = 40", 4096) = 4096
27308 read(4, "6\nPROXY_AUTHENTICATION_REQUIRED = 407\nREQUEST_TIMEOUT = 408\nCONFLICT = 409\nGONE = 410\nLENGTH_REQUIRED = 411\nPRECONDITION_FAILED = 412\nREQUEST_ENTITY_TOO_LARGE = 413\nREQUEST_URI_TOO_LONG = 414\nUNSUPPORTED_MEDIA_TYPE = 415\nREQUESTED_RANGE_NOT_SATISFIABLE = 416\nEXPECTATION_FAILED = 417\nUNPROCESSABLE_ENTITY = 422\nLOCKED = 423\nFAILED_DEPENDENCY = 424\nUPGRADE_REQUIRED = 426\n\n# server error\nINTERNAL_SERVER_ERROR = 500\nNOT_IMPLEMENTED = 501\nBAD_GATEWAY = 502\nSERVICE_UNAVAILABLE = 503\nGATEWAY_TIMEOUT = 504\nHTTP_VERSION_NOT_SUPPORTED = 505\nINSUFFICIENT_STORAGE = 507\nNOT_EXTENDED = 510\n\n# Mapping status codes to official W3C names\nresponses = {\n    100: 'Continue',\n    101: 'Switching Protocols',\n\n    200: 'OK',\n    201: 'Created',\n    202: 'Accepted',\n    203: 'Non-Authoritative Information',\n    204: 'No Content',\n    205: 'Reset Content',\n    206: 'Partial Content',\n\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Found',\n    303: 'See Other',\n    304: 'Not Modified',\n    305: 'Use Proxy',\n    306: '(Unused)',\n    307: 'Temporary Redirect',\n\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Request Entity Too Large',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Requested Range Not Satisfiable',\n    417: 'Expectation Failed',\n\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n}\n\n# maximal amount of data to read at one time in _safe_read\nMAXAMOUNT = 1048576\n\n# maximal line length when calling readline().\n_MAXLINE = 65536\n\n# maximum amount of headers accepted\n_MAXHEADERS = 100\n\n# Header name/value ABNF (http://tools.ietf.org/html/rfc7230#section-3.2)\n#\n# VCHAR          = %x21-7E\n# obs-text       = %x80-FF\n# header-field   = field-name \":\" OWS field-value OWS\n# field-name     = token\n# field-value    = *( field-content / obs-fold )\n# field-content  = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n# field-vchar    = VCHAR / obs-text\n#\n# obs-fold       = CRLF 1*( SP / HTAB )\n#                ; obsolete line folding\n#                ; see Section 3.2.4\n\n# token          = 1*tchar\n#\n# tchar          = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n#                / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n#                / DIGIT / ALPHA\n#                ; any VCHAR, except delimiters\n#\n# VCHAR defined in http://tools.ietf.org/html/rfc5234#appendix-B.1\n\n# the patterns for both name and value are more leniant than RFC\n# definitions to allow for backwards compatibility\n_is_legal_header_name = re.compile(r'\\A[^:\\s][^:\\r\\n]*\\Z').match\n_is_illegal_header_value = re.compile(r'\\n(?![ \\t])|\\r(?![ \\t\\n])').search\n\n# We always set the Content-Length header for these methods because some\n# servers will otherwise respond with a 411\n_METHODS_EXPECTING_BODY = {'PATCH', 'POST', 'PUT'}\n\n\nclass HTTPMessage(mimetools.Message):\n\n    def addheader(self, key, value):\n        \"\"\"Add header for field key handling repeats.\"\"\"\n        prev = self.dict.get(key)\n        if prev is None:\n            self.dict[key] = value\n        else:\n            combined = \", \".join((prev, value))\n            self.dict[key] = combined\n\n    def addcontinue(self, key, more):\n        \"\"\"Add more field data from a continuation line.\"\"\"\n        prev = self.dict[key]\n        self.dict[key] = prev + \"\\n \" + more\n\n    def readheaders(self):\n        \"\"\"Read header lines.\n\n        Read header lines up to the entirely blank line that terminates them.\n        The (normally blank) line that ends the headers is skipped, but not\n        included in the returned list.  If a non-header line ends the headers,\n        (which is an error), an attempt is made to backspace over it; it is\n        never included in the", 4096) = 4096
27308 read(4, " returned list.\n\n        The variable self.status is set to the empty string if all went well,\n        otherwise it is an error message.  The variable self.headers is a\n        completely uninterpreted list of lines contained in the header (so\n        printing them will reproduce the header exactly as it appears in the\n        file).\n\n        If multiple header fields with the same name occur, they are combined\n        according to the rules in RFC 2616 sec 4.2:\n\n        Appending each subsequent field-value to the first, each separated\n        by a comma. The order in which header fields with the same field-name\n        are received is significant to the interpretation of the combined\n        field value.\n        \"\"\"\n        # XXX The implementation overrides the readheaders() method of\n        # rfc822.Message.  The base class design isn't amenable to\n        # customized behavior here so the method here is a copy of the\n        # base class code with a few small changes.\n\n        self.dict = {}\n        self.unixfrom = ''\n        self.headers = hlist = []\n        self.status = ''\n        headerseen = \"\"\n        firstline = 1\n        startofline = unread = tell = None\n        if hasattr(self.fp, 'unread'):\n            unread = self.fp.unread\n        elif self.seekable:\n            tell = self.fp.tell\n        while True:\n            if len(hlist) > _MAXHEADERS:\n                raise HTTPException(\"got more than %d headers\" % _MAXHEADERS)\n            if tell:\n                try:\n                    startofline = tell()\n                except IOError:\n                    startofline = tell = None\n                    self.seekable = 0\n            line = self.fp.readline(_MAXLINE + 1)\n            if len(line) > _MAXLINE:\n                raise LineTooLong(\"header line\")\n            if not line:\n                self.status = 'EOF in headers'\n                break\n            # Skip unix From name time lines\n            if firstline and line.startswith('From '):\n                self.unixfrom = self.unixfrom + line\n                continue\n            firstline = 0\n            if headerseen and line[0] in ' \\t':\n                # XXX Not sure if continuation lines are handled properly\n                # for http and/or for repeating headers\n                # It's a continuation line.\n                hlist.append(line)\n                self.addcontinue(headerseen, line.strip())\n                continue\n            elif self.iscomment(line):\n                # It's a comment.  Ignore it.\n                continue\n            elif self.islast(line):\n                # Note! No pushback here!  The delimiter line gets eaten.\n                break\n            headerseen = self.isheader(line)\n            if headerseen:\n                # It's a legal header line, save it.\n                hlist.append(line)\n                self.addheader(headerseen, line[len(headerseen)+1:].strip())\n                continue\n            elif headerseen is not None:\n                # An empty header name. These aren't allowed in HTTP, but it's\n                # probably a benign mistake. Don't add the header, just keep\n                # going.\n                continue\n            else:\n                # It's not a header line; throw it back and stop here.\n                if not self.dict:\n                    self.status = 'No headers'\n                else:\n                    self.status = 'Non-header line where header expected'\n                # Try to undo the read.\n                if unread:\n                    unread(line)\n                elif tell:\n                    self.fp.seek(startofline)\n                else:\n                    self.status = self.status + '; bad seek'\n                break\n\nclass HTTPResponse:\n\n    # strict: If true, raise BadStatusLine if the status line can't be\n    # parsed as a valid HTTP/1.0 or 1.1 status line.  By default it is\n    # false because it prevents clients from talking to HTTP/0.9\n    # servers.  Note that a response with a sufficiently corrupted\n    # status line will look like an HTTP/0.9 response.\n\n    # See RFC", 4096) = 4096
27308 read(4, " 2616 sec 19.6 and RFC 1945 sec 6 for details.\n\n    def __init__(self, sock, debuglevel=0, strict=0, method=None, buffering=False):\n        if buffering:\n            # The caller won't be using any sock.recv() calls, so buffering\n            # is fine and recommended for performance.\n            self.fp = sock.makefile('rb')\n        else:\n            # The buffer size is specified as zero, because the headers of\n            # the response are read with readline().  If the reads were\n            # buffered the readline() calls could consume some of the\n            # response, which make be read via a recv() on the underlying\n            # socket.\n            self.fp = sock.makefile('rb', 0)\n        self.debuglevel = debuglevel\n        self.strict = strict\n        self._method = method\n\n        self.msg = None\n\n        # from the Status-Line of the response\n        self.version = _UNKNOWN # HTTP-Version\n        self.status = _UNKNOWN  # Status-Code\n        self.reason = _UNKNOWN  # Reason-Phrase\n\n        self.chunked = _UNKNOWN         # is \"chunked\" being used?\n        self.chunk_left = _UNKNOWN      # bytes left to read in current chunk\n        self.length = _UNKNOWN          # number of bytes left in response\n        self.will_close = _UNKNOWN      # conn will close at end of response\n\n    def _read_status(self):\n        # Initialize with Simple-Response defaults\n        line = self.fp.readline(_MAXLINE + 1)\n        if len(line) > _MAXLINE:\n            raise LineTooLong(\"header line\")\n        if self.debuglevel > 0:\n            print \"reply:\", repr(line)\n        if not line:\n            # Presumably, the server closed the connection before\n            # sending a valid response.\n            raise BadStatusLine(line)\n        try:\n            [version, status, reason] = line.split(None, 2)\n        except ValueError:\n            try:\n                [version, status] = line.split(None, 1)\n                reason = \"\"\n            except ValueError:\n                # empty version will cause next test to fail and status\n                # will be treated as 0.9 response.\n                version = \"\"\n        if not version.startswith('HTTP/'):\n            if self.strict:\n                self.close()\n                raise BadStatusLine(line)\n            else:\n                # assume it's a Simple-Response from an 0.9 server\n                self.fp = LineAndFileWrapper(line, self.fp)\n                return \"HTTP/0.9\", 200, \"\"\n\n        # The status code is a three-digit number\n        try:\n            status = int(status)\n            if status < 100 or status > 999:\n                raise BadStatusLine(line)\n        except ValueError:\n            raise BadStatusLine(line)\n        return version, status, reason\n\n    def begin(self):\n        if self.msg is not None:\n            # we've already started reading the response\n            return\n\n        # read until we get a non-100 response\n        while True:\n            version, status, reason = self._read_status()\n            if status != CONTINUE:\n                break\n            # skip the header from the 100 response\n            while True:\n                skip = self.fp.readline(_MAXLINE + 1)\n                if len(skip) > _MAXLINE:\n                    raise LineTooLong(\"header line\")\n                skip = skip.strip()\n                if not skip:\n                    break\n                if self.debuglevel > 0:\n                    print \"header:\", skip\n\n        self.status = status\n        self.reason = reason.strip()\n        if version == 'HTTP/1.0':\n            self.version = 10\n        elif version.startswith('HTTP/1.'):\n            self.version = 11   # use HTTP/1.1 code for HTTP/1.x where x>=1\n        elif version == 'HTTP/0.9':\n            self.version = 9\n        else:\n            raise UnknownProtocol(version)\n\n        if self.version == 9:\n            self.length = None\n            self.chunked = 0\n            self.will_close = 1\n            self.msg = HTTPMessage(StringIO())\n            return\n\n        self.msg = HTTPMessage(self.fp, 0)\n        if self.debuglevel > ", 4096) = 4096
27308 read(4, "0:\n            for hdr in self.msg.headers:\n                print \"header:\", hdr,\n\n        # don't let the msg keep an fp\n        self.msg.fp = None\n\n        # are we using the chunked-style of transfer encoding?\n        tr_enc = self.msg.getheader('transfer-encoding')\n        if tr_enc and tr_enc.lower() == \"chunked\":\n            self.chunked = 1\n            self.chunk_left = None\n        else:\n            self.chunked = 0\n\n        # will the connection close at the end of the response?\n        self.will_close = self._check_close()\n\n        # do we have a Content-Length?\n        # NOTE: RFC 2616, S4.4, #3 says we ignore this if tr_enc is \"chunked\"\n        length = self.msg.getheader('content-length')\n        if length and not self.chunked:\n            try:\n                self.length = int(length)\n            except ValueError:\n                self.length = None\n            else:\n                if self.length < 0:  # ignore nonsensical negative lengths\n                    self.length = None\n        else:\n            self.length = None\n\n        # does the body have a fixed length? (of zero)\n        if (status == NO_CONTENT or status == NOT_MODIFIED or\n            100 <= status < 200 or      # 1xx codes\n            self._method == 'HEAD'):\n            self.length = 0\n\n        # if the connection remains open, and we aren't using chunked, and\n        # a content-length was not provided, then assume that the connection\n        # WILL close.\n        if not self.will_close and \\\n           not self.chunked and \\\n           self.length is None:\n            self.will_close = 1\n\n    def _check_close(self):\n        conn = self.msg.getheader('connection')\n        if self.version == 11:\n            # An HTTP/1.1 proxy is assumed to stay open unless\n            # explicitly closed.\n            conn = self.msg.getheader('connection')\n            if conn and \"close\" in conn.lower():\n                return True\n            return False\n\n        # Some HTTP/1.0 implementations have support for persistent\n        # connections, using rules different than HTTP/1.1.\n\n        # For older HTTP, Keep-Alive indicates persistent connection.\n        if self.msg.getheader('keep-alive'):\n            return False\n\n        # At least Akamai returns a \"Connection: Keep-Alive\" header,\n        # which was supposed to be sent by the client.\n        if conn and \"keep-alive\" in conn.lower():\n            return False\n\n        # Proxy-Connection is a netscape hack.\n        pconn = self.msg.getheader('proxy-connection')\n        if pconn and \"keep-alive\" in pconn.lower():\n            return False\n\n        # otherwise, assume it will close\n        return True\n\n    def close(self):\n        if self.fp:\n            self.fp.close()\n            self.fp = None\n\n    def isclosed(self):\n        # NOTE: it is possible that we will not ever call self.close(). This\n        #       case occurs when will_close is TRUE, length is None, and we\n        #       read up to the last byte, but NOT past it.\n        #\n        # IMPLIES: if will_close is FALSE, then self.close() will ALWAYS be\n        #          called, meaning self.isclosed() is meaningful.\n        return self.fp is None\n\n    # XXX It would be nice to have readline and __iter__ for this, too.\n\n    def read(self, amt=None):\n        if self.fp is None:\n            return ''\n\n        if self._method == 'HEAD':\n            self.close()\n            return ''\n\n        if self.chunked:\n            return self._read_chunked(amt)\n\n        if amt is None:\n            # unbounded read\n            if self.length is None:\n                s = self.fp.read()\n            else:\n                try:\n                    s = self._safe_read(self.length)\n                except IncompleteRead:\n                    self.close()\n                    raise\n                self.length = 0\n            self.close()        # we read everything\n            return s\n\n        if self.length is not None:\n            if amt > self.length:\n                # clip the read to the \"end of response\"\n                amt = self.length\n\n        # we do not ", 4096) = 4096
27308 read(4, "use _safe_read() here because this may be a .will_close\n        # connection, and the user is reading more bytes than will be provided\n        # (for example, reading in 1k chunks)\n        s = self.fp.read(amt)\n        if not s and amt:\n            # Ideally, we would raise IncompleteRead if the content-length\n            # wasn't satisfied, but it might break compatibility.\n            self.close()\n        if self.length is not None:\n            self.length -= len(s)\n            if not self.length:\n                self.close()\n\n        return s\n\n    def _read_chunked(self, amt):\n        assert self.chunked != _UNKNOWN\n        chunk_left = self.chunk_left\n        value = []\n        while True:\n            if chunk_left is None:\n                line = self.fp.readline(_MAXLINE + 1)\n                if len(line) > _MAXLINE:\n                    raise LineTooLong(\"chunk size\")\n                i = line.find(';')\n                if i >= 0:\n                    line = line[:i] # strip chunk-extensions\n                try:\n                    chunk_left = int(line, 16)\n                except ValueError:\n                    # close the connection as protocol synchronisation is\n                    # probably lost\n                    self.close()\n                    raise IncompleteRead(''.join(value))\n                if chunk_left == 0:\n                    break\n            if amt is None:\n                value.append(self._safe_read(chunk_left))\n            elif amt < chunk_left:\n                value.append(self._safe_read(amt))\n                self.chunk_left = chunk_left - amt\n                return ''.join(value)\n            elif amt == chunk_left:\n                value.append(self._safe_read(amt))\n                self._safe_read(2)  # toss the CRLF at the end of the chunk\n                self.chunk_left = None\n                return ''.join(value)\n            else:\n                value.append(self._safe_read(chunk_left))\n                amt -= chunk_left\n\n            # we read the whole chunk, get another\n            self._safe_read(2)      # toss the CRLF at the end of the chunk\n            chunk_left = None\n\n        # read and discard trailer up to the CRLF terminator\n        ### note: we shouldn't have any trailers!\n        while True:\n            line = self.fp.readline(_MAXLINE + 1)\n            if len(line) > _MAXLINE:\n                raise LineTooLong(\"trailer line\")\n            if not line:\n                # a vanishingly small number of sites EOF without\n                # sending the trailer\n                break\n            if line == '\\r\\n':\n                break\n\n        # we read everything; close the \"file\"\n        self.close()\n\n        return ''.join(value)\n\n    def _safe_read(self, amt):\n        \"\"\"Read the number of bytes requested, compensating for partial reads.\n\n        Normally, we have a blocking socket, but a read() can be interrupted\n        by a signal (resulting in a partial read).\n\n        Note that we cannot distinguish between EOF and an interrupt when zero\n        bytes have been read. IncompleteRead() will be raised in this\n        situation.\n\n        This function should be used when <amt> bytes \"should\" be present for\n        reading. If the bytes are truly not available (due to EOF), then the\n        IncompleteRead exception can be used to detect the problem.\n        \"\"\"\n        # NOTE(gps): As of svn r74426 socket._fileobject.read(x) will never\n        # return less than x bytes unless EOF is encountered.  It now handles\n        # signal interruptions (socket.error EINTR) internally.  This code\n        # never caught that exception anyways.  It seems largely pointless.\n        # self.fp.read(amt) will work fine.\n        s = []\n        while amt > 0:\n            chunk = self.fp.read(min(amt, MAXAMOUNT))\n            if not chunk:\n                raise IncompleteRead(''.join(s), amt)\n            s.append(chunk)\n            amt -= len(chunk)\n        return ''.join(s)\n\n    def fileno(self):\n        return self.fp.fileno()\n\n    def getheader(self, name, default=None):\n        if self.msg is None:\n ", 4096) = 4096
27308 read(4, "           raise ResponseNotReady()\n        return self.msg.getheader(name, default)\n\n    def getheaders(self):\n        \"\"\"Return list of (header, value) tuples.\"\"\"\n        if self.msg is None:\n            raise ResponseNotReady()\n        return self.msg.items()\n\n\nclass HTTPConnection:\n\n    _http_vsn = 11\n    _http_vsn_str = 'HTTP/1.1'\n\n    response_class = HTTPResponse\n    default_port = HTTP_PORT\n    auto_open = 1\n    debuglevel = 0\n    strict = 0\n\n    def __init__(self, host, port=None, strict=None,\n                 timeout=socket._GLOBAL_DEFAULT_TIMEOUT, source_address=None):\n        self.timeout = timeout\n        self.source_address = source_address\n        self.sock = None\n        self._buffer = []\n        self.__response = None\n        self.__state = _CS_IDLE\n        self._method = None\n        self._tunnel_host = None\n        self._tunnel_port = None\n        self._tunnel_headers = {}\n        if strict is not None:\n            self.strict = strict\n\n        (self.host, self.port) = self._get_hostport(host, port)\n\n        # This is stored as an instance variable to allow unittests\n        # to replace with a suitable mock\n        self._create_connection = socket.create_connection\n\n    def set_tunnel(self, host, port=None, headers=None):\n        \"\"\" Set up host and port for HTTP CONNECT tunnelling.\n\n        In a connection that uses HTTP Connect tunneling, the host passed to the\n        constructor is used as proxy server that relays all communication to the\n        endpoint passed to set_tunnel. This is done by sending a HTTP CONNECT\n        request to the proxy server when the connection is established.\n\n        This method must be called before the HTTP connection has been\n        established.\n\n        The headers argument should be a mapping of extra HTTP headers\n        to send with the CONNECT request.\n        \"\"\"\n        # Verify if this is required.\n        if self.sock:\n            raise RuntimeError(\"Can't setup tunnel for established connection.\")\n\n        self._tunnel_host = host\n        self._tunnel_port = port\n        if headers:\n            self._tunnel_headers = headers\n        else:\n            self._tunnel_headers.clear()\n\n    def _get_hostport(self, host, port):\n        if port is None:\n            i = host.rfind(':')\n            j = host.rfind(']')         # ipv6 addresses have [...]\n            if i > j:\n                try:\n                    port = int(host[i+1:])\n                except ValueError:\n                    if host[i+1:] == \"\":  # http://foo.com:/ == http://foo.com/\n                        port = self.default_port\n                    else:\n                        raise InvalidURL(\"nonnumeric port: '%s'\" % host[i+1:])\n                host = host[:i]\n            else:\n                port = self.default_port\n            if host and host[0] == '[' and host[-1] == ']':\n                host = host[1:-1]\n        return (host, port)\n\n    def set_debuglevel(self, level):\n        self.debuglevel = level\n\n    def _tunnel(self):\n        (host, port) = self._get_hostport(self._tunnel_host, self._tunnel_port)\n        self.send(\"CONNECT %s:%d HTTP/1.0\\r\\n\" % (host, port))\n        for header, value in self._tunnel_headers.iteritems():\n            self.send(\"%s: %s\\r\\n\" % (header, value))\n        self.send(\"\\r\\n\")\n        response = self.response_class(self.sock, strict = self.strict,\n                                       method = self._method)\n        (version, code, message) = response._read_status()\n\n        if code != 200:\n            self.close()\n            raise socket.error(\"Tunnel connection failed: %d %s\" % (code,\n                                                                    message.strip()))\n        while True:\n            line = response.fp.readline(_MAXLINE + 1)\n            if len(line) > _MAXLINE:\n                raise LineTooLong(\"header line\")\n            if not line:\n                # for sites which EOF without sending trailer\n                break\n            if line == '\\r\\n':\n                break\n\n\n    def connect(self):\n        \"\"\"Connect to the host and port specified", 4096) = 4096
27308 read(4, " in __init__.\"\"\"\n        self.sock = self._create_connection((self.host,self.port),\n                                           self.timeout, self.source_address)\n\n        if self._tunnel_host:\n            self._tunnel()\n\n    def close(self):\n        \"\"\"Close the connection to the HTTP server.\"\"\"\n        if self.sock:\n            self.sock.close()   # close it manually... there may be other refs\n            self.sock = None\n        if self.__response:\n            self.__response.close()\n            self.__response = None\n        self.__state = _CS_IDLE\n\n    def send(self, data):\n        \"\"\"Send `data' to the server.\"\"\"\n        if self.sock is None:\n            if self.auto_open:\n                self.connect()\n            else:\n                raise NotConnected()\n\n        if self.debuglevel > 0:\n            print \"send:\", repr(data)\n        blocksize = 8192\n        if hasattr(data,'read') and not isinstance(data, array):\n            if self.debuglevel > 0: print \"sendIng a read()able\"\n            datablock = data.read(blocksize)\n            while datablock:\n                self.sock.sendall(datablock)\n                datablock = data.read(blocksize)\n        else:\n            self.sock.sendall(data)\n\n    def _output(self, s):\n        \"\"\"Add a line of output to the current request buffer.\n\n        Assumes that the line does *not* end with \\\\r\\\\n.\n        \"\"\"\n        self._buffer.append(s)\n\n    def _send_output(self, message_body=None):\n        \"\"\"Send the currently buffered request and clear the buffer.\n\n        Appends an extra \\\\r\\\\n to the buffer.\n        A message_body may be specified, to be appended to the request.\n        \"\"\"\n        self._buffer.extend((\"\", \"\"))\n        msg = \"\\r\\n\".join(self._buffer)\n        del self._buffer[:]\n        # If msg and message_body are sent in a single send() call,\n        # it will avoid performance problems caused by the interaction\n        # between delayed ack and the Nagle algorithm.\n        if isinstance(message_body, str):\n            msg += message_body\n            message_body = None\n        self.send(msg)\n        if message_body is not None:\n            #message_body was not a string (i.e. it is a file) and\n            #we must run the risk of Nagle\n            self.send(message_body)\n\n    def putrequest(self, method, url, skip_host=0, skip_accept_encoding=0):\n        \"\"\"Send a request to the server.\n\n        `method' specifies an HTTP request method, e.g. 'GET'.\n        `url' specifies the object being requested, e.g. '/index.html'.\n        `skip_host' if True does not add automatically a 'Host:' header\n        `skip_accept_encoding' if True does not add automatically an\n           'Accept-Encoding:' header\n        \"\"\"\n\n        # if a prior response has been completed, then forget about it.\n        if self.__response and self.__response.isclosed():\n            self.__response = None\n\n\n        # in certain cases, we cannot issue another request on this connection.\n        # this occurs when:\n        #   1) we are in the process of sending a request.   (_CS_REQ_STARTED)\n        #   2) a response to a previous request has signalled that it is going\n        #      to close the connection upon completion.\n        #   3) the headers for the previous response have not been read, thus\n        #      we cannot determine whether point (2) is true.   (_CS_REQ_SENT)\n        #\n        # if there is no prior response, then we can request at will.\n        #\n        # if point (2) is true, then we will have passed the socket to the\n        # response (effectively meaning, \"there is no prior response\"), and\n        # will open a new one when a new request is made.\n        #\n        # Note: if a prior response exists, then we *can* start a new request.\n        #       We are not allowed to begin fetching the response to this new\n        #       request, however, until that prior response is complete.\n        #\n        if self.__state == _CS_IDLE:\n            self.__state = _CS_REQ_STARTED\n        else:\n            raise CannotSendRequest()\n\n        # Save the method we use, we need it later i", 4096) = 4096
27308 read(4, "n the response phase\n        self._method = method\n        if not url:\n            url = '/'\n        hdr = '%s %s %s' % (method, url, self._http_vsn_str)\n\n        self._output(hdr)\n\n        if self._http_vsn == 11:\n            # Issue some standard headers for better HTTP/1.1 compliance\n\n            if not skip_host:\n                # this header is issued *only* for HTTP/1.1\n                # connections. more specifically, this means it is\n                # only issued when the client uses the new\n                # HTTPConnection() class. backwards-compat clients\n                # will be using HTTP/1.0 and those clients may be\n                # issuing this header themselves. we should NOT issue\n                # it twice; some web servers (such as Apache) barf\n                # when they see two Host: headers\n\n                # If we need a non-standard port,include it in the\n                # header.  If the request is going through a proxy,\n                # but the host of the actual URL, not the host of the\n                # proxy.\n\n                netloc = ''\n                if url.startswith('http'):\n                    nil, netloc, nil, nil, nil = urlsplit(url)\n\n                if netloc:\n                    try:\n                        netloc_enc = netloc.encode(\"ascii\")\n                    except UnicodeEncodeError:\n                        netloc_enc = netloc.encode(\"idna\")\n                    self.putheader('Host', netloc_enc)\n                else:\n                    if self._tunnel_host:\n                        host = self._tunnel_host\n                        port = self._tunnel_port\n                    else:\n                        host = self.host\n                        port = self.port\n\n                    try:\n                        host_enc = host.encode(\"ascii\")\n                    except UnicodeEncodeError:\n                        host_enc = host.encode(\"idna\")\n                    # Wrap the IPv6 Host Header with [] (RFC 2732)\n                    if host_enc.find(':') >= 0:\n                        host_enc = \"[\" + host_enc + \"]\"\n                    if port == self.default_port:\n                        self.putheader('Host', host_enc)\n                    else:\n                        self.putheader('Host', \"%s:%s\" % (host_enc, port))\n\n            # note: we are assuming that clients will not attempt to set these\n            #       headers since *this* library must deal with the\n            #       consequences. this also means that when the supporting\n            #       libraries are updated to recognize other forms, then this\n            #       code should be changed (removed or updated).\n\n            # we only want a Content-Encoding of \"identity\" since we don't\n            # support encodings such as x-gzip or x-deflate.\n            if not skip_accept_encoding:\n                self.putheader('Accept-Encoding', 'identity')\n\n            # we can accept \"chunked\" Transfer-Encodings, but no others\n            # NOTE: no TE header implies *only* \"chunked\"\n            #self.putheader('TE', 'chunked')\n\n            # if TE is supplied in the header, then it must appear in a\n            # Connection header.\n            #self.putheader('Connection', 'TE')\n\n        else:\n            # For HTTP/1.0, the server will assume \"not chunked\"\n            pass\n\n    def putheader(self, header, *values):\n        \"\"\"Send a request header line to the server.\n\n        For example: h.putheader('Accept', 'text/html')\n        \"\"\"\n        if self.__state != _CS_REQ_STARTED:\n            raise CannotSendHeader()\n\n        header = '%s' % header\n        if not _is_legal_header_name(header):\n            raise ValueError('Invalid header name %r' % (header,))\n\n        values = [str(v) for v in values]\n        for one_value in values:\n            if _is_illegal_header_value(one_value):\n                raise ValueError('Invalid header value %r' % (one_value,))\n\n        hdr = '%s: %s' % (header, '\\r\\n\\t'.join(values))\n        self._output(hdr)\n\n    def endheaders(self, message_body=None):\n        \"\"\"Indicate that the last header ", 4096) = 4096
27308 read(4, "line has been sent to the server.\n\n        This method sends the request to the server.  The optional\n        message_body argument can be used to pass a message body\n        associated with the request.  The message body will be sent in\n        the same packet as the message headers if it is string, otherwise it is\n        sent as a separate packet.\n        \"\"\"\n        if self.__state == _CS_REQ_STARTED:\n            self.__state = _CS_REQ_SENT\n        else:\n            raise CannotSendHeader()\n        self._send_output(message_body)\n\n    def request(self, method, url, body=None, headers={}):\n        \"\"\"Send a complete request to the server.\"\"\"\n        self._send_request(method, url, body, headers)\n\n    def _set_content_length(self, body, method):\n        # Set the content-length based on the body. If the body is \"empty\", we\n        # set Content-Length: 0 for methods that expect a body (RFC 7230,\n        # Section 3.3.2). If the body is set for other methods, we set the\n        # header provided we can figure out what the length is.\n        thelen = None\n        if body is None and method.upper() in _METHODS_EXPECTING_BODY:\n            thelen = '0'\n        elif body is not None:\n            try:\n                thelen = str(len(body))\n            except TypeError:\n                # If this is a file-like object, try to\n                # fstat its file descriptor\n                try:\n                    thelen = str(os.fstat(body.fileno()).st_size)\n                except (AttributeError, OSError):\n                    # Don't send a length if this failed\n                    if self.debuglevel > 0: print \"Cannot stat!!\"\n\n        if thelen is not None:\n            self.putheader('Content-Length', thelen)\n\n    def _send_request(self, method, url, body, headers):\n        # Honor explicitly requested Host: and Accept-Encoding: headers.\n        header_names = dict.fromkeys([k.lower() for k in headers])\n        skips = {}\n        if 'host' in header_names:\n            skips['skip_host'] = 1\n        if 'accept-encoding' in header_names:\n            skips['skip_accept_encoding'] = 1\n\n        self.putrequest(method, url, **skips)\n\n        if 'content-length' not in header_names:\n            self._set_content_length(body, method)\n        for hdr, value in headers.iteritems():\n            self.putheader(hdr, value)\n        self.endheaders(body)\n\n    def getresponse(self, buffering=False):\n        \"Get the response from the server.\"\n\n        # if a prior response has been completed, then forget about it.\n        if self.__response and self.__response.isclosed():\n            self.__response = None\n\n        #\n        # if a prior response exists, then it must be completed (otherwise, we\n        # cannot read this response's header to determine the connection-close\n        # behavior)\n        #\n        # note: if a prior response existed, but was connection-close, then the\n        # socket and response were made independent of this HTTPConnection\n        # object since a new request requires that we open a whole new\n        # connection\n        #\n        # this means the prior response had one of two states:\n        #   1) will_close: this connection was reset and the prior socket and\n        #                  response operate independently\n        #   2) persistent: the response was retained and we await its\n        #                  isclosed() status to become true.\n        #\n        if self.__state != _CS_REQ_SENT or self.__response:\n            raise ResponseNotReady()\n\n        args = (self.sock,)\n        kwds = {\"strict\":self.strict, \"method\":self._method}\n        if self.debuglevel > 0:\n            args += (self.debuglevel,)\n        if buffering:\n            #only add this keyword if non-default, for compatibility with\n            #other response_classes.\n            kwds[\"buffering\"] = True;\n        response = self.response_class(*args, **kwds)\n\n        try:\n            response.begin()\n            assert response.will_close != _UNKNOWN\n            self.__state = _CS_IDLE\n\n            if response.will_close:\n                # th", 4096) = 4096
27308 write(2, "    ", 4)               = 4
27308 write(2, "raise ResponseNotReady()\n", 25) = 25
27308 close(4)                          = 0
27308 munmap(0xb7fc2000, 4096)          = 0
27308 write(2, "httplib", 7)            = 7
27308 write(2, ".", 1)                  = 1
27308 write(2, "ResponseNotReady", 16)  = 16
27308 write(2, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "A", 1)                   = 1
27308 write(1, "h1.getresponse().read()", 23) = 23
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "A", 1)                   = 1
27308 write(1, "\10\10\33[K", 5)        = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "A", 1)                   = 1
27308 write(1, "\10\10\10\10\10\33[K", 8) = 8
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "A", 1)                   = 1
27308 write(1, "\r\33[C\33[C\33[C\33[Cprint conn.getresponse()", 37) = 37
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "A", 1)                   = 1
27308 write(1, "\r\33[C\33[C\33[C\33[C\33[2Ph1.request('GET', '/')", 39) = 39
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "A", 1)                   = 1
27308 write(1, "\r\33[C\33[C\33[C\33[C\33[C\33[C = httplib.HTTPConnection('www.cwi.nl')", 58) = 58
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "A", 1)                   = 1
27308 write(1, "\r\33[C\33[C\33[C\33[C\33[27Pimport httplib", 32) = 32
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "B", 1)                   = 1
27308 write(1, "\r\33[C\33[C\33[C\33[Ch1 = httplib.HTTPConnection('www.cwi.nl')", 54) = 54
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "D", 1)                   = 1
27308 write(1, "\10", 1)                = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "D", 1)                   = 1
27308 write(1, "\10", 1)                = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "C", 1)                   = 1
27308 write(1, "\33[C", 3)              = 3
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "D", 1)                   = 1
27308 write(1, "\10", 1)                = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[1P')\10\10", 9)  = 9
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[1P')\10\10", 9)  = 9
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[1P')\10\10", 9)  = 9
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[1P')\10\10", 9)  = 9
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[1P')\10\10", 9)  = 9
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[1P')\10\10", 9)  = 9
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "g", 1)                   = 1
27308 write(1, "g')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "o", 1)                   = 1
27308 write(1, "o')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "g", 1)                   = 1
27308 write(1, "g')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[1P')\10\10", 9)  = 9
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[1P')\10\10", 9)  = 9
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[1P')\10\10", 9)  = 9
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "g", 1)                   = 1
27308 write(1, "g')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "o", 1)                   = 1
27308 write(1, "o')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "o", 1)                   = 1
27308 write(1, "o')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "g", 1)                   = 1
27308 write(1, "g')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "l", 1)                   = 1
27308 write(1, "l')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "c", 1)                   = 1
27308 write(1, "c')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "o", 1)                   = 1
27308 write(1, "o')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "m", 1)                   = 1
27308 write(1, "m')\10\10", 5)          = 5
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "C", 1)                   = 1
27308 write(1, "\33[C", 3)              = 3
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "C", 1)                   = 1
27308 write(1, "\33[C", 3)              = 3
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\33", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "[", 1)                   = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "C", 1)                   = 1
27308 write(2, "\7", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242330
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "h", 1)                   = 1
27308 write(1, "h", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "1", 1)                   = 1
27308 write(1, "1", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "q", 1)                   = 1
27308 write(1, "q", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "u", 1)                   = 1
27308 write(1, "u", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "(", 1)                   = 1
27308 write(1, "(", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "'", 1)                   = 1
27308 write(1, "'", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "g", 1)                   = 1
27308 write(1, "g", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "G", 1)                   = 1
27308 write(1, "G", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "E", 1)                   = 1
27308 write(1, "E", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "T", 1)                   = 1
27308 write(1, "T", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\"", 1)                  = 1
27308 write(1, "\"", 1)                 = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "'", 1)                   = 1
27308 write(1, "'", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ",", 1)                   = 1
27308 write(1, ",", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, " ", 1)                   = 1
27308 write(1, " ", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "/", 1)                   = 1
27308 write(1, "/", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\177", 1)                = 1
27308 write(1, "\10\33[K", 4)           = 4
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "'", 1)                   = 1
27308 write(1, "'", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "/", 1)                   = 1
27308 write(1, "/", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "'", 1)                   = 1
27308 write(1, "'", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ")", 1)                   = 1
27308 write(1, ")", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242342
27308 stat64("/etc/resolv.conf", {st_dev=makedev(0, 17), st_ino=16571, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=185, st_atime=2017/04/26-19:25:17, st_mtime=2017/04/05-20:18:24, st_ctime=2017/04/05-20:18:24}) = 0
27308 stat64("/etc/resolv.conf", {st_dev=makedev(0, 17), st_ino=16571, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=185, st_atime=2017/04/26-19:25:17, st_mtime=2017/04/05-20:18:24, st_ctime=2017/04/05-20:18:24}) = 0
27308 socket(PF_INET, SOCK_DGRAM|SOCK_NONBLOCK, IPPROTO_IP) = 4
27308 connect(4, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr("127.0.1.1")}, 16) = 0
27308 gettimeofday({1493242342, 964356}, NULL) = 0
27308 poll([{fd=4, events=POLLOUT}], 1, 0) = 1 ([{fd=4, revents=POLLOUT}])
27308 sendmmsg(4, {{{msg_name(0)=NULL, msg_iov(1)=[{"\237\244\1\0\0\1\0\0\0\0\0\0\3www\6google\3com\0\0\1\0\1", 32}], msg_controllen=0, msg_flags=0}, 32}, {{msg_name(0)=NULL, msg_iov(1)=[{"\3132\1\0\0\1\0\0\0\0\0\0\3www\6google\3com\0\0\34\0\1", 32}], msg_controllen=0, msg_flags=MSG_TRUNC|MSG_DONTWAIT|MSG_WAITALL|MSG_FIN|MSG_SYN|MSG_CONFIRM|MSG_NOSIGNAL|MSG_MORE|MSG_WAITFORONE|MSG_FASTOPEN|0x9ffe0010}, 32}}, 2, MSG_NOSIGNAL) = 2
27308 poll([{fd=4, events=POLLIN}], 1, 5000) = 1 ([{fd=4, revents=POLLIN}])
27308 ioctl(4, FIONREAD, [48])          = 0
27308 recvfrom(4, "\237\244\201\200\0\1\0\1\0\0\0\0\3www\6google\3com\0\0\1\0\1\300\f\0\1\0\1\0\0\0\212\0\4\254\331\t\344", 2048, 0, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr("127.0.1.1")}, [16]) = 48
27308 gettimeofday({1493242342, 969883}, NULL) = 0
27308 poll([{fd=4, events=POLLIN}], 1, 4994) = 1 ([{fd=4, revents=POLLIN}])
27308 ioctl(4, FIONREAD, [60])          = 0
27308 recvfrom(4, "\3132\201\200\0\1\0\1\0\0\0\0\3www\6google\3com\0\0\34\0\1\300\f\0\34\0\1\0\0\0n\0\20&\7\370\260@\4\10\v\0\0\0\0\0\0 \4", 2000, 0, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr("127.0.1.1")}, [16]) = 60
27308 close(4)                          = 0
27308 socket(PF_NETLINK, SOCK_RAW, 0)   = 4
27308 bind(4, {sa_family=AF_NETLINK, pid=0, groups=00000000}, 12) = 0
27308 getsockname(4, {sa_family=AF_NETLINK, pid=27308, groups=00000000}, [12]) = 0
27308 time(NULL)                        = 1493242342
27308 sendto(4, "\24\0\0\0\26\0\1\3\346\21\1Y\0\0\0\0\0\0\0\0", 20, 0, {sa_family=AF_NETLINK, pid=0, groups=00000000}, 12) = 20
27308 recvmsg(4, {msg_name(12)={sa_family=AF_NETLINK, pid=0, groups=00000000}, msg_iov(1)=[{"L\0\0\0\24\0\2\0\346\21\1Y\254j\0\0\2\10\200\376\1\0\0\0\10\0\1\0\177\0\0\1\10\0\2\0\177\0\0\1\7\0\3\0lo\0\0\10\0\10\0\200\0\0\0\24\0\6\0\377\377\377\377\377\377\377\377\266\1\0\0\266\1\0\0X\0\0\0\24\0\2\0\346\21\1Y\254j\0\0\2\30\200\0\2\0\0\0\10\0\1\0\254\0200\214\10\0\2\0\254\0200\214\10\0\4\0\254\0200\377\t\0\3\0eth0\0\0\0\0\10\0\10\0\200\0\0\0\24\0\6\0\377\377\377\377\377\377\377\377s\320|\0s\320|\0", 4096}], msg_controllen=0, msg_flags=0}, 0) = 164
27308 recvmsg(4, {msg_name(12)={sa_family=AF_NETLINK, pid=0, groups=00000000}, msg_iov(1)=[{"\24\0\0\0\3\0\2\0\346\21\1Y\254j\0\0\0\0\0\0", 4096}], msg_controllen=0, msg_flags=0}, 0) = 20
27308 close(4)                          = 0
27308 socket(PF_INET, SOCK_DGRAM, IPPROTO_IP) = 4
27308 connect(4, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr("172.217.9.228")}, 16) = 0
27308 getsockname(4, {sa_family=AF_INET, sin_port=htons(53821), sin_addr=inet_addr("172.16.48.140")}, [16]) = 0
27308 close(4)                          = 0
27308 socket(PF_INET6, SOCK_DGRAM, IPPROTO_IP) = 4
27308 connect(4, {sa_family=AF_INET6, sin6_port=htons(80), inet_pton(AF_INET6, "2607:f8b0:4004:80b::2004", &sin6_addr), sin6_flowinfo=0, sin6_scope_id=0}, 28) = -1 ENETUNREACH (Network is unreachable)
27308 close(4)                          = 0
27308 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 4
27308 connect(4, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr("172.217.9.228")}, 16) = 0
27308 send(4, "GET / HTTP/1.1\r\nHost: www.google.com\r\nAccept-Encoding: identity\r\n\r\n", 67, 0) = 67
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "h", 1)                   = 1
27308 write(1, "h", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "1", 1)                   = 1
27308 write(1, "1", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "a", 1)                   = 1
27308 write(1, "a", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "u", 1)                   = 1
27308 write(1, "u", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242348
27308 write(2, "Traceback (most recent call last):\n", 35) = 35
27308 write(2, "  File \"<stdin>\", line 1, in <module>\n", 38) = 38
27308 open("<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/plat-i386-linux-gnu/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-tk/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-old/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/lib-dynload/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/home/preston/.local/lib/python2.7/site-packages/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/local/lib/python2.7/dist-packages/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 open("/usr/lib/python2.7/dist-packages/gtk-2.0/<stdin>", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27308 write(2, "AttributeError", 14)    = 14
27308 write(2, ": ", 2)                 = 2
27308 write(2, "HTTPConnection instance has no attribute 'status'", 49) = 49
27308 write(2, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, " ", 1)                   = 1
27308 write(1, " ", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "=", 1)                   = 1
27308 write(1, "=", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, " ", 1)                   = 1
27308 write(1, " ", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "h", 1)                   = 1
27308 write(1, "h", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "1", 1)                   = 1
27308 write(1, "1", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "g", 1)                   = 1
27308 write(1, "g", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "p", 1)                   = 1
27308 write(1, "p", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "o", 1)                   = 1
27308 write(1, "o", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "n", 1)                   = 1
27308 write(1, "n", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "(", 1)                   = 1
27308 write(1, "(", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ")", 1)                   = 1
27308 write(1, ")", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242356
27308 recv(4, "H", 1, 0)                = 1
27308 recv(4, "T", 1, 0)                = 1
27308 recv(4, "T", 1, 0)                = 1
27308 recv(4, "P", 1, 0)                = 1
27308 recv(4, "/", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, ".", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, "0", 1, 0)                = 1
27308 recv(4, "0", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "O", 1, 0)                = 1
27308 recv(4, "K", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "D", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "W", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "d", 1, 0)                = 1
27308 recv(4, ",", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, "6", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "A", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, "0", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, "7", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, "3", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, "3", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "G", 1, 0)                = 1
27308 recv(4, "M", 1, 0)                = 1
27308 recv(4, "T", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "E", 1, 0)                = 1
27308 recv(4, "x", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "C", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "h", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "C", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "l", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "v", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, ",", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "m", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "x", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "g", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "=", 1, 0)                = 1
27308 recv(4, "0", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "C", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "T", 1, 0)                = 1
27308 recv(4, "y", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "x", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "/", 1, 0)                = 1
27308 recv(4, "h", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "m", 1, 0)                = 1
27308 recv(4, "l", 1, 0)                = 1
27308 recv(4, ";", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "h", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "=", 1, 0)                = 1
27308 recv(4, "I", 1, 0)                = 1
27308 recv(4, "S", 1, 0)                = 1
27308 recv(4, "O", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "8", 1, 0)                = 1
27308 recv(4, "8", 1, 0)                = 1
27308 recv(4, "5", 1, 0)                = 1
27308 recv(4, "9", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "P", 1, 0)                = 1
27308 recv(4, "3", 1, 0)                = 1
27308 recv(4, "P", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "C", 1, 0)                = 1
27308 recv(4, "P", 1, 0)                = 1
27308 recv(4, "=", 1, 0)                = 1
27308 recv(4, "\"", 1, 0)               = 1
27308 recv(4, "T", 1, 0)                = 1
27308 recv(4, "h", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "P", 1, 0)                = 1
27308 recv(4, "3", 1, 0)                = 1
27308 recv(4, "P", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "l", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "y", 1, 0)                = 1
27308 recv(4, "!", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "S", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "h", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, "/", 1, 0)                = 1
27308 recv(4, "/", 1, 0)                = 1
27308 recv(4, "w", 1, 0)                = 1
27308 recv(4, "w", 1, 0)                = 1
27308 recv(4, "w", 1, 0)                = 1
27308 recv(4, ".", 1, 0)                = 1
27308 recv(4, "g", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "g", 1, 0)                = 1
27308 recv(4, "l", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, ".", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "m", 1, 0)                = 1
27308 recv(4, "/", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, "u", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "/", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "u", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, "/", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, "w", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "/", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, "5", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, "6", 1, 0)                = 1
27308 recv(4, "5", 1, 0)                = 1
27308 recv(4, "7", 1, 0)                = 1
27308 recv(4, "?", 1, 0)                = 1
27308 recv(4, "h", 1, 0)                = 1
27308 recv(4, "l", 1, 0)                = 1
27308 recv(4, "=", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "f", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "m", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "f", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, ".", 1, 0)                = 1
27308 recv(4, "\"", 1, 0)               = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "S", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "v", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "g", 1, 0)                = 1
27308 recv(4, "w", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "X", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "X", 1, 0)                = 1
27308 recv(4, "S", 1, 0)                = 1
27308 recv(4, "S", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "P", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, ";", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "m", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "d", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "=", 1, 0)                = 1
27308 recv(4, "b", 1, 0)                = 1
27308 recv(4, "l", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "k", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "X", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "F", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "m", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "O", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "S", 1, 0)                = 1
27308 recv(4, "A", 1, 0)                = 1
27308 recv(4, "M", 1, 0)                = 1
27308 recv(4, "E", 1, 0)                = 1
27308 recv(4, "O", 1, 0)                = 1
27308 recv(4, "R", 1, 0)                = 1
27308 recv(4, "I", 1, 0)                = 1
27308 recv(4, "G", 1, 0)                = 1
27308 recv(4, "I", 1, 0)                = 1
27308 recv(4, "N", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "S", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "C", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "k", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "N", 1, 0)                = 1
27308 recv(4, "I", 1, 0)                = 1
27308 recv(4, "D", 1, 0)                = 1
27308 recv(4, "=", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, "0", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, "=", 1, 0)                = 1
27308 recv(4, "Q", 1, 0)                = 1
27308 recv(4, "S", 1, 0)                = 1
27308 recv(4, "E", 1, 0)                = 1
27308 recv(4, "Q", 1, 0)                = 1
27308 recv(4, "7", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "4", 1, 0)                = 1
27308 recv(4, "F", 1, 0)                = 1
27308 recv(4, "j", 1, 0)                = 1
27308 recv(4, "q", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, "5", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "K", 1, 0)                = 1
27308 recv(4, "8", 1, 0)                = 1
27308 recv(4, "6", 1, 0)                = 1
27308 recv(4, "C", 1, 0)                = 1
27308 recv(4, "5", 1, 0)                = 1
27308 recv(4, "f", 1, 0)                = 1
27308 recv(4, "k", 1, 0)                = 1
27308 recv(4, "J", 1, 0)                = 1
27308 recv(4, "J", 1, 0)                = 1
27308 recv(4, "k", 1, 0)                = 1
27308 recv(4, "8", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, "J", 1, 0)                = 1
27308 recv(4, "Z", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "T", 1, 0)                = 1
27308 recv(4, "X", 1, 0)                = 1
27308 recv(4, "N", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, "4", 1, 0)                = 1
27308 recv(4, "Z", 1, 0)                = 1
27308 recv(4, "9", 1, 0)                = 1
27308 recv(4, "G", 1, 0)                = 1
27308 recv(4, "v", 1, 0)                = 1
27308 recv(4, "b", 1, 0)                = 1
27308 recv(4, "f", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "L", 1, 0)                = 1
27308 recv(4, "O", 1, 0)                = 1
27308 recv(4, "3", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "L", 1, 0)                = 1
27308 recv(4, "f", 1, 0)                = 1
27308 recv(4, "5", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, "z", 1, 0)                = 1
27308 recv(4, "W", 1, 0)                = 1
27308 recv(4, "u", 1, 0)                = 1
27308 recv(4, "U", 1, 0)                = 1
27308 recv(4, "3", 1, 0)                = 1
27308 recv(4, "f", 1, 0)                = 1
27308 recv(4, "F", 1, 0)                = 1
27308 recv(4, "b", 1, 0)                = 1
27308 recv(4, "S", 1, 0)                = 1
27308 recv(4, "q", 1, 0)                = 1
27308 recv(4, "Z", 1, 0)                = 1
27308 recv(4, "W", 1, 0)                = 1
27308 recv(4, "Z", 1, 0)                = 1
27308 recv(4, "B", 1, 0)                = 1
27308 recv(4, "S", 1, 0)                = 1
27308 recv(4, "R", 1, 0)                = 1
27308 recv(4, "K", 1, 0)                = 1
27308 recv(4, "L", 1, 0)                = 1
27308 recv(4, "G", 1, 0)                = 1
27308 recv(4, "4", 1, 0)                = 1
27308 recv(4, "b", 1, 0)                = 1
27308 recv(4, "X", 1, 0)                = 1
27308 recv(4, "4", 1, 0)                = 1
27308 recv(4, "5", 1, 0)                = 1
27308 recv(4, "f", 1, 0)                = 1
27308 recv(4, "q", 1, 0)                = 1
27308 recv(4, "4", 1, 0)                = 1
27308 recv(4, "M", 1, 0)                = 1
27308 recv(4, "U", 1, 0)                = 1
27308 recv(4, "A", 1, 0)                = 1
27308 recv(4, "J", 1, 0)                = 1
27308 recv(4, "X", 1, 0)                = 1
27308 recv(4, "A", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "z", 1, 0)                = 1
27308 recv(4, "v", 1, 0)                = 1
27308 recv(4, "W", 1, 0)                = 1
27308 recv(4, "0", 1, 0)                = 1
27308 recv(4, "D", 1, 0)                = 1
27308 recv(4, "v", 1, 0)                = 1
27308 recv(4, "y", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "7", 1, 0)                = 1
27308 recv(4, "8", 1, 0)                = 1
27308 recv(4, "A", 1, 0)                = 1
27308 recv(4, "M", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "0", 1, 0)                = 1
27308 recv(4, "A", 1, 0)                = 1
27308 recv(4, "J", 1, 0)                = 1
27308 recv(4, "Z", 1, 0)                = 1
27308 recv(4, "N", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "I", 1, 0)                = 1
27308 recv(4, "E", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "4", 1, 0)                = 1
27308 recv(4, "v", 1, 0)                = 1
27308 recv(4, "K", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "K", 1, 0)                = 1
27308 recv(4, "Z", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "6", 1, 0)                = 1
27308 recv(4, "9", 1, 0)                = 1
27308 recv(4, "C", 1, 0)                = 1
27308 recv(4, "v", 1, 0)                = 1
27308 recv(4, "P", 1, 0)                = 1
27308 recv(4, "H", 1, 0)                = 1
27308 recv(4, "g", 1, 0)                = 1
27308 recv(4, "Z", 1, 0)                = 1
27308 recv(4, "K", 1, 0)                = 1
27308 recv(4, "u", 1, 0)                = 1
27308 recv(4, "b", 1, 0)                = 1
27308 recv(4, "9", 1, 0)                = 1
27308 recv(4, "4", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "z", 1, 0)                = 1
27308 recv(4, "u", 1, 0)                = 1
27308 recv(4, "U", 1, 0)                = 1
27308 recv(4, "M", 1, 0)                = 1
27308 recv(4, "P", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, "3", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "U", 1, 0)                = 1
27308 recv(4, "G", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "E", 1, 0)                = 1
27308 recv(4, "E", 1, 0)                = 1
27308 recv(4, "l", 1, 0)                = 1
27308 recv(4, "Q", 1, 0)                = 1
27308 recv(4, ";", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "x", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, "=", 1, 0)                = 1
27308 recv(4, "T", 1, 0)                = 1
27308 recv(4, "h", 1, 0)                = 1
27308 recv(4, "u", 1, 0)                = 1
27308 recv(4, ",", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, "6", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "O", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, "0", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, "7", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, "3", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, "2", 1, 0)                = 1
27308 recv(4, "3", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "G", 1, 0)                = 1
27308 recv(4, "M", 1, 0)                = 1
27308 recv(4, "T", 1, 0)                = 1
27308 recv(4, ";", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "h", 1, 0)                = 1
27308 recv(4, "=", 1, 0)                = 1
27308 recv(4, "/", 1, 0)                = 1
27308 recv(4, ";", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "d", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "m", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "=", 1, 0)                = 1
27308 recv(4, ".", 1, 0)                = 1
27308 recv(4, "g", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "g", 1, 0)                = 1
27308 recv(4, "l", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, ".", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "m", 1, 0)                = 1
27308 recv(4, ";", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "H", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "O", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "l", 1, 0)                = 1
27308 recv(4, "y", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "A", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "R", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "g", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "V", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "y", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "A", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "p", 1, 0)                = 1
27308 recv(4, "t", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "E", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "d", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "g", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "T", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "s", 1, 0)                = 1
27308 recv(4, "f", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "r", 1, 0)                = 1
27308 recv(4, "-", 1, 0)                = 1
27308 recv(4, "E", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "o", 1, 0)                = 1
27308 recv(4, "d", 1, 0)                = 1
27308 recv(4, "i", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "g", 1, 0)                = 1
27308 recv(4, ":", 1, 0)                = 1
27308 recv(4, " ", 1, 0)                = 1
27308 recv(4, "c", 1, 0)                = 1
27308 recv(4, "h", 1, 0)                = 1
27308 recv(4, "u", 1, 0)                = 1
27308 recv(4, "n", 1, 0)                = 1
27308 recv(4, "k", 1, 0)                = 1
27308 recv(4, "e", 1, 0)                = 1
27308 recv(4, "d", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "a", 1)                   = 1
27308 write(1, "a", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "t", 1)                   = 1
27308 write(1, "t", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "u", 1)                   = 1
27308 write(1, "u", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "s", 1)                   = 1
27308 write(1, "s", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242357
27308 close(3)                          = 0
27308 write(1, "200\n", 4)              = 4
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ".", 1)                   = 1
27308 write(1, ".", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "r", 1)                   = 1
27308 write(1, "r", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "e", 1)                   = 1
27308 write(1, "e", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "a", 1)                   = 1
27308 write(1, "a", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "d", 1)                   = 1
27308 write(1, "d", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "(", 1)                   = 1
27308 write(1, "(", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, ")", 1)                   = 1
27308 write(1, ")", 1)                  = 1
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\r", 1)                  = 1
27308 write(1, "\n", 1)                 = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 time(NULL)                        = 1493242363
27308 recv(4, "8", 1, 0)                = 1
27308 recv(4, "0", 1, 0)                = 1
27308 recv(4, "0", 1, 0)                = 1
27308 recv(4, "0", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "<!doctype html><html itemscope=\"\" itemtype=\"http://schema.org/WebPage\" lang=\"en\"><head><meta content=\"Search the world's information, including webpages, images, videos and more. Google has many special features to help you find exactly what you're looking for.\" name=\"description\"><meta content=\"noodp\" name=\"robots\"><meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\"><meta content=\"/logos/doodles/2017/cassini-spacecraft-dives-between-saturn-and-its-rings-5717425520640000-law.gif\" itemprop=\"image\"><meta content=\"Cassini Spacecraft Dives Between Saturn and its Rings!\" property=\"twitter:title\"><meta content=\"Cassini Spacecraft Dives Between Saturn and its Rings! #GoogleDoodle\" property=\"twitter:description\"><meta content=\"Cassini Spacecraft Dives Between Saturn and its Rings! #GoogleDoodle\" property=\"og:description\"><meta content=\"summary_large_image\" property=\"twitter:card\"><meta content=\"@GoogleDoodles\" property=\"twitter:site\"><meta content=\"https://www.google.com/logos/doodles/2017/cassini-spacecraft-dives-between-saturn-and-its-rings-5717425520640000-law.gif\" property=\"twitter:image\"><meta content=\"https://www.google.com/logos/doodles/2017/cassini-spacecraft-dives-between-saturn-and-its-rings-5717425520640000-law.gif\" property=\"og:image\"><meta content=\"474\" property=\"og:image:width\"><meta content=\"230\" property=\"og:image:height\"><meta content=\"http://www.google.com/logos/doodles/2017/cassini-spacecraft-dives-between-saturn-and-its-rings-5717425520640000-2xa.gif\" property=\"og:url\"><meta content=\"video.other\" property=\"og:type\"><title>Google</title><script>(function(){window.google={kEI:'5xEBWYE7wdiPBKDDpsgN',kEXPI:'201761,1351176,1351855,1352553,1352863,1352996,1353097,3700267,3700347,3700405,4029815,4031109,4032678,4036527,4039268,4040137,4043492,4045841,4048347,4065787,4066195,4072364,4072777,4075963,4076095,4076997,4078430,4079444,4081038,4081164,4082164,4083863,4086696,4090550,4090553,4090806,4091353,4092232,4092934,4093133,4093497,4093813,4094251,4094544,4094837,4095910,4095997,4096210,4096324,4097153,4097922,4097929,4097951,4098096,4098733,4098740,4098752,4099407,4100169,4100380,4100828,4101376,4101429,4101750,4102032,4102238,4102827,4103254,4103475,4103849,4103999,4104204,4104659,4105085,4105111,4105178,4105317,4105321,4105470,4105563,4105787,4106025,4106028,4106428,4106949,4107221,4107428,4107437,4107555,4107628,4107866,4107914,4107956,4107966,4107967,4107989,4108538,4108540,4109078,8500572,8503585,8508229,8508931,8509037,8509373,10200083,10202265,16200026,19001731,19001732,19002007,41027341',authuser:0,kscs:'c9c918f0_24'};google.kHL='en';})();(function(){google.lc=[];google.li=0;google.getEI=function(a){for(var b;a&&(!a.getAttribute||!(b=a.getAttribute(\"eid\")));)a=a.parentNode;return b||google.kEI};google.getLEI=function(a){for(var b=null;a&&(!a.getAttribute||!(b=a.getAttribute(\"leid\")));)a=a.parentNode;return b};google.https=function(){return\"https:\"==window.location.protocol};google.ml=function(){return null};google.wl=function(a,b){try{google.ml(Error(a),!1,b)}catch(c){}};google.time=function(){return(new Date).getTime()};google.log=function(a,b,c,d,g){a=google.logUrl(a,b,c,d,g);if(\"\"!=a){b=new Image;var e=google.lc,f=google.li;e[f]=b;b.onerror=b.onload=b.onabort=function(){delete e[f]};window.google&&window.google.vel&&window.google.vel.lu&&window.google.vel.lu(a);b.src=a;google.li=f+1}};google.logUrl=function(a,b,c,d,g){var e=\"\",f=google.ls||\"\";c||-1!=b.search(\"&ei=\")||(e=\"&ei=\"+google.getEI(d),-1==b.search(\"&lei=\")&&(d=google.getLEI(d))&&(e+=\"&lei=\"+d));a=c||\"/\"+(g||\"gen_204\")+\"?atyp=i&ct=\"+a+\"&cad=\"+b+e+f+\"&zx=\"+google.time();/^http:/i.test(a)&&google.https()&&(google.ml(Error(\"a\"),!1,{src:a,glmm:1}),a=\"\");return a};google.y={};google.x=function(a,b){google.y[a.id]=[a,b];return!1};google.lq=[];google.load=function(a,b,c){google.lq.push([[a],b,c])};google.loadAll=function(a,b){google.lq.push([a,b])};}).call(this);var a=window.location,b=a.href.indexOf(\"#\");if(0<=b){var c=a.href.substring(b+1);/(^|&)q=/.test(c)&&-1==c.indexOf(\"#\")&&a.replace(\"/search?\"+c.replace(/(^|&)fp=[^&]*/g,\"\")+\"&cad=h\")};</script><style>#gb{font:13px/27px Arial,sans-serif;height:30px}#gbz,#gbg{position:absolute;white-space:nowrap;top:0;height:30px;z-index:1000}#gbz{left:0;padding-left:4px}#gbg{right:0;padding-right:5px}#gbs{background:transparent;position:absolute;top:-999px;visibility:hidden;z-index:998;right:0}.gbto #gbs{background:#fff}#gbx3,#gbx4{background-color:#2d2d2d;background-image:none;_background-image:none;background-position:0 -138px;background-repeat:repeat-x;border-bottom:1px solid #000;font-size:24px;height:29px;_height:30px;opacity:1;filter:alpha(opacity=100);position:absolute;top:0;width:100%;z-index:990}#gbx3{left:0}#gbx4{right:0}#gbb{position:relative}#gbbw{left:0;position:absolute;top:30px;width:100%}.gbtcb{position:absolute;visibility:hidden}#gbz .gbtcb{right:0}#gbg .gbtcb{left:0}.gbxx{display:none !important}.gbxo{opacity:0 !important;filter:alpha(opacity=0) !important}.gbm{position:absolute;z-index:999;top:-999px;visibility:hidden;text-align:left;border:1px solid #bebebe;background:#fff;-moz-box-shadow:-1px 1px 1px rgba(0,0,0,.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,.2);box-shadow:0 2px 4px rgba(0,0,0,.2)}.gbrtl .gbm{-moz-box-shadow:1px 1px 1px rgba(0,0,0,.2)}.gbto .gbm,.gbto #gbs{top:29px;visibility:visible}#gbz .gbm{left:0}#gbg .gbm{right:0}.gbxms{background-color:#ccc;display:block;position:absolute;z-index:1;top:-1px;left:-2px;right:-2px;bottom:-2px;opacity:.4;-moz-border-radius:3px;filter:progid:DXImageTransform.Microsoft.Blur(pixelradius=5);*opacity:1;*top:-2px;*left:-5px;*right:5px;*bottom:4px;-ms-filter:\"progid:DXImageTransform.Microsoft.Blur(pixelradius=5)\";opacity:1\\0/;top:-4px\\0/;left:-6px\\0/;right:5px\\0/;bottom:4px\\0/}.gbma{position:relative;top:-1px;border-style:solid dashed dashed;border-color:transparent;border-top-color:#c0c0c0;display:-moz-inline-box;display:inline-block;font-size:0;height:0;line-height:0;width:0;border-width:3px 3px 0;padding-top:1px;left:4px}#gbztms1,#gbi4m1,#gbi4s,#gbi4t{zoom:1}.gbtc,.gbmc,.gbmcc{display:block;list-style:none;margin:0;padding:0}.gbmc{background:#fff;padding:10px 0;position:relative;z-index:2;zoom:1}.gbt{position:relative;display:-moz-inline-box;display:inline-block;line-height:27px;padding:0;vertical-align:top}.gbt{*display:inline}.gbto{box-shadow:0 2px 4px rgba(0,0,0,.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,.2)}.gbzt,.gbgt{cursor:pointer;display:block;text-decoration:none !important}span#gbg6,span#gbg4{cursor:default}.gbts{border-left:1px solid transparent;border-right:1px solid transparent;display:block;*display:inline-block;padding:0 5px;position:relative;z-index:1000}.gbts{*display:inline}.gbzt .gbts{display:inline;zoom:1}.gbto .gbts{background:#fff;border-color:#bebebe;color:#36c;padding-bottom:1px;padding-top:2px}.gbz0l .gbts{color:#fff;font-weight:bold}.gbtsa{padding-right:9px}#gbz .gbzt,#gbz .gbgt,#gbg .gbgt{color:#ccc!important}.gbtb2{display:block;border-top:2px solid transparent}.gbto .gbzt .gbtb2,.gbto .gbgt .gbtb2{border-top-width:0}.gbtb .gbts{background:url(https://ssl.gstatic.com/gb/images/b_8d5afc09.png);_background:url(https://ssl.gstatic.com/gb/images/b8_3615d64d.png);background-position:-27px -22px;border:0;font-size:0;padding:29px 0 0;*padding:27px 0 0;width:1px}.gbzt:hover,.gbzt:focus,.gbgt-hvr,.gbgt:focus{background-color:#4c4c4c;background-image:none;_background-image:none;background-position:0 -102px;background-repeat:repeat-x;outline:none;text-decoration:none !important}.gbpdjs .gbto .gbm{min-width:99%}.gbz0l .gbtb2{border-top-color:#dd4b39!important}#gbi4s,#gbi4s1{font-weight:bold}#gbg6.gbgt-hvr,#gbg6.gbgt:focus{background-color:transparent;background-image:none}.gbg4a{font-size:0;line-height:0}.gbg4a .gbts{padding:27px 5px 0;*padding:25px 5px 0}.gbto .gbg4a .gbts{padding:29px 5px 1px;*padding:27px 5px 1px}#gbi4i,#gbi4id{left:5px;border:0;height:24px;position:absolute;top:1px;width:24px}.gbto #gbi4i,.gbto #gbi4id{top:3px}.gbi4p{display:block;width:24px}#gbi4id{background-position:-44px -101px}#gbmpid{background-position:0 0}#gbmpi,#gbmpid{border:none;display:inline-block;height:48px;width:48px}#gbmpiw{display:inline-block;line-height:9px;padding-left:20px;margin-top:10px;position:relative}#gbmpi,#gbmpid,#gbmpiw{*display:inline}#gbg5{font-size:0}#gbgs5{padding:5px !important}.gbto #gbgs5{padding:7px 5px 6px !important}#gbi5{background:url(https://ssl.gstatic.com/gb/images/b_8d5afc09.png);_background:url(https://ssl.gstatic.com/gb/images/b8_3615d64d.png);background-position:0 0;display:block;font-size:0;height:17px;width:16px}.gbto #gbi5{background-position:-6px -22px}.gbn .gbmt,.gbn .gbmt:visited,.gbnd .gbmt,.gbnd .gbmt:visited{color:#dd8e27 !important}.gbf .gbmt,.gbf .gbmt:visited{color:#900 !important}.gbmt,.gbml1,.gbmlb,.gbmt:visited,.gbml1:visited,.gbmlb:visited{color:#36c !important;text-decoration:none !important}.gbmt,.gbmt:visited{display:block}.gbml1,.gbmlb,.gbml1:visited,.gbmlb:visited{display:inline-block;margin:0 10px}.gbml1,.gbmlb,.gbml1:visited,.gbmlb:visited{*display:inline}.gbml1,.gbml1:visited{padding:0 10px}.gbml1-hvr,.gbml1:focus{outline:none;text-decoration:underline !important}#gbpm .gbml1{display:inline;margin:0;padding:0;white-space:nowrap}.gbmlb,.gbmlb:visited{line-height:27px}.gbmlb-hvr,.gbmlb:focus{outline:none;text-decoration:underline !important}.gbmlbw{color:#ccc;margin:0 10px}.gbmt{padding:0 20px}.gbmt:hover,.gbmt:focus{background:#eee;cursor:pointer;outline:0 solid black;text-decoration:none !important}.gbm0l,.gbm0l:visited{color:#000 !important;font-weight:bold}.gbmh{border-top:1px solid #bebebe;font-size:0;margin:10px 0}#gbd4 .gbmc{background:#f5f5f5;padding-top:0}#gbd4 .gbsbic::-webkit-scrollbar-track:vertical{background-color:#f5f5f5;margin-top:2px}#gbmpdv{background:#fff;border-bottom:1px solid #bebebe;-moz-box-shadow:0 2px 4px rgba(0,0,0,.12);-o-box-shadow:0 2px 4px rgba(0,0,0,.12);-webkit-box-shadow:0 2px 4px rgba(0,0,0,.12);box-shadow:0 2px 4px rgba(0,0,0,.12);position:relative;z-index:1}#gbd4 .gbmh{margin:0}.gbmtc{padding:0;margin:0;line-height:27px}.GBMCC:last-child:after,#GBMPAL:last-child:after{content:'\\0A\\0A';white-space:pre;position:absolute}#gbmps{*zoom:1}#gbd4 .gbpc,#gbmpas .gbmt{line-height:17px}#gbd4 .gbpgs .gbmtc{line-height:27px}#gbd4 .gbmtc{border-bottom:1px solid #bebebe}#gbd4 .gbpc{display:inline-block;margin:16px 0 10px;padding-right:50px;vertical-align:top}#gbd4 .gbpc{*display:inline}.gbpc .gbps,.gbpc .gbps2{display:block;margin:0 20px}#gbmplp.gbps{margin:0 10px}.gbpc .gbps{color:#000;font-weight:bold}.gbpc .gbpd{margin-bottom:5px}.gbpd .gbmt,.gbpd .gbps{color:#666 !important}.gbpd .gbmt{opacity:.4;filter:alpha(opacity=40)}.gbps2{color:#666;display:block}.gbp0{display:none}.gbp0 .gbps2{font-weight:bold}#gbd4 .gbmcc{margin-top:5px}.gbpmc{background:#fef9db}.gbpmc .gbpmtc{padding:10px 20px}#gbpm{border:0;*border-collapse:collapse;border-spacing:0;margin:0;white-space:normal}#gbpm .gbpmtc{border-top:none;color:#000 !important;font:11px Arial,sans-serif}#gbpms{*white-space:nowrap}.gbpms2{font-weight:bold;white-space:nowrap}#gbmpal{*border-collapse:collapse;border-spacing:0;border:0;margin:0;white-space:nowrap;width:100%}.gbmpala,.gbmpalb{font:13px Arial,sans-serif;line-height:27px;padding:10px 20px 0;white-space:nowrap}.gbmpala{padding-left:0;text-align:left}.gbmpalb{padding-right:0;text-align:right}#gbmpasb .gbps{color:#000}#gbmpal .gbqfbb{margin:0 20px}.gbp0 .gbps{*display:inline}a.gbiba{margin:8px 20px 10px}.gbmpiaw{display:inline-block;padding-right:10px;margin-bottom:6px;margin-top:10px}.gbxv{visibility:hidden}.gbmpiaa{display:block;margin-top:10px}.gbmpia{border:none;display:block;height:48px;width:48px}.gbmpnw{display:inline-block;height:auto;margin:10px 0;vertical-align:top}\n.gbqfb,.gbqfba,.gbqfbb{-moz-border-radius:2px;-webkit-border-radius:2px;border-radius:2px;cursor:default !important;display:inline-block;font-weight:bold;height:29px;line-height:29px;min-width:54px;*min-width:70px;padding:0 8px;text-align:center;text-decoration:none !important;-moz-user-select:none;-webkit-user-select:none}.gbqfb:focus,.gbqfba:focus,.gbqfbb:focus{border:1px solid #4d90fe;-moz-box-shadow:inset 0 0 0 1px rgba(255, 255, 255, 0.5);-webkit-box-shadow:inset 0 0 0 1px rgba(255, 255, 255, 0.5);box-shadow:inset 0 0 0 1px rgba(255, 255, 255, 0.5);outline:none}.gbqfb-hvr:focus,.gbqfba-hvr:focus,.gbqfbb-hvr:focus{-webkit-box-shadow:inset 0 0 0 1px #fff,0 1px 1px rgba(0,0,0,.1);-moz-box-shadow:inset 0 0 0 1px #fff,0 1px 1px rgba(0,0,0,.1);box-shadow:inset 0 0 0 1px #fff,0 1px 1px rgba(0,0,0,.1)}.gbqfb-no-focus:focus{border:1px solid #3079ed;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none}.gbqfb-hvr,.gbqfba-hvr,.gbqfbb-hvr{-webkit-box-shadow:0 1px 1px rgba(0,0,0,.1);-moz-box-shadow:0 1px 1px rgba(0,0,0,.1);box-shadow:0 1px 1px rgba(0,0,0,.1)}.gbqfb::-moz-focus-inner,.gbqfba::-moz-focus-inner,.gbqfbb::-moz-focus-inner{border:0}.gbqfba,.gbqfbb{border:1px solid #dcdcdc;border-color:rgba(0,0,0,.1);color:#444 !important;font-size:11px}.gbqfb{background-color:#4d90fe;background-image:-webkit-gradient(linear,left top,left bottom,from(#4d90fe),to(#4787ed));background-image:-webkit-linear-gradient(top,#4d90fe,#4787ed);background-image:-moz-linear-gradient(top,#4d90fe,#4787ed);background-image:-ms-linear-gradient(top,#4d90fe,#4787ed);background-image:-o-linear-gradient(top,#4d90fe,#4787ed);background-image:linear-gradient(top,#4d90fe,#4787ed);filter:progid:DXImageTransform.Microsoft.gradient(startColorStr='#4d90fe',EndColorStr='#4787ed');border:1px solid #3079ed;color:#fff!important;margin:0 0}.gbqfb-hvr{border-color:#2f5bb7}.gbqfb-hvr:focus{border-color:#2f5bb7}.gbqfb-hvr,.gbqfb-hvr:focus{background-color:#357ae8;background-image:-webkit-gradient(linear,left top,left bottom,from(#4d90fe),to(#357ae8));background-image:-webkit-linear-gradient(top,#4d90fe,#357ae8);background-image:-moz-linear-gradient(top,#4d90fe,#357ae8);background-image:-ms-linear-gradient(top,#4d90fe,#357ae8);background-image:-o-linear-gradient(top,#4d90fe,#357ae8);background-image:linear-gradient(top,#4d90fe,#357ae8)}.gbqfb:active{background-color:inherit;-webkit-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.3);-moz-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.3);box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.3)}.gbqfba{background-color:#f5f5f5;background-image:-webkit-gradient(linear,left top,left bottom,from(#f5f5f5),to(#f1f1f1));background-image:-webkit-linear-gradient(top,#f5f5f5,#f1f1f1);background-image:-moz-linear-gradient(top,#f5f5f5,#f1f1f1);background-image:-ms-linear-gradient(top,#f5f5f5,#f1f1f1);background-image:-o-linear-gradient(top,#f5f5f5,#f1f1f1);background-image:linear-gradient(top,#f5f5f5,#f1f1f1);filter:progid:DXImageTransform.Microsoft.gradient(startColorStr='#f5f5f5',EndColorStr='#f1f1f1')}.gbqfba-hvr,.gbqfba-hvr:active{background-color:#f8f8f8;background-image:-webkit-gradient(linear,left top,left bottom,from(#f8f8f8),to(#f1f1f1));background-image:-webkit-linear-gradient(top,#f8f8f8,#f1f1f1);background-image:-moz-linear-gradient(top,#f8f8f8,#f1f1f1);background-image:-ms-linear-gradient(top,#f8f8f8,#f1f1f1);background-image:-o-linear-gradient(top,#f8f8f8,#f1f1f1);background-image:linear-gradient(top,#f8f8f8,#f1f1f1);filter:progid:DXImageTransform.Microsoft.gradient(startColorStr='#f8f8f8',EndColorStr='#f1f1f1')}.gbqfbb{background-color:#fff;background-image:-webkit-gradient(linear,left top,left bottom,from(#fff),to(#fbfbfb));background-image:-webkit-linear-gradient(top,#fff,#fbfbfb);background-image:-moz-linear-gradient(top,#fff,#fbfbfb);background-image:-ms-linear-gradient(top,#fff,#fbfbfb);background-image:-o-linear-gradient(top,#fff,#fbfbfb);background-image:linear-gradient(top,#fff,#fbfbfb);filter:progid:DXImageTransform.Microsoft.gradient(startColorStr='#ffffff',EndColorStr='#fbfbfb')}.gbqfbb-hvr,.gbqfbb-hvr:active{background-color:#fff;background-image:-webkit-gradient(linear,left top,left bottom,from(#fff),to(#f8f8f8));background-image:-webkit-linear-gradient(top,#fff,#f8f8f8);background-image:-moz-linear-gradient(top,#fff,#f8f8f8);background-image:-ms-linear-gradient(top,#fff,#f8f8f8);background-image:-o-linear-gradient(top,#fff,#f8f8f8);background-image:linear-gradient(top,#fff,#f8f8f8);filter:progid:DXImageTransform.Microsoft.gradient(startColorStr='#ffffff',EndColorStr='#f8f8f8')}.gbqfba-hvr,.gbqfba-hvr:active,.gbqfbb-hvr,.gbqfbb-hvr:active{border-color:#c6c6c6;-webkit-box-shadow:0 1px 1px rgba(0,0,0,.1);-moz-box-shadow:0 1px 1px rgba(0,0,0,.1);box-shadow:0 1px 1px rgba(0,0,0,.1);color:#222 !important}.gbqfba:active,.gbqfbb:active{-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,.1);-moz-box-shadow:inset 0 1px 2px rgba(0,0,0,.1);box-shadow:inset 0 1px 2px rgba(0,0,0,.1)}\n#gbmpas{max-height:220px}#gbmm{max-height:530px}.gbsb{-webkit-box-sizing:border-box;display:block;position:relative;*zoom:1}.gbsbic{overflow:auto}.gbsbis .gbsbt,.gbsbis .gbsbb{-webkit-mask-box-image:-webkit-gradient(linear,left top,right top,color-stop(0,rgba(0,0,0,.1)),color-stop(.5,rgba(0,0,0,.8)),color-stop(1,rgba(0,0,0,.1)));left:0;margin-right:0;opacity:0;position:absolute;width:100%}.gbsb .gbsbt:after,.gbsb .gbsbb:after{content:\"\";display:block;height:0;left:0;position:absolute;width:100%}.gbsbis .gbsbt{background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.2)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(top,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:-moz-linear-gradient(top,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:-ms-linear-gradient(top,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:-o-linear-gradient(top,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:linear-gradient(top,rgba(0,0,0,.2),rgba(0,0,0,0));height:6px;top:0}.gbsb .gbsbt:after{border-top:1px solid #ebebeb;border-color:rgba(0,0,0,.3);top:0}.gbsb .gbsbb{-webkit-mask-box-image:-webkit-gradient(linear,left top,right top,color-stop(0,rgba(0,0,0,.1)),color-stop(.5,rgba(0,0,0,.8)),color-stop(1,rgba(0,0,0,.1)));background:-webkit-gradient(linear,left bottom,left top,from(rgba(0,0,0,.2)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(bottom,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:-moz-linear-gradient(bottom,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:-ms-linear-gradient(bottom,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:-o-linear-gradient(bottom,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:linear-gradient(bottom,rgba(0,0,0,.2),rgba(0,0,0,0));bottom:0;height:4px}.gbsb .gbsbb:after{border-bottom:1px solid #ebebeb;border-color:rgba(0,0,0,.3);bottom:0}\n</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;overflow-y:scroll}#gog{padding:3px 8px 0}td{line-height:.8em}.gac_m td{line-height:17px}form{margin-bottom:20px}.h{color:#36c}.q{color:#00c}.ts td{padding:0}.ts{border-collapse:collapse}em{font-weight:bold;font-style:normal}.lst{height:25px;width:496px}.gsfi,.lst{font:18px arial,sans-serif}.gsfs{font:17px arial,sans-serif}.ds{display:inline-box;display:inline-block;margin:3px 0 4px;margin-left:4px}input{font-family:inherit}a.gb1,a.gb2,a.gb3,a.gb4{color:#11c !important}body{background:#fff;color:black}a{color:#11c;text-decoration:none}a:hover,a:active{text-decoration:underline}.fl a{color:#36c}a:visited{color:#551a8b}a.gb1,a.gb4{text-decoration:underline}a.gb3:hover{text-decoration:none}#ghead a.gb2:hover{color:#fff !important}.sblc{padding-top:5px}.sblc a{display:block;margin:2px 0;margin-left:13px;font-size:11px}.lsbb{background:#eee;border:solid 1px;border-color:#ccc #999 #999 #ccc;height:30px}.lsbb{display:block}.ftl,#fll a{display:inline-block;margin:0 12px}.lsb{background:url(/images/nav_logo229.png) 0 -261px repeat-x;border:none;color:#000;cursor:pointer;height:30px;margin:0;outline:0;font:15px arial,sans-serif;vertical-align:top}.lsb:active{background:#ccc}.lst:focus{outline:none}</style><script>(function(){window.google.erd={sp:'hp',jsr:1,bv:110,cs:false};var f=0,g,h=google.erd,k=h.jsr,l;google.jsmp=!0;google.ml=function(a,b,c,e){google.dl&&google.dl(a,c,b);if(google._epc(a,b,c,e))return null;a=google._gld(a,\"/gen_204?atyp=i\",c||{},!1);e||google.log(0,\"\",a);return a};google._epc=function(a,b,c,e){var d=google.erd.jsr;if(0>d){window.console&&console.error(a,c);if(-2==d)throw a;return!0}if(!a||!a.message||\"Error loading script\"==a.message||!(m()&&1>f||e))return!0;f++;b&&(g=a&&a.message);return!1};google._gld=function(a,b,c,e){b=b+\"&ei=\"+encodeURIComponent(google.kEI)+\"&jexpid=\"+encodeURIComponent(google.kEXPI)+\"&srcpg=\"+encodeURIComponent(h.sp)+\"&jsr=\"+google.erd.jsr+\"&bver=\"+encodeURIComponent(h.bv);for(var d in c)b+=\"&\",b+=encodeURIComponent(d),b+=\"=\",b+=encodeURIComponent(c[d]);b=b+\"&emsg=\"+encodeURIComponent(a.name+\": \"+a.message);b=b+\"&jsst=\"+encodeURIComponent(a.stack||\"N/A\");!e&&2E3<=b.length&&(b=b.substr(0,2E3));return b};function m(){if(!h.cs)return!0;var a=google.erd.jsr;void 0==l&&(l=0>a||1==a||1==Math.ceil(Math.random()*a));return l}google.ojsr=function(a){google.erd.jsr=a;l=void 0};google.rjsr=function(){google.erd.jsr=k;l=void 0};window.onerror=function(a,b,c,e,d){g!==a&&google.ml(d instanceof Error?d:Error(a),!1);g=null;m()&&1>f||(window.onerror=null)};})();(function(){try{var e=this;var aa=function(a,b,c,d){d=d||{};d._sn=[\"cfg\",b,c].join(\".\");window.gbar.logger.ml(a,d)};var g=window.gbar=window.gbar||{},h=window.gbar.i=window.gbar.i||{},ba;function _tvn(a,b){a=parseInt(a,10);return isNaN(a)?b:a}function _tvf(a,b){a=parseFloat(a);return isNaN(a)?b:a}function _tvv(a){return!!a}function p(a,b,c){(c||g)[a]=b}g.bv={n:_tvn(\"2\",0),r:\"\",f:\".66.41.\",e:\"1300102,3700267,3700347,3700405\",m:_tvn(\"1\",1)};\nfunction ca(a,b,c){var d=\"on\"+b;if(a.addEventListener)a.addEventListener(b,c,!1);else if(a.attachEvent)a.attachEvent(d,c);else{var f=a[d];a[d]=function(){var a=f.apply(this,arguments),b=c.apply(this,arguments);return void 0==a?b:void 0==b?a:b&&a}}}var da=function(a){return function(){return g.bv.m==a}},ea=da(1),fa=da(2);p(\"sb\",ea);p(\"kn\",fa);h.a=_tvv;h.b=_tvf;h.c=_tvn;h.i=aa;var q=window.gbar.i.i;var r=function(){},u=function(){},ia=function(a){var b=new Image,c=ga;b.onerror=b.onload=b.onabort=function(){try{delete ha[c]}catch(d){}};ha[c]=b;b.src=a;ga=c+1},ha=[],ga=0;p(\"logger\",{il:u,ml:r,log:ia});var v=window.gbar.logger;var y={},ja={},z=[],ka=h.b(\"0.1\",.1),la=h.a(\"1\",!0),ma=function(a,b){z.push([a,b])},na=function(a,b){y[a]=b},oa=function(a){return a in y},A={},B=function(a,b){A[a]||(A[a]=[]);A[a].push(b)},D=function(a){B(\"m\",a)},pa=function(a,b){var c=document.createElement(\"script\");c.src=a;c.async=la;Math.random()<ka&&(c.onerror=function(){c.onerror=null;r(Error(\"Bundle load failed: name=\"+(b||\"UNK\")+\" url=\"+a))});(document.getElementById(\"xjsc\")||document.getElementsByTagName(\"body\")[0]||\ndocument.getElementsByTagName(\"head\")[0]).appendChild(c)},F=function(a){for(var b=0,c;(c=z[b])&&c[0]!=a;++b);!c||c[1].l||c[1].s||(c[1].s=!0,qa(2,a),c[1].url&&pa(c[1].url,a),c[1].libs&&E&&E(c[1].libs))},ra=function(a){B(\"gc\",a)},sa=null,ta=function(a){sa=a},qa=function(a,b,c){if(sa){a={t:a,b:b};if(c)for(var d in c)a[d]=c[d];try{sa(a)}catch(f){}}};p(\"mdc\",y);p(\"mdi\",ja);p(\"bnc\",z);p(\"qGC\",ra);p(\"qm\",D);p(\"qd\",A);p(\"lb\",F);p(\"mcf\",na);p(\"bcf\",ma);p(\"aq\",B);p(\"mdd\",\"\");\np(\"has\",oa);p(\"trh\",ta);p(\"tev\",qa);if(h.a(\"1\")){var ua=h.a(\"1\"),va=h.a(\"\"),wa=h.a(\"\"),xa=window.gapi={},ya=function(a,b){var c=function(){g.dgl(a,b)};ua?D(c):(B(\"gl\",c),F(\"gl\"))},za={},Aa=function(a){a=a.split(\":\");for(var b;(b=a.pop())&&za[b];);return!b},E=function(a){function b(){for(var b=a.split(\":\"),d=0,f;f=b[d];++d)za[f]=1;for(b=0;d=z[b];++b)d=d[1],(f=d.libs)&&!d.l&&d.i&&Aa(f)&&d.i()}g.dgl(a,b)},H=window.___jsl={};H.h=\"m;/_/scs/abc-static/_/js/k=gapi.gapi.en.DTPeBB_SvOA.O/m=__features__/rt=j/d=1/rs=AHpOoo-J3J0yqNDMPVrmQT6j-SBFfGx8oA\";H.ms=\"https://apis.google.com\";\nH.m=\"\";H.l=[];ua||z.push([\"gl\",{url:\"//ssl.gstatic.com/gb/js/abc/glm_e7bb39a7e1a24581ff4f8d199678b1b9.js\"}]);var Ba={pu:va,sh:\"\",si:wa,hl:\"en\"};y.gl=Ba;p(\"load\",ya,xa);p(\"dgl\",ya);p(\"agl\",Aa);h.o=ua};var Ca=h.b(\"0.1\",.001),Da=0;\nfunction _mlToken(a,b){try{if(1>Da){Da++;var c,d=a;b=b||{};var f=encodeURIComponent,k=[\"//www.google.com/gen_204?atyp=i&zx=\",(new Date).getTime(),\"&jexpid=\",f(\"28834\"),\"&srcpg=\",f(\"prop=1\"),\"&jsr=\",Math.round(1/Ca),\"&ogev=\",f(\"5xEBWZOKAqPEjwSg87G4Dw\"),\"&ogf=\",g.bv.f,\"&ogrp=\",f(\"\"),\"&ogv=\",f(\"1493000931.0\"),\"&oggv=\"+f(\"es_plusone_gc_20170309.0_p0\"),\"&ogd=\",f(\"com\"),\"&ogc=\",f(\"USA\"),\"&ogl=\",f(\"en\")];b._sn&&(b._sn=\n\"og.\"+b._sn);for(var m in b)k.push(\"&\"),k.push(f(m)),k.push(\"=\"),k.push(f(b[m]));k.push(\"&emsg=\");k.push(f(d.name+\":\"+d.message));var n=k.join(\"\");Ea(n)&&(n=n.substr(0,2E3));c=n;var l=window.gbar.logger._aem(a,c);ia(l)}}catch(t){}}var Ea=function(a){return 2E3<=a.length},Fa=function(a,b){return b};function Ga(a){r=a;p(\"_itl\",Ea,v);p(\"_aem\",Fa,v);p(\"ml\",r,v);a={};y.er=a}h.a(\"\")?Ga(function(a){throw a;}):h.a(\"1\")&&Math.random()<Ca&&Ga(_mlToken);var _E=\"left\",Ha=h.a(\"\"),J=function(a,b){var c=a.className;I(a,b)||(a.className+=(\"\"!=c?\" \":\"\")+b)},K=function(a,b){var c=a.className;b=new RegExp(\"\\\\s?\\\\b\"+b+\"\\\\b\");c&&c.match(b)&&(a.className=c.replace(b,\"\"))},I=function(a,b){b=new RegExp(\"\\\\b\"+b+\"\\\\b\");a=a.className;return!(!a||!a.match(b))},Ia=function(a,b){I(a,b)?K(a,b):J(a,b)},Ja=function(a,b){a[b]=function(c){var d=arguments;g.qm(function(){a[b].apply(this,d)})}},Ka=function(a){a=[\"//www.gstatic.com\",\"/og/_/js/d=1/k=\",\n\"og.og2.en_US.YCWiXYRk7Ug.O\",\"/rt=j/m=\",a,\"/rs=\",\"AA2YrTueEfaMtzFUvCf8F0fPFUC1BD4UPg\"];Ha&&a.push(\"?host=www.gstatic.com&bust=og.og2.en_US.iMrmam-cn2o.DU\");a=a.join(\"\");pa(a)};p(\"ca\",J);p(\"cr\",K);p(\"cc\",I);h.k=J;h.l=K;h.m=I;h.n=Ia;h.p=Ka;h.q=Ja;var La=[\"gb_71\",\"gb_155\"],Ma;function Na(a){Ma=a}function Oa(a){var b=Ma&&!a.href.match(/.*\\/accounts\\/ClearSID[?]/)&&encodeURIComponent(Ma());b&&(a.href=a.href.replace(/([?&]continue=)[^&]*/,\"$1\"+b))}function Pa(a){window.gApplication&&(a.href=window.gApplication.getTabUrl(a.href))}function Qa(a){try{var b=(document.forms[0].q||\"\").value;b&&(a.href=a.href.replace(/([?&])q=[^&]*|$/,function(a,d){return(d||\"&\")+\"q=\"+encodeURIComponent(b)}))}catch(c){q(c,\"sb\",\"pq\")}}\nvar Ra=function(){for(var a=[],b=0,c;c=La[b];++b)(c=document.getElementById(c))&&a.push(c);return a},Sa=function(){var a=Ra();return 0<a.length?a[0]:null},Ta=function(){return document.getElementById(\"gb_70\")},L={},M={},Ua={},N={},O=void 0,Za=function(a,b){try{var c=document.getElementById(\"gb\");J(c,\"gbpdjs\");P();Va(document.getElementById(\"gb\"))&&J(c,\"gbrtl\");if(b&&b.getAttribute){var d=b.getAttribute(\"aria-owns\");if(d.length){var f=document.getElementById(d);if(f){var k=b.parentNode;if(O==d)O=void 0,\nK(k,\"gbto\");else{if(O){var m=document.getElementById(O);if(m&&m.getAttribute){var n=m.getAttribute(\"aria-owner\");if(n.length){var l=document.getElementById(n);l&&l.parentNode&&K(l.parentNode,\"gbto\")}}}Wa(f)&&Xa(f);O=d;J(k,\"gbto\")}}}}D(function(){g.tg(a,b,!0)});Ya(a)}catch(t){q(t,\"sb\",\"tg\")}},$a=function(a){D(function(){g.close(a)})},ab=function(a){D(function(){g.rdd(a)})},Va=function(a){var b,c=document.defaultView;c&&c.getComputedStyle?(a=c.getComputedStyle(a,\"\"))&&(b=a.direction):b=a.currentStyle?\na.currentStyle.direction:a.style.direction;return\"rtl\"==b},cb=function(a,b,c){if(a)try{var d=document.getElementById(\"gbd5\");if(d){var f=d.firstChild,k=f.firstChild,m=document.createElement(\"li\");m.className=b+\" gbmtc\";m.id=c;a.className=\"gbmt\";m.appendChild(a);if(k.hasChildNodes()){c=[[\"gbkc\"],[\"gbf\",\"gbe\",\"gbn\"],[\"gbkp\"],[\"gbnd\"]];for(var d=0,n=k.childNodes.length,f=!1,l=-1,t=0,C;C=c[t];t++){for(var T=0,G;G=C[T];T++){for(;d<n&&I(k.childNodes[d],G);)d++;if(G==b){k.insertBefore(m,k.childNodes[d]||\nnull);f=!0;break}}if(f){if(d+1<k.childNodes.length){var U=k.childNodes[d+1];I(U.firstChild,\"gbmh\")||bb(U,C)||(l=d+1)}else if(0<=d-1){var V=k.childNodes[d-1];I(V.firstChild,\"gbmh\")||bb(V,C)||(l=d)}break}0<d&&d+1<n&&d++}if(0<=l){var w=document.createElement(\"li\"),x=document.createElement(\"div\");w.className=\"gbmtc\";x.className=\"gbmt gbmh\";w.appendChild(x);k.insertBefore(w,k.childNodes[l])}g.addHover&&g.addHover(a)}else k.appendChild(m)}}catch(Ab){q(Ab,\"sb\",\"al\")}},bb=function(a,b){for(var c=b.length,\nd=0;d<c;d++)if(I(a,b[d]))return!0;return!1},db=function(a,b,c){cb(a,b,c)},eb=function(a,b){cb(a,\"gbe\",b)},fb=function(){D(function(){g.pcm&&g.pcm()})},gb=function(){D(function(){g.pca&&g.pca()})},hb=function(a,b,c,d,f,k,m,n,l,t){D(function(){g.paa&&g.paa(a,b,c,d,f,k,m,n,l,t)})},ib=function(a,b){L[a]||(L[a]=[]);L[a].push(b)},jb=function(a,b){M[a]||(M[a]=[]);M[a].push(b)},kb=function(a,b){Ua[a]=b},lb=function(a,b){N[a]||(N[a]=[]);N[a].push(b)},Ya=function(a){a.preventDefault&&a.preventDefault();a.returnValue=\n!1;a.cancelBubble=!0},mb=null,Xa=function(a,b){P();if(a){nb(a,\"Opening&hellip;\");Q(a,!0);b=\"undefined\"!=typeof b?b:1E4;var c=function(){ob(a)};mb=window.setTimeout(c,b)}},pb=function(a){P();a&&(Q(a,!1),nb(a,\"\"))},ob=function(a){try{P();var b=a||document.getElementById(O);b&&(nb(b,\"This service is currently unavailable.%1$sPlease try again later.\",\"%1$s\"),Q(b,!0))}catch(c){q(c,\"sb\",\"sdhe\")}},nb=function(a,b,c){if(a&&b){var d=Wa(a);if(d){if(c){d.innerHTML=\"\";b=b.split(c);c=0;for(var f;f=b[c];c++){var k=document.createElement(\"div\");\nk.innerHTML=f;d.appendChild(k)}}else d.innerHTML=b;Q(a,!0)}}},Q=function(a,b){(b=void 0!==b?b:!0)?J(a,\"gbmsgo\"):K(a,\"gbmsgo\")},Wa=function(a){for(var b=0,c;c=a.childNodes[b];b++)if(I(c,\"gbmsg\"))return c},P=function(){mb&&window.clearTimeout(mb)},qb=function(a){var b=\"inner\"+a;a=\"offset\"+a;return window[b]?window[b]:document.documentElement&&document.documentElement[a]?document.documentElement[a]:0},rb=function(){return!1},sb=function(){return!!O};p(\"so\",Sa);p(\"sos\",Ra);p(\"si\",Ta);p(\"tg\",Za);\np(\"close\",$a);p(\"rdd\",ab);p(\"addLink\",db);p(\"addExtraLink\",eb);p(\"pcm\",fb);p(\"pca\",gb);p(\"paa\",hb);p(\"ddld\",Xa);p(\"ddrd\",pb);p(\"dderr\",ob);p(\"rtl\",Va);p(\"op\",sb);p(\"bh\",L);p(\"abh\",ib);p(\"dh\",M);p(\"adh\",jb);p(\"ch\",N);p(\"ach\",lb);p(\"eh\",Ua);p(\"aeh\",kb);ba=h.a(\"\")?Pa:Qa;p(\"qs\",ba);p(\"setContinueCb\",Na);p(\"pc\",Oa);p(\"bsy\",rb);h.d=Ya;h.j=qb;var tb={};y.base=tb;z.push([\"m\",{url:\"//ssl.gstatic.com/gb/js/sem_e2a78f6507688f2201c985c517132857.js\"}]);g.sg={c:\"1\"};p(\"wg\",{rg:{}});var ub={tiw:h.c(\"15000\",0),tie:h.c(\"30000\",0)};y.wg=ub;var vb={thi:h.c(\"10000\",0),thp:h.c(\"180000\",0),tho:h.c(\"5000\",0),tet:h.b(\"0.5\",0)};y.wm=vb;if(h.a(\"1\")){var wb=h.a(\"\");z.push([\"gc\",{auto:wb,url:\"//ssl.gstatic.com/gb/js/abc/gci_91f30755d6a6b787dcc2a4062e6e9824.js\",libs:\"googleapis.client:plusone:gapi.iframes\"}]);var xb={version:\"gci_91f30755d6a6b787dcc2a4062e6e9824.js\",index:\"\",lang:\"en\"};y.gc=xb;var yb=function(a){window.googleapis&&window.iframes?a&&a():(a&&ra(a),F(\"gc\"))};p(\"lGC\",yb);h.a(\"1\")&&p(\"lPWF\",yb)};window.__PVT=\"\";if(h.a(\"1\")&&h.a(\"1\")){var zb=function(a){yb(function(){B(\"pw\",a);F(\"pw\")})};p(\"lPW\",zb);z.push([\"pw\",{url:\"//ssl.gstatic.com/gb/js/abc/pwm_45f73e4df07a0e388b0fa1f3d30e7280.js\"}]);var Bb=[],Cb=function(a){Bb[0]=a},Db=function(a,b){b=b||{};b._sn=\"pw\";r(a,b)},Eb={signed:Bb,elog:Db,base:\"https://plusone.google.com/u/0\",loadTime:(new Date).getTime()};y.pw=Eb;var Fb=function(a,b){var c=b.split(\".\");b=function(){var b=arguments;a(function(){for(var a=g,d=0,f=c.length-1;d<f;++d)a=a[c[d]];a[c[d]].apply(a,b)})};for(var d=g,f=0,k=c.length-1;f<\nk;++f)d=d[c[f]]=d[c[f]]||{};return d[c[f]]=b};Fb(zb,\"pw.clk\");Fb(zb,\"pw.hvr\");p(\"su\",Cb,g.pw)};var Gb=[1,2,3,4,5,6,9,10,11,13,14,28,29,30,34,35,37,38,39,40,41,42,43,48,49,500];var Hb=h.b(\"0.001\",1E-4),Ib=h.b(\"1\",1),Jb=!1,Kb=!1;if(h.a(\"1\")){var Lb=Math.random();Lb<Hb&&(Jb=!0);Lb<Ib&&(Kb=!0)}var R=null;\nfunction Mb(a,b){var c=Hb,d=Jb,f;f=a;if(!R){R={};for(var k=0;k<Gb.length;k++){var m=Gb[k];R[m]=!0}}if(f=!!R[f])c=Ib,d=Kb;if(d){var d=encodeURIComponent,n=\"es_plusone_gc_20170309.0_p0\",l;g.rp?(l=g.rp(),l=\"-1\"!=l?l:\"\"):l=\"\";f=(new Date).getTime();var k=d(\"28834\"),m=d(\"5xEBWZOKAqPEjwSg87G4Dw\"),t=g.bv.f,C=d(\"1\");l=d(l);var c=Math.round(1/c),T=d(\"1493000931.0\"),n=n?\"&oggv=\"+d(n):\"\",G=d(\"com\"),U=d(\"en\"),\nV=d(\"USA\"),w;w=0;h.a(\"\")&&(w|=1);h.a(\"\")&&(w|=2);h.a(\"\")&&(w|=4);a=[\"//www.google.com/gen_204?atyp=i&zx=\",f,\"&oge=\",a,\"&ogex=\",k,\"&ogev=\",m,\"&ogf=\",t,\"&ogp=\",C,\"&ogrp=\",l,\"&ogsr=\",c,\"&ogv=\",T,n,\"&ogd=\",G,\"&ogl=\",U,\"&ogc=\",V,\"&ogus=\",w];if(b){\"ogw\"in b&&(a.push(\"&ogw=\"+b.ogw),delete b.ogw);var x;f=[];for(x in b)0!=f.length&&f.push(\",\"),f.push(Nb(x)),f.push(\".\"),f.push(Nb(b[x]));x=f.join(\"\");\"\"!=x&&(a.push(\"&ogad=\"),a.push(d(x)))}ia(a.join(\"\"))}}\nfunction Nb(a){\"number\"==typeof a&&(a+=\"\");return\"string\"==typeof a?a.replace(\".\",\"%2E\").replace(\",\",\"%2C\"):a}u=Mb;p(\"il\",u,v);var Ob={};y.il=Ob;var Pb=function(a,b,c,d,f,k,m,n,l,t){D(function(){g.paa(a,b,c,d,f,k,m,n,l,t)})},Qb=function(){D(function(){g.prm()})},Rb=function(a){D(function(){g.spn(a)})},Sb=function(a){D(function(){g.sps(a)})},Tb=function(a){D(function(){g.spp(a)})},Ub={\"27\":\"https://ssl.gstatic.com/gb/images/si", 32768, 0) = 32768
27308 recv(4, "\r\n", 2, 0)             = 2
27308 recv(4, "9", 1, 0)                = 1
27308 recv(4, "f", 1, 0)                = 1
27308 recv(4, "a", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "lhouette_24.png\",\"27\":\"https://ssl.gstatic.com/gb/images/silhouette_24.png\",\"27\":\"https://ssl.gstatic.com/gb/images/silhouette_24.png\"},Vb=function(a){return(a=Ub[a])||\"https://ssl.gstatic.com/gb/images/silhouette_24.png\"},\nWb=function(){D(function(){g.spd()})};p(\"spn\",Rb);p(\"spp\",Tb);p(\"sps\",Sb);p(\"spd\",Wb);p(\"paa\",Pb);p(\"prm\",Qb);ib(\"gbd4\",Qb);\nif(h.a(\"\")){var Xb={d:h.a(\"\"),e:\"\",sanw:h.a(\"\"),p:\"https://ssl.gstatic.com/gb/images/silhouette_96.png\",cp:\"1\",xp:h.a(\"1\"),mg:\"%1$s (delegated)\",md:\"%1$s (default)\",mh:\"220\",s:\"1\",pp:Vb,ppl:h.a(\"\"),ppa:h.a(\"\"),\nppm:\"Google+ page\"};y.prf=Xb};var S,Yb,W,Zb,X=0,$b=function(a,b,c){if(a.indexOf)return a.indexOf(b,c);if(Array.indexOf)return Array.indexOf(a,b,c);for(c=null==c?0:0>c?Math.max(0,a.length+c):c;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},Y=function(a,b){return-1==$b(a,X)?(q(Error(X+\"_\"+b),\"up\",\"caa\"),!1):!0},bc=function(a,b){Y([1,2],\"r\")&&(S[a]=S[a]||[],S[a].push(b),2==X&&window.setTimeout(function(){b(ac(a))},0))},cc=function(a,b,c){if(Y([1],\"nap\")&&c){for(var d=0;d<c.length;d++)Yb[c[d]]=!0;g.up.spl(a,b,\"nap\",c)}},dc=\nfunction(a,b,c){if(Y([1],\"aop\")&&c){if(W)for(var d in W)W[d]=W[d]&&-1!=$b(c,d);else for(W={},d=0;d<c.length;d++)W[c[d]]=!0;g.up.spl(a,b,\"aop\",c)}},ec=function(){try{if(X=2,!Zb){Zb=!0;for(var a in S)for(var b=S[a],c=0;c<b.length;c++)try{b[c](ac(a))}catch(d){q(d,\"up\",\"tp\")}}}catch(d){q(d,\"up\",\"mtp\")}},ac=function(a){if(Y([2],\"ssp\")){var b=!Yb[a];W&&(b=b&&!!W[a]);return b}};Zb=!1;S={};Yb={};W=null;\nvar X=1,fc=function(a){var b=!1;try{b=a.cookie&&a.cookie.match(\"PREF\")}catch(c){}return!b},gc=function(){try{return!!e.localStorage&&\"object\"==typeof e.localStorage}catch(a){return!1}},hc=function(a){return a&&a.style&&a.style.behavior&&\"undefined\"!=typeof a.load},ic=function(a,b,c,d){try{fc(document)||(d||(b=\"og-up-\"+b),gc()?e.localStorage.setItem(b,c):hc(a)&&(a.setAttribute(b,c),a.save(a.id)))}catch(f){f.code!=DOMException.QUOTA_EXCEEDED_ERR&&q(f,\"up\",\"spd\")}},jc=function(a,b,c){try{if(fc(document))return\"\";\nc||(b=\"og-up-\"+b);if(gc())return e.localStorage.getItem(b);if(hc(a))return a.load(a.id),a.getAttribute(b)}catch(d){d.code!=DOMException.QUOTA_EXCEEDED_ERR&&q(d,\"up\",\"gpd\")}return\"\"},kc=function(a,b,c){a.addEventListener?a.addEventListener(b,c,!1):a.attachEvent&&a.attachEvent(\"on\"+b,c)},lc=function(a){for(var b=0,c;c=a[b];b++){var d=g.up;c=c in d&&d[c];if(!c)return!1}return!0},mc=function(a,b){try{if(fc(a))return-1;var c=a.cookie.match(/OGPC=([^;]*)/);if(c&&c[1]){var d=c[1].match(new RegExp(\"\\\\b\"+\nb+\"-([0-9]+):\"));if(d&&d[1])return parseInt(", 2554, 0) = 2554
27308 recv(4, "\r\n", 2, 0)             = 2
27308 recv(4, "3", 1, 0)                = 1
27308 recv(4, "1", 1, 0)                = 1
27308 recv(4, "b", 1, 0)                = 1
27308 recv(4, "6", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "d[1],10)}}catch(f){f.code!=DOMException.QUOTA_EXCEEDED_ERR&&q(f,\"up\",\"gcc\")}return-1};p(\"up\",{r:bc,nap:cc,aop:dc,tp:ec,ssp:ac,spd:ic,gpd:jc,aeh:kc,aal:lc,gcc:mc});var Z=function(a,b){a[b]=function(c){var d=arguments;g.qm(function(){a[b].apply(this,d)})}};Z(g.up,\"sl\");Z(g.up,\"si\");Z(g.up,\"spl\");Z(g.up,\"dpc\");Z(g.up,\"iic\");g.mcf(\"up\",{sp:h.b(\"0.01\",1),tld:\"com\",prid:\"1\"});function nc(){function a(){for(var b;(b=k[m++])&&\"m\"!=b[0]&&!b[1].auto;);b&&(qa(2,b[0]),b[1].url&&pa(b[1].url,b[0]),b[1].libs&&E&&E(b[1].libs));m<k.length&&setTimeout(a,0)}function b(){0<f--?setTimeout(b,0):a()}var c=h.a(\"1\"),d=h.a(\"\"),f=3,k=z,m=0,n=window.gbarOnReady;if(n)try{n()}catch(l){q(l,\"ml\",\"or\")}d?p(\"ldb\",a):c?ca(window,\"load\",b):b()}p(\"rdl\",nc);}catch(e){window.gbar&&gbar.logger&&gbar.logger.ml(e,{\"_sn\":\"cfg.init\"});}})();\n(function(){try{var a=window.gbar;a.mcf(\"pm\",{p:\"\"});}catch(e){window.gbar&&gbar.logger&&gbar.logger.ml(e,{\"_sn\":\"cfg.init\"});}})();\n(function(){try{var a=window.gbar;a.mcf(\"mm\",{s:\"1\"});}catch(e){window.gbar&&gbar.logger&&gbar.logger.ml(e,{\"_sn\":\"cfg.init\"});}})();\n(function(){try{var d=window.gbar.i.i;var e=window.gbar;var f=e.i;var g=f.c(\"1\",0),h=/\\bgbmt\\b/,k=function(a){try{var b=document.getElementById(\"gb_\"+g),c=document.getElementById(\"gb_\"+a);b&&f.l(b,h.test(b.className)?\"gbm0l\":\"gbz0l\");c&&f.k(c,h.test(c.className)?\"gbm0l\":\"gbz0l\")}catch(l){d(l,\"sj\",\"ssp\")}g=a},m=e.qs,n=function(a){var b;b=a.href;var c=window.location.href.match(/.*?:\\/\\/[^\\/]*/)[0],c=new RegExp(\"^\"+c+\"/search\\\\?\");(b=c.test(b))&&!/(^|\\\\?|&)ei=/.test(a.href)&&(b=window.google)&&b.kEXPI&&(a.href+=\"&ei=\"+b.kEI)},p=function(a){m(a);\nn(a)},q=function(){if(window.google&&window.google.sn){var a=/.*hp$/;return a.test(window.google.sn)?\"\":\"1\"}return\"-1\"};e.rp=q;e.slp=k;e.qs=p;e.qsi=n;}catch(e){window.gbar&&gbar.logger&&gbar.logger.ml(e,{\"_sn\":\"cfg.init\"});}})();\n(function(){try{var a=this;var b=window.gbar;var c=b.i;var d=c.a,e=c.c,f={cty:\"USA\",cv:\"1493000931\",dbg:d(\"\"),ecv:\"0\",ei:e(\"5xEBWZOKAqPEjwSg87G4Dw\"),ele:d(\"1\"),esr:e(\"0.1\"),evts:[\"mousedown\",\"touchstart\",\"touchmove\",\"wheel\",\"keydown\"],gbl:\"es_plusone_gc_20170309.0_p0\",hd:\"com\",hl:\"en\",irp:d(\"\"),pid:e(\"1\"),\nsnid:e(\"28834\"),to:e(\"300000\"),u:e(\"\"),vf:\".66.41.\"},g=f,h=[\"bndcfg\"],k=a;h[0]in k||!k.execScript||k.execScript(\"var \"+h[0]);for(var l;h.length&&(l=h.shift());)h.length||void 0===g?k=k[l]&&k[l]!==Object.prototype[l]?k[l]:k[l]={}:k[l]=g;}catch(e){window.gbar&&gbar.logger&&gbar.logger.ml(e,{\"_sn\":\"cfg.init\"});}})();\n(function(){try{window.gbar.rdl();}catch(e){window.gbar&&gbar.logger&&gbar.logger.ml(e,{\"_sn\":\"cfg.init\"});}})();\n</script><link href=\"/images/branding/product/ico/googleg_lodp.ico\" rel=\"shortcut icon\"></head><body bgcolor=\"#fff\"><script>(function(){var src='/images/nav_logo229.png';var iesg=false;document.body.onload = function(){window.n && window.n();if (document.images){new Image().src=src;}\nif (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.focus();}\n}\n})();</script><div id=\"mngb\"> <div id=gb><script>window.gbar&&gbar.eli&&gbar.eli()</script><div id=gbw><div id=gbz><span class=gbtcb></span><ol id=gbzc class=gbtc><li class=gbt><a onclick=gbar.logger.il(1,{t:1}); class=\"gbzt gbz0l gbp1\" id=gb_1 href=\"https://www.google.com/webhp?tab=ww\"><span class=gbtb2></span><span class=gbts>Search</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:2}); class=gbzt id=gb_2 href=\"http://www.google.com/imghp?hl=en&tab=wi\"><span class=gbtb2></span><span class=gbts>Images</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:8}); class=gbzt id=gb_8 href=\"http://maps.google.com/maps?hl=en&tab=wl\"><span class=gbtb2></span><span class=gbts>Maps</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:78}); class=gbzt id=gb_78 href=\"https://play.google.com/?hl=en&tab=w8\"><span class=gbtb2></span><span class=gbts>Play</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:36}); class=gbzt id=gb_36 href=\"http://www.youtube.com/?tab=w1\"><span class=gbtb2></span><span class=gbts>YouTube</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:5}); class=gbzt id=gb_5 href=\"http://news.google.com/nwshp?hl=en&tab=wn\"><span class=gbtb2></span><span class=gbts>News</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:23}); class=gbzt id=gb_23 href=\"https://mail.google.com/mail/?tab=wm\"><span class=gbtb2></span><span class=gbts>Gmail</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:49}); class=gbzt id=gb_49 href=\"https://drive.google.com/?tab=wo\"><span class=gbtb2></span><span class=gbts>Drive</span></a></li><li class=gbt><a class=gbgt id=gbztm href=\"https://www.google.com/intl/en/options/\" onclick=\"gbar.tg(event,this)\" aria-haspopup=true aria-owns=gbd><span class=gbtb2></span><span id=gbztms class=\"gbts gbtsa\"><span id=gbztms1>More</span><span class=gbma></span></span></a><div class=gbm id=gbd aria-owner=gbztm><div id=gbmmb class=\"gbmc gbsb gbsbis\"><ol id=gbmm class=\"gbmcc gbsbic\"><li class=gbmtc><a onclick=gbar.logger.il(1,{t:24}); class=gbmt id=gb_24 href=\"https://www.google.com/calendar?tab=wc\">Calendar</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:51}); class=gbmt id=gb_51 href=\"http://translate.google.com/?hl=en&tab=wT\">Translate</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:17}); class=gbmt id=gb_17 href=\"http://www.google.com/mobile/?hl=en&tab=wD\">Mobile</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:10}); class=gbmt id=gb_10 href=\"https://books.google.com/bkshp?hl=en&tab=wp\">Books</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:212}); class=gbmt id=gb_212 href=\"https://wallet.google.com/?tab=wa\">Wallet</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:6}); class=gbmt id=gb_6 href=\"http://www.google.com/shopping?hl=en&tab=wf\">Shopping</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:30}); class=gbmt id=gb_30 href=\"http://www.blogger.com/?tab=wj\">Blogger</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:27}); class=gbmt id=gb_27 href=\"http://www.google.com/finance?tab=we\">Finance</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:31}); class=gbmt id=gb_31 href=\"https://photos.google.com/?tab=wq&pageId=none\">Photos</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:12}); class=gbmt id=gb_12 href=\"http://video.google.com/?hl=en&tab=wv\">Videos</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:25}); class=gbmt id=gb_25 href=\"https://docs.google.com/document/?usp=docs_alc\">Docs</a></li><li class=gbmtc><div class=\"gbmt gbmh\"></div></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:66}); href=\"https://www.google.com/intl/en/options/\" class=gbmt>Even more &raquo;</a></li></ol><div class=gbsbt></div><div class=gbsbb></div></div></div></li></ol></div><div id=gbg><h2 class=gbxx>Account Options</h2><span class=gbtcb></span><ol class=gbtc><li class=gbt><a target=_top href=\"https://accounts.google.com/ServiceLogin?hl=en&passive=true&continue=http://www.google.com/\" onclick=\"gbar.logger.il(9,{l:'i'})\" id=gb_70 class=gbgt><span class=gbtb2></span><span id=gbgs4 class=gbts><span id=gbi4s1>Sign in</span></span></a></li><li class=\"gbt gbtb\"><span class=gbts></span></li><li class=gbt><a class=gbgt id=gbg5 href=\"http://www.google.com/preferences?hl=en\" title=\"Options\" onclick=\"gbar.tg(event,this)\" aria-haspopup=true aria-owns=gbd5><span class=gbtb2></span><span id=gbgs5 class=gbts><span id=gbi5></span></span></a><div class=gbm id=gbd5 aria-owner=gbg5><div class=gbmc><ol id=gbom class=gbmcc><li class=\"gbkc gbmtc\"><a  class=gbmt href=\"/preferences?hl=en\">Search settings</a></li><li class=gbmtc><div class=\"gbmt gbmh\"></div></li><li class=\"gbkp gbmtc\"><a class=gbmt href=\"http://www.google.com/history/optout?hl=en\">Web History</a></li></ol></div></div></li></ol></div></div><div id=gbx3></div><div id=gbx4></div><script>window.gbar&&gbar.elp&&gbar.elp()</script></div> </div><center><br clear=\"all\" id=\"lgpd\"><div id=\"lga\"><a href=\"/search?site=&amp;ie=UTF-8&amp;q=Cassini+Spacecraft&amp;oi=ddle&amp;ct=cassini-spacecraft-dives-between-saturn-and-its-rings-5717425520640000-law&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwjByqybicPTAhVB7IMKHaChCdkQPQgD\"><img alt=\"Cassini Spacecraft Dives Between Saturn and its Rings!\" border=\"0\" height=\"230\" src=\"/logos/doodles/2017/cassini-spacecraft-dives-between-saturn-and-its-rings-5717425520640000-law.gif\" title=\"Cassini Spacecraft Dives Between Saturn and its Rings!\" width=\"474\" id=\"hplogo\" onload=\"window.lol&&lol()\"><br></a><br></div><form action=\"/search\" name=\"f\"><table cellpadding=\"0\" cellspacing=\"0\"><tr valign=\"top\"><td width=\"25%\">&nbsp;</td><td align=\"center\" nowrap=\"\"><input name=\"ie\" value=\"ISO-8859-1\" type=\"hidden\"><input value=\"en\" name=\"hl\" type=\"hidden\"><input name=\"source\" type=\"hidden\" value=\"hp\"><input name=\"biw\" type=\"hidden\"><input name=\"bih\" type=\"hidden\"><div class=\"ds\" style=\"height:32px;margin:4px 0\"><input style=\"color:#000;margin:0;padding:5px 8px 0 6px;vertical-align:top\" autocomplete=\"off\" class=\"lst\" value=\"\" title=\"Google Search\" maxlength=\"2048\" name=\"q\" size=\"57\"></div><br style=\"line-height:0\"><span class=\"ds\"><span class=\"lsbb\"><input class=\"lsb\" value=\"Google Search\" name=\"btnG\" type=\"submit\"></span></span><span class=\"ds\"><span class=\"lsbb\"><input class=\"lsb\" value=\"I'm Feeling Lucky\" name=\"btnI\" onclick=\"if(this.form.q.value)this.checked=1; else top.location='/doodles/'\" type=\"submit\"></span></span></td><td class=\"fl sblc\" align=\"left\" nowrap=\"\" width=\"25%\"><a href=\"/advanced_search?hl=en&amp;authuser=0\">Advanced search</a><a href=\"/language_tools?hl=en&amp;authuser=0\">Language tools</a></td></tr></table><input id=\"gbv\" name=\"gbv\" type=\"hidden\" value=\"1\"><script>(function(){var a,b=\"1\";if(document&&document.getElementById)if(\"undefined\"!=typeof XMLHttpRequest)b=\"2\";else if(\"undefined\"!=typeof ActiveXObject){var c,d,e=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"];for(c=0;d=e[c++];)try{new ActiveXObject(d),b=\"2\"}catch(h){}}a=b;if(\"2\"==a&&-1==location.search.indexOf(\"&gbv=2\")){var f=google.gbvu,g=document.getElementById(\"gbv\");g&&(g.value=a);f&&window.setTimeout(function(){location.href=f},0)};}).call(this);</script></form><div id=\"gac_scont\"></div><div style=\"font-size:83%;min-height:3.5em\"><br></div><span id=\"footer\"><div style=\"font-size:10pt\"><div style=\"margin:19px auto;text-align:center\" id=\"fll\"><a href=\"/intl/en/ads/\">Advertising\240Programs</a><a href=\"/services/\">Business Solutions</a><a href=\"https://plus.google.com/116899029375914044550\" rel=\"publisher\">+Google</a><a href=\"/intl/en/about.html\">About Google</a></div></div><p style=\"color:#767676;font-size:8pt\">&copy; 2017 - <a href=\"/intl/en/policies/privacy/\">Privacy</a> - <a href=\"/intl/en/policies/terms/\">Terms</a></p></span></center><script>(function(){window.google.cdo={height:0,width:0};(function(){var a=window.innerWidth,b=window.innerHeight;if(!a||!b)var c=window.document,d=\"CSS1Compat\"==c.compatMode?c.documentElement:c.body,a=d.clientWidth,b=d.clientHeight;a&&b&&(a!=google.cdo.width||b!=google.cdo.height)&&google.log(\"\",\"\",\"/client_204?&atyp=i&biw=\"+a+\"&bih=\"+b+\"&ei=\"+google.kEI);}).call(this);})();</script><div id=\"xjsd\"></div><div id=\"xjsi\"><script>(function(){function c(b){window.setTimeout(function(){var a=document.createElement(\"script\");a.src=b;document.getElementById(\"xjsd\").appendChild(a)},0)}google.dljp=function(b,a){google.xjsu=b;c(a)};google.dlj=c;}).call(this);(function(){window.google.xjsrm=[];})();if(google.y)google.y.first=[];if(!google.xjs){window._=window._||{};window._DumpException=window._._DumpException=function(e){throw e};if(google.timers&&google.timers.load.t){google.timers.load.t.xjsls=new Date().getTime();}google.dljp('/xjs/_/js/k\\x3dxjs.hp.en_US.S3U7BKK2JkE.O/m\\x3dsb_he,d/am\\x3dABA/rt\\x3dj/d\\x3d1/t\\x3dzcms/rs\\x3dACT90oEKYclngN1R3USONGH9t8EcY3XsZw','/xjs/_/js/k\\x3dxjs.hp.en_US.S3U7BKK2JkE.O/m\\x3dsb_he,d/am\\x3dABA/rt\\x3dj/d\\x3d1/t\\x3dzcms/rs\\x3dACT90oEKYclngN1R3USONGH9t8EcY3XsZw');google.xjs=1;}google.pmc={\"sb_he\":{\"agen\":true,\"cgen\":true,\"client\":\"heirloom-hp\",\"dh\":true,\"dhqt\":true,\"ds\":\"\",\"fl\":true,\"host\":\"google.com\",\"isbh\":28,\"jam\":0,\"jsonp\":true,\"msgs\":{\"cibl\":\"Clear Search\",\"dym\":\"Did you mean:\",\"lcky\":\"I\\u0026#39;m Feeling Lucky\",\"lml\":\"Learn more\",\"oskt\":\"Input tools\",\"psrc\":\"This search was removed from your \\u003Ca href=\\\"/history\\\"\\u003EWeb History\\u003C/a\\u003E\",\"psrl\":\"Remove\",\"sbit\":\"Search by image\",\"srch\":\"Google Search\"},\"nds\":true,\"ovr\":{},\"pq\":\"\",\"refpd\":true,\"rfs\":[],\"sbpl\":24,\"sbpr\":24,\"scd\":10,\"sce\":5,\"stok\":\"8TB49QKsjcjxA-ew3vPtQ0u4tVc\"},\"d\":{},\"YFCs/g\":{}};google.y.first.push(function(){if(google.med){google.med('init');google.initHistory();google.med('history');}});if(google.j&&google.j.en&&google.j.xi){window.setTimeout(google.j.xi,0);}\n</script></div></body></html>", 12726, 0) = 12726
27308 recv(4, "\r\n", 2, 0)             = 2
27308 recv(4, "0", 1, 0)                = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 recv(4, "\r", 1, 0)               = 1
27308 recv(4, "\n", 1, 0)               = 1
27308 brk(0x8536000)                    = 0x8536000
27308 write(1, "'<!doctype html><html itemscope=\"\" itemtype=\"http://schema.org/WebPage\" lang=\"en\"><head><meta content=\"Search the world\\'s information, including webpages, images, videos and more. Google has many special features to help you find exactly what you\\'re looking for.\" name=\"description\"><meta content=\"noodp\" name=\"robots\"><meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\"><meta content=\"/logos/doodles/2017/cassini-spacecraft-dives-between-saturn-and-its-rings-5717425520640000-law.gif\" itemprop=\"image\"><meta content=\"Cassini Spacecraft Dives Between Saturn and its Rings!\" property=\"twitter:title\"><meta content=\"Cassini Spacecraft Dives Between Saturn and its Rings! #GoogleDoodle\" property=\"twitter:description\"><meta content=\"Cassini Spacecraft Dives Between Saturn and its Rings! #GoogleDoodle\" property=\"og:description\"><meta content=\"summary_large_image\" property=\"twitter:card\"><meta content=\"@GoogleDoodles\" property=\"twitter:site\"><meta content=\"https://www.google.com/logos/doodles/2017/cassini-s", 1024) = 1024
27308 write(1, "pacecraft-dives-between-saturn-and-its-rings-5717425520640000-law.gif\" property=\"twitter:image\"><meta content=\"https://www.google.com/logos/doodles/2017/cassini-spacecraft-dives-between-saturn-and-its-rings-5717425520640000-law.gif\" property=\"og:image\"><meta content=\"474\" property=\"og:image:width\"><meta content=\"230\" property=\"og:image:height\"><meta content=\"http://www.google.com/logos/doodles/2017/cassini-spacecraft-dives-between-saturn-and-its-rings-5717425520640000-2xa.gif\" property=\"og:url\"><meta content=\"video.other\" property=\"og:type\"><title>Google</title><script>(function(){window.google={kEI:\\'5xEBWYE7wdiPBKDDpsgN\\',kEXPI:\\'201761,1351176,1351855,1352553,1352863,1352996,1353097,3700267,3700347,3700405,4029815,4031109,4032678,4036527,4039268,4040137,4043492,4045841,4048347,4065787,4066195,4072364,4072777,4075963,4076095,4076997,4078430,4079444,4081038,4081164,4082164,4083863,4086696,4090550,4090553,4090806,4091353,4092232,4092934,4093133,4093497,4093813,4094251,4094544,4094837,4095910,4095997,4096210,4", 1024) = 1024
27308 write(1, "096324,4097153,4097922,4097929,4097951,4098096,4098733,4098740,4098752,4099407,4100169,4100380,4100828,4101376,4101429,4101750,4102032,4102238,4102827,4103254,4103475,4103849,4103999,4104204,4104659,4105085,4105111,4105178,4105317,4105321,4105470,4105563,4105787,4106025,4106028,4106428,4106949,4107221,4107428,4107437,4107555,4107628,4107866,4107914,4107956,4107966,4107967,4107989,4108538,4108540,4109078,8500572,8503585,8508229,8508931,8509037,8509373,10200083,10202265,16200026,19001731,19001732,19002007,41027341\\',authuser:0,kscs:\\'c9c918f0_24\\'};google.kHL=\\'en\\';})();(function(){google.lc=[];google.li=0;google.getEI=function(a){for(var b;a&&(!a.getAttribute||!(b=a.getAttribute(\"eid\")));)a=a.parentNode;return b||google.kEI};google.getLEI=function(a){for(var b=null;a&&(!a.getAttribute||!(b=a.getAttribute(\"leid\")));)a=a.parentNode;return b};google.https=function(){return\"https:\"==window.location.protocol};google.ml=function(){return null};google.wl=function(a,b){try{google.ml(Error(a),!1,b)}catch(c){}};google.", 1024) = 1024
27308 write(1, "time=function(){return(new Date).getTime()};google.log=function(a,b,c,d,g){a=google.logUrl(a,b,c,d,g);if(\"\"!=a){b=new Image;var e=google.lc,f=google.li;e[f]=b;b.onerror=b.onload=b.onabort=function(){delete e[f]};window.google&&window.google.vel&&window.google.vel.lu&&window.google.vel.lu(a);b.src=a;google.li=f+1}};google.logUrl=function(a,b,c,d,g){var e=\"\",f=google.ls||\"\";c||-1!=b.search(\"&ei=\")||(e=\"&ei=\"+google.getEI(d),-1==b.search(\"&lei=\")&&(d=google.getLEI(d))&&(e+=\"&lei=\"+d));a=c||\"/\"+(g||\"gen_204\")+\"?atyp=i&ct=\"+a+\"&cad=\"+b+e+f+\"&zx=\"+google.time();/^http:/i.test(a)&&google.https()&&(google.ml(Error(\"a\"),!1,{src:a,glmm:1}),a=\"\");return a};google.y={};google.x=function(a,b){google.y[a.id]=[a,b];return!1};google.lq=[];google.load=function(a,b,c){google.lq.push([[a],b,c])};google.loadAll=function(a,b){google.lq.push([a,b])};}).call(this);var a=window.location,b=a.href.indexOf(\"#\");if(0<=b){var c=a.href.substring(b+1);/(^|&)q=/.test(c)&&-1==c.indexOf(\"#\")&&a.replace(\"/search?\"+c.replace(/(^|&)fp=[^&]*/g,\"\"", 1024) = 1024
27308 write(1, ")+\"&cad=h\")};</script><style>#gb{font:13px/27px Arial,sans-serif;height:30px}#gbz,#gbg{position:absolute;white-space:nowrap;top:0;height:30px;z-index:1000}#gbz{left:0;padding-left:4px}#gbg{right:0;padding-right:5px}#gbs{background:transparent;position:absolute;top:-999px;visibility:hidden;z-index:998;right:0}.gbto #gbs{background:#fff}#gbx3,#gbx4{background-color:#2d2d2d;background-image:none;_background-image:none;background-position:0 -138px;background-repeat:repeat-x;border-bottom:1px solid #000;font-size:24px;height:29px;_height:30px;opacity:1;filter:alpha(opacity=100);position:absolute;top:0;width:100%;z-index:990}#gbx3{left:0}#gbx4{right:0}#gbb{position:relative}#gbbw{left:0;position:absolute;top:30px;width:100%}.gbtcb{position:absolute;visibility:hidden}#gbz .gbtcb{right:0}#gbg .gbtcb{left:0}.gbxx{display:none !important}.gbxo{opacity:0 !important;filter:alpha(opacity=0) !important}.gbm{position:absolute;z-index:999;top:-999px;visibility:hidden;text-align:left;border:1px solid #bebebe;background:#fff;-", 1024) = 1024
27308 write(1, "moz-box-shadow:-1px 1px 1px rgba(0,0,0,.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,.2);box-shadow:0 2px 4px rgba(0,0,0,.2)}.gbrtl .gbm{-moz-box-shadow:1px 1px 1px rgba(0,0,0,.2)}.gbto .gbm,.gbto #gbs{top:29px;visibility:visible}#gbz .gbm{left:0}#gbg .gbm{right:0}.gbxms{background-color:#ccc;display:block;position:absolute;z-index:1;top:-1px;left:-2px;right:-2px;bottom:-2px;opacity:.4;-moz-border-radius:3px;filter:progid:DXImageTransform.Microsoft.Blur(pixelradius=5);*opacity:1;*top:-2px;*left:-5px;*right:5px;*bottom:4px;-ms-filter:\"progid:DXImageTransform.Microsoft.Blur(pixelradius=5)\";opacity:1\\\\0/;top:-4px\\\\0/;left:-6px\\\\0/;right:5px\\\\0/;bottom:4px\\\\0/}.gbma{position:relative;top:-1px;border-style:solid dashed dashed;border-color:transparent;border-top-color:#c0c0c0;display:-moz-inline-box;display:inline-block;font-size:0;height:0;line-height:0;width:0;border-width:3px 3px 0;padding-top:1px;left:4px}#gbztms1,#gbi4m1,#gbi4s,#gbi4t{zoom:1}.gbtc,.gbmc,.gbmcc{display:block;list-style:none;margin:0;padding:0}.gb", 1024) = 1024
27308 write(1, "mc{background:#fff;padding:10px 0;position:relative;z-index:2;zoom:1}.gbt{position:relative;display:-moz-inline-box;display:inline-block;line-height:27px;padding:0;vertical-align:top}.gbt{*display:inline}.gbto{box-shadow:0 2px 4px rgba(0,0,0,.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,.2)}.gbzt,.gbgt{cursor:pointer;display:block;text-decoration:none !important}span#gbg6,span#gbg4{cursor:default}.gbts{border-left:1px solid transparent;border-right:1px solid transparent;display:block;*display:inline-block;padding:0 5px;position:relative;z-index:1000}.gbts{*display:inline}.gbzt .gbts{display:inline;zoom:1}.gbto .gbts{background:#fff;border-color:#bebebe;color:#36c;padding-bottom:1px;padding-top:2px}.gbz0l .gbts{color:#fff;font-weight:bold}.gbtsa{padding-right:9px}#gbz .gbzt,#gbz .gbgt,#gbg .gbgt{color:#ccc!important}.gbtb2{display:block;border-top:2px solid transparent}.gbto .gbzt .gbtb2,.gbto .gbgt .gbtb2{border-top-width:0}.gbtb .gbts{background:url(https://ssl.gstatic.", 1024) = 1024
27308 write(1, "com/gb/images/b_8d5afc09.png);_background:url(https://ssl.gstatic.com/gb/images/b8_3615d64d.png);background-position:-27px -22px;border:0;font-size:0;padding:29px 0 0;*padding:27px 0 0;width:1px}.gbzt:hover,.gbzt:focus,.gbgt-hvr,.gbgt:focus{background-color:#4c4c4c;background-image:none;_background-image:none;background-position:0 -102px;background-repeat:repeat-x;outline:none;text-decoration:none !important}.gbpdjs .gbto .gbm{min-width:99%}.gbz0l .gbtb2{border-top-color:#dd4b39!important}#gbi4s,#gbi4s1{font-weight:bold}#gbg6.gbgt-hvr,#gbg6.gbgt:focus{background-color:transparent;background-image:none}.gbg4a{font-size:0;line-height:0}.gbg4a .gbts{padding:27px 5px 0;*padding:25px 5px 0}.gbto .gbg4a .gbts{padding:29px 5px 1px;*padding:27px 5px 1px}#gbi4i,#gbi4id{left:5px;border:0;height:24px;position:absolute;top:1px;width:24px}.gbto #gbi4i,.gbto #gbi4id{top:3px}.gbi4p{display:block;width:24px}#gbi4id{background-position:-44px -101px}#gbmpid{background-position:0 0}#gbmpi,#gbmpid{border:none;display:inline-bloc", 1024) = 1024
27308 write(1, "k;height:48px;width:48px}#gbmpiw{display:inline-block;line-height:9px;padding-left:20px;margin-top:10px;position:relative}#gbmpi,#gbmpid,#gbmpiw{*display:inline}#gbg5{font-size:0}#gbgs5{padding:5px !important}.gbto #gbgs5{padding:7px 5px 6px !important}#gbi5{background:url(https://ssl.gstatic.com/gb/images/b_8d5afc09.png);_background:url(https://ssl.gstatic.com/gb/images/b8_3615d64d.png);background-position:0 0;display:block;font-size:0;height:17px;width:16px}.gbto #gbi5{background-position:-6px -22px}.gbn .gbmt,.gbn .gbmt:visited,.gbnd .gbmt,.gbnd .gbmt:visited{color:#dd8e27 !important}.gbf .gbmt,.gbf .gbmt:visited{color:#900 !important}.gbmt,.gbml1,.gbmlb,.gbmt:visited,.gbml1:visited,.gbmlb:visited{color:#36c !important;text-decoration:none !important}.gbmt,.gbmt:visited{display:block}.gbml1,.gbmlb,.gbml1:visited,.gbmlb:visited{display:inline-block;margin:0 10px}.gbml1,.gbmlb,.gbml1:visited,.gbmlb:visited{*display:inline}.gbml1,.gbml1:visited{padding:0 10px}.gbml1-hvr,.gbml1:focus{outline:none;text-decorati", 1024) = 1024
27308 write(1, "on:underline !important}#gbpm .gbml1{display:inline;margin:0;padding:0;white-space:nowrap}.gbmlb,.gbmlb:visited{line-height:27px}.gbmlb-hvr,.gbmlb:focus{outline:none;text-decoration:underline !important}.gbmlbw{color:#ccc;margin:0 10px}.gbmt{padding:0 20px}.gbmt:hover,.gbmt:focus{background:#eee;cursor:pointer;outline:0 solid black;text-decoration:none !important}.gbm0l,.gbm0l:visited{color:#000 !important;font-weight:bold}.gbmh{border-top:1px solid #bebebe;font-size:0;margin:10px 0}#gbd4 .gbmc{background:#f5f5f5;padding-top:0}#gbd4 .gbsbic::-webkit-scrollbar-track:vertical{background-color:#f5f5f5;margin-top:2px}#gbmpdv{background:#fff;border-bottom:1px solid #bebebe;-moz-box-shadow:0 2px 4px rgba(0,0,0,.12);-o-box-shadow:0 2px 4px rgba(0,0,0,.12);-webkit-box-shadow:0 2px 4px rgba(0,0,0,.12);box-shadow:0 2px 4px rgba(0,0,0,.12);position:relative;z-index:1}#gbd4 .gbmh{margin:0}.gbmtc{padding:0;margin:0;line-height:27px}.GBMCC:last-child:after,#GBMPAL:last-child:after{content:\\'\\\\0A\\\\0A\\';white-space:pre;posit", 1024) = 1024
27308 write(1, "ion:absolute}#gbmps{*zoom:1}#gbd4 .gbpc,#gbmpas .gbmt{line-height:17px}#gbd4 .gbpgs .gbmtc{line-height:27px}#gbd4 .gbmtc{border-bottom:1px solid #bebebe}#gbd4 .gbpc{display:inline-block;margin:16px 0 10px;padding-right:50px;vertical-align:top}#gbd4 .gbpc{*display:inline}.gbpc .gbps,.gbpc .gbps2{display:block;margin:0 20px}#gbmplp.gbps{margin:0 10px}.gbpc .gbps{color:#000;font-weight:bold}.gbpc .gbpd{margin-bottom:5px}.gbpd .gbmt,.gbpd .gbps{color:#666 !important}.gbpd .gbmt{opacity:.4;filter:alpha(opacity=40)}.gbps2{color:#666;display:block}.gbp0{display:none}.gbp0 .gbps2{font-weight:bold}#gbd4 .gbmcc{margin-top:5px}.gbpmc{background:#fef9db}.gbpmc .gbpmtc{padding:10px 20px}#gbpm{border:0;*border-collapse:collapse;border-spacing:0;margin:0;white-space:normal}#gbpm .gbpmtc{border-top:none;color:#000 !important;font:11px Arial,sans-serif}#gbpms{*white-space:nowrap}.gbpms2{font-weight:bold;white-space:nowrap}#gbmpal{*border-collapse:collapse;border-spacing:0;border:0;margin:0;white-space:nowrap;width:100%}.gbmpa", 1024) = 1024
27308 write(1, "la,.gbmpalb{font:13px Arial,sans-serif;line-height:27px;padding:10px 20px 0;white-space:nowrap}.gbmpala{padding-left:0;text-align:left}.gbmpalb{padding-right:0;text-align:right}#gbmpasb .gbps{color:#000}#gbmpal .gbqfbb{margin:0 20px}.gbp0 .gbps{*display:inline}a.gbiba{margin:8px 20px 10px}.gbmpiaw{display:inline-block;padding-right:10px;margin-bottom:6px;margin-top:10px}.gbxv{visibility:hidden}.gbmpiaa{display:block;margin-top:10px}.gbmpia{border:none;display:block;height:48px;width:48px}.gbmpnw{display:inline-block;height:auto;margin:10px 0;vertical-align:top}\\n.gbqfb,.gbqfba,.gbqfbb{-moz-border-radius:2px;-webkit-border-radius:2px;border-radius:2px;cursor:default !important;display:inline-block;font-weight:bold;height:29px;line-height:29px;min-width:54px;*min-width:70px;padding:0 8px;text-align:center;text-decoration:none !important;-moz-user-select:none;-webkit-user-select:none}.gbqfb:focus,.gbqfba:focus,.gbqfbb:focus{border:1px solid #4d90fe;-moz-box-shadow:inset 0 0 0 1px rgba(255, 255, 255, 0.5);-webkit", 1024) = 1024
27308 write(1, "-box-shadow:inset 0 0 0 1px rgba(255, 255, 255, 0.5);box-shadow:inset 0 0 0 1px rgba(255, 255, 255, 0.5);outline:none}.gbqfb-hvr:focus,.gbqfba-hvr:focus,.gbqfbb-hvr:focus{-webkit-box-shadow:inset 0 0 0 1px #fff,0 1px 1px rgba(0,0,0,.1);-moz-box-shadow:inset 0 0 0 1px #fff,0 1px 1px rgba(0,0,0,.1);box-shadow:inset 0 0 0 1px #fff,0 1px 1px rgba(0,0,0,.1)}.gbqfb-no-focus:focus{border:1px solid #3079ed;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none}.gbqfb-hvr,.gbqfba-hvr,.gbqfbb-hvr{-webkit-box-shadow:0 1px 1px rgba(0,0,0,.1);-moz-box-shadow:0 1px 1px rgba(0,0,0,.1);box-shadow:0 1px 1px rgba(0,0,0,.1)}.gbqfb::-moz-focus-inner,.gbqfba::-moz-focus-inner,.gbqfbb::-moz-focus-inner{border:0}.gbqfba,.gbqfbb{border:1px solid #dcdcdc;border-color:rgba(0,0,0,.1);color:#444 !important;font-size:11px}.gbqfb{background-color:#4d90fe;background-image:-webkit-gradient(linear,left top,left bottom,from(#4d90fe),to(#4787ed));background-image:-webkit-linear-gradient(top,#4d90fe,#4787ed);background-image:-moz-linear-g", 1024) = 1024
27308 write(1, "radient(top,#4d90fe,#4787ed);background-image:-ms-linear-gradient(top,#4d90fe,#4787ed);background-image:-o-linear-gradient(top,#4d90fe,#4787ed);background-image:linear-gradient(top,#4d90fe,#4787ed);filter:progid:DXImageTransform.Microsoft.gradient(startColorStr=\\'#4d90fe\\',EndColorStr=\\'#4787ed\\');border:1px solid #3079ed;color:#fff!important;margin:0 0}.gbqfb-hvr{border-color:#2f5bb7}.gbqfb-hvr:focus{border-color:#2f5bb7}.gbqfb-hvr,.gbqfb-hvr:focus{background-color:#357ae8;background-image:-webkit-gradient(linear,left top,left bottom,from(#4d90fe),to(#357ae8));background-image:-webkit-linear-gradient(top,#4d90fe,#357ae8);background-image:-moz-linear-gradient(top,#4d90fe,#357ae8);background-image:-ms-linear-gradient(top,#4d90fe,#357ae8);background-image:-o-linear-gradient(top,#4d90fe,#357ae8);background-image:linear-gradient(top,#4d90fe,#357ae8)}.gbqfb:active{background-color:inherit;-webkit-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.3);-moz-box-shadow:inset 0 1px 2px rgba(0, 0, 0, 0.3);box-shadow:inset 0 1px", 1024) = 1024
27308 write(1, " 2px rgba(0, 0, 0, 0.3)}.gbqfba{background-color:#f5f5f5;background-image:-webkit-gradient(linear,left top,left bottom,from(#f5f5f5),to(#f1f1f1));background-image:-webkit-linear-gradient(top,#f5f5f5,#f1f1f1);background-image:-moz-linear-gradient(top,#f5f5f5,#f1f1f1);background-image:-ms-linear-gradient(top,#f5f5f5,#f1f1f1);background-image:-o-linear-gradient(top,#f5f5f5,#f1f1f1);background-image:linear-gradient(top,#f5f5f5,#f1f1f1);filter:progid:DXImageTransform.Microsoft.gradient(startColorStr=\\'#f5f5f5\\',EndColorStr=\\'#f1f1f1\\')}.gbqfba-hvr,.gbqfba-hvr:active{background-color:#f8f8f8;background-image:-webkit-gradient(linear,left top,left bottom,from(#f8f8f8),to(#f1f1f1));background-image:-webkit-linear-gradient(top,#f8f8f8,#f1f1f1);background-image:-moz-linear-gradient(top,#f8f8f8,#f1f1f1);background-image:-ms-linear-gradient(top,#f8f8f8,#f1f1f1);background-image:-o-linear-gradient(top,#f8f8f8,#f1f1f1);background-image:linear-gradient(top,#f8f8f8,#f1f1f1);filter:progid:DXImageTransform.Microsoft.gradient(st", 1024) = 1024
27308 write(1, "artColorStr=\\'#f8f8f8\\',EndColorStr=\\'#f1f1f1\\')}.gbqfbb{background-color:#fff;background-image:-webkit-gradient(linear,left top,left bottom,from(#fff),to(#fbfbfb));background-image:-webkit-linear-gradient(top,#fff,#fbfbfb);background-image:-moz-linear-gradient(top,#fff,#fbfbfb);background-image:-ms-linear-gradient(top,#fff,#fbfbfb);background-image:-o-linear-gradient(top,#fff,#fbfbfb);background-image:linear-gradient(top,#fff,#fbfbfb);filter:progid:DXImageTransform.Microsoft.gradient(startColorStr=\\'#ffffff\\',EndColorStr=\\'#fbfbfb\\')}.gbqfbb-hvr,.gbqfbb-hvr:active{background-color:#fff;background-image:-webkit-gradient(linear,left top,left bottom,from(#fff),to(#f8f8f8));background-image:-webkit-linear-gradient(top,#fff,#f8f8f8);background-image:-moz-linear-gradient(top,#fff,#f8f8f8);background-image:-ms-linear-gradient(top,#fff,#f8f8f8);background-image:-o-linear-gradient(top,#fff,#f8f8f8);background-image:linear-gradient(top,#fff,#f8f8f8);filter:progid:DXImageTransform.Microsoft.gradient(startColorStr=\\'#ff", 1024) = 1024
27308 write(1, "ffff\\',EndColorStr=\\'#f8f8f8\\')}.gbqfba-hvr,.gbqfba-hvr:active,.gbqfbb-hvr,.gbqfbb-hvr:active{border-color:#c6c6c6;-webkit-box-shadow:0 1px 1px rgba(0,0,0,.1);-moz-box-shadow:0 1px 1px rgba(0,0,0,.1);box-shadow:0 1px 1px rgba(0,0,0,.1);color:#222 !important}.gbqfba:active,.gbqfbb:active{-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,.1);-moz-box-shadow:inset 0 1px 2px rgba(0,0,0,.1);box-shadow:inset 0 1px 2px rgba(0,0,0,.1)}\\n#gbmpas{max-height:220px}#gbmm{max-height:530px}.gbsb{-webkit-box-sizing:border-box;display:block;position:relative;*zoom:1}.gbsbic{overflow:auto}.gbsbis .gbsbt,.gbsbis .gbsbb{-webkit-mask-box-image:-webkit-gradient(linear,left top,right top,color-stop(0,rgba(0,0,0,.1)),color-stop(.5,rgba(0,0,0,.8)),color-stop(1,rgba(0,0,0,.1)));left:0;margin-right:0;opacity:0;position:absolute;width:100%}.gbsb .gbsbt:after,.gbsb .gbsbb:after{content:\"\";display:block;height:0;left:0;position:absolute;width:100%}.gbsbis .gbsbt{background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.2)),to(", 1024) = 1024
27308 write(1, "rgba(0,0,0,0)));background-image:-webkit-linear-gradient(top,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:-moz-linear-gradient(top,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:-ms-linear-gradient(top,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:-o-linear-gradient(top,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:linear-gradient(top,rgba(0,0,0,.2),rgba(0,0,0,0));height:6px;top:0}.gbsb .gbsbt:after{border-top:1px solid #ebebeb;border-color:rgba(0,0,0,.3);top:0}.gbsb .gbsbb{-webkit-mask-box-image:-webkit-gradient(linear,left top,right top,color-stop(0,rgba(0,0,0,.1)),color-stop(.5,rgba(0,0,0,.8)),color-stop(1,rgba(0,0,0,.1)));background:-webkit-gradient(linear,left bottom,left top,from(rgba(0,0,0,.2)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(bottom,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:-moz-linear-gradient(bottom,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:-ms-linear-gradient(bottom,rgba(0,0,0,.2),rgba(0,0,0,0));background-image:-o-linear-gradient(bottom,rgba(0,0,0,.2),rgba(", 1024) = 1024
27308 write(1, "0,0,0,0));background-image:linear-gradient(bottom,rgba(0,0,0,.2),rgba(0,0,0,0));bottom:0;height:4px}.gbsb .gbsbb:after{border-bottom:1px solid #ebebeb;border-color:rgba(0,0,0,.3);bottom:0}\\n</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;overflow-y:scroll}#gog{padding:3px 8px 0}td{line-height:.8em}.gac_m td{line-height:17px}form{margin-bottom:20px}.h{color:#36c}.q{color:#00c}.ts td{padding:0}.ts{border-collapse:collapse}em{font-weight:bold;font-style:normal}.lst{height:25px;width:496px}.gsfi,.lst{font:18px arial,sans-serif}.gsfs{font:17px arial,sans-serif}.ds{display:inline-box;display:inline-block;margin:3px 0 4px;margin-left:4px}input{font-family:inherit}a.gb1,a.gb2,a.gb3,a.gb4{color:#11c !important}body{background:#fff;color:black}a{color:#11c;text-decoration:none}a:hover,a:active{text-decoration:underline}.fl a{color:#36c}a:visited{color:#551a8b}a.gb1,a.gb4{text-decoration:underline}a.gb3:hover{text-decoration:none}#ghead a.gb2:hover{color:#fff !important}.sblc{padding-top:5px}.sb", 1024) = 1024
27308 write(1, "lc a{display:block;margin:2px 0;margin-left:13px;font-size:11px}.lsbb{background:#eee;border:solid 1px;border-color:#ccc #999 #999 #ccc;height:30px}.lsbb{display:block}.ftl,#fll a{display:inline-block;margin:0 12px}.lsb{background:url(/images/nav_logo229.png) 0 -261px repeat-x;border:none;color:#000;cursor:pointer;height:30px;margin:0;outline:0;font:15px arial,sans-serif;vertical-align:top}.lsb:active{background:#ccc}.lst:focus{outline:none}</style><script>(function(){window.google.erd={sp:\\'hp\\',jsr:1,bv:110,cs:false};var f=0,g,h=google.erd,k=h.jsr,l;google.jsmp=!0;google.ml=function(a,b,c,e){google.dl&&google.dl(a,c,b);if(google._epc(a,b,c,e))return null;a=google._gld(a,\"/gen_204?atyp=i\",c||{},!1);e||google.log(0,\"\",a);return a};google._epc=function(a,b,c,e){var d=google.erd.jsr;if(0>d){window.console&&console.error(a,c);if(-2==d)throw a;return!0}if(!a||!a.message||\"Error loading script\"==a.message||!(m()&&1>f||e))return!0;f++;b&&(g=a&&a.message);return!1};google._gld=function(a,b,c,e){b=b+\"&ei=\"+encodeURIC", 1024) = 1024
27308 write(1, "omponent(google.kEI)+\"&jexpid=\"+encodeURIComponent(google.kEXPI)+\"&srcpg=\"+encodeURIComponent(h.sp)+\"&jsr=\"+google.erd.jsr+\"&bver=\"+encodeURIComponent(h.bv);for(var d in c)b+=\"&\",b+=encodeURIComponent(d),b+=\"=\",b+=encodeURIComponent(c[d]);b=b+\"&emsg=\"+encodeURIComponent(a.name+\": \"+a.message);b=b+\"&jsst=\"+encodeURIComponent(a.stack||\"N/A\");!e&&2E3<=b.length&&(b=b.substr(0,2E3));return b};function m(){if(!h.cs)return!0;var a=google.erd.jsr;void 0==l&&(l=0>a||1==a||1==Math.ceil(Math.random()*a));return l}google.ojsr=function(a){google.erd.jsr=a;l=void 0};google.rjsr=function(){google.erd.jsr=k;l=void 0};window.onerror=function(a,b,c,e,d){g!==a&&google.ml(d instanceof Error?d:Error(a),!1);g=null;m()&&1>f||(window.onerror=null)};})();(function(){try{var e=this;var aa=function(a,b,c,d){d=d||{};d._sn=[\"cfg\",b,c].join(\".\");window.gbar.logger.ml(a,d)};var g=window.gbar=window.gbar||{},h=window.gbar.i=window.gbar.i||{},ba;function _tvn(a,b){a=parseInt(a,10);return isNaN(a)?b:a}function _tvf(a,b){a=parseFloat(a);return", 1024) = 1024
27308 write(1, " isNaN(a)?b:a}function _tvv(a){return!!a}function p(a,b,c){(c||g)[a]=b}g.bv={n:_tvn(\"2\",0),r:\"\",f:\".66.41.\",e:\"1300102,3700267,3700347,3700405\",m:_tvn(\"1\",1)};\\nfunction ca(a,b,c){var d=\"on\"+b;if(a.addEventListener)a.addEventListener(b,c,!1);else if(a.attachEvent)a.attachEvent(d,c);else{var f=a[d];a[d]=function(){var a=f.apply(this,arguments),b=c.apply(this,arguments);return void 0==a?b:void 0==b?a:b&&a}}}var da=function(a){return function(){return g.bv.m==a}},ea=da(1),fa=da(2);p(\"sb\",ea);p(\"kn\",fa);h.a=_tvv;h.b=_tvf;h.c=_tvn;h.i=aa;var q=window.gbar.i.i;var r=function(){},u=function(){},ia=function(a){var b=new Image,c=ga;b.onerror=b.onload=b.onabort=function(){try{delete ha[c]}catch(d){}};ha[c]=b;b.src=a;ga=c+1},ha=[],ga=0;p(\"logger\",{il:u,ml:r,log:ia});var v=window.gbar.logger;var y={},ja={},z=[],ka=h.b(\"0.1\",.1),la=h.a(\"1\",!0),ma=function(a,b){z.push([a,b])},na=function(a,b){y[a]=b},oa=function(a){return a in y},A={},B=function(a,b){A[a]||(A[a]=[]);A[a].push(b)},D=function(a){B(\"m\",a)},pa=function(a,b){va", 1024) = 1024
27308 write(1, "r c=document.createElement(\"script\");c.src=a;c.async=la;Math.random()<ka&&(c.onerror=function(){c.onerror=null;r(Error(\"Bundle load failed: name=\"+(b||\"UNK\")+\" url=\"+a))});(document.getElementById(\"xjsc\")||document.getElementsByTagName(\"body\")[0]||\\ndocument.getElementsByTagName(\"head\")[0]).appendChild(c)},F=function(a){for(var b=0,c;(c=z[b])&&c[0]!=a;++b);!c||c[1].l||c[1].s||(c[1].s=!0,qa(2,a),c[1].url&&pa(c[1].url,a),c[1].libs&&E&&E(c[1].libs))},ra=function(a){B(\"gc\",a)},sa=null,ta=function(a){sa=a},qa=function(a,b,c){if(sa){a={t:a,b:b};if(c)for(var d in c)a[d]=c[d];try{sa(a)}catch(f){}}};p(\"mdc\",y);p(\"mdi\",ja);p(\"bnc\",z);p(\"qGC\",ra);p(\"qm\",D);p(\"qd\",A);p(\"lb\",F);p(\"mcf\",na);p(\"bcf\",ma);p(\"aq\",B);p(\"mdd\",\"\");\\np(\"has\",oa);p(\"trh\",ta);p(\"tev\",qa);if(h.a(\"1\")){var ua=h.a(\"1\"),va=h.a(\"\"),wa=h.a(\"\"),xa=window.gapi={},ya=function(a,b){var c=function(){g.dgl(a,b)};ua?D(c):(B(\"gl\",c),F(\"gl\"))},za={},Aa=function(a){a=a.split(\":\");for(var b;(b=a.pop())&&za[b];);return!b},E=function(a){function b(){for(var b=a.split(", 1024) = 1024
27308 write(1, "\":\"),d=0,f;f=b[d];++d)za[f]=1;for(b=0;d=z[b];++b)d=d[1],(f=d.libs)&&!d.l&&d.i&&Aa(f)&&d.i()}g.dgl(a,b)},H=window.___jsl={};H.h=\"m;/_/scs/abc-static/_/js/k=gapi.gapi.en.DTPeBB_SvOA.O/m=__features__/rt=j/d=1/rs=AHpOoo-J3J0yqNDMPVrmQT6j-SBFfGx8oA\";H.ms=\"https://apis.google.com\";\\nH.m=\"\";H.l=[];ua||z.push([\"gl\",{url:\"//ssl.gstatic.com/gb/js/abc/glm_e7bb39a7e1a24581ff4f8d199678b1b9.js\"}]);var Ba={pu:va,sh:\"\",si:wa,hl:\"en\"};y.gl=Ba;p(\"load\",ya,xa);p(\"dgl\",ya);p(\"agl\",Aa);h.o=ua};var Ca=h.b(\"0.1\",.001),Da=0;\\nfunction _mlToken(a,b){try{if(1>Da){Da++;var c,d=a;b=b||{};var f=encodeURIComponent,k=[\"//www.google.com/gen_204?atyp=i&zx=\",(new Date).getTime(),\"&jexpid=\",f(\"28834\"),\"&srcpg=\",f(\"prop=1\"),\"&jsr=\",Math.round(1/Ca),\"&ogev=\",f(\"5xEBWZOKAqPEjwSg87G4Dw\"),\"&ogf=\",g.bv.f,\"&ogrp=\",f(\"\"),\"&ogv=\",f(\"1493000931.0\"),\"&oggv=\"+f(\"es_plusone_gc_20170309.0_p0\"),\"&ogd=\",f(\"com\"),\"&ogc=\",f(\"USA\"),\"&ogl=\",f(\"en\")];b._sn&&(b._sn=\\n\"og.\"+b._sn);for(var m in b)k.push(\"&\"),k.push(f(m)),k.push(\"=\"),k.push(f(b[m]));k.push(\"&emsg=\");k", 1024) = 1024
27308 write(1, ".push(f(d.name+\":\"+d.message));var n=k.join(\"\");Ea(n)&&(n=n.substr(0,2E3));c=n;var l=window.gbar.logger._aem(a,c);ia(l)}}catch(t){}}var Ea=function(a){return 2E3<=a.length},Fa=function(a,b){return b};function Ga(a){r=a;p(\"_itl\",Ea,v);p(\"_aem\",Fa,v);p(\"ml\",r,v);a={};y.er=a}h.a(\"\")?Ga(function(a){throw a;}):h.a(\"1\")&&Math.random()<Ca&&Ga(_mlToken);var _E=\"left\",Ha=h.a(\"\"),J=function(a,b){var c=a.className;I(a,b)||(a.className+=(\"\"!=c?\" \":\"\")+b)},K=function(a,b){var c=a.className;b=new RegExp(\"\\\\\\\\s?\\\\\\\\b\"+b+\"\\\\\\\\b\");c&&c.match(b)&&(a.className=c.replace(b,\"\"))},I=function(a,b){b=new RegExp(\"\\\\\\\\b\"+b+\"\\\\\\\\b\");a=a.className;return!(!a||!a.match(b))},Ia=function(a,b){I(a,b)?K(a,b):J(a,b)},Ja=function(a,b){a[b]=function(c){var d=arguments;g.qm(function(){a[b].apply(this,d)})}},Ka=function(a){a=[\"//www.gstatic.com\",\"/og/_/js/d=1/k=\",\\n\"og.og2.en_US.YCWiXYRk7Ug.O\",\"/rt=j/m=\",a,\"/rs=\",\"AA2YrTueEfaMtzFUvCf8F0fPFUC1BD4UPg\"];Ha&&a.push(\"?host=www.gstatic.com&bust=og.og2.en_US.iMrmam-cn2o.DU\");a=a.join(\"\");pa(a)};p(\"ca\",J", 1024) = 1024
27308 write(1, ");p(\"cr\",K);p(\"cc\",I);h.k=J;h.l=K;h.m=I;h.n=Ia;h.p=Ka;h.q=Ja;var La=[\"gb_71\",\"gb_155\"],Ma;function Na(a){Ma=a}function Oa(a){var b=Ma&&!a.href.match(/.*\\\\/accounts\\\\/ClearSID[?]/)&&encodeURIComponent(Ma());b&&(a.href=a.href.replace(/([?&]continue=)[^&]*/,\"$1\"+b))}function Pa(a){window.gApplication&&(a.href=window.gApplication.getTabUrl(a.href))}function Qa(a){try{var b=(document.forms[0].q||\"\").value;b&&(a.href=a.href.replace(/([?&])q=[^&]*|$/,function(a,d){return(d||\"&\")+\"q=\"+encodeURIComponent(b)}))}catch(c){q(c,\"sb\",\"pq\")}}\\nvar Ra=function(){for(var a=[],b=0,c;c=La[b];++b)(c=document.getElementById(c))&&a.push(c);return a},Sa=function(){var a=Ra();return 0<a.length?a[0]:null},Ta=function(){return document.getElementById(\"gb_70\")},L={},M={},Ua={},N={},O=void 0,Za=function(a,b){try{var c=document.getElementById(\"gb\");J(c,\"gbpdjs\");P();Va(document.getElementById(\"gb\"))&&J(c,\"gbrtl\");if(b&&b.getAttribute){var d=b.getAttribute(\"aria-owns\");if(d.length){var f=document.getElementById(d);if(f){var k=b.parentNode;", 1024) = 1024
27308 write(1, "if(O==d)O=void 0,\\nK(k,\"gbto\");else{if(O){var m=document.getElementById(O);if(m&&m.getAttribute){var n=m.getAttribute(\"aria-owner\");if(n.length){var l=document.getElementById(n);l&&l.parentNode&&K(l.parentNode,\"gbto\")}}}Wa(f)&&Xa(f);O=d;J(k,\"gbto\")}}}}D(function(){g.tg(a,b,!0)});Ya(a)}catch(t){q(t,\"sb\",\"tg\")}},$a=function(a){D(function(){g.close(a)})},ab=function(a){D(function(){g.rdd(a)})},Va=function(a){var b,c=document.defaultView;c&&c.getComputedStyle?(a=c.getComputedStyle(a,\"\"))&&(b=a.direction):b=a.currentStyle?\\na.currentStyle.direction:a.style.direction;return\"rtl\"==b},cb=function(a,b,c){if(a)try{var d=document.getElementById(\"gbd5\");if(d){var f=d.firstChild,k=f.firstChild,m=document.createElement(\"li\");m.className=b+\" gbmtc\";m.id=c;a.className=\"gbmt\";m.appendChild(a);if(k.hasChildNodes()){c=[[\"gbkc\"],[\"gbf\",\"gbe\",\"gbn\"],[\"gbkp\"],[\"gbnd\"]];for(var d=0,n=k.childNodes.length,f=!1,l=-1,t=0,C;C=c[t];t++){for(var T=0,G;G=C[T];T++){for(;d<n&&I(k.childNodes[d],G);)d++;if(G==b){k.insertBefore(m,k.childNodes[d", 1024) = 1024
27308 write(1, "]||\\nnull);f=!0;break}}if(f){if(d+1<k.childNodes.length){var U=k.childNodes[d+1];I(U.firstChild,\"gbmh\")||bb(U,C)||(l=d+1)}else if(0<=d-1){var V=k.childNodes[d-1];I(V.firstChild,\"gbmh\")||bb(V,C)||(l=d)}break}0<d&&d+1<n&&d++}if(0<=l){var w=document.createElement(\"li\"),x=document.createElement(\"div\");w.className=\"gbmtc\";x.className=\"gbmt gbmh\";w.appendChild(x);k.insertBefore(w,k.childNodes[l])}g.addHover&&g.addHover(a)}else k.appendChild(m)}}catch(Ab){q(Ab,\"sb\",\"al\")}},bb=function(a,b){for(var c=b.length,\\nd=0;d<c;d++)if(I(a,b[d]))return!0;return!1},db=function(a,b,c){cb(a,b,c)},eb=function(a,b){cb(a,\"gbe\",b)},fb=function(){D(function(){g.pcm&&g.pcm()})},gb=function(){D(function(){g.pca&&g.pca()})},hb=function(a,b,c,d,f,k,m,n,l,t){D(function(){g.paa&&g.paa(a,b,c,d,f,k,m,n,l,t)})},ib=function(a,b){L[a]||(L[a]=[]);L[a].push(b)},jb=function(a,b){M[a]||(M[a]=[]);M[a].push(b)},kb=function(a,b){Ua[a]=b},lb=function(a,b){N[a]||(N[a]=[]);N[a].push(b)},Ya=function(a){a.preventDefault&&a.preventDefault();a.returnValue=\\n!", 1024) = 1024
27308 write(1, "1;a.cancelBubble=!0},mb=null,Xa=function(a,b){P();if(a){nb(a,\"Opening&hellip;\");Q(a,!0);b=\"undefined\"!=typeof b?b:1E4;var c=function(){ob(a)};mb=window.setTimeout(c,b)}},pb=function(a){P();a&&(Q(a,!1),nb(a,\"\"))},ob=function(a){try{P();var b=a||document.getElementById(O);b&&(nb(b,\"This service is currently unavailable.%1$sPlease try again later.\",\"%1$s\"),Q(b,!0))}catch(c){q(c,\"sb\",\"sdhe\")}},nb=function(a,b,c){if(a&&b){var d=Wa(a);if(d){if(c){d.innerHTML=\"\";b=b.split(c);c=0;for(var f;f=b[c];c++){var k=document.createElement(\"div\");\\nk.innerHTML=f;d.appendChild(k)}}else d.innerHTML=b;Q(a,!0)}}},Q=function(a,b){(b=void 0!==b?b:!0)?J(a,\"gbmsgo\"):K(a,\"gbmsgo\")},Wa=function(a){for(var b=0,c;c=a.childNodes[b];b++)if(I(c,\"gbmsg\"))return c},P=function(){mb&&window.clearTimeout(mb)},qb=function(a){var b=\"inner\"+a;a=\"offset\"+a;return window[b]?window[b]:document.documentElement&&document.documentElement[a]?document.documentElement[a]:0},rb=function(){return!1},sb=function(){return!!O};p(\"so\",Sa);p(\"sos\",Ra);p(\"si\",Ta);p(", 1024) = 1024
27308 write(1, "\"tg\",Za);\\np(\"close\",$a);p(\"rdd\",ab);p(\"addLink\",db);p(\"addExtraLink\",eb);p(\"pcm\",fb);p(\"pca\",gb);p(\"paa\",hb);p(\"ddld\",Xa);p(\"ddrd\",pb);p(\"dderr\",ob);p(\"rtl\",Va);p(\"op\",sb);p(\"bh\",L);p(\"abh\",ib);p(\"dh\",M);p(\"adh\",jb);p(\"ch\",N);p(\"ach\",lb);p(\"eh\",Ua);p(\"aeh\",kb);ba=h.a(\"\")?Pa:Qa;p(\"qs\",ba);p(\"setContinueCb\",Na);p(\"pc\",Oa);p(\"bsy\",rb);h.d=Ya;h.j=qb;var tb={};y.base=tb;z.push([\"m\",{url:\"//ssl.gstatic.com/gb/js/sem_e2a78f6507688f2201c985c517132857.js\"}]);g.sg={c:\"1\"};p(\"wg\",{rg:{}});var ub={tiw:h.c(\"15000\",0),tie:h.c(\"30000\",0)};y.wg=ub;var vb={thi:h.c(\"10000\",0),thp:h.c(\"180000\",0),tho:h.c(\"5000\",0),tet:h.b(\"0.5\",0)};y.wm=vb;if(h.a(\"1\")){var wb=h.a(\"\");z.push([\"gc\",{auto:wb,url:\"//ssl.gstatic.com/gb/js/abc/gci_91f30755d6a6b787dcc2a4062e6e9824.js\",libs:\"googleapis.client:plusone:gapi.iframes\"}]);var xb={version:\"gci_91f30755d6a6b787dcc2a4062e6e9824.js\",index:\"\",lang:\"en\"};y.gc=xb;var yb=function(a){window.googleapis&&window.iframes?a&&a():(a&&ra(a),F(\"gc\"))};p(\"lGC\",yb);h.a(\"1\")&&p(\"lPWF\",yb)};window.__PVT=\"\";if(", 1024) = 1024
27308 write(1, "h.a(\"1\")&&h.a(\"1\")){var zb=function(a){yb(function(){B(\"pw\",a);F(\"pw\")})};p(\"lPW\",zb);z.push([\"pw\",{url:\"//ssl.gstatic.com/gb/js/abc/pwm_45f73e4df07a0e388b0fa1f3d30e7280.js\"}]);var Bb=[],Cb=function(a){Bb[0]=a},Db=function(a,b){b=b||{};b._sn=\"pw\";r(a,b)},Eb={signed:Bb,elog:Db,base:\"https://plusone.google.com/u/0\",loadTime:(new Date).getTime()};y.pw=Eb;var Fb=function(a,b){var c=b.split(\".\");b=function(){var b=arguments;a(function(){for(var a=g,d=0,f=c.length-1;d<f;++d)a=a[c[d]];a[c[d]].apply(a,b)})};for(var d=g,f=0,k=c.length-1;f<\\nk;++f)d=d[c[f]]=d[c[f]]||{};return d[c[f]]=b};Fb(zb,\"pw.clk\");Fb(zb,\"pw.hvr\");p(\"su\",Cb,g.pw)};var Gb=[1,2,3,4,5,6,9,10,11,13,14,28,29,30,34,35,37,38,39,40,41,42,43,48,49,500];var Hb=h.b(\"0.001\",1E-4),Ib=h.b(\"1\",1),Jb=!1,Kb=!1;if(h.a(\"1\")){var Lb=Math.random();Lb<Hb&&(Jb=!0);Lb<Ib&&(Kb=!0)}var R=null;\\nfunction Mb(a,b){var c=Hb,d=Jb,f;f=a;if(!R){R={};for(var k=0;k<Gb.length;k++){var m=Gb[k];R[m]=!0}}if(f=!!R[f])c=Ib,d=Kb;if(d){var d=encodeURIComponent,n=\"es_plusone_gc_20170309.0_p0", 1024) = 1024
27308 write(1, "\",l;g.rp?(l=g.rp(),l=\"-1\"!=l?l:\"\"):l=\"\";f=(new Date).getTime();var k=d(\"28834\"),m=d(\"5xEBWZOKAqPEjwSg87G4Dw\"),t=g.bv.f,C=d(\"1\");l=d(l);var c=Math.round(1/c),T=d(\"1493000931.0\"),n=n?\"&oggv=\"+d(n):\"\",G=d(\"com\"),U=d(\"en\"),\\nV=d(\"USA\"),w;w=0;h.a(\"\")&&(w|=1);h.a(\"\")&&(w|=2);h.a(\"\")&&(w|=4);a=[\"//www.google.com/gen_204?atyp=i&zx=\",f,\"&oge=\",a,\"&ogex=\",k,\"&ogev=\",m,\"&ogf=\",t,\"&ogp=\",C,\"&ogrp=\",l,\"&ogsr=\",c,\"&ogv=\",T,n,\"&ogd=\",G,\"&ogl=\",U,\"&ogc=\",V,\"&ogus=\",w];if(b){\"ogw\"in b&&(a.push(\"&ogw=\"+b.ogw),delete b.ogw);var x;f=[];for(x in b)0!=f.length&&f.push(\",\"),f.push(Nb(x)),f.push(\".\"),f.push(Nb(b[x]));x=f.join(\"\");\"\"!=x&&(a.push(\"&ogad=\"),a.push(d(x)))}ia(a.join(\"\"))}}\\nfunction Nb(a){\"number\"==typeof a&&(a+=\"\");return\"string\"==typeof a?a.replace(\".\",\"%2E\").replace(\",\",\"%2C\"):a}u=Mb;p(\"il\",u,v);var Ob={};y.il=Ob;var Pb=function(a,b,c,d,f,k,m,n,l,t){D(function(){g.paa(a,b,c,d,f,k,m,n,l,t)})},Qb=function(){D(function(){g.prm()})},Rb=function(a){D(function(){g.spn(a)})},Sb=function(a){D(function(){g.sps(a)})},Tb=functio", 1024) = 1024
27308 write(1, "n(a){D(function(){g.spp(a)})},Ub={\"27\":\"https://ssl.gstatic.com/gb/images/silhouette_24.png\",\"27\":\"https://ssl.gstatic.com/gb/images/silhouette_24.png\",\"27\":\"https://ssl.gstatic.com/gb/images/silhouette_24.png\"},Vb=function(a){return(a=Ub[a])||\"https://ssl.gstatic.com/gb/images/silhouette_24.png\"},\\nWb=function(){D(function(){g.spd()})};p(\"spn\",Rb);p(\"spp\",Tb);p(\"sps\",Sb);p(\"spd\",Wb);p(\"paa\",Pb);p(\"prm\",Qb);ib(\"gbd4\",Qb);\\nif(h.a(\"\")){var Xb={d:h.a(\"\"),e:\"\",sanw:h.a(\"\"),p:\"https://ssl.gstatic.com/gb/images/silhouette_96.png\",cp:\"1\",xp:h.a(\"1\"),mg:\"%1$s (delegated)\",md:\"%1$s (default)\",mh:\"220\",s:\"1\",pp:Vb,ppl:h.a(\"\"),ppa:h.a(\"\"),\\nppm:\"Google+ page\"};y.prf=Xb};var S,Yb,W,Zb,X=0,$b=function(a,b,c){if(a.indexOf)return a.indexOf(b,c);if(Array.indexOf)return Array.indexOf(a,b,c);for(c=null==c?0:0>c?Math.max(0,a.length+c):c;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},Y=function(a,b){return-1==$b(a,X)?(q(Error(X+\"_\"+b),\"up\",\"caa\"),!1):!0},bc=function(a,b){Y([1,2],\"r\")&&(S[a]=S[a]||[],S[a].push(b),2==X&&wi", 1024) = 1024
27308 write(1, "ndow.setTimeout(function(){b(ac(a))},0))},cc=function(a,b,c){if(Y([1],\"nap\")&&c){for(var d=0;d<c.length;d++)Yb[c[d]]=!0;g.up.spl(a,b,\"nap\",c)}},dc=\\nfunction(a,b,c){if(Y([1],\"aop\")&&c){if(W)for(var d in W)W[d]=W[d]&&-1!=$b(c,d);else for(W={},d=0;d<c.length;d++)W[c[d]]=!0;g.up.spl(a,b,\"aop\",c)}},ec=function(){try{if(X=2,!Zb){Zb=!0;for(var a in S)for(var b=S[a],c=0;c<b.length;c++)try{b[c](ac(a))}catch(d){q(d,\"up\",\"tp\")}}}catch(d){q(d,\"up\",\"mtp\")}},ac=function(a){if(Y([2],\"ssp\")){var b=!Yb[a];W&&(b=b&&!!W[a]);return b}};Zb=!1;S={};Yb={};W=null;\\nvar X=1,fc=function(a){var b=!1;try{b=a.cookie&&a.cookie.match(\"PREF\")}catch(c){}return!b},gc=function(){try{return!!e.localStorage&&\"object\"==typeof e.localStorage}catch(a){return!1}},hc=function(a){return a&&a.style&&a.style.behavior&&\"undefined\"!=typeof a.load},ic=function(a,b,c,d){try{fc(document)||(d||(b=\"og-up-\"+b),gc()?e.localStorage.setItem(b,c):hc(a)&&(a.setAttribute(b,c),a.save(a.id)))}catch(f){f.code!=DOMException.QUOTA_EXCEEDED_ERR&&q(f,\"up\",\"spd\")}},jc=funct", 1024) = 1024
27308 write(1, "ion(a,b,c){try{if(fc(document))return\"\";\\nc||(b=\"og-up-\"+b);if(gc())return e.localStorage.getItem(b);if(hc(a))return a.load(a.id),a.getAttribute(b)}catch(d){d.code!=DOMException.QUOTA_EXCEEDED_ERR&&q(d,\"up\",\"gpd\")}return\"\"},kc=function(a,b,c){a.addEventListener?a.addEventListener(b,c,!1):a.attachEvent&&a.attachEvent(\"on\"+b,c)},lc=function(a){for(var b=0,c;c=a[b];b++){var d=g.up;c=c in d&&d[c];if(!c)return!1}return!0},mc=function(a,b){try{if(fc(a))return-1;var c=a.cookie.match(/OGPC=([^;]*)/);if(c&&c[1]){var d=c[1].match(new RegExp(\"\\\\\\\\b\"+\\nb+\"-([0-9]+):\"));if(d&&d[1])return parseInt(d[1],10)}}catch(f){f.code!=DOMException.QUOTA_EXCEEDED_ERR&&q(f,\"up\",\"gcc\")}return-1};p(\"up\",{r:bc,nap:cc,aop:dc,tp:ec,ssp:ac,spd:ic,gpd:jc,aeh:kc,aal:lc,gcc:mc});var Z=function(a,b){a[b]=function(c){var d=arguments;g.qm(function(){a[b].apply(this,d)})}};Z(g.up,\"sl\");Z(g.up,\"si\");Z(g.up,\"spl\");Z(g.up,\"dpc\");Z(g.up,\"iic\");g.mcf(\"up\",{sp:h.b(\"0.01\",1),tld:\"com\",prid:\"1\"});function nc(){function a(){for(var b;(b=k[m++])&&\"m\"!=b[0]&&", 1024) = 1024
27308 write(1, "!b[1].auto;);b&&(qa(2,b[0]),b[1].url&&pa(b[1].url,b[0]),b[1].libs&&E&&E(b[1].libs));m<k.length&&setTimeout(a,0)}function b(){0<f--?setTimeout(b,0):a()}var c=h.a(\"1\"),d=h.a(\"\"),f=3,k=z,m=0,n=window.gbarOnReady;if(n)try{n()}catch(l){q(l,\"ml\",\"or\")}d?p(\"ldb\",a):c?ca(window,\"load\",b):b()}p(\"rdl\",nc);}catch(e){window.gbar&&gbar.logger&&gbar.logger.ml(e,{\"_sn\":\"cfg.init\"});}})();\\n(function(){try{var a=window.gbar;a.mcf(\"pm\",{p:\"\"});}catch(e){window.gbar&&gbar.logger&&gbar.logger.ml(e,{\"_sn\":\"cfg.init\"});}})();\\n(function(){try{var a=window.gbar;a.mcf(\"mm\",{s:\"1\"});}catch(e){window.gbar&&gbar.logger&&gbar.logger.ml(e,{\"_sn\":\"cfg.init\"});}})();\\n(function(){try{var d=window.gbar.i.i;var e=window.gbar;var f=e.i;var g=f.c(\"1\",0),h=/\\\\bgbmt\\\\b/,k=function(a){try{var b=document.getElementById(\"gb_\"+g),c=document.getElementById(\"gb_\"+a);b&&f.l(b,h.test(b.className)?\"gbm0l\":\"gbz0l\");c&&f.k(c,h.test(c.className)?\"gbm0l\":\"gbz0l\")}catch(l){d(l,\"sj\",\"ssp\")}g=a},m=e.qs,n=function(a){var b;b=a.href;var c=window.location.href.ma", 1024) = 1024
27308 write(1, "tch(/.*?:\\\\/\\\\/[^\\\\/]*/)[0],c=new RegExp(\"^\"+c+\"/search\\\\\\\\?\");(b=c.test(b))&&!/(^|\\\\\\\\?|&)ei=/.test(a.href)&&(b=window.google)&&b.kEXPI&&(a.href+=\"&ei=\"+b.kEI)},p=function(a){m(a);\\nn(a)},q=function(){if(window.google&&window.google.sn){var a=/.*hp$/;return a.test(window.google.sn)?\"\":\"1\"}return\"-1\"};e.rp=q;e.slp=k;e.qs=p;e.qsi=n;}catch(e){window.gbar&&gbar.logger&&gbar.logger.ml(e,{\"_sn\":\"cfg.init\"});}})();\\n(function(){try{var a=this;var b=window.gbar;var c=b.i;var d=c.a,e=c.c,f={cty:\"USA\",cv:\"1493000931\",dbg:d(\"\"),ecv:\"0\",ei:e(\"5xEBWZOKAqPEjwSg87G4Dw\"),ele:d(\"1\"),esr:e(\"0.1\"),evts:[\"mousedown\",\"touchstart\",\"touchmove\",\"wheel\",\"keydown\"],gbl:\"es_plusone_gc_20170309.0_p0\",hd:\"com\",hl:\"en\",irp:d(\"\"),pid:e(\"1\"),\\nsnid:e(\"28834\"),to:e(\"300000\"),u:e(\"\"),vf:\".66.41.\"},g=f,h=[\"bndcfg\"],k=a;h[0]in k||!k.execScript||k.execScript(\"var \"+h[0]);for(var l;h.length&&(l=h.shift());)h.length||void 0===g?k=k[l]&&k[l]!==Object.prototype[l]?k[l]:k[l]={}:k[l]=g;}catch(e){window.gbar&&gbar.logger&&gbar.logger.ml(e,{\"_sn\":\"cfg.", 1024) = 1024
27308 write(1, "init\"});}})();\\n(function(){try{window.gbar.rdl();}catch(e){window.gbar&&gbar.logger&&gbar.logger.ml(e,{\"_sn\":\"cfg.init\"});}})();\\n</script><link href=\"/images/branding/product/ico/googleg_lodp.ico\" rel=\"shortcut icon\"></head><body bgcolor=\"#fff\"><script>(function(){var src=\\'/images/nav_logo229.png\\';var iesg=false;document.body.onload = function(){window.n && window.n();if (document.images){new Image().src=src;}\\nif (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.focus();}\\n}\\n})();</script><div id=\"mngb\"> <div id=gb><script>window.gbar&&gbar.eli&&gbar.eli()</script><div id=gbw><div id=gbz><span class=gbtcb></span><ol id=gbzc class=gbtc><li class=gbt><a onclick=gbar.logger.il(1,{t:1}); class=\"gbzt gbz0l gbp1\" id=gb_1 href=\"https://www.google.com/webhp?tab=ww\"><span class=gbtb2></span><span class=gbts>Search</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:2}); class=gbzt id=gb_2 href=\"http://www.google.com/imghp?hl=en&tab=wi\"><span class=gbtb2></span><span class=gbts>Image", 1024) = 1024
27308 write(1, "s</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:8}); class=gbzt id=gb_8 href=\"http://maps.google.com/maps?hl=en&tab=wl\"><span class=gbtb2></span><span class=gbts>Maps</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:78}); class=gbzt id=gb_78 href=\"https://play.google.com/?hl=en&tab=w8\"><span class=gbtb2></span><span class=gbts>Play</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:36}); class=gbzt id=gb_36 href=\"http://www.youtube.com/?tab=w1\"><span class=gbtb2></span><span class=gbts>YouTube</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:5}); class=gbzt id=gb_5 href=\"http://news.google.com/nwshp?hl=en&tab=wn\"><span class=gbtb2></span><span class=gbts>News</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:23}); class=gbzt id=gb_23 href=\"https://mail.google.com/mail/?tab=wm\"><span class=gbtb2></span><span class=gbts>Gmail</span></a></li><li class=gbt><a onclick=gbar.logger.il(1,{t:49}); class=gbzt id=gb_49 href=\"https://drive.google.com/?tab=wo\"><span c", 1024) = 1024
27308 write(1, "lass=gbtb2></span><span class=gbts>Drive</span></a></li><li class=gbt><a class=gbgt id=gbztm href=\"https://www.google.com/intl/en/options/\" onclick=\"gbar.tg(event,this)\" aria-haspopup=true aria-owns=gbd><span class=gbtb2></span><span id=gbztms class=\"gbts gbtsa\"><span id=gbztms1>More</span><span class=gbma></span></span></a><div class=gbm id=gbd aria-owner=gbztm><div id=gbmmb class=\"gbmc gbsb gbsbis\"><ol id=gbmm class=\"gbmcc gbsbic\"><li class=gbmtc><a onclick=gbar.logger.il(1,{t:24}); class=gbmt id=gb_24 href=\"https://www.google.com/calendar?tab=wc\">Calendar</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:51}); class=gbmt id=gb_51 href=\"http://translate.google.com/?hl=en&tab=wT\">Translate</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:17}); class=gbmt id=gb_17 href=\"http://www.google.com/mobile/?hl=en&tab=wD\">Mobile</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:10}); class=gbmt id=gb_10 href=\"https://books.google.com/bkshp?hl=en&tab=wp\">Books</a></li><li class=gbmtc><a onclick=gbar.log", 1024) = 1024
27308 write(1, "ger.il(1,{t:212}); class=gbmt id=gb_212 href=\"https://wallet.google.com/?tab=wa\">Wallet</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:6}); class=gbmt id=gb_6 href=\"http://www.google.com/shopping?hl=en&tab=wf\">Shopping</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:30}); class=gbmt id=gb_30 href=\"http://www.blogger.com/?tab=wj\">Blogger</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:27}); class=gbmt id=gb_27 href=\"http://www.google.com/finance?tab=we\">Finance</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:31}); class=gbmt id=gb_31 href=\"https://photos.google.com/?tab=wq&pageId=none\">Photos</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:12}); class=gbmt id=gb_12 href=\"http://video.google.com/?hl=en&tab=wv\">Videos</a></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:25}); class=gbmt id=gb_25 href=\"https://docs.google.com/document/?usp=docs_alc\">Docs</a></li><li class=gbmtc><div class=\"gbmt gbmh\"></div></li><li class=gbmtc><a onclick=gbar.logger.il(1,{t:66}); href=\"https:", 1024) = 1024
27308 write(1, "//www.google.com/intl/en/options/\" class=gbmt>Even more &raquo;</a></li></ol><div class=gbsbt></div><div class=gbsbb></div></div></div></li></ol></div><div id=gbg><h2 class=gbxx>Account Options</h2><span class=gbtcb></span><ol class=gbtc><li class=gbt><a target=_top href=\"https://accounts.google.com/ServiceLogin?hl=en&passive=true&continue=http://www.google.com/\" onclick=\"gbar.logger.il(9,{l:\\'i\\'})\" id=gb_70 class=gbgt><span class=gbtb2></span><span id=gbgs4 class=gbts><span id=gbi4s1>Sign in</span></span></a></li><li class=\"gbt gbtb\"><span class=gbts></span></li><li class=gbt><a class=gbgt id=gbg5 href=\"http://www.google.com/preferences?hl=en\" title=\"Options\" onclick=\"gbar.tg(event,this)\" aria-haspopup=true aria-owns=gbd5><span class=gbtb2></span><span id=gbgs5 class=gbts><span id=gbi5></span></span></a><div class=gbm id=gbd5 aria-owner=gbg5><div class=gbmc><ol id=gbom class=gbmcc><li class=\"gbkc gbmtc\"><a  class=gbmt href=\"/preferences?hl=en\">Search settings</a></li><li class=gbmtc><div class=\"gbmt gbmh\"><", 1024) = 1024
27308 write(1, "/div></li><li class=\"gbkp gbmtc\"><a class=gbmt href=\"http://www.google.com/history/optout?hl=en\">Web History</a></li></ol></div></div></li></ol></div></div><div id=gbx3></div><div id=gbx4></div><script>window.gbar&&gbar.elp&&gbar.elp()</script></div> </div><center><br clear=\"all\" id=\"lgpd\"><div id=\"lga\"><a href=\"/search?site=&amp;ie=UTF-8&amp;q=Cassini+Spacecraft&amp;oi=ddle&amp;ct=cassini-spacecraft-dives-between-saturn-and-its-rings-5717425520640000-law&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwjByqybicPTAhVB7IMKHaChCdkQPQgD\"><img alt=\"Cassini Spacecraft Dives Between Saturn and its Rings!\" border=\"0\" height=\"230\" src=\"/logos/doodles/2017/cassini-spacecraft-dives-between-saturn-and-its-rings-5717425520640000-law.gif\" title=\"Cassini Spacecraft Dives Between Saturn and its Rings!\" width=\"474\" id=\"hplogo\" onload=\"window.lol&&lol()\"><br></a><br></div><form action=\"/search\" name=\"f\"><table cellpadding=\"0\" cellspacing=\"0\"><tr valign=\"top\"><td width=\"25%\">&nbsp;</td><td align=\"center\" nowrap=\"\"><input name=\"ie\" value=\"ISO", 1024) = 1024
27308 write(1, "-8859-1\" type=\"hidden\"><input value=\"en\" name=\"hl\" type=\"hidden\"><input name=\"source\" type=\"hidden\" value=\"hp\"><input name=\"biw\" type=\"hidden\"><input name=\"bih\" type=\"hidden\"><div class=\"ds\" style=\"height:32px;margin:4px 0\"><input style=\"color:#000;margin:0;padding:5px 8px 0 6px;vertical-align:top\" autocomplete=\"off\" class=\"lst\" value=\"\" title=\"Google Search\" maxlength=\"2048\" name=\"q\" size=\"57\"></div><br style=\"line-height:0\"><span class=\"ds\"><span class=\"lsbb\"><input class=\"lsb\" value=\"Google Search\" name=\"btnG\" type=\"submit\"></span></span><span class=\"ds\"><span class=\"lsbb\"><input class=\"lsb\" value=\"I\\'m Feeling Lucky\" name=\"btnI\" onclick=\"if(this.form.q.value)this.checked=1; else top.location=\\'/doodles/\\'\" type=\"submit\"></span></span></td><td class=\"fl sblc\" align=\"left\" nowrap=\"\" width=\"25%\"><a href=\"/advanced_search?hl=en&amp;authuser=0\">Advanced search</a><a href=\"/language_tools?hl=en&amp;authuser=0\">Language tools</a></td></tr></table><input id=\"gbv\" name=\"gbv\" type=\"hidden\" value=\"1\"><script>(functi", 1024) = 1024
27308 write(1, "on(){var a,b=\"1\";if(document&&document.getElementById)if(\"undefined\"!=typeof XMLHttpRequest)b=\"2\";else if(\"undefined\"!=typeof ActiveXObject){var c,d,e=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"];for(c=0;d=e[c++];)try{new ActiveXObject(d),b=\"2\"}catch(h){}}a=b;if(\"2\"==a&&-1==location.search.indexOf(\"&gbv=2\")){var f=google.gbvu,g=document.getElementById(\"gbv\");g&&(g.value=a);f&&window.setTimeout(function(){location.href=f},0)};}).call(this);</script></form><div id=\"gac_scont\"></div><div style=\"font-size:83%;min-height:3.5em\"><br></div><span id=\"footer\"><div style=\"font-size:10pt\"><div style=\"margin:19px auto;text-align:center\" id=\"fll\"><a href=\"/intl/en/ads/\">Advertising\\xa0Programs</a><a href=\"/services/\">Business Solutions</a><a href=\"https://plus.google.com/116899029375914044550\" rel=\"publisher\">+Google</a><a href=\"/intl/en/about.html\">About Google</a></div></div><p style=\"color:#767676;font-size:8pt\">&copy; 2017 - <a href=\"/intl/en/policies/privacy/\">Privacy</a> - <a href", 1024) = 1024
27308 write(1, "=\"/intl/en/policies/terms/\">Terms</a></p></span></center><script>(function(){window.google.cdo={height:0,width:0};(function(){var a=window.innerWidth,b=window.innerHeight;if(!a||!b)var c=window.document,d=\"CSS1Compat\"==c.compatMode?c.documentElement:c.body,a=d.clientWidth,b=d.clientHeight;a&&b&&(a!=google.cdo.width||b!=google.cdo.height)&&google.log(\"\",\"\",\"/client_204?&atyp=i&biw=\"+a+\"&bih=\"+b+\"&ei=\"+google.kEI);}).call(this);})();</script><div id=\"xjsd\"></div><div id=\"xjsi\"><script>(function(){function c(b){window.setTimeout(function(){var a=document.createElement(\"script\");a.src=b;document.getElementById(\"xjsd\").appendChild(a)},0)}google.dljp=function(b,a){google.xjsu=b;c(a)};google.dlj=c;}).call(this);(function(){window.google.xjsrm=[];})();if(google.y)google.y.first=[];if(!google.xjs){window._=window._||{};window._DumpException=window._._DumpException=function(e){throw e};if(google.timers&&google.timers.load.t){google.timers.load.t.xjsls=new Date().getTime();}google.dljp(\\'/xjs/_/js/k\\\\x3dxjs.hp.en_US.S3U", 1024) = 1024
27308 write(1, "7BKK2JkE.O/m\\\\x3dsb_he,d/am\\\\x3dABA/rt\\\\x3dj/d\\\\x3d1/t\\\\x3dzcms/rs\\\\x3dACT90oEKYclngN1R3USONGH9t8EcY3XsZw\\',\\'/xjs/_/js/k\\\\x3dxjs.hp.en_US.S3U7BKK2JkE.O/m\\\\x3dsb_he,d/am\\\\x3dABA/rt\\\\x3dj/d\\\\x3d1/t\\\\x3dzcms/rs\\\\x3dACT90oEKYclngN1R3USONGH9t8EcY3XsZw\\');google.xjs=1;}google.pmc={\"sb_he\":{\"agen\":true,\"cgen\":true,\"client\":\"heirloom-hp\",\"dh\":true,\"dhqt\":true,\"ds\":\"\",\"fl\":true,\"host\":\"google.com\",\"isbh\":28,\"jam\":0,\"jsonp\":true,\"msgs\":{\"cibl\":\"Clear Search\",\"dym\":\"Did you mean:\",\"lcky\":\"I\\\\u0026#39;m Feeling Lucky\",\"lml\":\"Learn more\",\"oskt\":\"Input tools\",\"psrc\":\"This search was removed from your \\\\u003Ca href=\\\\\"/history\\\\\"\\\\u003EWeb History\\\\u003C/a\\\\u003E\",\"psrl\":\"Remove\",\"sbit\":\"Search by image\",\"srch\":\"Google Search\"},\"nds\":true,\"ovr\":{},\"pq\":\"\",\"refpd\":true,\"rfs\":[],\"sbpl\":24,\"sbpr\":24,\"scd\":10,\"sce\":5,\"stok\":\"8TB49QKsjcjxA-ew3vPtQ0u4tVc\"},\"d\":{},\"YFCs/g\":{}};google.y.first.push(function(){if(google.med){google.med(\\'init\\');google.initHistory();google.med(\\'history\\');}});if(google.j&&google.j.en&&google.j.xi){", 1024) = 1024
27308 write(1, "window.setTimeout(google.j.xi,0);}\\n</script></div></body></html>'\n", 67) = 67
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, TIOCGWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDRV_TIMER_IOCTL_STATUS or TIOCSWINSZ, {ws_row=84, ws_col=190, ws_xpixel=0, ws_ypixel=0}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 write(1, ">>> ", 4)               = 4
27308 select(1, [0], NULL, NULL, NULL)  = 1 (in [0])
27308 rt_sigaction(SIGWINCH, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 read(0, "\4", 1)                  = 1
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x00\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0x8a3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
27308 rt_sigaction(SIGWINCH, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0xb7a37770, [], SA_RESTORER|SA_RESTART, 0xb7fb3b98}, 8) = 0
27308 write(2, "\n", 1)                 = 1
27308 rt_sigaction(SIGINT, {SIG_DFL, [], SA_RESTORER, 0xb7fb3b98}, {0x818da90, [], SA_RESTORER, 0xb7fb3b98}, 8) = 0
27308 brk(0x8522000)                    = 0x8522000
27308 close(4)                          = 0
27308 close(7)                          = 0
27308 exit_group(0)                     = ?
27308 +++ exited with 0 +++
