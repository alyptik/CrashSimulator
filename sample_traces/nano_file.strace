10833 execve("/usr/bin/nano", ["nano", "test.txt"], ["LANG=en_US.UTF-8", "LC_CTYPE=en_US.UTF-8", "USER=preston", "LOGNAME=preston", "HOME=/home/preston", "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games", "MAIL=/var/mail/preston", "SHELL=/usr/bin/zsh", "SSH_CLIENT=172.16.48.1 61357 22", "SSH_CONNECTION=172.16.48.1 61357 172.16.48.140 22", "SSH_TTY=/dev/pts/1", "TERM=xterm-256color", "XDG_SESSION_COOKIE=497f848f94f4485badd97209c59c1e68-1490673204.918172-122270418", "XDG_SESSION_ID=30", "XDG_RUNTIME_DIR=/run/user/1000", "SHLVL=1", "PWD=/home/preston/NYU/CrashSimulator", "OLDPWD=/home/preston/NYU/CrashSimulator/sample_traces", "ZSH=/home/preston/.oh-my-zsh", "PAGER=less", "LESS=-R", "LSCOLORS=Gxfxcxdxbxegedabagacad", "LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:", "_=/usr/bin/strace"]) = 0
10833 brk(0)                            = 0x8078000
10833 uname({sysname="Linux", nodename="dev.local", release="3.19.0-49-generic", version="#55-Ubuntu SMP Fri Jan 22 02:09:44 UTC 2016", machine="i686", domainname="(none)"}) = 0
10833 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10833 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fda000
10833 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
10833 open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
10833 fstat64(3, {st_dev=makedev(8, 1), st_ino=1053019, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=200, st_size=100607, st_atime=2017/03/28-01:46:29, st_mtime=2017/03/13-22:17:12, st_ctime=2017/03/13-22:17:12}) = 0
10833 mmap2(NULL, 100607, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7fc1000
10833 close(3)                          = 0
10833 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10833 open("/lib/i386-linux-gnu/libncursesw.so.5", O_RDONLY|O_CLOEXEC) = 3
10833 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000T\0\0004\0\0\0\344\222\3\0\0\0\0\0004\0 \0\7\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0l\211\3\0l\211\3\0\5\0\0\0\0\20\0\0\1\0\0\0\220\216\3\0\220\236\3\0\220\236\3\0T\3\0\0008\5\0\0\6\0\0\0\0\20\0\0\2\0\0\0\234\216\3\0\234\236\3\0\234\236\3\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345tdL\326\2\0L\326\2\0L\326\2\0\354\16\0\0\354\16\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\220\216\3\0\220\236\3\0\220\236\3\0p\1\0\0p\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\342U\202\357c=J\355\31\273\357\21G&\212\311;\337r;\7\1\0\0\210\0\0\0\200\0\0\0\f\0\0\0J$F\0\10\0\"\10\201\20\10!\364\0\1\0h\240\0\1\300@\20\0\4\2\304\2\1D\6@\34\201@\0\6\10\10!\0\4\0 \0\5\0020\0\20\0\240\2%\1@\212\4\250qA\250C\0l\1\241\f\1\20\0@\344\20\0\6\0\0\0\0@D\0\0\30\0\\\204\0\0!\0\30\220\0026\0\3\t\1\t\204T \300\202 \"\10\1\0\0\30\0\225\0\0@\0\10\2\204\0 \4\4\3t\0\304\0@\0\22\2\2\201`\f\2\300C\10%\10\320\20\24\0D\2\210\24\4\20\0300I \0\10\0p\4\2\0\20\0\10\0\20\0V\261P\v\0\0  \220\210\10\f", 512) = 512
10833 fstat64(3, {st_dev=makedev(8, 1), st_ino=1051949, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=464, st_size=235252, st_atime=2017/03/28-04:23:27, st_mtime=2015/03/06-14:02:36, st_ctime=2015/09/26-01:26:32}) = 0
10833 mmap2(NULL, 238536, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f86000
10833 mmap2(0xb7fbf000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x38000) = 0xb7fbf000
10833 close(3)                          = 0
10833 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10833 open("/lib/i386-linux-gnu/libtinfo.so.5", O_RDONLY|O_CLOEXEC) = 3
10833 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\220X\0\0004\0\0\0004\24\2\0\0\0\0\0004\0 \0\7\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\210\361\1\0\210\361\1\0\5\0\0\0\0\20\0\0\1\0\0\0(\366\1\0(\6\2\0(\6\2\0\4\35\0\0\4\"\0\0\6\0\0\0\0\20\0\0\2\0\0\0t\16\2\0t\36\2\0t\36\2\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0$\0\0\0$\0\0\0\4\0\0\0\4\0\0\0P\345td\10\263\1\0\10\263\1\0\10\263\1\0\254\5\0\0\254\5\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td(\366\1\0(\6\2\0(\6\2\0\330\31\0\0\330\31\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\334\313\346^\251B\277\344\376\24\272\220\206\200ZR\36\n`\324\203\0\0\0:\0\0\0 \0\0\0\n\0\0\0@\20\0\4\2\213\0\224\200\1\220\10\0021\26\270@\0\0 9\20\2448q\262\25}\\\26\244\202\350\3277e:F&\300\212C\6j\0\260H*V$ ,\10\203\1A\20\31\0\21*\200 \24\241\0\fa*(D\10\35\1b!\203\305@\20Y\2\212\20\213\31b@ \200\0\0\206\324\1\25PF\310YI\201. P\201\33\n\241J\2E\272\234\246\n\v \260\351\24$\217)0N\366@:\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0=\0\0\0>\0\0\0@\0\0\0A\0\0\0\0\0\0\0C\0\0\0F\0\0\0H\0\0\0", 512) = 512
10833 fstat64(3, {st_dev=makedev(8, 1), st_ino=1052031, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=272, st_size=137324, st_atime=2017/03/28-03:53:24, st_mtime=2015/03/06-14:02:37, st_ctime=2015/09/26-01:26:32}) = 0
10833 mmap2(NULL, 141356, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f63000
10833 mmap2(0xb7f83000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1f000) = 0xb7f83000
10833 close(3)                          = 0
10833 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10833 open("/lib/i386-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
10833 read(3, "\177ELF\1\1\1\3\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\220\210\1\0004\0\0\0\300\211\33\0\0\0\0\0004\0 \0\n\0(\0E\0D\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\245\241\26\0\245\241\26\0\245\241\26\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2303\33\0\2303\33\0\5\0\0\0\0\20\0\0\1\0\0\0\\?\33\0\\O\33\0\\O\33\0\2700\0\0\200_\0\0\6\0\0\0\0\20\0\0\2\0\0\0\244]\33\0\244m\33\0\244m\33\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0\7\0\0\0\\?\33\0\\O\33\0\\O\33\0\10\0\0\0L\0\0\0\4\0\0\0\4\0\0\0P\345td\270\241\26\0\270\241\26\0\270\241\26\0\244`\0\0\244`\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\\?\33\0\\O\33\0\\O\33\0\244 \0\0\244 \0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0%\335B\217\264\303P\301m\376\342\4\221\361\240d\204\242\277\243\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0E\200\0`\300\200\0\f\212\f\0\0010\0\10@2\10\256\4\210H6l\240\0268\0&\204\200\216\4\10B$", 512) = 512
10833 fstat64(3, {st_dev=makedev(8, 1), st_ino=1051883, st_mode=S_IFREG|0755, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=3536, st_size=1807496, st_atime=2017/03/28-01:46:29, st_mtime=2015/03/26-07:01:21, st_ctime=2015/09/26-01:26:32}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f62000
10833 mmap2(NULL, 1814236, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7da7000
10833 mmap2(0xb7f5b000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1b3000) = 0xb7f5b000
10833 mmap2(0xb7f60000, 7900, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f60000
10833 close(3)                          = 0
10833 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10833 open("/lib/i386-linux-gnu/libdl.so.2", O_RDONLY|O_CLOEXEC) = 3
10833 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\220\n\0\0004\0\0\0h1\0\0\0\0\0\0004\0 \0\7\0(\0\35\0\34\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0@$\0\0@$\0\0\5\0\0\0\0\20\0\0\1\0\0\0\260.\0\0\260>\0\0\260>\0\0\240\1\0\0\320\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\304.\0\0\304>\0\0\304>\0\0\10\1\0\0\10\1\0\0\6\0\0\0\4\0\0\0\4\0\0\0\24\1\0\0\24\1\0\0\24\1\0\0D\0\0\0D\0\0\0\4\0\0\0\4\0\0\0P\345td\254\31\0\0\254\31\0\0\254\31\0\0\324\0\0\0\324\0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0R\345td\260.\0\0\260>\0\0\260>\0\0P\1\0\0P\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\24\0\0\0\3\0\0\0GNU\0?\357\26lo\307y\212\\u\270\302\33\326\361{\345\251S\254\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0 \0\0\0\26\0\0\0\32\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\32\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\33\0\0\0\0\0\0\0\34\0\0\0\35\0\0\0\0\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\"\0\0\0#\0\0\0\0\0\0\0\0\0\0\0$\0\0\0&\0\0\0'\0\0\0\0\0\0\0)\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30`\242\222\6\257\304M\17\325=l\366\327=l\366\352\26\251\30\371\31sB", 512) = 512
10833 fstat64(3, {st_dev=makedev(8, 1), st_ino=1051898, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=32, st_size=13808, st_atime=2017/03/28-01:46:29, st_mtime=2015/03/26-07:01:21, st_ctime=2015/09/26-01:26:32}) = 0
10833 mmap2(NULL, 16512, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7da2000
10833 mmap2(0xb7da5000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2000) = 0xb7da5000
10833 close(3)                          = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7da1000
10833 set_thread_area({entry_number:-1 -> 6, base_addr:0xb7da1700, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
10833 mprotect(0xb7f5b000, 12288, PROT_READ) = 0
10833 mprotect(0xb7da5000, 4096, PROT_READ) = 0
10833 mprotect(0xb7f83000, 8192, PROT_READ) = 0
10833 mprotect(0xb7fbf000, 4096, PROT_READ) = 0
10833 mprotect(0x8076000, 4096, PROT_READ) = 0
10833 mprotect(0xb7ffe000, 4096, PROT_READ) = 0
10833 munmap(0xb7fc1000, 100607)        = 0
10833 brk(0)                            = 0x8078000
10833 brk(0x8099000)                    = 0x8099000
10833 open("/usr/lib/locale/locale-archive", O_RDONLY|O_LARGEFILE|O_CLOEXEC) = 3
10833 fstat64(3, {st_dev=makedev(8, 1), st_ino=661168, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=5704, st_size=2919792, st_atime=2017/03/28-01:46:29, st_mtime=2015/09/26-01:34:29, st_ctime=2015/09/26-01:34:29}) = 0
10833 mmap2(NULL, 2097152, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7ba1000
10833 mmap2(NULL, 4096, PROT_READ, MAP_PRIVATE, 3, 0x2c5000) = 0xb7fd9000
10833 close(3)                          = 0
10833 open("/usr/share/locale/locale.alias", O_RDONLY|O_CLOEXEC) = 3
10833 fstat64(3, {st_dev=makedev(8, 1), st_ino=1048736, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2570, st_atime=2017/03/28-01:46:29, st_mtime=2010/08/05-15:57:14, st_ctime=2015/09/26-01:26:30}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd8000
10833 read(3, "# Locale name alias data base.\n# Copyright (C) 1996-2001,2003,2007 Free Software Foundation, Inc.\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2, or (at your option)\n# any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n\n# The format of this file is the same as for the corresponding file of\n# the X Window System, which normally can be found in\n#\t/usr/lib/X11/locale/locale.alias\n# A single line contains two fields: an alias and a substitution value.\n# All entries are case independent.\n\n# Note: This file is obsolete and is kept around for the time being for\n# backward compatibility.  Nobody should rely on the names defined here.\n# Locales should always be specified by their full name.\n\nbokmal\t\tnb_NO.ISO-8859-1\nbokm\345l\t\tnb_NO.ISO-8859-1\ncatalan\t\tca_ES.ISO-8859-1\ncroatian\thr_HR.ISO-8859-2\nczech\t\tcs_CZ.ISO-8859-2\ndanish          da_DK.ISO-8859-1\ndansk\t\tda_DK.ISO-8859-1\ndeutsch\t\tde_DE.ISO-8859-1\ndutch\t\tnl_NL.ISO-8859-1\neesti\t\tet_EE.ISO-8859-1\nestonian\tet_EE.ISO-8859-1\nfinnish         fi_FI.ISO-8859-1\nfran\347ais\tfr_FR.ISO-8859-1\nfrench\t\tfr_FR.ISO-8859-1\ngalego\t\tgl_ES.ISO-8859-1\ngalician\tgl_ES.ISO-8859-1\ngerman\t\tde_DE.ISO-8859-1\ngreek           el_GR.ISO-8859-7\nhebrew          he_IL.ISO-8859-8\nhrvatski\thr_HR.ISO-8859-2\nhungarian       hu_HU.ISO-8859-2\nicelandic       is_IS.ISO-8859-1\nitalian         it_IT.ISO-8859-1\njapanese\tja_JP.eucJP\njapanese.euc\tja_JP.eucJP\nja_JP\t\tja_JP.eucJP\nja_JP.ujis\tja_JP.eucJP\njapanese.sjis\tja_JP.SJIS\nkorean\t\tko_KR.eucKR\nkorean.euc \tko_KR.eucKR\nko_KR\t\tko_KR.eucKR\nlithuanian      lt_LT.ISO-8859-13\nno_NO\t\tnb_NO.ISO-8859-1\nno_NO.ISO-8859-1 nb_NO.ISO-8859-1\nnorwegian       nb_NO.ISO-8859-1\nnynorsk\t\tnn_NO.ISO-8859-1\npolish          pl_PL.ISO-8859-2\nportuguese      pt_PT.ISO-8859-1\nromanian        ro_RO.ISO-8859-2\nrussian         ru_RU.ISO-8859-5\nslovak          sk_SK.ISO-8859-2\nslovene         sl_SI.ISO-8859-2\nslovenian       sl_SI.ISO-8859-2\nspanish         es_ES.ISO-8859-1\nswedish         sv_SE.ISO-8859-1\nthai\t\tth_TH.TIS-620\nturkish         tr_TR.ISO-8859-9\n", 4096) = 2570
10833 read(3, "", 4096)                 = 0
10833 close(3)                          = 0
10833 munmap(0xb7fd8000, 4096)          = 0
10833 open("/usr/share/locale/en_US.UTF-8/LC_MESSAGES/nano.mo", O_RDONLY) = -1 ENOENT (No such file or directory)
10833 open("/usr/share/locale/en_US.utf8/LC_MESSAGES/nano.mo", O_RDONLY) = -1 ENOENT (No such file or directory)
10833 open("/usr/share/locale/en_US/LC_MESSAGES/nano.mo", O_RDONLY) = -1 ENOENT (No such file or directory)
10833 open("/usr/share/locale/en.UTF-8/LC_MESSAGES/nano.mo", O_RDONLY) = -1 ENOENT (No such file or directory)
10833 open("/usr/share/locale/en.utf8/LC_MESSAGES/nano.mo", O_RDONLY) = -1 ENOENT (No such file or directory)
10833 open("/usr/share/locale/en/LC_MESSAGES/nano.mo", O_RDONLY) = -1 ENOENT (No such file or directory)
10833 open("/usr/share/locale-langpack/en_US.UTF-8/LC_MESSAGES/nano.mo", O_RDONLY) = -1 ENOENT (No such file or directory)
10833 open("/usr/share/locale-langpack/en_US.utf8/LC_MESSAGES/nano.mo", O_RDONLY) = -1 ENOENT (No such file or directory)
10833 open("/usr/share/locale-langpack/en_US/LC_MESSAGES/nano.mo", O_RDONLY) = -1 ENOENT (No such file or directory)
10833 open("/usr/share/locale-langpack/en.UTF-8/LC_MESSAGES/nano.mo", O_RDONLY) = -1 ENOENT (No such file or directory)
10833 open("/usr/share/locale-langpack/en.utf8/LC_MESSAGES/nano.mo", O_RDONLY) = -1 ENOENT (No such file or directory)
10833 open("/usr/share/locale-langpack/en/LC_MESSAGES/nano.mo", O_RDONLY) = -1 ENOENT (No such file or directory)
10833 stat64("/etc/nanorc", {st_dev=makedev(8, 1), st_ino=1048752, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8453, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:26:30}) = 0
10833 open("/etc/nanorc", O_RDONLY|O_LARGEFILE) = 3
10833 fstat64(3, {st_dev=makedev(8, 1), st_ino=1048752, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=24, st_size=8453, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:26:30}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd8000
10833 read(3, "## Sample initialization file for GNU nano.\n##\n## Please note that you must have configured nano with --enable-nanorc\n## for this file to be read!  Also note that this file should not be in\n## DOS or Mac format, and that characters specially interpreted by the\n## shell should not be escaped here.\n##\n## To make sure a value is disabled, use \"unset <option>\".\n##\n## For the options that take parameters, the default value is given.\n## Other options are unset by default.\n##\n## Quotes inside string parameters don't have to be escaped with\n## backslashes.  The last double quote in the string will be treated as\n## its end.  For example, for the \"brackets\" option, \"\"')>]}\" will match\n## \", ', ), >, ], and }.\n\n## Use auto-indentation.\n# set autoindent\n\n## Backup files to filename~.\n# set backup\n\n## The directory to put unique backup files in.\n# set backupdir \"\"\n\n## Do backwards searches by default.\n# set backwards\n\n## Use bold text instead of reverse video text.\n# set boldtext\n\n## The characters treated as closing brackets when justifying\n## paragraphs.  They cannot contain blank characters.  Only closing\n## punctuation, optionally followed by closing brackets, can end\n## sentences.\n##\n# set brackets \"\"')>]}\"\n\n## Do case sensitive searches by default.\n# set casesensitive\n\n## Constantly display the cursor position in the statusbar.  Note that\n## this overrides \"quickblank\".\n# set const\n\n## Use cut to end of line by default.\n# set cut\n\n## Set the line length for wrapping text and justifying paragraphs.\n## If fill is 0 or less, the line length will be the screen width less\n## this number.\n##\n# set fill -8\n\n## Enable ~/.nano_history for saving and reading search/replace strings.\nset historylog\n\n## The opening and closing brackets that can be found by bracket\n## searches.  They cannot contain blank characters.  The former set must\n## come before the latter set, and both must be in the same order.\n##\n# set matchbrackets \"(<[{)>]}\"\n\n## Use the blank line below the titlebar as extra editing space.\n# set morespace\n\n## Enable mouse support, if available for your system.  When enabled,\n## mouse clicks can be used to place the cursor, set the mark (with a\n## double click), and execute shortcuts.  The mouse will work in the X\n## Window System, and on the console when gpm is running.\n##\n# set mouse\n\n## Allow multiple file buffers (inserting a file will put it into a\n## separate buffer).  You must have configured with --enable-multibuffer\n## for this to work.\n##\n# set multibuffer\n\n## Don't convert files from DOS/Mac format.\n# set noconvert\n\n## Don't follow symlinks when writing files.\n# set nofollow\n\n## Don't display the helpful shortcut lists at the bottom of the screen.\n# set nohelp\n\n## Don't add newlines to the ends of files.\n# set nonewlines\n\n## Don't wrap text at all.\nset nowrap\n\n## Set operating directory.  nano will not read or write files outside\n## this directory and its subdirectories.  Also, the current directory\n## is changed to here, so any files are inserted from this dir.  A blank\n## string means the operating directory feature is turned off.\n##\n# set operatingdir \"\"\n\n## Preserve the XON and XOFF keys (^Q and ^S).\n# set preserve\n\n## The characters treated as closing punctuation when justifying\n## paragraphs.  They cannot contain blank characters.  Only closing\n## punctuation, optionally followed by closing brackets, can end\n## sentences.\n##\n# set punct \"!.?\"\n\n## Do quick statusbar blanking.  Statusbar messages will disappear after\n## 1 keystroke instead of 26.  Note that \"const\" overrides this.\n##\n# set quickblank\n\n## The email-quote string, used to justify email-quoted paragraphs.\n## This is an extended regular expression if your system supports them,\n## otherwise a literal string.  Default:\n# set quotestr \"^([ \t]*[#:>\\|}])+\"\n## if you have extended regular expression support, otherwise:\n# set quotestr \"> \"\n\n## Fix Backspace/Delete confusion problem.\n# set rebinddelete\n\n## Fix numeric keypad key confusion problem.\n# set rebindkeypad\n\n## Do extended regular expression searches by default.\n# set regexp\n\n## Make the Home key smarter", 4096) = 4096
10833 read(3, ".  When Home is pressed anywhere but at the\n## very beginning of non-whitespace characters on a line, the cursor\n## will jump to that beginning (either forwards or backwards).  If the\n## cursor is already at that position, it will jump to the true\n## beginning of the line.\n# set smarthome\n\n## Use smooth scrolling as the default.\n# set smooth\n\n## Use this spelling checker instead of the internal one.  This option\n## does not properly have a default value.\n##\n# set speller \"aspell -x -c\"\n\n## Allow nano to be suspended.\nset suspend\n\n## Use this tab size instead of the default; it must be greater than 0.\n# set tabsize 8\n\n## Convert typed tabs to spaces.\n# set tabstospaces\n\n## Save automatically on exit, don't prompt.\n# set tempfile\n\n## Disallow file modification.  Why would you want this in an rcfile? ;)\n# set view\n\n## The two single-column characters used to display the first characters\n## of tabs and spaces.  187 in ISO 8859-1 (0000BB in Unicode) and 183 in\n## ISO-8859-1 (0000B7 in Unicode) seem to be good values for these.\n# set whitespace \"  \"\n\n## Detect word boundaries more accurately by treating punctuation\n## characters as parts of words.\n# set wordbounds\n\n## Enable the new (EXPERIMENTAL) generic undo code, not just for line cuts\n# set undo\n\n## Enable soft line wrapping (AKA full line display)\n# set softwrap\n\n\n## Color setup\n##\n## Format:\n##\n## syntax \"short description\" [\"filename regex\" ...]\n##\n## The \"none\" syntax is reserved; specifying it on the command line is\n## the same as not having a syntax at all.  The \"default\" syntax is\n## special: it takes no filename regexes, and applies to files that\n## don't match any other syntax's filename regexes.\n##\n## color foreground,background \"regex\" [\"regex\"...]\n## or\n## icolor foreground,background \"regex\" [\"regex\"...]\n##\n## \"color\" will do case sensitive matches, while \"icolor\" will do case\n## insensitive matches.\n##\n## Valid colors: white, black, red, blue, green, yellow, magenta, cyan.\n## For foreground colors, you may use the prefix \"bright\" to get a\n## stronger highlight.\n##\n## To use multi-line regexes, use the start=\"regex\" end=\"regex\"\n## [start=\"regex\" end=\"regex\"...] format.\n##\n## If your system supports transparency, not specifying a background\n## color will use a transparent color.  If you don't want this, be sure\n## to set the background color to black or white.\n##\n## If you wish, you may put your syntaxes in separate files.  You can\n## make use of such files (which can only include \"syntax\", \"color\", and\n## \"icolor\" commands) as follows:\n##\n## include \"/path/to/syntax_file.nanorc\"\n##\n## Unless otherwise noted, the name of the syntax file (without the\n## \".nanorc\" extension) should be the same as the \"short description\"\n## name inside that file.  These names are kept fairly short to make\n## them easier to remember and faster to type using nano's -Y option.\n##\n## All regexes should be extended regular expressions.\n\n## Key bindings\n## Please see nanorc(5) for more details on this\n##\n## Here are some samples to get you going\n##\n# bind M-W nowrap main\n# bind M-A casesens search\n# bind ^S research main\n\n## Set this if your backspace key sends delete most of the time (2.1.3+)\n# bind kdel backspace all\n\n\n## Nanorc files\ninclude \"/usr/share/nano/nanorc.nanorc\"\n\n## C/C++\ninclude \"/usr/share/nano/c.nanorc\"\n\n## Cascading Style Sheets\ninclude \"/usr/share/nano/css.nanorc\"\n\n## Debian files\ninclude \"/usr/share/nano/debian.nanorc\"\n\n## Gentoo files\ninclude \"/usr/share/nano/gentoo.nanorc\"\n\n## HTML\ninclude \"/usr/share/nano/html.nanorc\"\n\n## PHP\ninclude \"/usr/share/nano/php.nanorc\"\n\n## TCL\ninclude \"/usr/share/nano/tcl.nanorc\"\n\n## TeX\ninclude \"/usr/share/nano/tex.nanorc\"\n\n## Quoted emails (under e.g. mutt)\ninclude \"/usr/share/nano/mutt.nanorc\"\n\n## Patch files\ninclude \"/usr/share/nano/patch.nanorc\"\n\n## Manpages\ninclude \"/usr/share/nano/man.nanorc\"\n\n## Groff\ninclude \"/usr/share/nano/groff.nanorc\"\n\n## Perl\ninclude \"/usr/share/nano/perl.nanorc\"\n\n## Python\ninclude \"/usr/share/nano/python.nanorc\"\n\n## Ruby\ninclude \"/usr/share/nano/ruby.nanorc\"\n\n## Java\ninclude \"/usr/share/nano/java.nanorc\"\n\n", 4096) = 4096
10833 stat64("/usr/share/nano/nanorc.nanorc", {st_dev=makedev(8, 1), st_ino=802790, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1110, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/nanorc.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802790, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1110, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for nanorc files.\n##\nsyntax \"nanorc\" \"\\.?nanorc$\"\n## Possible errors and parameters\nicolor brightwhite \"^[[:space:]]*((un)?set|include|syntax|i?color).*$\"\n## Keywords\nicolor brightgreen \"^[[:space:]]*(set|unset)[[:space:]]+(allow_insecure_backup|autoindent|backup|backupdir|backwards|boldtext|brackets|casesensitive|const|cut|fill|historylog|matchbrackets|morespace|mouse|multibuffer|noconvert|nofollow|nohelp|nonewlines|nowrap|operatingdir|preserve|punct)\\>\" \"^[[:space:]]*(set|unset)[[:space:]]+(quickblank|quotestr|rebinddelete|rebindkeypad|regexp|smarthome|smooth|softwrap|speller|suspend|suspendenable|tabsize|tabstospaces|tempfile|undo|view|whitespace|wordbounds)\\>\"\nicolor green \"^[[:space:]]*(set|unset|include|syntax|header)\\>\"\n## Colors\nicolor yellow \"^[[:space:]]*i?color[[:space:]]*(bright)?(white|black|red|blue|green|yellow|magenta|cyan)?(,(white|black|red|blue|green|yellow|magenta|cyan))?\\>\"\nicolor magenta \"^[[:space:]]*i?color\\>\" \"\\<(start|end)=\"\n## Strings\nicolor white \"\"(\\\\.|[^\"])*\"\"\n## Comments\nicolor brightblue \"^[[:space:]]*#.*$\"\nicolor cyan \"^[[:space:]]*##.*$\"\n", 4096) = 1110
10833 open("/usr/lib/i386-linux-gnu/gconv/gconv-modules.cache", O_RDONLY) = 5
10833 fstat64(5, {st_dev=makedev(8, 1), st_ino=659459, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=56, st_size=26256, st_atime=2017/03/28-03:53:24, st_mtime=2015/03/26-06:58:43, st_ctime=2015/09/26-01:26:46}) = 0
10833 mmap2(NULL, 26256, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd0000
10833 close(5)                          = 0
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/c.nanorc", {st_dev=makedev(8, 1), st_ino=802776, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1519, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/c.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802776, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1519, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for C/C++.\n##\nsyntax \"c\" \"\\.(c(c|pp|xx)?|C)$\" \"\\.(h(h|pp|xx)?|H)$\" \"\\.ii?$\"\ncolor brightred \"\\<[A-Z_][0-9A-Z_]+\\>\" \ncolor green \"\\<(float|double|bool|char|int|short|long|sizeof|enum|void|auto|static|const|struct|union|typedef|extern|(un)?signed|inline)\\>\"\ncolor green \"\\<((s?size)|((u_?)?int(8|16|32|64|ptr)))_t\\>\"\ncolor green \"\\<(class|namespace|template|public|protected|private|typename|this|friend|virtual|using|mutable|volatile|register|explicit)\\>\"\ncolor brightyellow \"\\<(for|if|while|do|else|case|default|switch)\\>\"\ncolor brightyellow \"\\<(try|throw|catch|operator|new|delete)\\>\"\ncolor magenta \"\\<(goto|continue|break|return)\\>\"\ncolor brightcyan \"^[[:space:]]*#[[:space:]]*(define|include(_next)?|(un|ifn?)def|endif|el(if|se)|if|warning|error|pragma)\"\ncolor brightmagenta \"'([^'\\]|(\\\\[\"'abfnrtv\\\\]))'\" \"'\\\\(([0-3]?[0-7]{1,2}))'\" \"'\\\\x[0-9A-Fa-f]{1,2}'\"\n##\n## GCC builtins\ncolor cyan \"__attribute__[[:space:]]*\\(\\([^)]*\\)\\)\" \"__(aligned|asm|builtin|hidden|inline|packed|restrict|section|typeof|weak)__\"\n##\n## String highlighting.  You will in general want your comments and\n## strings to come last, because syntax highlighting rules will be\n## applied in the order they are read in.\ncolor brightyellow \"<[^= \t]*>\" \"\"(\\\\.|[^\"])*\"\"\n##\n## This string is VERY resource intensive!\ncolor brightyellow start=\"\"(\\\\.|[^\"])*\\\\[[:space:]]*$\" end=\"^(\\\\.|[^\"])*\"\"\n\n## Comment highlighting\ncolor brightblue \"//.*\"\ncolor brightblue start=\"/\\*\" end=\"\\*/\"\n\n## Trailing whitespace\ncolor ,green \"[[:space:]]+$\"\n", 4096) = 1519
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/css.nanorc", {st_dev=makedev(8, 1), st_ino=802778, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=331, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/css.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802778, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=331, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for css files.\n##\nsyntax \"css\" \"\\.css$\"\ncolor brightred     \".\"\ncolor brightyellow  start=\"\\{\" end=\"\\}\"\ncolor brightwhite   start=\":\" end=\"([;^\\{]|$)\"\ncolor brightblue    \":active|:focus|:hover|:link|:visited|:link|:after|:before|$\"\ncolor brightblue    start=\"\\/\\*\" end=\"\\\\*/\"\ncolor green         \";|:|\\{|\\}\"\n", 4096) = 331
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/debian.nanorc", {st_dev=makedev(8, 1), st_ino=802779, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=802, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/debian.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802779, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=802, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an exmaple for apt's sources.list\n## Adapted from http://milianw.de/blog/Syntax-Highlighting-in-Nano\n## (mail@milianw.de).\n##\nsyntax \"apt/sources.list\" \"sources\\.list(\\.old|~)?$\" \"apt/sources\\.list\\.d/.*\\.list\"\n# component\ncolor brightmagenta \"^deb(-src)?\\s+((http(s)?|file|ftp|tor|spacewalk):/\\S+|cdrom:\\[[^\\]]+\\]/|cdrom:\\[[-a-zA-Z0-9\\._\\(\\) ]+\\]/)\\s+\\S+\\s+.+$\"\n# distribution\ncolor brightred \"^deb(-src)?\\s+((http(s)?|file|ftp|tor|spacewalk):/\\S+|cdrom:\\[[^\\]]+\\]/|cdrom:\\[[-a-zA-Z0-9\\._\\(\\) ]+\\]/)\\s+\\S+\"\n# URI\ncolor brightgreen \"(http(s)?|file|ftp|tor|spacewalk)://\\S+\"\n# cdroms\n# [^\\]] does not work...\ncolor brightgreen \"cdrom:\\[[-a-zA-Z0-9\\._\\(\\) ]+\\]/\"\n# deb / deb-src\ncolor yellow \"^deb(-src)?\"\n# comments\ncolor brightblue \"#.*\"\n\n## Trailing whitespace\ncolor ,green \"[[:space:]]+$\"\n", 4096) = 802
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/gentoo.nanorc", {st_dev=makedev(8, 1), st_ino=802781, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3139, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/gentoo.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802781, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3139, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for Gentoo ebuilds/eclasses\n##\nsyntax \"ebuild\" \"\\.e(build|class)$\"\n## All the standard portage functions\ncolor brightgreen \"^src_(unpack|prepare|configure|compile|install|test)\" \"^pkg_(config|nofetch|setup|(pre|post)(inst|rm))\"\n## Highlight bash related syntax\ncolor green \"\\<(case|do|done|elif|else|esac|exit|fi|for|function|if|in|local|read|return|select|shift|then|time|until|while|continue|break)\\>\"\ncolor green \"\\<(declare|eval|exec|let)\\>\"\ncolor green \"(\\{|\\}|\\(|\\)|\\;|\\]|\\[|`|\\\\|\\$|<|>|!|=|&|\\|)\"\ncolor green \"-[edfgruwxL]\\>\"\ncolor green \"-(eq|ne|gt|lt|ge|le|s|n|z)\\>\"\n## Highlight variables ... official portage ones in red, all others in bright red\ncolor brightred \"\\$\\{?[a-zA-Z_0-9]+\\}?\"\ncolor red \"\\<(EAPI|ARCH|HOMEPAGE|DESCRIPTION|IUSE|SRC_URI|LICENSE|SLOT|KEYWORDS|(P|R)?DEPEND|PROVIDE|PROPERTIES|RESTRICT|USERLAND)\\>\"\ncolor red \"\\<(S|D|T|PV|PF|P|PN|PR|PVR|A|CATEGORY|DISTDIR|FILESDIR|ROOT|WORKDIR)\\>\" \"\\<(AS|C(PP|XX)?|LD)FLAGS\\>\" \"\\<C(HOST|TARGET|BUILD)\\>\"\ncolor red \"\\<QA_((TEXTRELS|EXECSTACK|WX_LOAD)(_[a-zA-Z_0-9]+)?|DT_HASH|PRESTRIPPED)\\>\" \"\\<WANT_AUTO(CONF|MAKE)\\>\" \"\\<AT_M4DIR\\>\"\n## Highlight portage commands\ncolor magenta \"\\<use(_(with|enable))?\\> [!a-zA-Z0-9_+ -]*\" \"inherit.*\"\ncolor brightblue \"\\<e(begin|end|conf|install|make|qmake[34]|ant|(qa)?warn|infon?|error|log|patch|new(group|user))\\>\"\ncolor brightblue \"\\<e(pause|beep|mktemp|(cvs|svn)_clean|punt_cxx)\\>\" \"\\<e(aclocal|auto(reconf|header|conf|make))\\>\"\ncolor brightblue \"\\<built_with_use\\>\" \"\\<make_desktop_entry\\>\" \"\\<unpack(_(makeself|pdv))?\\>\"\ncolor brightblue \"\\<die\\>\" \"\\<use(_(with|enable))?\\>\" \"\\<inherit\\>\" \"\\<has\\>\" \"\\<(has|best)_version\\>\"\ncolor brightblue \"\\<(do|new)(ins|(games)?s?bin|doc|lib(\\.so|\\.a)?|man|info|exe|initd|confd|envd|pam|menu|icon)\\>\"\ncolor brightblue \"\\<do(python|sed|dir|hard|sym|html|jar|mo)\\>\" \"\\<keepdir\\>\"\ncolor brightblue \"prepall(docs|info|man|strip)?\" \"prep(info|lib|lib\\.(so|a)|man|strip|gamesdirs)\"\ncolor brightblue \"\\<(doc|ins|exe)?into\\>\" \"\\<(f|games)(owners|perms)\\>\" \"\\<(exe|ins|dir)opts\\>\"\n## Highlight common commands used in ebuilds\ncolor blue \"\\<make\\>\" \"\\<(awk|cat|cd|chmod|chown|cp|echo|env|export|find|e?grep|ln|mkdir|mv|rm|sed|set|tar|touch|unset|xargs)\\>\"\n## Highlight comments (doesnt work that well)\ncolor yellow \"(^|[[:space:]])#.*$\"\n## Highlight strings (doesnt work that well)\ncolor brightyellow \"\"(\\\\.|[^\\\"])*\"\" \"'(\\\\.|[^'])*'\"\n## Trailing space is bad!\ncolor ,green \"[[:space:]]+$\"\n\n## Here is an example for Portage control files\n##\nsyntax \"/etc/portage\" \"\\.(keywords|mask|unmask|use)(/.+)?$\"\n## Base text:\ncolor green \"^.+$\"\n## Use flags:\ncolor brightred \"[[:space:]]+\\+?[a-zA-Z0-9_-]+\"\ncolor brightblue \"[[:space:]]+-[a-zA-Z0-9_-]+\"\n## Likely version and slot numbers:\ncolor magenta \"-[[:digit:]].*([[:space:]]|$)\"\ncolor magenta \":[^[:space:]]+([[:space:]]|$)\"\n## Accepted arches:\ncolor white \"[~-]?\\<(alpha|amd64|arm|hppa|ia64|mips|ppc|ppc64|s390|sh|sparc(-fbsd)?|x86(-fbsd)?)\\>\"\ncolor white \"[[:space:]][*~-]?\\*\"\n## Categories:\ncolor cyan \"^[[:space:]]*.*/\"\n## Masking regulators:\ncolor brightmagenta \"^[[:space:]]*(=|~|<|<=|=<|>|>=|=>)\"\n## Comments:\ncolor yellow \"#.*$\"\n", 4096) = 3139
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/html.nanorc", {st_dev=makedev(8, 1), st_ino=802783, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=124, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/html.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802783, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=124, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is a short example for HTML.\n##\nsyntax \"html\" \"\\.html$\"\ncolor blue start=\"<\" end=\">\"\ncolor red \"&[^;[[:space:]]]*;\"\n", 4096) = 124
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/php.nanorc", {st_dev=makedev(8, 1), st_ino=802795, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=687, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/php.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802795, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=687, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for PHP\n##\nsyntax \"php\" \"\\.php[2345s~]?$\"\n\n## php markings\ncolor brightgreen \"(<\\?(php)?|\\?>)\"\n\n## functions\ncolor white \"\\<[a-z_]*\\(\"\n\n## types\ncolor green \"\\<(var|float|global|double|bool|char|int|enum|const)\\>\"\n\n## structure\ncolor brightyellow \"\\<(class|new|private|public|function|for|foreach|if|while|do|else|elseif|case|default|switch)\\>\"\n\n## control flow\ncolor magenta \"\\<(goto|continue|break|return)\\>\"\n\n## strings\ncolor brightyellow \"<[^=       ]*>\" \"\"(\\.|[^\"])*\"\"\n\n## comments\ncolor brightblue \"//.*\"\ncolor brightblue start=\"/\\*\" end=\"\\*/\"\n#color blue start=\"<\" end=\">\"\n#color red \"&[^;[[:space:]]]*;\"\n\n## Trailing whitespace\ncolor ,green \"[[:space:]]+$\"\n", 4096) = 687
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/tcl.nanorc", {st_dev=makedev(8, 1), st_ino=802800, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2110, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/tcl.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802800, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=2110, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "syntax \"tcl\" \"\\.tcl$\"\n\n## Standard Tcl [info commands]\ncolor green \"\\<(after|append|array|auto_execok|auto_import|auto_load|auto_load_index|auto_qualify|binary|break|case|catch|cd|clock|close|concat|continue|encoding|eof|error|eval|exec|exit|expr|fblocked|fconfigure|fcopy|file|fileevent|flush|for|foreach|format|gets|glob|global|history|if|incr|info|interp|join|lappend|lindex|linsert|list|llength|load|lrange|lreplace|lsearch|lset|lsort|namespace|open|package|pid|puts|pwd|read|regexp|regsub|rename|return|scan|seek|set|socket|source|split|string|subst|switch|tclLog|tell|time|trace|unknown|unset|update|uplevel|upvar|variable|vwait|while)\\>\"\n## Basic Tcl sub commands.\ncolor green \"\\<(array anymore|array donesearch|array exists|array get|array names|array nextelement|array set|array size|array startsearch|array statistics|array unset)\\>\"\ncolor green \"\\<(string bytelength|string compare|string equal|string first|string index|string is|string last|string length|string map|string match|string range|string repeat|string replace|string to|string tolower|string totitle|string toupper|string trim|string trimleft|string trimright|string will|string wordend|string wordstart)\\>\"\n## Extended TclX [info commands]\ncolor green \"\\<(alarm|auto_load_pkg|bsearch|catclose|catgets|catopen|ccollate|cconcat|cequal|chgrp|chmod|chown|chroot|cindex|clength|cmdtrace|commandloop|crange|csubstr|ctoken|ctype|dup|echo|execl|fcntl|flock|fork|fstat|ftruncate|funlock|host_info|id|infox|keyldel|keylget|keylkeys|keylset|kill|lassign|lcontain|lempty|lgets|link|lmatch|loadlibindex|loop|lvarcat|lvarpop|lvarpush|max|min|nice|pipe|profile|random|readdir|replicate|scancontext|scanfile|scanmatch|select|server_accept|server_create|signal|sleep|sync|system|tclx_findinit|tclx_fork|tclx_load_tndxs|tclx_sleep|tclx_system|tclx_wait|times|translit|try_eval|umask|wait)\\>\"\n## Syntax.\ncolor brightblue \"proc[[:space:]]\" \"(\\{|\\})\"\ncolor green \"(\\(|\\)|\\;|`|\\\\|\\$|<|>|!|=|&|\\|)\"\ncolor brightyellow \"\"(\\\\.|[^\"])*\"\" \"'(\\\\.|[^'])*'\"\nicolor brightred \"\\$\\{?[0-9A-Z_!@#$*?-]+\\}?\"\ncolor ,green \"[[:space:]]+$\"\ncolor ,magenta \"^[[:space:]]*#.*\"\n", 4096) = 2110
10833 brk(0x80bc000)                    = 0x80bc000
10833 brk(0x80dd000)                    = 0x80dd000
10833 brk(0x80b6000)                    = 0x80b6000
10833 brk(0x80b5000)                    = 0x80b5000
10833 brk(0x80d7000)                    = 0x80d7000
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/tex.nanorc", {st_dev=makedev(8, 1), st_ino=802801, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=141, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/tex.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802801, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=141, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is a short example for TeX files.\n##\nsyntax \"tex\" \"\\.tex$\"\nicolor green \"\\\\.|\\\\[A-Z]*\"\ncolor magenta \"[{}]\"\ncolor blue \"(^|[^\\])%.*\"\n", 4096) = 141
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/mutt.nanorc", {st_dev=makedev(8, 1), st_ino=802788, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=95, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/mutt.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802788, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=95, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for quoted emails (under e.g. mutt).\n##\nsyntax \"mutt\"\ncolor green \"^>.*\"\n", 4096) = 95
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/patch.nanorc", {st_dev=makedev(8, 1), st_ino=802793, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=242, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/patch.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802793, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=242, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for patch files.\n##\nsyntax \"patch\" \"\\.(patch|diff)$\"\ncolor brightgreen \"^\\+.*\"\ncolor green \"^\\+\\+\\+.*\"\ncolor brightblue \"^ .*\"\ncolor brightred \"^-.*\"\ncolor red \"^---.*\"\ncolor brightyellow \"^@@.*\"\ncolor magenta \"^diff.*\"\n", 4096) = 242
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/man.nanorc", {st_dev=makedev(8, 1), st_ino=802786, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=264, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/man.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802786, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=264, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for manpages.\n##\nsyntax \"man\" \"\\.[1-9]x?$\"\ncolor green \"\\.(S|T)H.*$\"\ncolor brightgreen \"\\.(S|T)H\" \"\\.TP\"\ncolor brightred \"\\.(BR?|I[PR]?).*$\"\ncolor brightblue \"\\.(BR?|I[PR]?|PP)\"\ncolor brightwhite \"\\\\f[BIPR]\"\ncolor yellow \"\\.(br|DS|RS|RE|PD)\"\n", 4096) = 264
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/groff.nanorc", {st_dev=makedev(8, 1), st_ino=802782, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=723, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/groff.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802782, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=723, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for groff.\n##\nsyntax \"groff\" \"\\.m[ems]$\" \"\\.rof\" \"\\.tmac$\" \"^tmac.\"\n## The argument of .ds or .nr\ncolor cyan \"^\\.(ds|nr) [^[[:space:]]]*\"\n## Single character escapes\ncolor brightmagenta \"\\\\.\"\n## Highlight the argument of \\f or \\s in the same color\ncolor brightmagenta \"\\\\f.\" \"\\\\f\\(..\" \"\\\\s(\\+|\\-)?[0-9]\"\n## Newlines\ncolor cyan \"(\\\\|\\\\\\\\)n(.|\\(..)\"\ncolor cyan start=\"(\\\\|\\\\\\\\)n\\[\" end=\"]\"\n## Requests\ncolor brightgreen \"^\\.[[:space:]]*[^[[:space:]]]*\"\n## Comments\ncolor yellow \"^\\.\\\\\".*$\"\n## Strings\ncolor green \"(\\\\|\\\\\\\\)\\*(.|\\(..)\"\ncolor green start=\"(\\\\|\\\\\\\\)\\*\\[\" end=\"]\"\n## Characters\ncolor brightred \"\\\\\\(..\"\ncolor brightred start=\"\\\\\\[\" end=\"]\"\n## Macro arguments\ncolor brightcyan \"\\\\\\\\\\$[1-9]\"\n", 4096) = 723
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/perl.nanorc", {st_dev=makedev(8, 1), st_ino=802794, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1438, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/perl.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802794, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1438, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for Perl.\n##\nsyntax \"perl\" \"\\.p[lm]$\"\nheader \"^#!.*/perl[-0-9._]*\"\ncolor red \"\\<(accept|alarm|atan2|bin(d|mode)|c(aller|h(dir|mod|op|own|root)|lose(dir)?|onnect|os|rypt)|d(bm(close|open)|efined|elete|ie|o|ump)|e(ach|of|val|x(ec|ists|it|p))|f(cntl|ileno|lock|ork))\\>\" \"\\<(get(c|login|peername|pgrp|ppid|priority|pwnam|(host|net|proto|serv)byname|pwuid|grgid|(host|net)byaddr|protobynumber|servbyport)|([gs]et|end)(pw|gr|host|net|proto|serv)ent|getsock(name|opt)|gmtime|goto|grep|hex|index|int|ioctl|join)\\>\" \"\\<(keys|kill|last|length|link|listen|local(time)?|log|lstat|m|mkdir|msg(ctl|get|snd|rcv)|next|oct|open(dir)?|ord|pack|pipe|pop|printf?|push|q|qq|qx|rand|re(ad(dir|link)?|cv|do|name|quire|set|turn|verse|winddir)|rindex|rmdir|s|scalar|seek(dir)?)\\>\" \"\\<(se(lect|mctl|mget|mop|nd|tpgrp|tpriority|tsockopt)|shift|shm(ctl|get|read|write)|shutdown|sin|sleep|socket(pair)?|sort|spli(ce|t)|sprintf|sqrt|srand|stat|study|substr|symlink|sys(call|read|tem|write)|tell(dir)?|time|tr(y)?|truncate|umask)\\>\" \"\\<(un(def|link|pack|shift)|utime|values|vec|wait(pid)?|wantarray|warn|write)\\>\"\ncolor magenta \"\\<(continue|else|elsif|do|for|foreach|if|unless|until|while|eq|ne|lt|gt|le|ge|cmp|x|my|sub|use|package|can|isa)\\>\"\nicolor cyan start=\"[$@%]\" end=\"( |[^0-9A-Z_]|-)\"\ncolor yellow \"\".*\"|qq\\|.*\\|\"\ncolor white \"[sm]/.*/\"\ncolor white start=\"(^use| = new)\" end=\";\"\ncolor green \"#.*\"\ncolor yellow start=\"<< 'STOP'\" end=\"STOP\"\n", 4096) = 1438
10833 brk(0x80ac000)                    = 0x80ac000
10833 brk(0x80ab000)                    = 0x80ab000
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/python.nanorc", {st_dev=makedev(8, 1), st_ino=802797, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=527, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/python.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802797, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=527, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for Python.\n##\nsyntax \"python\" \"\\.py$\"\nheader \"^#!.*/python[-0-9._]*\"\nicolor brightblue \"def [0-9A-Z_]+\"\ncolor brightcyan \"\\<(and|as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|raise|return|try|while|with|yield)\\>\"\ncolor brightgreen \"['][^']*[^\\\\][']\" \"[']{3}.*[^\\\\][']{3}\"\ncolor brightgreen \"[\"][^\"]*[^\\\\][\"]\" \"[\"]{3}.*[^\\\\][\"]{3}\"\ncolor brightgreen start=\"\"\"\"[^\"]\" end=\"\"\"\"\" start=\"'''[^']\" end=\"'''\"\ncolor brightred \"#.*$\"\n", 4096) = 527
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/ruby.nanorc", {st_dev=makedev(8, 1), st_ino=802798, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1475, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/ruby.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802798, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1475, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for Ruby.\n##\nsyntax \"ruby\" \"\\.rb$\"\nheader \"^#!.*/ruby[-0-9._]*\"\n## Asciibetical list of reserved words\ncolor yellow \"\\<(BEGIN|END|alias|and|begin|break|case|class|def|defined\\?|do|else|elsif|end|ensure|false|for|if|in|module|next|nil|not|or|redo|rescue|retry|return|self|super|then|true|undef|unless|until|when|while|yield)\\>\"\n## Constants\ncolor brightblue \"(\\$|@|@@)?\\<[A-Z]+[0-9A-Z_a-z]*\"\n## Ruby \"symbols\"\nicolor magenta \"([ \t]|^):[0-9A-Z_]+\\>\"\n## Some unique things we want to stand out\ncolor brightyellow \"\\<(__FILE__|__LINE__)\\>\"\n## Regular expressions\ncolor brightmagenta \"/([^/]|(\\\\/))*/[iomx]*\" \"%r\\{([^}]|(\\\\}))*\\}[iomx]*\"\n## Shell command expansion is in `backticks` or like %x{this}.  These are\n## \"double-quotish\" (to use a perlism).\ncolor brightblue \"`[^`]*`\" \"%x\\{[^}]*\\}\"\n## Strings, double-quoted\ncolor green \"\"([^\"]|(\\\\\"))*\"\" \"%[QW]?\\{[^}]*\\}\" \"%[QW]?\\([^)]*\\)\" \"%[QW]?<[^>]*>\" \"%[QW]?\\[[^]]*\\]\" \"%[QW]?\\$[^$]*\\$\" \"%[QW]?\\^[^^]*\\^\" \"%[QW]?![^!]*!\"\n## Expression substitution.  These go inside double-quoted strings,\n## \"like #{this}\".\ncolor brightgreen \"#\\{[^}]*\\}\"\n## Strings, single-quoted\ncolor green \"'([^']|(\\\\'))*'\" \"%[qw]\\{[^}]*\\}\" \"%[qw]\\([^)]*\\)\" \"%[qw]<[^>]*>\" \"%[qw]\\[[^]]*\\]\" \"%[qw]\\$[^$]*\\$\" \"%[qw]\\^[^^]*\\^\" \"%[qw]![^!]*!\"\n## Comments\ncolor cyan \"#[^{].*$\" \"#$\"\ncolor brightcyan \"##[^{].*$\" \"##$\"\n## \"Here\" docs\ncolor green start=\"<<-?'?EOT'?\" end=\"^EOT\"\n## Some common markers\ncolor brightcyan \"(XXX|TODO|FIXME|\\?\\?\\?)\"\n", 4096) = 1475
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/java.nanorc", {st_dev=makedev(8, 1), st_ino=802784, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=610, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/java.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802784, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=610, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for Java.\n##\nsyntax \"java\" \"\\.java$\"\ncolor green \"\\<(boolean|byte|char|double|float|int|long|new|short|this|transient|void)\\>\"\ncolor red \"\\<(break|case|catch|continue|default|do|else|finally|for|if|return|switch|throw|try|while)\\>\"\ncolor cyan \"\\<(abstract|class|extends|final|implements|import|instanceof|interface|native|package|private|protected|public|static|strictfp|super|synchronized|throws|volatile)\\>\"\ncolor red \"\"[^\"]*\"\"\ncolor yellow \"\\<(true|false|null)\\>\"\ncolor blue \"//.*\"\ncolor blue start=\"/\\*\" end=\"\\*/\"\ncolor brightblue start=\"/\\*\\*\" end=\"\\*/\"\ncolor ,green \"[[:space:]]+$\"\n", 4096) = 610
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 read(3, "## AWK\ninclude \"/usr/share/nano/awk.nanorc\"\n\n## Assembler\ninclude \"/usr/share/nano/asm.nanorc\"\n\n## Bourne shell scripts\ninclude \"/usr/share/nano/sh.nanorc\"\n\n## POV-Ray\ninclude \"/usr/share/nano/pov.nanorc\"\n\n## XML-type files\ninclude \"/usr/share/nano/xml.nanorc\"\n", 4096) = 261
10833 stat64("/usr/share/nano/awk.nanorc", {st_dev=makedev(8, 1), st_ino=802775, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1504, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/awk.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802775, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=1504, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for awk.\n##\nsyntax \"awk\" \"\\.awk$\"\n## records\nicolor brightred \"\\$[0-9A-Z_!@#$*?-]+\"\n## awk-set variables\ncolor red \"\\<(ARGC|ARGIND|ARGV|BINMODE|CONVFMT|ENVIRON|ERRNO|FIELDWIDTHS)\\>\"\ncolor red \"\\<(FILENAME|FNR|FS|IGNORECASE|LINT|NF|NR|OFMT|OFS|ORS)\\>\"\ncolor red \"\\<(PROCINFO|RS|RT|RSTART|RLENGTH|SUBSEP|TEXTDOMAIN)\\>\"\n## function declarations and special patterns\ncolor brightgreen \"\\<(function|extension|BEGIN|END)\\>\"\n## operators\ncolor green \"(\\{|\\}|\\(|\\)|\\;|\\]|\\[|\\\\|<|>|!|=|&|\\+|-|\\*|%|/|\\?:|\\^|\\|)\"\n## flow control\ncolor brightyellow \"\\<(for|if|while|do|else|in|delete|exit)\\>\"\ncolor brightyellow \"\\<(break|continue|return)\\>\"\n## I/O statements\ncolor brightgreen \"\\<(close|getline|next|nextfile|print|printf)\\>\"\ncolor brightgreen \"\\<(system|fflush)\\>\"\n## standard functions\ncolor magenta \"\\<(atan2|cos|exp|int|log|rand|sin|sqrt|srand)\\>\"\ncolor magenta \"\\<(asort|asorti|gensub|gsub|index|length|match)\\>\"\ncolor magenta \"\\<(split|sprintf|strtonum|sub|substr|tolower|toupper)\\>\"\ncolor magenta \"\\<(mktime|strftime|systime)\\>\"\ncolor magenta \"\\<(and|compl|lshift|or|rshift|xor)\\>\"\ncolor magenta \"\\<(bindtextdomain|dcgettext|dcngettext)\\>\"\n\n##\n## String highlighting.  You will in general want your comments and\n## strings to come last, because syntax highlighting rules will be\n## applied in the order they are read in.\ncolor brightyellow \"<[^= \t]*>\" \"\"(\\\\.|[^\"])*\"\"\n\n## Comment highlighting\ncolor brightblue \"(^|[[:space:]])#.*$\"\n\n## Trailing whitespace\ncolor ,green \"[[:space:]]+$\"\n", 4096) = 1504
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/asm.nanorc", {st_dev=makedev(8, 1), st_ino=802774, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=783, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/asm.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802774, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=783, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for assembler.\n##\nsyntax \"asm\" \"\\.(S|s|asm)$\"\ncolor red \"\\<[A-Z_]{2,}\\>\"\ncolor brightgreen \"\\.(data|subsection|text)\"\ncolor green \"\\.(align|file|globl|global|hidden|section|size|type|weak)\"\ncolor brightyellow \"\\.(ascii|asciz|byte|double|float|hword|int|long|short|single|struct|word)\"\nicolor brightred \"^[[:space:]]*[.0-9A-Z_]*:\"\ncolor brightcyan \"^[[:space:]]*#[[:space:]]*(define|undef|include|ifn?def|endif|elif|else|if|warning|error)\"\n## Highlight strings (note: VERY resource intensive)\ncolor brightyellow \"<[^= \t]*>\" \"\"(\\\\.|[^\"])*\"\"\ncolor brightyellow start=\"\"(\\\\.|[^\"])*\\\\[[:space:]]*$\" end=\"^(\\\\.|[^\"])*\"\"\n## Highlight comments\ncolor brightblue \"//.*\"\ncolor brightblue start=\"/\\*\" end=\"\\*/\"\n## Highlight trailing whitespace\ncolor ,green \"[[:space:]]+$\"\n", 4096) = 783
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/sh.nanorc", {st_dev=makedev(8, 1), st_ino=802799, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=691, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/sh.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802799, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=691, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for Bourne shell scripts.\n##\nsyntax \"sh\" \"\\.sh$\"\nheader \"^#!.*/(ba|k|pdk)?sh[-0-9_]*\"\nicolor brightgreen \"^[0-9A-Z_]+\\(\\)\"\ncolor green \"\\<(case|do|done|elif|else|esac|exit|fi|for|function|if|in|local|read|return|select|shift|then|time|until|while)\\>\"\ncolor green \"(\\{|\\}|\\(|\\)|\\;|\\]|\\[|`|\\\\|\\$|<|>|!|=|&|\\|)\"\ncolor green \"-[Ldefgruwx]\\>\"\ncolor green \"-(eq|ne|gt|lt|ge|le|s|n|z)\\>\"\ncolor brightblue \"\\<(cat|cd|chmod|chown|cp|echo|env|export|grep|install|let|ln|make|mkdir|mv|rm|sed|set|tar|touch|umask|unset)\\>\"\nicolor brightred \"\\$\\{?[0-9A-Z_!@#$*?-]+\\}?\"\ncolor cyan \"(^|[[:space:]])#.*$\"\ncolor brightyellow \"\"(\\\\.|[^\"])*\"\" \"'(\\\\.|[^'])*'\"\ncolor ,green \"[[:space:]]+$\"\n", 4096) = 691
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/pov.nanorc", {st_dev=makedev(8, 1), st_ino=802796, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=682, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/pov.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802796, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=682, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for POV-Ray.\n##\nsyntax \"pov\" \"\\.(pov|POV|povray|POVRAY)$\"\ncolor brightcyan \"^[[:space:]]*#[[:space:]]*(declare)\"\ncolor brightyellow \"\\<(sphere|cylinder|translate|matrix|rotate|scale)\\>\"\ncolor brightyellow \"\\<(orthographic|location|up|right|direction|clipped_by)\\>\"\ncolor brightyellow \"\\<(fog_type|fog_offset|fog_alt|rgb|distance|transform)\\>\"\ncolor brightred \"^\\<(texture)\\>\"\ncolor brightred \"\\<(light_source|background)\\>\"\ncolor brightred \"\\<(fog|object|camera)\\>\"\ncolor green \"(\\{|\\}|\\(|\\)|\\;|\\]|\\[|`|\\\\|\\$|<|>|!|=|&|\\|)\"\ncolor brightmagenta \"\\<(union|group|subgroup)\\>\"\n## Comment highlighting\ncolor brightblue \"//.*\"\ncolor brightblue start=\"/\\*\" end=\"\\*/\"\n", 4096) = 682
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 stat64("/usr/share/nano/xml.nanorc", {st_dev=makedev(8, 1), st_ino=802802, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=260, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 open("/usr/share/nano/xml.nanorc", O_RDONLY|O_LARGEFILE) = 4
10833 fstat64(4, {st_dev=makedev(8, 1), st_ino=802802, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=260, st_atime=2017/02/23-20:25:35, st_mtime=2014/07/16-23:14:56, st_ctime=2015/09/26-01:27:04}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
10833 read(4, "## Here is an example for xml files.\n##\nsyntax \"xml\" \"\\.([jrs]html?|sgml?|xml|xslt?)$\"\ncolor green  start=\"<\" end=\">\"\ncolor cyan   \"<[^> ]+\"\ncolor cyan   \">\"\ncolor yellow start=\"<!DOCTYPE\" end=\"[/]?>\"\ncolor yellow start=\"<!--\" end=\"-->\"\ncolor red    \"&[^;]*;\"\n", 4096) = 260
10833 read(4, "", 4096)                 = 0
10833 close(4)                          = 0
10833 munmap(0xb7fd7000, 4096)          = 0
10833 read(3, "", 4096)                 = 0
10833 close(3)                          = 0
10833 munmap(0xb7fd8000, 4096)          = 0
10833 geteuid32()                       = 1000
10833 stat64("/home/preston/.nanorc", 0xbffff280) = -1 ENOENT (No such file or directory)
10833 open("/home/preston/.nanorc", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
10833 open("/home/preston/.nano_history", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
10833 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 stat64("/home/preston/.terminfo", 0x8088c18) = -1 ENOENT (No such file or directory)
10833 stat64("/etc/terminfo", {st_dev=makedev(8, 1), st_ino=1048689, st_mode=S_IFDIR|0755, st_nlink=2, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2015/04/22-12:02:13, st_mtime=2015/04/22-12:02:13, st_ctime=2015/09/26-01:27:19}) = 0
10833 stat64("/lib/terminfo", {st_dev=makedev(8, 1), st_ino=1050827, st_mode=S_IFDIR|0755, st_nlink=15, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2015/03/06-14:03:18, st_mtime=2015/03/06-14:03:18, st_ctime=2015/09/26-01:27:19}) = 0
10833 stat64("/usr/share/terminfo", {st_dev=makedev(8, 1), st_ino=674796, st_mode=S_IFDIR|0755, st_nlink=44, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=4096, st_atime=2015/09/26-03:59:43, st_mtime=2015/09/26-03:59:44, st_ctime=2015/09/26-03:59:44}) = 0
10833 time(NULL)                        = 1490675428
10833 access("/etc/terminfo/x/xterm-256color", R_OK) = -1 ENOENT (No such file or directory)
10833 access("/lib/terminfo/x/xterm-256color", R_OK) = 0
10833 open("/lib/terminfo/x/xterm-256color", O_RDONLY|O_LARGEFILE) = 3
10833 fstat64(3, {st_dev=makedev(8, 1), st_ino=131689, st_mode=S_IFREG|0644, st_nlink=1, st_uid=0, st_gid=0, st_blksize=4096, st_blocks=8, st_size=3417, st_atime=2017/03/28-03:53:24, st_mtime=2015/03/06-14:03:18, st_ctime=2015/09/26-01:26:36}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd8000
10833 read(3, "\32\1%\0&\0\17\0\235\1\262\5xterm-256color|xterm with 256 colors\0\0\1\0\0\1\0\0\0\1\0\0\0\0\1\1\0\0\0\0\0\0\0\1\0\0\1\0\1\1\0\0\0\0\0\0\0\0\1\0P\0\10\0\30\0\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\0\1\377\177\0\0\4\0\6\0\10\0\31\0\36\0&\0*\0.\0\377\3779\0J\0L\0P\0W\0\377\377Y\0f\0\377\377j\0n\0x\0|\0\377\377\377\377\200\0\204\0\211\0\216\0\377\377\227\0\234\0\241\0\377\377\246\0\253\0\260\0\265\0\276\0\302\0\311\0\377\377\322\0\327\0\335\0\343\0\377\377\377\377\377\377\365\0\377\377\377\377\377\377\7\1\377\377\v\1\377\377\377\377\377\377\r\1\377\377\22\1\377\377\377\377\377\377\377\377\26\1\32\1 \1$\1(\1,\0012\0018\1>\1D\1J\1N\1\377\377S\1\377\377W\1\\\1a\1e\1l\1\377\377s\1w\1\177\1\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\207\1\220\1\231\1\242\1\253\1\264\1\275\1\306\1\317\1\330\1\377\377\377\377\377\377\341\1\345\1\352\1\377\377\357\1\362\1\377\377\377\377\4\2\7\2\22\2\25\2\27\2\32\2w\2\377\377z\2\377\377\377\377\377\377\377\377\377\377\377\377|v\3\21\3\30\3\37\3&\3-\0035\3=\3E\3M\3U\3]\3e\3m\3t\3{\3\202\3\211\3\221\3\231\3\241\3\251\3\261\3\271\3\301\3\311\3\320\3\327\3\336\3\345\3\355\3\365\3\375\3\5\4\r\4\25\4\35\4%\4,\0043\4:\4A\4I\4Q\4Y\4a\4i\4q\4yl\5\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\254\5\257\5\33[Z\0\7\0\r\0\33[%i%p1%d;%p2%dr\0\33[3g\0\33[H\33[2J\0\33[K\0\33[J\0\33[%i%p1%dG\0\33[%i%p1%d;%p2%dH\0\n\0\33[H\0\33[?25l\0\10\0\33[?12l\33[?25h\0\33[C\0\33[A\0\33[?12;25h\0\33[P\0\33[M\0\33(0\0\33[5m\0\33[1m\0\33[?1049h\0\33[2m\0\33[4h\0\33[8m\0\33[7m\0\33[7m\0\33[4m\0\33[%p1%dX\0\33(B\0\33(B\33[m\0\33[?1049l\0\33[4l\0\33[27m\0\33[24m\0\33[?5h$<100/>\33[?5l\0\33[!p\33[?3;4l\33[4l\33>\0\33[L\0\177\0\33[3~\0\33OB\0\33OP\0\33[21~\0\33OQ\0\33OR\0\33OS\0\33[15~\0\33[17~\0\33[18~\0\33[19~\0\33[20~\0\33OH\0\33[2~\0\33OD\0\33[6~\0\33[5~\0\33OC\0\33[1;2B\0\33[1;2A\0\33OA\0\33[?1l\33>\0\33[?1h\33=\0\33[%p1%dP\0\33[%p1%dM\0\33[%p1%dB\0\33[%p1%d@\0\33[%p1%dS\0\33[%p1%dL\0\33[%p1%dD\0\33[%p1%dC\0\33[%p1%dT\0\33[%p1%dA\0\33[i\0\33[4i\0\33[5i\0\33c\0\33[!p\33[?3;4l\33[4l\33>\0\0338\0\33[%i%p1%dd\0\0337\0\n\0\33M\0%?%p9%t\33(0%e\33(B%;\33[0%?%p6%t;1%;%?%p5%t;2%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p7%t;8%;m\0\33H\0\t\0\33OE\0``aaffggiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~\0\33[Z\0\33[?7h\0\33[?7l\0\33OF\0\33OM\0\33[3;2~\0\33[1;2F\0\33[1;2H\0\33[2;2~\0\33[1;2D\0\33[6;2~\0\33[5;2~\0\33[1;2C\0\33[23~\0\33[24~\0\33[1;2P\0\33[1;2Q\0\33[1;2R\0\33[1;2S\0\33[15;2~\0\33[17;2~\0\33[18;2~\0\33[19;2~\0\33[20;2~\0\33[21;2~\0\33[23;2~\0\33[24;2~\0\33[1;5P\0\33[1;5Q\0\33[1;5R\0\33[1;5S\0\33[15;5~\0\33[17;5~\0\33[18;5~\0\33[19;5~\0\33[20;5~\0\33[21;5~\0\33[23;5~\0\33[24;5~\0\33[1;6P\0\33[1;6Q\0\33[1;6R\0\33[1;6S\0\33[15;6~\0\33[17;6~\0\33[18;6~\0\33[19;6~\0\33[20;6~\0\33[21;6~\0\33[23;6~\0\33[24;6~\0\33[1;3P\0\33[1;3Q\0\33[1;3R\0\33[1;3S\0\33[15;3~\0\33[17;3~\0\33[18;3~\0\33[19;3~\0\33[20;3~\0\33[21;3~\0\33[23;3~\0\33[24;3~\0\33[1;4P\0\33[1;4Q\0\33[1;4R\0\33[1K\0\33[%i%d;%dR\0\33[6n\0\33[?1;2c\0\33[c\0\33[39;49m\0\33]4;%p1%d;rgb:%p2%{255}%*%{1000}%/%2.2X/%p3%{255}%*%{1000}%/%2.2X/%p4%{255}%*%{1000}%/%2.2X\33\\\0\33[3m\0\33[23m\0\33[M\0\33[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m\0\33[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m\0\33l\0\33m\0\2\0\0\0>\0~\0\357\2\1\1\0\0\7\0\23\0\31\0+\0001\0;\0B\0I\0P\0W\0^\0e\0l\0s\0z\0\201\0\210\0\217\0\226\0\235\0\244\0\253\0\262\0\271\0\300\0\307\0\316\0\325\0\334\0\343\0\352\0\361\0\370\0\377\0\6\1\r\1\24\1\33\1\"\1)\0010\0017\1>\1E\1L\1S\1Z\1a\1h\1o\1v\1}\1\204\1\213\1\222\1\231\1\240\1\377\377\377\377\377\377\377\377\0\0\3\0\6\0\t\0\f\0\17\0\22\0\25\0\30\0\35\0\"\0'\0,\0001\0005\0:\0?\0D\0I\0N\0T\0Z\0`\0f\0l\0r\0x\0~\0\204\0\212\0\217\0\224\0\231\0\236\0\243\0\251\0\257\0\265\0\273\0\301\0\307\0\315\0\323\0\331\0\337\0\345\0\353\0\361\0\367\0\375\0\3\1\t\1\17\1\25\1\33\1\37\1$\1)\1.\0013\0018\1<\1@\1D\1\33]112\7\0\33]12;%p1%s\7\0\33[3;J\0\33]52;%p1%s;%p2%s\7\0\33[2 q\0\33[%p1%d q\0\33[3;3~\0\33[3;4~\0\33[3;5~\0\33[3;6~\0\33[3;7~\0\33[1;2B\0\33[1;3B\0\33[1;4B\0\33[1;5B\0\33[1;6B\0\33[1;7B\0\33[1;3F\0\33[1;4F\0\33[1;5F\0\33[1;6F\0\33[1;7F\0\33[1;3H\0\33[1;4H\0\33[1;5H\0\33[1;6H\0\33[1;7H\0\33[2;3~\0\33[2;4~\0\33[2;5~\0\33[2;6~\0\33[2;7~\0\33[1;3D\0\33[1;4D\0\33[1;5D\0\33[1;6D\0\33[1;7D\0\33[6;3~\0\33[6;4~\0\33[6;5~\0\33[6;6~\0\33[6;7~\0\33[5;3~\0\33[5;4~\0\33[5;5~\0\33[5;6~\0\33[5;7~\0\33[1;3C\0\33[1;4C\0\33[1;5C\0\33[1;6C\0\33[1;7C\0\33[1;2A\0\33[1;3A\0\33[1;4A\0\33[1;5A\0\33[1;6A\0\33[1;7A\0AX\0XT\0Cr\0Cs\0E3\0Ms\0Se\0Ss\0kDC3\0kDC4\0kDC5\0kDC6\0kDC7\0kDN\0kDN3\0kDN4\0kDN5\0kDN6\0kDN7\0kEND3\0kEND4\0kEND5\0kEND6\0kEND7\0kHOM3\0kHOM4\0kHOM5\0kHOM6\0kHOM7\0kIC3\0kIC4\0kIC5\0kIC6\0kIC7\0kLFT3\0kLFT4\0kLFT5\0kLFT6\0kLFT7\0kNXT3\0kNXT4\0kNXT5\0kNXT6\0kNXT7\0kPRV3\0kPRV4\0kPRV5\0kPRV6\0kPRV7\0kRIT3\0kRIT4\0kRIT5\0kRIT6\0kRIT7\0kUP\0kUP3\0kUP4\0kUP5\0kUP6\0kUP7\0ka2\0kb1\0kb3\0kc2\0", 4096) = 3417
10833 read(3, "", 4096)                 = 0
10833 close(3)                          = 0
10833 munmap(0xb7fd8000, 4096)          = 0
10833 time(NULL)                        = 1490675428
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, TIOCGWINSZ, {ws_row=56, ws_col=254, ws_xpixel=0, ws_ypixel=0}) = 0
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, TIOCGWINSZ, {ws_row=56, ws_col=254, ws_xpixel=0, ws_ypixel=0}) = 0
10833 brk(0x80cc000)                    = 0x80cc000
10833 brk(0x80ed000)                    = 0x80ed000
10833 brk(0x810e000)                    = 0x810e000
10833 brk(0x8130000)                    = 0x8130000
10833 brk(0x8151000)                    = 0x8151000
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 brk(0x8173000)                    = 0x8173000
10833 brk(0x8194000)                    = 0x8194000
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca39, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca39, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca39, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2c00, c_oflags=0x1, c_cflags=0xbf, c_lflags=0xca31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x1, c_cflags=0xbf, c_lflags=0xca31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 rt_sigaction(SIGTSTP, NULL, {SIG_DFL, [], 0}, 8) = 0
10833 rt_sigaction(SIGTSTP, {0xb7f9d710, [], SA_RESTORER|SA_RESTART, 0xb7dd30f8}, NULL, 8) = 0
10833 rt_sigaction(SIGINT, NULL, {SIG_DFL, [], 0}, 8) = 0
10833 rt_sigaction(SIGINT, {0xb7f9d600, [], SA_RESTORER|SA_RESTART, 0xb7dd30f8}, NULL, 8) = 0
10833 rt_sigaction(SIGTERM, NULL, {SIG_DFL, [], 0}, 8) = 0
10833 rt_sigaction(SIGTERM, {0xb7f9d600, [], SA_RESTORER|SA_RESTART, 0xb7dd30f8}, NULL, 8) = 0
10833 rt_sigaction(SIGWINCH, NULL, {SIG_DFL, [], 0}, 8) = 0
10833 rt_sigaction(SIGWINCH, {0xb7f9d5e0, [], SA_RESTORER, 0xb7dd30f8}, NULL, 8) = 0
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x1, c_cflags=0xbf, c_lflags=0xca31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2c00, c_oflags=0x1, c_cflags=0xbf, c_lflags=0xca31, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2800, c_oflags=0x1, c_cflags=0xbf, c_lflags=0x4a30, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2800, c_oflags=0x1, c_cflags=0xbf, c_lflags=0x4a30, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2800, c_oflags=0x1, c_cflags=0xbf, c_lflags=0x4a30, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2800, c_oflags=0x1, c_cflags=0xbf, c_lflags=0x4a30, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(0, SNDCTL_TMR_START or SNDRV_TIMER_IOCTL_TREAD or TCSETS, {c_iflags=0x2800, c_oflags=0, c_cflags=0xbf, c_lflags=0x4a30, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2800, c_oflags=0, c_cflags=0xbf, c_lflags=0x4a30, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2800, c_oflags=0, c_cflags=0xbf, c_lflags=0x4a30, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2800, c_oflags=0, c_cflags=0xbf, c_lflags=0x4a30, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(0, SNDCTL_TMR_START or SNDRV_TIMER_IOCTL_TREAD or TCSETS, {c_iflags=0x2800, c_oflags=0, c_cflags=0xbf, c_lflags=0x4a30, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2800, c_oflags=0, c_cflags=0xbf, c_lflags=0x4a30, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 write(1, "\33[?1049h\33[1;56r\33(B\33[m\33[4l\33[?7h\33[?12l\33[?25h", 42) = 42
10833 brk(0x81b6000)                    = 0x81b6000
10833 brk(0x81d7000)                    = 0x81d7000
10833 brk(0x81f8000)                    = 0x81f8000
10833 write(1, "\33[?1h\33=", 7)        = 7
10833 write(1, "\33[?1h\33=", 7)        = 7
10833 write(1, "\33[?1h\33=", 7)        = 7
10833 rt_sigaction(SIGINT, {SIG_IGN, [], SA_RESTORER, 0xb7dd30f8}, NULL, 8) = 0
10833 rt_sigaction(SIGQUIT, {SIG_IGN, [], SA_RESTORER, 0xb7dd30f8}, NULL, 8) = 0
10833 rt_sigaction(SIGHUP, {0x8059900, [], SA_RESTORER, 0xb7dd30f8}, NULL, 8) = 0
10833 rt_sigaction(SIGTERM, {0x8059900, [], SA_RESTORER, 0xb7dd30f8}, NULL, 8) = 0
10833 rt_sigaction(SIGWINCH, {0x805add0, [], SA_RESTORER, 0xb7dd30f8}, NULL, 8) = 0
10833 rt_sigprocmask(SIG_BLOCK, [WINCH], NULL, 8) = 0
10833 rt_sigaction(SIGTSTP, {0x805a4a0, ~[RTMIN RT_1], SA_RESTORER, 0xb7dd30f8}, NULL, 8) = 0
10833 rt_sigaction(SIGCONT, {0x805aeb0, ~[RTMIN RT_1], SA_RESTORER, 0xb7dd30f8}, NULL, 8) = 0
10833 getcwd("/mnt/hgfs/NYU/CrashSimulator", 4097) = 29
10833 stat64("test.txt", {st_dev=makedev(0, 40), st_ino=54993216, st_mode=S_IFREG|0664, st_nlink=1, st_uid=501, st_gid=20, st_blksize=1024, st_blocks=1, st_size=5, st_atime=2017/03/28-04:29:56, st_mtime=2017/03/23-18:03:51, st_ctime=2017/03/23-18:03:51}) = 0
10833 stat64("/mnt/hgfs/NYU/CrashSimulator/test.txt", {st_dev=makedev(0, 40), st_ino=54993216, st_mode=S_IFREG|0664, st_nlink=1, st_uid=501, st_gid=20, st_blksize=1024, st_blocks=1, st_size=5, st_atime=2017/03/28-04:29:56, st_mtime=2017/03/23-18:03:51, st_ctime=2017/03/23-18:03:51}) = 0
10833 stat64("/mnt/hgfs/NYU/CrashSimulator/test.txt", {st_dev=makedev(0, 40), st_ino=54993216, st_mode=S_IFREG|0664, st_nlink=1, st_uid=501, st_gid=20, st_blksize=1024, st_blocks=1, st_size=5, st_atime=2017/03/28-04:29:56, st_mtime=2017/03/23-18:03:51, st_ctime=2017/03/23-18:03:51}) = 0
10833 open("/mnt/hgfs/NYU/CrashSimulator/test.txt", O_RDONLY|O_LARGEFILE) = 3
10833 fcntl64(3, F_GETFL)               = 0x8000 (flags O_RDONLY|O_LARGEFILE)
10833 fstat64(3, {st_dev=makedev(0, 40), st_ino=54993216, st_mode=S_IFREG|0664, st_nlink=1, st_uid=501, st_gid=20, st_blksize=1024, st_blocks=1, st_size=5, st_atime=2017/03/28-04:29:56, st_mtime=2017/03/23-18:03:51, st_ctime=2017/03/23-18:03:51}) = 0
10833 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd8000
10833 read(3, "test\n", 1024)           = 5
10833 read(3, "", 1024)                 = 0
10833 close(3)                          = 0
10833 munmap(0xb7fd8000, 4096)          = 0
10833 close(3)                          = -1 EBADF (Bad file descriptor)
10833 getcwd("/mnt/hgfs/NYU/CrashSimulator", 4097) = 29
10833 stat64("test.txt", {st_dev=makedev(0, 40), st_ino=54993216, st_mode=S_IFREG|0664, st_nlink=1, st_uid=501, st_gid=20, st_blksize=1024, st_blocks=1, st_size=5, st_atime=2017/03/28-04:29:56, st_mtime=2017/03/23-18:03:51, st_ctime=2017/03/23-18:03:51}) = 0
10833 stat64("/mnt/hgfs/NYU/CrashSimulator/test.txt", {st_dev=makedev(0, 40), st_ino=54993216, st_mode=S_IFREG|0664, st_nlink=1, st_uid=501, st_gid=20, st_blksize=1024, st_blocks=1, st_size=5, st_atime=2017/03/28-04:29:56, st_mtime=2017/03/23-18:03:51, st_ctime=2017/03/23-18:03:51}) = 0
10833 open("/mnt/hgfs/NYU/CrashSimulator/test.txt", O_WRONLY|O_CREAT|O_APPEND|O_LARGEFILE, 0666) = 3
10833 fcntl64(3, F_GETFL)               = 0x8401 (flags O_WRONLY|O_APPEND|O_LARGEFILE)
10833 close(3)                          = 0
10833 close(3)                          = -1 EBADF (Bad file descriptor)
10833 stat64("test.txt", {st_dev=makedev(0, 40), st_ino=54993216, st_mode=S_IFREG|0664, st_nlink=1, st_uid=501, st_gid=20, st_blksize=1024, st_blocks=1, st_size=5, st_atime=2017/03/28-04:29:56, st_mtime=2017/03/23-18:03:51, st_ctime=2017/03/23-18:03:51}) = 0
10833 rt_sigprocmask(SIG_BLOCK, NULL, [WINCH], 8) = 0
10833 rt_sigprocmask(SIG_UNBLOCK, [WINCH], NULL, 8) = 0
10833 rt_sigprocmask(SIG_BLOCK, [WINCH], NULL, 8) = 0
10833 rt_sigprocmask(SIG_UNBLOCK, [WINCH], NULL, 8) = 0
10833 rt_sigaction(SIGTSTP, {SIG_IGN, [], SA_RESTORER|SA_RESTART, 0xb7dd30f8}, {0x805a4a0, ~[KILL STOP RTMIN RT_1], SA_RESTORER, 0xb7dd30f8}, 8) = 0
10833 write(1, "\33[39;49m\33[39;49m\33(B\33[m\33[H\33[2J\33(B\33[0;7m  GNU nano 2.2.6                                                                        File: test.txt                                                                                                                                                        \33[3;1H\33(B\33[mtest\33[54;120H\33(B\33[0;7m[ Read 1 line ]\r\33[55d^G\33(B\33[m Get Help\33[55;43H\33(B\33[0;7m^O\33(B\33[m WriteOut\33[55;85H\33(B\33[0;7m^R\33(B\33[m Read File\33[55;127H\33(B\33[0;7m^Y\33(B\33[m Prev Page\33[55;169H\33(B\33[0;7m^K\33(B\33[m Cut Text\33[55;211H\33(B\33[0;7m^C\33(B\33[m Cur Pos\r\33[56d\33(B\33[0;7m^X\33(B\33[m Exit\33[56;43H\33(B\33[0;7m^J\33(B\33[m Justify\33[56;85H\33(B\33[0;7m^W\33(B\33[m Where Is\33[56;127H\33(B\33[0;7m^V\33(B\33[m Next Page\33[56;169H\33(B\33[0;7m^U\33(B\33[m UnCut Text\33[56;211H\33(B\33[0;7m^T\33(B\33[m To Spell\r\33[3d", 746) = 746
10833 rt_sigaction(SIGTSTP, {0x805a4a0, ~[KILL STOP RTMIN RT_1], SA_RESTORER, 0xb7dd30f8}, NULL, 8) = 0
10833 read(0, "\30", 1)                 = 1
10833 rt_sigprocmask(SIG_BLOCK, [WINCH], NULL, 8) = 0
10833 rt_sigprocmask(SIG_UNBLOCK, [WINCH], NULL, 8) = 0
10833 gettimeofday({1490675429, 834423}, NULL) = 0
10833 select(1, [0], NULL, NULL, {0, 0}) = 0 (Timeout)
10833 gettimeofday({1490675429, 834520}, NULL) = 0
10833 rt_sigaction(SIGTSTP, {SIG_IGN, [], SA_RESTORER|SA_RESTART, 0xb7dd30f8}, {0x805a4a0, ~[KILL STOP RTMIN RT_1], SA_RESTORER, 0xb7dd30f8}, 8) = 0
10833 select(1, [0], NULL, NULL, {0, 0}) = 0 (Timeout)
10833 select(1, [0], NULL, NULL, {0, 0}) = 0 (Timeout)
10833 write(1, "\33[55d\33[J\33[56;254H", 17) = 17
10833 rt_sigaction(SIGTSTP, {0x805a4a0, ~[KILL STOP RTMIN RT_1], SA_RESTORER, 0xb7dd30f8}, NULL, 8) = 0
10833 write(1, "\33[56;1H\33[?1049l\r\33[?1l\33>", 23) = 23
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2800, c_oflags=0, c_cflags=0xbf, c_lflags=0x4a30, c_line=0, c_cc[VMIN]=1, c_cc[VTIME]=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(1, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(0, SNDCTL_TMR_START or SNDRV_TIMER_IOCTL_TREAD or TCSETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {c_iflags=0x2d00, c_oflags=0x5, c_cflags=0xbf, c_lflags=0xca3b, c_line=0, c_cc="\x03\x1c\x7f\x15\x04\x00\x01\x00\x11\x13\x1a\xff\x12\x0f\x17\x16\xff\x00\x00"}) = 0
10833 exit_group(0)                     = ?
10833 +++ exited with 0 +++
